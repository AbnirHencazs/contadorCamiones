;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 11/11/2019 05:36:45 p. m.
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF068EFB8  	GOTO        53616
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF069EF90  	GOTO        54048
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xF069EF47  	GOTO        53902
_Swap:
;__Lib_System.c,109 :: 		
;__Lib_System.c,110 :: 		
0x001C	0xF000C254  	MOVFF       FARG_Swap_input, R0
;__Lib_System.c,111 :: 		
0x0020	0x3A00      	SWAPF       R0, 1, 0
;__Lib_System.c,112 :: 		
;__Lib_System.c,113 :: 		
L_end_Swap:
0x0022	0x0012      	RETURN      0
; end of _Swap
_lcd_send_nibble:
;lcd_4x20.h,30 :: 		void lcd_send_nibble(char nibble){
;lcd_4x20.h,31 :: 		LCD_D4 = nibble.B0;
0x0024	0x0102      	MOVLB       2
0x0026	0xB154      	BTFSC       FARG_lcd_send_nibble_nibble, 0, 1
0x0028	0xD002      	BRA         L__lcd_send_nibble666
0x002A	0x9880      	BCF         PORTA, 4 
0x002C	0xD001      	BRA         L__lcd_send_nibble667
L__lcd_send_nibble666:
0x002E	0x8880      	BSF         PORTA, 4 
L__lcd_send_nibble667:
;lcd_4x20.h,32 :: 		LCD_D5 = nibble.B1;
0x0030	0xB354      	BTFSC       FARG_lcd_send_nibble_nibble, 1, 1
0x0032	0xD002      	BRA         L__lcd_send_nibble668
0x0034	0x9480      	BCF         PORTA, 2 
0x0036	0xD001      	BRA         L__lcd_send_nibble669
L__lcd_send_nibble668:
0x0038	0x8480      	BSF         PORTA, 2 
L__lcd_send_nibble669:
;lcd_4x20.h,33 :: 		LCD_D6 = nibble.B2;
0x003A	0xB554      	BTFSC       FARG_lcd_send_nibble_nibble, 2, 1
0x003C	0xD002      	BRA         L__lcd_send_nibble670
0x003E	0x9280      	BCF         PORTA, 1 
0x0040	0xD001      	BRA         L__lcd_send_nibble671
L__lcd_send_nibble670:
0x0042	0x8280      	BSF         PORTA, 1 
L__lcd_send_nibble671:
;lcd_4x20.h,34 :: 		LCD_D7 = nibble.B3;
0x0044	0xB754      	BTFSC       FARG_lcd_send_nibble_nibble, 3, 1
0x0046	0xD002      	BRA         L__lcd_send_nibble672
0x0048	0x9080      	BCF         PORTA, 0 
0x004A	0xD001      	BRA         L__lcd_send_nibble673
L__lcd_send_nibble672:
0x004C	0x8080      	BSF         PORTA, 0 
L__lcd_send_nibble673:
;lcd_4x20.h,35 :: 		asm nop;
0x004E	0x0000      	NOP
;lcd_4x20.h,36 :: 		asm nop;
0x0050	0x0000      	NOP
;lcd_4x20.h,37 :: 		LCD_EN = 1;
0x0052	0x8680      	BSF         PORTA, 3 
;lcd_4x20.h,38 :: 		delay_us(2);
0x0054	0x0E03      	MOVLW       3
0x0056	0x6E0D      	MOVWF       R13, 0
L_lcd_send_nibble0:
0x0058	0x2E0D      	DECFSZ      R13, 1, 0
0x005A	0xD7FE      	BRA         L_lcd_send_nibble0
;lcd_4x20.h,39 :: 		LCD_EN = 0;
0x005C	0x9680      	BCF         PORTA, 3 
;lcd_4x20.h,40 :: 		}
L_end_lcd_send_nibble:
0x005E	0x0012      	RETURN      0
; end of _lcd_send_nibble
_lcd_send_byte:
;lcd_4x20.h,42 :: 		void lcd_send_byte(char address, char enviar){
;lcd_4x20.h,43 :: 		LCD_RS = 0;
0x0060	0x9484      	BCF         PORTE, 2 
;lcd_4x20.h,44 :: 		delay_us(60);
0x0062	0x0E63      	MOVLW       99
0x0064	0x6E0D      	MOVWF       R13, 0
L_lcd_send_byte1:
0x0066	0x2E0D      	DECFSZ      R13, 1, 0
0x0068	0xD7FE      	BRA         L_lcd_send_byte1
0x006A	0x0000      	NOP
0x006C	0x0000      	NOP
;lcd_4x20.h,46 :: 		if(address)
0x006E	0x0102      	MOVLB       2
0x0070	0x5352      	MOVF        FARG_lcd_send_byte_address, 1, 1
0x0072	0xE002      	BZ          L_lcd_send_byte2
;lcd_4x20.h,47 :: 		LCD_RS = 1;
0x0074	0x8484      	BSF         PORTE, 2 
0x0076	0xD001      	BRA         L_lcd_send_byte3
L_lcd_send_byte2:
;lcd_4x20.h,49 :: 		LCD_RS = 0;
0x0078	0x9484      	BCF         PORTE, 2 
L_lcd_send_byte3:
;lcd_4x20.h,50 :: 		asm nop;
0x007A	0x0000      	NOP
;lcd_4x20.h,53 :: 		LCD_EN = 0;
0x007C	0x9680      	BCF         PORTA, 3 
;lcd_4x20.h,55 :: 		lcd_send_nibble(swap(enviar));
0x007E	0xF254C253  	MOVFF       FARG_lcd_send_byte_enviar, FARG_Swap_input
0x0082	0xDFCC      	RCALL       _Swap
0x0084	0xF254C000  	MOVFF       R0, FARG_lcd_send_nibble_nibble
0x0088	0xDFCD      	RCALL       _lcd_send_nibble
;lcd_4x20.h,56 :: 		lcd_send_nibble(enviar);
0x008A	0xF254C253  	MOVFF       FARG_lcd_send_byte_enviar, FARG_lcd_send_nibble_nibble
0x008E	0xDFCA      	RCALL       _lcd_send_nibble
;lcd_4x20.h,57 :: 		}
L_end_lcd_send_byte:
0x0090	0x0012      	RETURN      0
; end of _lcd_send_byte
_I2C_soft_read:
;i2c_soft.h,70 :: 		char I2C_soft_read(bool ACK){
;i2c_soft.h,71 :: 		char i, result = 0;
0x0092	0x0102      	MOVLB       2
0x0094	0x6B51      	CLRF        I2C_soft_read_result_L0, 1
;i2c_soft.h,74 :: 		I2C_SDAD = 1;
0x0096	0x8C95      	BSF         TRISD, 6 
;i2c_soft.h,76 :: 		for(i = 0; i < 8; i++){
0x0098	0x6A01      	CLRF        R1 
L_I2C_soft_read110:
0x009A	0x0E08      	MOVLW       8
0x009C	0x5C01      	SUBWF       R1, 0 
0x009E	0xE210      	BC          L_I2C_soft_read111
;i2c_soft.h,77 :: 		result <<= 1;
0x00A0	0x3751      	RLCF        I2C_soft_read_result_L0, 1, 1
0x00A2	0x9151      	BCF         I2C_soft_read_result_L0, 0, 1
;i2c_soft.h,78 :: 		I2C_SCL = 1;
0x00A4	0x8E83      	BSF         PORTD, 7 
;i2c_soft.h,79 :: 		delay_us(2);
0x00A6	0x0E03      	MOVLW       3
0x00A8	0x6E0D      	MOVWF       R13, 0
L_I2C_soft_read113:
0x00AA	0x2E0D      	DECFSZ      R13, 1, 0
0x00AC	0xD7FE      	BRA         L_I2C_soft_read113
;i2c_soft.h,81 :: 		if(I2C_SDA)
0x00AE	0xBC83      	BTFSC       PORTD, 6 
;i2c_soft.h,82 :: 		result |= 0x01;
0x00B0	0x8151      	BSF         I2C_soft_read_result_L0, 0, 1
L_I2C_soft_read114:
;i2c_soft.h,83 :: 		I2C_SCL = 0;
0x00B2	0x9E83      	BCF         PORTD, 7 
;i2c_soft.h,84 :: 		delay_us(2);
0x00B4	0x0E03      	MOVLW       3
0x00B6	0x6E0D      	MOVWF       R13, 0
L_I2C_soft_read115:
0x00B8	0x2E0D      	DECFSZ      R13, 1, 0
0x00BA	0xD7FE      	BRA         L_I2C_soft_read115
;i2c_soft.h,76 :: 		for(i = 0; i < 8; i++){
0x00BC	0x2A01      	INCF        R1, 1 
;i2c_soft.h,85 :: 		}
0x00BE	0xD7ED      	BRA         L_I2C_soft_read110
L_I2C_soft_read111:
;i2c_soft.h,88 :: 		I2C_SDAD = 0;
0x00C0	0x9C95      	BCF         TRISD, 6 
;i2c_soft.h,89 :: 		I2C_SDA = !ACK.B0;  //Señal negada
0x00C2	0xB150      	BTFSC       FARG_I2C_soft_read_ACK, 0, 1
0x00C4	0xD002      	BRA         L__I2C_soft_read704
0x00C6	0x8C83      	BSF         PORTD, 6 
0x00C8	0xD001      	BRA         L__I2C_soft_read705
L__I2C_soft_read704:
0x00CA	0x9C83      	BCF         PORTD, 6 
L__I2C_soft_read705:
;i2c_soft.h,90 :: 		asm nop;
0x00CC	0x0000      	NOP
;i2c_soft.h,91 :: 		I2C_SCL = 1;
0x00CE	0x8E83      	BSF         PORTD, 7 
;i2c_soft.h,92 :: 		delay_us(2);
0x00D0	0x0E03      	MOVLW       3
0x00D2	0x6E0D      	MOVWF       R13, 0
L_I2C_soft_read116:
0x00D4	0x2E0D      	DECFSZ      R13, 1, 0
0x00D6	0xD7FE      	BRA         L_I2C_soft_read116
;i2c_soft.h,93 :: 		I2C_SCL = 0;
0x00D8	0x9E83      	BCF         PORTD, 7 
;i2c_soft.h,95 :: 		return result;
0x00DA	0xF000C251  	MOVFF       I2C_soft_read_result_L0, R0
;i2c_soft.h,96 :: 		}
L_end_I2C_soft_read:
0x00DE	0x0012      	RETURN      0
; end of _I2C_soft_read
_I2C_soft_write:
;i2c_soft.h,45 :: 		bool I2C_soft_write(char dato){
;i2c_soft.h,49 :: 		for(i = 0; i < 8; i++){
0x00E0	0x6A01      	CLRF        R1 
L_I2C_soft_write104:
0x00E2	0x0E08      	MOVLW       8
0x00E4	0x5C01      	SUBWF       R1, 0 
0x00E6	0xE215      	BC          L_I2C_soft_write105
;i2c_soft.h,50 :: 		I2C_SDA = dato.B7;  //El valor del bit
0x00E8	0x0102      	MOVLB       2
0x00EA	0xBF50      	BTFSC       FARG_I2C_soft_write_dato, 7, 1
0x00EC	0xD002      	BRA         L__I2C_soft_write699
0x00EE	0x9C83      	BCF         PORTD, 6 
0x00F0	0xD001      	BRA         L__I2C_soft_write700
L__I2C_soft_write699:
0x00F2	0x8C83      	BSF         PORTD, 6 
L__I2C_soft_write700:
;i2c_soft.h,51 :: 		I2C_SCL = 1;        //Activar dato
0x00F4	0x8E83      	BSF         PORTD, 7 
;i2c_soft.h,52 :: 		delay_us(2);
0x00F6	0x0E03      	MOVLW       3
0x00F8	0x6E0D      	MOVWF       R13, 0
L_I2C_soft_write107:
0x00FA	0x0102      	MOVLB       2
0x00FC	0x2E0D      	DECFSZ      R13, 1, 0
0x00FE	0xD7FD      	BRA         L_I2C_soft_write107
;i2c_soft.h,53 :: 		dato <<= 1;         //Recorro hacia la izquierda
0x0100	0x3750      	RLCF        FARG_I2C_soft_write_dato, 1, 1
0x0102	0x9150      	BCF         FARG_I2C_soft_write_dato, 0, 1
;i2c_soft.h,54 :: 		I2C_SCL = 0;
0x0104	0x9E83      	BCF         PORTD, 7 
;i2c_soft.h,55 :: 		delay_us(2);
0x0106	0x0E03      	MOVLW       3
0x0108	0x6E0D      	MOVWF       R13, 0
L_I2C_soft_write108:
0x010A	0x2E0D      	DECFSZ      R13, 1, 0
0x010C	0xD7FE      	BRA         L_I2C_soft_write108
;i2c_soft.h,49 :: 		for(i = 0; i < 8; i++){
0x010E	0x2A01      	INCF        R1, 1 
;i2c_soft.h,56 :: 		}
0x0110	0xD7E8      	BRA         L_I2C_soft_write104
L_I2C_soft_write105:
;i2c_soft.h,59 :: 		I2C_SDAD = 1;
0x0112	0x8C95      	BSF         TRISD, 6 
;i2c_soft.h,60 :: 		asm nop;
0x0114	0x0000      	NOP
;i2c_soft.h,61 :: 		I2C_SCL = 1;     //Mandar el púlso para recibir el ACK
0x0116	0x8E83      	BSF         PORTD, 7 
;i2c_soft.h,62 :: 		delay_us(2);
0x0118	0x0E03      	MOVLW       3
0x011A	0x6E0D      	MOVWF       R13, 0
L_I2C_soft_write109:
0x011C	0x2E0D      	DECFSZ      R13, 1, 0
0x011E	0xD7FE      	BRA         L_I2C_soft_write109
;i2c_soft.h,63 :: 		i.B0 = I2C_SDA;  //Guardo el valor del ACK
0x0120	0xBC83      	BTFSC       PORTD, 6 
0x0122	0xD002      	BRA         L__I2C_soft_write701
0x0124	0x9001      	BCF         R1, 0 
0x0126	0xD001      	BRA         L__I2C_soft_write702
L__I2C_soft_write701:
0x0128	0x8001      	BSF         R1, 0 
L__I2C_soft_write702:
;i2c_soft.h,64 :: 		I2C_SCL = 0;
0x012A	0x9E83      	BCF         PORTD, 7 
;i2c_soft.h,65 :: 		I2C_SDAD = 0;    //Configurar como salida el pin
0x012C	0x9C95      	BCF         TRISD, 6 
;i2c_soft.h,67 :: 		return i.B0;
0x012E	0x0E00      	MOVLW       0
0x0130	0xB001      	BTFSC       R1, 0 
0x0132	0x0E01      	MOVLW       1
0x0134	0x6E00      	MOVWF       R0 
;i2c_soft.h,68 :: 		}
L_end_I2C_soft_write:
0x0136	0x0012      	RETURN      0
; end of _I2C_soft_write
_I2C_soft_start:
;i2c_soft.h,22 :: 		void I2C_soft_start(){
;i2c_soft.h,24 :: 		I2C_SDAD = 1;
0x0138	0x8C95      	BSF         TRISD, 6 
;i2c_soft.h,25 :: 		I2C_SCLD = 1;
0x013A	0x8E95      	BSF         TRISD, 7 
;i2c_soft.h,26 :: 		delay_us(2);
0x013C	0x0E03      	MOVLW       3
0x013E	0x6E0D      	MOVWF       R13, 0
L_I2C_soft_start100:
0x0140	0x2E0D      	DECFSZ      R13, 1, 0
0x0142	0xD7FE      	BRA         L_I2C_soft_start100
;i2c_soft.h,28 :: 		I2C_SDAD = 0;
0x0144	0x9C95      	BCF         TRISD, 6 
;i2c_soft.h,29 :: 		I2C_SDA = 0;  //Señal en bajo
0x0146	0x9C83      	BCF         PORTD, 6 
;i2c_soft.h,30 :: 		delay_us(2);
0x0148	0x0E03      	MOVLW       3
0x014A	0x6E0D      	MOVWF       R13, 0
L_I2C_soft_start101:
0x014C	0x2E0D      	DECFSZ      R13, 1, 0
0x014E	0xD7FE      	BRA         L_I2C_soft_start101
;i2c_soft.h,32 :: 		I2C_SCLD = 0;
0x0150	0x9E95      	BCF         TRISD, 7 
;i2c_soft.h,33 :: 		I2C_SCL = 0;  //Señal en bajo
0x0152	0x9E83      	BCF         PORTD, 7 
;i2c_soft.h,34 :: 		}
L_end_I2C_soft_start:
0x0154	0x0012      	RETURN      0
; end of _I2C_soft_start
_SETFUN32:
;__Lib_MathDouble.c,144 :: 		
;__Lib_MathDouble.c,152 :: 		
0x0156	0x840B      	BSF         R11, 2, 0
;__Lib_MathDouble.c,153 :: 		
0x0158	0xAE0B      	BTFSS       R11, 7, 0
;__Lib_MathDouble.c,154 :: 		
0x015A	0xF000EFB6  	GOTO        SETFUN32EEE
;__Lib_MathDouble.c,156 :: 		
0x015E	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,157 :: 		
0x0160	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,158 :: 		
0x0162	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,159 :: 		
0x0164	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,160 :: 		
0x0166	0x6A00      	CLRF        R0, 0
;__Lib_MathDouble.c,161 :: 		
0x0168	0x360A      	RLCF        R10, 1, 0
;__Lib_MathDouble.c,162 :: 		
0x016A	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,163 :: 		
SETFUN32EEE:
;__Lib_MathDouble.c,164 :: 		
0x016C	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,166 :: 		
L_end_SETFUN32:
0x016E	0x0012      	RETURN      0
; end of _SETFUN32
_FIXSIGN32:
;__Lib_MathDouble.c,117 :: 		
;__Lib_MathDouble.c,121 :: 		
0x0170	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,122 :: 		
0x0172	0x9E02      	BCF         R2, 7, 0
;__Lib_MathDouble.c,123 :: 		
0x0174	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,125 :: 		
L_end_FIXSIGN32:
0x0176	0x0012      	RETURN      0
; end of _FIXSIGN32
_SETFOV32:
;__Lib_MathDouble.c,82 :: 		
;__Lib_MathDouble.c,90 :: 		
0x0178	0x820B      	BSF         R11, 1, 0
;__Lib_MathDouble.c,91 :: 		
0x017A	0xAE0B      	BTFSS       R11, 7, 0
;__Lib_MathDouble.c,92 :: 		
0x017C	0xF000EFC6  	GOTO        SETFOV32EEE
;__Lib_MathDouble.c,94 :: 		
0x0180	0x6803      	SETF        R3, 0
;__Lib_MathDouble.c,95 :: 		
0x0182	0x6802      	SETF        R2, 0
;__Lib_MathDouble.c,96 :: 		
0x0184	0x6801      	SETF        R1, 0
;__Lib_MathDouble.c,97 :: 		
0x0186	0x6800      	SETF        R0, 0
;__Lib_MathDouble.c,98 :: 		
0x0188	0x360A      	RLCF        R10, 1, 0
;__Lib_MathDouble.c,99 :: 		
0x018A	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,100 :: 		
SETFOV32EEE:
;__Lib_MathDouble.c,101 :: 		
0x018C	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,103 :: 		
L_end_SETFOV32:
0x018E	0x0012      	RETURN      0
; end of _SETFOV32
_I2C_soft_stop:
;i2c_soft.h,36 :: 		void I2C_soft_stop(){
;i2c_soft.h,37 :: 		I2C_SDAD = 0;  //Configuro de salida por seguridad
0x0190	0x9C95      	BCF         TRISD, 6 
;i2c_soft.h,38 :: 		I2C_SDA = 0;   //Mando cero por el protocolo
0x0192	0x9C83      	BCF         PORTD, 6 
;i2c_soft.h,39 :: 		delay_us(2);
0x0194	0x0E03      	MOVLW       3
0x0196	0x6E0D      	MOVWF       R13, 0
L_I2C_soft_stop102:
0x0198	0x2E0D      	DECFSZ      R13, 1, 0
0x019A	0xD7FE      	BRA         L_I2C_soft_stop102
;i2c_soft.h,40 :: 		I2C_SCLD = 1;
0x019C	0x8E95      	BSF         TRISD, 7 
;i2c_soft.h,41 :: 		delay_us(2);
0x019E	0x0E03      	MOVLW       3
0x01A0	0x6E0D      	MOVWF       R13, 0
L_I2C_soft_stop103:
0x01A2	0x2E0D      	DECFSZ      R13, 1, 0
0x01A4	0xD7FE      	BRA         L_I2C_soft_stop103
;i2c_soft.h,42 :: 		I2C_SDAD = 1;
0x01A6	0x8C95      	BSF         TRISD, 6 
;i2c_soft.h,43 :: 		}
L_end_I2C_soft_stop:
0x01A8	0x0012      	RETURN      0
; end of _I2C_soft_stop
_Div_8x8_U:
;__Lib_Math.c,77 :: 		
;__Lib_Math.c,84 :: 		
0x01AA	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,85 :: 		
0x01AC	0x0E08      	MOVLW       8
;__Lib_Math.c,86 :: 		
0x01AE	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,87 :: 		
0x01B0	0x3400      	RLCF        R0, 0, 0
;__Lib_Math.c,88 :: 		
0x01B2	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,89 :: 		
0x01B4	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,90 :: 		
0x01B6	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,91 :: 		
0x01B8	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,92 :: 		
0x01BA	0xD002      	BRA         $+6
;__Lib_Math.c,93 :: 		
0x01BC	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,94 :: 		
0x01BE	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,95 :: 		
0x01C0	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,96 :: 		
0x01C2	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,97 :: 		
0x01C4	0xD7F5      	BRA         $-20
;__Lib_Math.c,99 :: 		
L_end_Div_8x8_U:
0x01C6	0x0012      	RETURN      0
; end of _Div_8x8_U
_RES032:
;__Lib_MathDouble.c,128 :: 		
;__Lib_MathDouble.c,134 :: 		
0x01C8	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,135 :: 		
0x01CA	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,136 :: 		
0x01CC	0x6A00      	CLRF        R0, 0
;__Lib_MathDouble.c,137 :: 		
0x01CE	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,138 :: 		
0x01D0	0x6A03      	CLRF        R3, 0
;__Lib_MathDouble.c,139 :: 		
0x01D2	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,141 :: 		
L_end_RES032:
0x01D4	0x0012      	RETURN      0
; end of _RES032
_lcd_gotoxy:
;lcd_4x20.h,93 :: 		void lcd_gotoxy(char fila, char col){
;lcd_4x20.h,94 :: 		if(fila == 1)
0x01D6	0x0102      	MOVLB       2
0x01D8	0x5150      	MOVF        FARG_lcd_gotoxy_fila, 0, 1
0x01DA	0x0A01      	XORLW       1
0x01DC	0xE102      	BNZ         L_lcd_gotoxy13
;lcd_4x20.h,95 :: 		fila = LCD_LINE_1_ADDRESS;
0x01DE	0x6B50      	CLRF        FARG_lcd_gotoxy_fila, 1
0x01E0	0xD013      	BRA         L_lcd_gotoxy14
L_lcd_gotoxy13:
;lcd_4x20.h,96 :: 		else if(fila == 2)
0x01E2	0x5150      	MOVF        FARG_lcd_gotoxy_fila, 0, 1
0x01E4	0x0A02      	XORLW       2
0x01E6	0xE103      	BNZ         L_lcd_gotoxy15
;lcd_4x20.h,97 :: 		fila = LCD_LINE_2_ADDRESS;
0x01E8	0x0E40      	MOVLW       64
0x01EA	0x6F50      	MOVWF       FARG_lcd_gotoxy_fila, 1
0x01EC	0xD00D      	BRA         L_lcd_gotoxy16
L_lcd_gotoxy15:
;lcd_4x20.h,98 :: 		else if(fila == 3)
0x01EE	0x5150      	MOVF        FARG_lcd_gotoxy_fila, 0, 1
0x01F0	0x0A03      	XORLW       3
0x01F2	0xE103      	BNZ         L_lcd_gotoxy17
;lcd_4x20.h,99 :: 		fila = LCD_LINE_3_ADDRESS;
0x01F4	0x0E14      	MOVLW       20
0x01F6	0x6F50      	MOVWF       FARG_lcd_gotoxy_fila, 1
0x01F8	0xD007      	BRA         L_lcd_gotoxy18
L_lcd_gotoxy17:
;lcd_4x20.h,100 :: 		else if(fila == 4)
0x01FA	0x5150      	MOVF        FARG_lcd_gotoxy_fila, 0, 1
0x01FC	0x0A04      	XORLW       4
0x01FE	0xE103      	BNZ         L_lcd_gotoxy19
;lcd_4x20.h,101 :: 		fila = LCD_LINE_4_ADDRESS;
0x0200	0x0E54      	MOVLW       84
0x0202	0x6F50      	MOVWF       FARG_lcd_gotoxy_fila, 1
0x0204	0xD001      	BRA         L_lcd_gotoxy20
L_lcd_gotoxy19:
;lcd_4x20.h,103 :: 		fila = LCD_LINE_1_ADDRESS;
0x0206	0x6B50      	CLRF        FARG_lcd_gotoxy_fila, 1
L_lcd_gotoxy20:
L_lcd_gotoxy18:
L_lcd_gotoxy16:
L_lcd_gotoxy14:
;lcd_4x20.h,105 :: 		fila += (col-1);
0x0208	0x0551      	DECF        FARG_lcd_gotoxy_col, 0, 1
0x020A	0x6E00      	MOVWF       R0 
0x020C	0x5150      	MOVF        FARG_lcd_gotoxy_fila, 0, 1
0x020E	0x2600      	ADDWF       R0, 1 
0x0210	0xF250C000  	MOVFF       R0, FARG_lcd_gotoxy_fila
;lcd_4x20.h,106 :: 		fila |= 0x80;
0x0214	0x8E00      	BSF         R0, 7 
0x0216	0xF250C000  	MOVFF       R0, FARG_lcd_gotoxy_fila
;lcd_4x20.h,108 :: 		lcd_send_byte(0, fila);
0x021A	0x6B52      	CLRF        FARG_lcd_send_byte_address, 1
0x021C	0xF253C000  	MOVFF       R0, FARG_lcd_send_byte_enviar
0x0220	0xDF1F      	RCALL       _lcd_send_byte
;lcd_4x20.h,109 :: 		}
L_end_lcd_gotoxy:
0x0222	0x0012      	RETURN      0
; end of _lcd_gotoxy
_SETFDZ32:
;__Lib_MathDouble.c,106 :: 		
;__Lib_MathDouble.c,110 :: 		
0x0224	0x6A0B      	CLRF        R11, 0
;__Lib_MathDouble.c,111 :: 		
0x0226	0x860B      	BSF         R11, 3, 0
;__Lib_MathDouble.c,112 :: 		
0x0228	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,114 :: 		
L_end_SETFDZ32:
0x022A	0x0012      	RETURN      0
; end of _SETFDZ32
_lcd_outConst:
;lcd_4x20.h,124 :: 		void lcd_outConst(char fila, char col, const char *texto){
;lcd_4x20.h,125 :: 		char cont = 0;
0x022C	0x0102      	MOVLB       2
0x022E	0x6B3B      	CLRF        lcd_outConst_cont_L0, 1
;lcd_4x20.h,127 :: 		lcd_gotoxy(fila, col);
0x0230	0xF250C236  	MOVFF       FARG_lcd_outConst_fila, FARG_lcd_gotoxy_fila
0x0234	0xF251C237  	MOVFF       FARG_lcd_outConst_col, FARG_lcd_gotoxy_col
0x0238	0xDFCE      	RCALL       _lcd_gotoxy
;lcd_4x20.h,128 :: 		while(texto[cont])
L_lcd_outConst23:
0x023A	0x513B      	MOVF        lcd_outConst_cont_L0, 0, 1
0x023C	0x2538      	ADDWF       FARG_lcd_outConst_texto, 0, 1
0x023E	0x6EF6      	MOVWF       4086 
0x0240	0x0E00      	MOVLW       0
0x0242	0x2139      	ADDWFC      FARG_lcd_outConst_texto+1, 0, 1
0x0244	0x6EF7      	MOVWF       TBLPTRH 
0x0246	0x0E00      	MOVLW       0
0x0248	0x213A      	ADDWFC      FARG_lcd_outConst_texto+2, 0, 1
0x024A	0x6EF8      	MOVWF       TBLPTRU 
0x024C	0x0009      	TBLRD*+
0x024E	0xF000CFF5  	MOVFF       TABLAT, R0
0x0252	0x5200      	MOVF        R0, 1 
0x0254	0xE011      	BZ          L_lcd_outConst24
;lcd_4x20.h,129 :: 		lcd_send_byte(1, texto[cont++]);
0x0256	0x0E01      	MOVLW       1
0x0258	0x6F52      	MOVWF       FARG_lcd_send_byte_address, 1
0x025A	0x513B      	MOVF        lcd_outConst_cont_L0, 0, 1
0x025C	0x2538      	ADDWF       FARG_lcd_outConst_texto, 0, 1
0x025E	0x6EF6      	MOVWF       4086 
0x0260	0x0E00      	MOVLW       0
0x0262	0x2139      	ADDWFC      FARG_lcd_outConst_texto+1, 0, 1
0x0264	0x6EF7      	MOVWF       TBLPTRH 
0x0266	0x0E00      	MOVLW       0
0x0268	0x213A      	ADDWFC      FARG_lcd_outConst_texto+2, 0, 1
0x026A	0x6EF8      	MOVWF       TBLPTRU 
0x026C	0x0009      	TBLRD*+
0x026E	0xF253CFF5  	MOVFF       TABLAT, FARG_lcd_send_byte_enviar
0x0272	0xDEF6      	RCALL       _lcd_send_byte
0x0274	0x2B3B      	INCF        lcd_outConst_cont_L0, 1, 1
0x0276	0xD7E1      	BRA         L_lcd_outConst23
L_lcd_outConst24:
;lcd_4x20.h,130 :: 		}
L_end_lcd_outConst:
0x0278	0x0012      	RETURN      0
; end of _lcd_outConst
_NRM3232:
;__Lib_MathDouble.c,455 :: 		
;__Lib_MathDouble.c,463 :: 		
0x027A	0x6A0C      	CLRF        R12, 0
;__Lib_MathDouble.c,464 :: 		
0x027C	0x6A0E      	CLRF        R14, 0
;__Lib_MathDouble.c,465 :: 		
0x027E	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,466 :: 		
0x0280	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,467 :: 		
0x0282	0xF001EF56  	GOTO        NORM3232
;__Lib_MathDouble.c,468 :: 		
0x0286	0xF002C001  	MOVFF       R1, R2
;__Lib_MathDouble.c,469 :: 		
0x028A	0xF001C000  	MOVFF       R0, R1
;__Lib_MathDouble.c,470 :: 		
0x028E	0x6A00      	CLRF        R0, 0
;__Lib_MathDouble.c,471 :: 		
0x0290	0x860E      	BSF         R14, 3, 0
;__Lib_MathDouble.c,473 :: 		
0x0292	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,474 :: 		
0x0294	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,475 :: 		
0x0296	0xF001EF56  	GOTO        NORM3232
;__Lib_MathDouble.c,476 :: 		
0x029A	0xF002C001  	MOVFF       R1, R2
;__Lib_MathDouble.c,477 :: 		
0x029E	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,478 :: 		
0x02A0	0x960E      	BCF         R14, 3, 0
;__Lib_MathDouble.c,479 :: 		
0x02A2	0x880E      	BSF         R14, 4, 0
;__Lib_MathDouble.c,481 :: 		
0x02A4	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,482 :: 		
0x02A6	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,483 :: 		
0x02A8	0xF001EF68  	GOTO        JPNRES032
;__Lib_MathDouble.c,484 :: 		
NORM3232:
;__Lib_MathDouble.c,485 :: 		
0x02AC	0x500E      	MOVF        R14, 0, 0
;__Lib_MathDouble.c,486 :: 		
0x02AE	0x5E03      	SUBWF       R3, 1, 0
;__Lib_MathDouble.c,487 :: 		
0x02B0	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,488 :: 		
0x02B2	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,489 :: 		
0x02B4	0xF001EF6D  	GOTO        JPNSETFUN32
;__Lib_MathDouble.c,490 :: 		
0x02B8	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,491 :: 		
NORM3232A:
;__Lib_MathDouble.c,492 :: 		
0x02BA	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,493 :: 		
0x02BC	0xF001EF72  	GOTO        JMPNFIXSIGN32
;__Lib_MathDouble.c,494 :: 		
0x02C0	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,495 :: 		
0x02C2	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,496 :: 		
0x02C4	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,497 :: 		
0x02C6	0x2E03      	DECFSZ      R3, 1, 0
;__Lib_MathDouble.c,498 :: 		
0x02C8	0xF001EF5D  	GOTO        NORM3232A
;__Lib_MathDouble.c,499 :: 		
0x02CC	0xF001EF6D  	GOTO        JPNSETFUN32
;__Lib_MathDouble.c,500 :: 		
JPNRES032:
;__Lib_MathDouble.c,501 :: 		
0x02D0	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,502 :: 		
0x02D2	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,504 :: 		
0x02D4	0xDF79      	RCALL       _RES032
;__Lib_MathDouble.c,506 :: 		
0x02D6	0xF001EF75  	GOTO        NORM32EEE
;__Lib_MathDouble.c,507 :: 		
JPNSETFUN32:
;__Lib_MathDouble.c,508 :: 		
0x02DA	0x0E02      	MOVLW       2
;__Lib_MathDouble.c,509 :: 		
0x02DC	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,511 :: 		
0x02DE	0xDF3B      	RCALL       _SETFUN32
;__Lib_MathDouble.c,513 :: 		
0x02E0	0xF001EF75  	GOTO        NORM32EEE
;__Lib_MathDouble.c,514 :: 		
JMPNFIXSIGN32:
;__Lib_MathDouble.c,515 :: 		
0x02E4	0x0E04      	MOVLW       4
;__Lib_MathDouble.c,516 :: 		
0x02E6	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,518 :: 		
0x02E8	0xDF43      	RCALL       _FIXSIGN32
;__Lib_MathDouble.c,520 :: 		
NORM32EEE:
;__Lib_MathDouble.c,527 :: 		
L_end_NRM3232:
0x02EA	0x0012      	RETURN      0
; end of _NRM3232
_NRM4032:
;__Lib_MathDouble.c,174 :: 		
;__Lib_MathDouble.c,183 :: 		
0x02EC	0xB00C      	BTFSC       R12, 0, 0
;__Lib_MathDouble.c,184 :: 		
0x02EE	0xF001EFB8  	GOTO        NRMRND4032
;__Lib_MathDouble.c,185 :: 		
0x02F2	0xA20C      	BTFSS       R12, 1, 0
;__Lib_MathDouble.c,186 :: 		
0x02F4	0xF002EF5E  	GOTO        NRM40JPSETFOV32
;__Lib_MathDouble.c,188 :: 		
0x02F8	0x6A0E      	CLRF        R14, 0
;__Lib_MathDouble.c,189 :: 		
0x02FA	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,190 :: 		
0x02FC	0x6402      	CPFSGT      R2, 0
;__Lib_MathDouble.c,191 :: 		
0x02FE	0xF001EFCF  	GOTO        NRM4032A
;__Lib_MathDouble.c,194 :: 		
0x0302	0x0EF0      	MOVLW       240
;__Lib_MathDouble.c,195 :: 		
0x0304	0x1402      	ANDWF       R2, 0, 0
;__Lib_MathDouble.c,196 :: 		
0x0306	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,197 :: 		
0x0308	0xF001EF9A  	GOTO        NORM4032
;__Lib_MathDouble.c,199 :: 		
0x030C	0x3A02      	SWAPF       R2, 1, 0
;__Lib_MathDouble.c,200 :: 		
0x030E	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,201 :: 		
0x0310	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,202 :: 		
0x0312	0x2602      	ADDWF       R2, 1, 0
;__Lib_MathDouble.c,204 :: 		
0x0314	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,205 :: 		
0x0316	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,206 :: 		
0x0318	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,207 :: 		
0x031A	0x3800      	SWAPF       R0, 0, 0
;__Lib_MathDouble.c,208 :: 		
0x031C	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,209 :: 		
0x031E	0x2601      	ADDWF       R1, 1, 0
;__Lib_MathDouble.c,211 :: 		
0x0320	0x3800      	SWAPF       R0, 0, 0
;__Lib_MathDouble.c,212 :: 		
0x0322	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,213 :: 		
0x0324	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,214 :: 		
0x0326	0x3808      	SWAPF       R8, 0, 0
;__Lib_MathDouble.c,215 :: 		
0x0328	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,216 :: 		
0x032A	0x2600      	ADDWF       R0, 1, 0
;__Lib_MathDouble.c,218 :: 		
0x032C	0x3808      	SWAPF       R8, 0, 0
;__Lib_MathDouble.c,219 :: 		
0x032E	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,220 :: 		
0x0330	0x6E08      	MOVWF       R8, 0
;__Lib_MathDouble.c,222 :: 		
0x0332	0x840E      	BSF         R14, 2, 0
;__Lib_MathDouble.c,224 :: 		
NORM4032:
;__Lib_MathDouble.c,225 :: 		
0x0334	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,227 :: 		
0x0336	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,228 :: 		
0x0338	0xF001EFB3  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,229 :: 		
0x033C	0x3608      	RLCF        R8, 1, 0
;__Lib_MathDouble.c,230 :: 		
0x033E	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,231 :: 		
0x0340	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,232 :: 		
0x0342	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,233 :: 		
0x0344	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,234 :: 		
0x0346	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,235 :: 		
0x0348	0xF001EFB3  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,236 :: 		
0x034C	0x3608      	RLCF        R8, 1, 0
;__Lib_MathDouble.c,237 :: 		
0x034E	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,238 :: 		
0x0350	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,239 :: 		
0x0352	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,240 :: 		
0x0354	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,241 :: 		
0x0356	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,242 :: 		
0x0358	0xF001EFB3  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,243 :: 		
0x035C	0x3608      	RLCF        R8, 1, 0
;__Lib_MathDouble.c,244 :: 		
0x035E	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,245 :: 		
0x0360	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,246 :: 		
0x0362	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,247 :: 		
0x0364	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,249 :: 		
TNORMUN4032:
;__Lib_MathDouble.c,250 :: 		
0x0366	0x500E      	MOVF        R14, 0, 0
;__Lib_MathDouble.c,251 :: 		
0x0368	0x6403      	CPFSGT      R3, 0
;__Lib_MathDouble.c,252 :: 		
0x036A	0xF002EF54  	GOTO        NRM40JPSETFUN32
;__Lib_MathDouble.c,253 :: 		
0x036E	0x5E03      	SUBWF       R3, 1, 0
;__Lib_MathDouble.c,255 :: 		
NRMRND4032:
;__Lib_MathDouble.c,256 :: 		
0x0370	0xBC0B      	BTFSC       R11, 6, 0
;__Lib_MathDouble.c,257 :: 		
0x0372	0xAE08      	BTFSS       R8, 7, 0
;__Lib_MathDouble.c,258 :: 		
0x0374	0xF002EF59  	GOTO        NRM40JPFIXSIGN32
;__Lib_MathDouble.c,259 :: 		
0x0378	0x80D8      	BSF         STATUS, 0, 0
;__Lib_MathDouble.c,260 :: 		
0x037A	0x0E80      	MOVLW       128
;__Lib_MathDouble.c,261 :: 		
0x037C	0x6408      	CPFSGT      R8, 0
;__Lib_MathDouble.c,262 :: 		
0x037E	0x3000      	RRCF        R0, 0, 0
;__Lib_MathDouble.c,263 :: 		
0x0380	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,264 :: 		
0x0382	0x2200      	ADDWFC      R0, 1, 0
;__Lib_MathDouble.c,265 :: 		
0x0384	0x2201      	ADDWFC      R1, 1, 0
;__Lib_MathDouble.c,266 :: 		
0x0386	0x2202      	ADDWFC      R2, 1, 0
;__Lib_MathDouble.c,268 :: 		
0x0388	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,269 :: 		
0x038A	0xF002EF59  	GOTO        NRM40JPFIXSIGN32
;__Lib_MathDouble.c,270 :: 		
0x038E	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,271 :: 		
0x0390	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,272 :: 		
0x0392	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,273 :: 		
0x0394	0x4A03      	INFSNZ      R3, 1, 0
;__Lib_MathDouble.c,274 :: 		
0x0396	0xF002EF5E  	GOTO        NRM40JPSETFOV32
;__Lib_MathDouble.c,275 :: 		
0x039A	0xF002EF59  	GOTO        NRM40JPFIXSIGN32
;__Lib_MathDouble.c,277 :: 		
NRM4032A:
;__Lib_MathDouble.c,278 :: 		
0x039E	0xF002C001  	MOVFF       R1, R2
;__Lib_MathDouble.c,279 :: 		
0x03A2	0xF001C000  	MOVFF       R0, R1
;__Lib_MathDouble.c,280 :: 		
0x03A6	0xF000C008  	MOVFF       R8, R0
;__Lib_MathDouble.c,281 :: 		
0x03AA	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,282 :: 		
0x03AC	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,283 :: 		
0x03AE	0x860E      	BSF         R14, 3, 0
;__Lib_MathDouble.c,284 :: 		
0x03B0	0x6402      	CPFSGT      R2, 0
;__Lib_MathDouble.c,285 :: 		
0x03B2	0xF002EF06  	GOTO        NRM4032B
;__Lib_MathDouble.c,288 :: 		
0x03B6	0x0EF0      	MOVLW       240
;__Lib_MathDouble.c,289 :: 		
0x03B8	0x1402      	ANDWF       R2, 0, 0
;__Lib_MathDouble.c,290 :: 		
0x03BA	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,291 :: 		
0x03BC	0xF001EFEE  	GOTO        NORM4032A
;__Lib_MathDouble.c,292 :: 		
0x03C0	0x3A02      	SWAPF       R2, 1, 0
;__Lib_MathDouble.c,293 :: 		
0x03C2	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,294 :: 		
0x03C4	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,295 :: 		
0x03C6	0x2602      	ADDWF       R2, 1, 0
;__Lib_MathDouble.c,297 :: 		
0x03C8	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,298 :: 		
0x03CA	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,299 :: 		
0x03CC	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,300 :: 		
0x03CE	0x3800      	SWAPF       R0, 0, 0
;__Lib_MathDouble.c,301 :: 		
0x03D0	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,302 :: 		
0x03D2	0x2601      	ADDWF       R1, 1, 0
;__Lib_MathDouble.c,304 :: 		
0x03D4	0x3800      	SWAPF       R0, 0, 0
;__Lib_MathDouble.c,305 :: 		
0x03D6	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,306 :: 		
0x03D8	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,308 :: 		
0x03DA	0x840E      	BSF         R14, 2, 0
;__Lib_MathDouble.c,310 :: 		
NORM4032A:
;__Lib_MathDouble.c,311 :: 		
0x03DC	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,313 :: 		
0x03DE	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,314 :: 		
0x03E0	0xF001EFB3  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,315 :: 		
0x03E4	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,316 :: 		
0x03E6	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,317 :: 		
0x03E8	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,318 :: 		
0x03EA	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,319 :: 		
0x03EC	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,320 :: 		
0x03EE	0xF001EFB3  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,321 :: 		
0x03F2	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,322 :: 		
0x03F4	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,323 :: 		
0x03F6	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,324 :: 		
0x03F8	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,325 :: 		
0x03FA	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,326 :: 		
0x03FC	0xF001EFB3  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,327 :: 		
0x0400	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,328 :: 		
0x0402	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,329 :: 		
0x0404	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,330 :: 		
0x0406	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,331 :: 		
0x0408	0xF001EFB3  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,333 :: 		
NRM4032B:
;__Lib_MathDouble.c,334 :: 		
0x040C	0xF002C001  	MOVFF       R1, R2
;__Lib_MathDouble.c,335 :: 		
0x0410	0xF001C000  	MOVFF       R0, R1
;__Lib_MathDouble.c,336 :: 		
0x0414	0x6A00      	CLRF        R0, 0
;__Lib_MathDouble.c,337 :: 		
0x0416	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,338 :: 		
0x0418	0x960E      	BCF         R14, 3, 0
;__Lib_MathDouble.c,339 :: 		
0x041A	0x880E      	BSF         R14, 4, 0
;__Lib_MathDouble.c,340 :: 		
0x041C	0x6402      	CPFSGT      R2, 0
;__Lib_MathDouble.c,341 :: 		
0x041E	0xF002EF33  	GOTO        NRM4032C
;__Lib_MathDouble.c,344 :: 		
0x0422	0x0EF0      	MOVLW       240
;__Lib_MathDouble.c,345 :: 		
0x0424	0x1402      	ANDWF       R2, 0, 0
;__Lib_MathDouble.c,346 :: 		
0x0426	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,347 :: 		
0x0428	0xF002EF1E  	GOTO        NORM4032B
;__Lib_MathDouble.c,349 :: 		
0x042C	0x3A02      	SWAPF       R2, 1, 0
;__Lib_MathDouble.c,350 :: 		
0x042E	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,351 :: 		
0x0430	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,352 :: 		
0x0432	0x2602      	ADDWF       R2, 1, 0
;__Lib_MathDouble.c,354 :: 		
0x0434	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,355 :: 		
0x0436	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,356 :: 		
0x0438	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,358 :: 		
0x043A	0x840E      	BSF         R14, 2, 0
;__Lib_MathDouble.c,360 :: 		
NORM4032B:
;__Lib_MathDouble.c,361 :: 		
0x043C	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,362 :: 		
0x043E	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,363 :: 		
0x0440	0xF001EFB3  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,364 :: 		
0x0444	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,365 :: 		
0x0446	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,366 :: 		
0x0448	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,367 :: 		
0x044A	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,368 :: 		
0x044C	0xF001EFB3  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,369 :: 		
0x0450	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,370 :: 		
0x0452	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,371 :: 		
0x0454	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,372 :: 		
0x0456	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,373 :: 		
0x0458	0xF001EFB3  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,374 :: 		
0x045C	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,375 :: 		
0x045E	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,376 :: 		
0x0460	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,377 :: 		
0x0462	0xF001EFB3  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,379 :: 		
NRM4032C:
;__Lib_MathDouble.c,380 :: 		
0x0466	0xF002C001  	MOVFF       R1, R2
;__Lib_MathDouble.c,381 :: 		
0x046A	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,382 :: 		
0x046C	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,383 :: 		
0x046E	0x860E      	BSF         R14, 3, 0
;__Lib_MathDouble.c,384 :: 		
0x0470	0x6402      	CPFSGT      R2, 0
;__Lib_MathDouble.c,385 :: 		
0x0472	0xF002EF63  	GOTO        NRM40JPRES032
;__Lib_MathDouble.c,388 :: 		
0x0476	0x0EF0      	MOVLW       240
;__Lib_MathDouble.c,389 :: 		
0x0478	0x1402      	ANDWF       R2, 0, 0
;__Lib_MathDouble.c,390 :: 		
0x047A	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,391 :: 		
0x047C	0xF002EF42  	GOTO        NORM4032C
;__Lib_MathDouble.c,392 :: 		
0x0480	0x3A02      	SWAPF       R2, 1, 0
;__Lib_MathDouble.c,394 :: 		
0x0482	0x840E      	BSF         R14, 2, 0
;__Lib_MathDouble.c,396 :: 		
NORM4032C:
;__Lib_MathDouble.c,397 :: 		
0x0484	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,399 :: 		
0x0486	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,400 :: 		
0x0488	0xF001EFB3  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,401 :: 		
0x048C	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,402 :: 		
0x048E	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,403 :: 		
0x0490	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,404 :: 		
0x0492	0xF001EFB3  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,405 :: 		
0x0496	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,406 :: 		
0x0498	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,407 :: 		
0x049A	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,408 :: 		
0x049C	0xF001EFB3  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,409 :: 		
0x04A0	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,410 :: 		
0x04A2	0x2A0E      	INCF        R14, 1, 0
;__Lib_MathDouble.c,411 :: 		
0x04A4	0xF001EFB3  	GOTO        TNORMUN4032
;__Lib_MathDouble.c,413 :: 		
NRM40JPSETFUN32:
;__Lib_MathDouble.c,414 :: 		
0x04A8	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,415 :: 		
0x04AA	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,417 :: 		
0x04AC	0xDE54      	RCALL       _SETFUN32
;__Lib_MathDouble.c,419 :: 		
0x04AE	0xF002EF66  	GOTO        NRM40EEE
;__Lib_MathDouble.c,420 :: 		
NRM40JPFIXSIGN32:
;__Lib_MathDouble.c,421 :: 		
0x04B2	0x0E02      	MOVLW       2
;__Lib_MathDouble.c,422 :: 		
0x04B4	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,424 :: 		
0x04B6	0xDE5C      	RCALL       _FIXSIGN32
;__Lib_MathDouble.c,426 :: 		
0x04B8	0xF002EF66  	GOTO        NRM40EEE
;__Lib_MathDouble.c,427 :: 		
NRM40JPSETFOV32:
;__Lib_MathDouble.c,428 :: 		
0x04BC	0x0E04      	MOVLW       4
;__Lib_MathDouble.c,429 :: 		
0x04BE	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,431 :: 		
0x04C0	0xDE5B      	RCALL       _SETFOV32
;__Lib_MathDouble.c,433 :: 		
0x04C2	0xF002EF66  	GOTO        NRM40EEE
;__Lib_MathDouble.c,434 :: 		
NRM40JPRES032:
;__Lib_MathDouble.c,435 :: 		
0x04C6	0x0E08      	MOVLW       8
;__Lib_MathDouble.c,436 :: 		
0x04C8	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,438 :: 		
0x04CA	0xDE7E      	RCALL       _RES032
;__Lib_MathDouble.c,440 :: 		
NRM40EEE:
;__Lib_MathDouble.c,448 :: 		
L_end_NRM4032:
0x04CC	0x0012      	RETURN      0
; end of _NRM4032
_SETIOV3224:
;__Lib_MathDouble.c,530 :: 		
;__Lib_MathDouble.c,537 :: 		
0x04CE	0x800B      	BSF         R11, 0, 0
;__Lib_MathDouble.c,538 :: 		
0x04D0	0xAE0B      	BTFSS       R11, 7, 0
;__Lib_MathDouble.c,539 :: 		
0x04D2	0xF002EF73  	GOTO        SETIOV3224EEE
;__Lib_MathDouble.c,541 :: 		
0x04D6	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,542 :: 		
0x04D8	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,543 :: 		
0x04DA	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,544 :: 		
0x04DC	0x6E02      	MOVWF       R2, 0
;__Lib_MathDouble.c,545 :: 		
0x04DE	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,546 :: 		
0x04E0	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,547 :: 		
0x04E2	0x360A      	RLCF        R10, 1, 0
;__Lib_MathDouble.c,548 :: 		
0x04E4	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,549 :: 		
SETIOV3224EEE:
;__Lib_MathDouble.c,550 :: 		
0x04E6	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,552 :: 		
L_end_SETIOV3224:
0x04E8	0x0012      	RETURN      0
; end of _SETIOV3224
_lcd_out:
;lcd_4x20.h,116 :: 		void lcd_out(char fila, char col, char *texto){
;lcd_4x20.h,117 :: 		char cont = 0;
0x04EA	0x0102      	MOVLB       2
0x04EC	0x6B3A      	CLRF        lcd_out_cont_L0, 1
;lcd_4x20.h,119 :: 		lcd_gotoxy(fila, col);
0x04EE	0xF250C236  	MOVFF       FARG_lcd_out_fila, FARG_lcd_gotoxy_fila
0x04F2	0xF251C237  	MOVFF       FARG_lcd_out_col, FARG_lcd_gotoxy_col
0x04F6	0xDE6F      	RCALL       _lcd_gotoxy
;lcd_4x20.h,120 :: 		while(texto[cont])
L_lcd_out21:
0x04F8	0x513A      	MOVF        lcd_out_cont_L0, 0, 1
0x04FA	0x2538      	ADDWF       FARG_lcd_out_texto, 0, 1
0x04FC	0x6EE9      	MOVWF       FSR0L 
0x04FE	0x0E00      	MOVLW       0
0x0500	0x2139      	ADDWFC      FARG_lcd_out_texto+1, 0, 1
0x0502	0x6EEA      	MOVWF       FSR0H 
0x0504	0x52EE      	MOVF        POSTINC0, 1 
0x0506	0xE00D      	BZ          L_lcd_out22
;lcd_4x20.h,121 :: 		lcd_send_byte(1, texto[cont++]);
0x0508	0x0E01      	MOVLW       1
0x050A	0x6F52      	MOVWF       FARG_lcd_send_byte_address, 1
0x050C	0x513A      	MOVF        lcd_out_cont_L0, 0, 1
0x050E	0x2538      	ADDWF       FARG_lcd_out_texto, 0, 1
0x0510	0x6EE9      	MOVWF       FSR0L 
0x0512	0x0E00      	MOVLW       0
0x0514	0x2139      	ADDWFC      FARG_lcd_out_texto+1, 0, 1
0x0516	0x6EEA      	MOVWF       FSR0H 
0x0518	0xF253CFEE  	MOVFF       POSTINC0, FARG_lcd_send_byte_enviar
0x051C	0xDDA1      	RCALL       _lcd_send_byte
0x051E	0x2B3A      	INCF        lcd_out_cont_L0, 1, 1
0x0520	0xD7EB      	BRA         L_lcd_out21
L_lcd_out22:
;lcd_4x20.h,122 :: 		}
L_end_lcd_out:
0x0522	0x0012      	RETURN      0
; end of _lcd_out
_eepromLeeNumero:
;eepromi2cbrian_v2.h,142 :: 		long eepromLeeNumero(unsigned int registro, short BYTES){
;eepromi2cbrian_v2.h,144 :: 		long    bufferLong[4]={0,0,0,0}, lectura = 0;
0x0524	0x0102      	MOVLB       2
0x0526	0x6B39      	CLRF        eepromLeeNumero_bufferLong_L0, 1
0x0528	0x6B3A      	CLRF        eepromLeeNumero_bufferLong_L0+1, 1
0x052A	0x6B3B      	CLRF        eepromLeeNumero_bufferLong_L0+2, 1
0x052C	0x6B3C      	CLRF        eepromLeeNumero_bufferLong_L0+3, 1
0x052E	0x6B3D      	CLRF        eepromLeeNumero_bufferLong_L0+4, 1
0x0530	0x6B3E      	CLRF        eepromLeeNumero_bufferLong_L0+5, 1
0x0532	0x6B3F      	CLRF        eepromLeeNumero_bufferLong_L0+6, 1
0x0534	0x6B40      	CLRF        eepromLeeNumero_bufferLong_L0+7, 1
0x0536	0x6B41      	CLRF        eepromLeeNumero_bufferLong_L0+8, 1
0x0538	0x6B42      	CLRF        eepromLeeNumero_bufferLong_L0+9, 1
0x053A	0x6B43      	CLRF        eepromLeeNumero_bufferLong_L0+10, 1
0x053C	0x6B44      	CLRF        eepromLeeNumero_bufferLong_L0+11, 1
0x053E	0x6B45      	CLRF        eepromLeeNumero_bufferLong_L0+12, 1
0x0540	0x6B46      	CLRF        eepromLeeNumero_bufferLong_L0+13, 1
0x0542	0x6B47      	CLRF        eepromLeeNumero_bufferLong_L0+14, 1
0x0544	0x6B48      	CLRF        eepromLeeNumero_bufferLong_L0+15, 1
0x0546	0x6B49      	CLRF        eepromLeeNumero_lectura_L0, 1
0x0548	0x6B4A      	CLRF        eepromLeeNumero_lectura_L0+1, 1
0x054A	0x6B4B      	CLRF        eepromLeeNumero_lectura_L0+2, 1
0x054C	0x6B4C      	CLRF        eepromLeeNumero_lectura_L0+3, 1
;eepromi2cbrian_v2.h,145 :: 		RW = LEE;
0x054E	0x0E01      	MOVLW       1
0x0550	0x6E5A      	MOVWF       _RW 
;eepromi2cbrian_v2.h,146 :: 		if(BYTES == 1){
0x0552	0x5138      	MOVF        FARG_eepromLeeNumero_BYTES, 0, 1
0x0554	0x0A01      	XORLW       1
0x0556	0xE137      	BNZ         L_eepromLeeNumero155
;eepromi2cbrian_v2.h,147 :: 		I2C_soft_start();
0x0558	0xDDEF      	RCALL       _I2C_soft_start
;eepromi2cbrian_v2.h,148 :: 		I2C_soft_write(EEPROM_DIR_24LC256);
0x055A	0x0EA0      	MOVLW       160
0x055C	0x6F50      	MOVWF       FARG_I2C_soft_write_dato, 1
0x055E	0xDDC0      	RCALL       _I2C_soft_write
;eepromi2cbrian_v2.h,149 :: 		I2C_soft_write((registro & BYTE_ALTO)>>8);
0x0560	0x0E00      	MOVLW       0
0x0562	0x0102      	MOVLB       2
0x0564	0x1536      	ANDWF       FARG_eepromLeeNumero_registro, 0, 1
0x0566	0x6E03      	MOVWF       R3 
0x0568	0x5137      	MOVF        FARG_eepromLeeNumero_registro+1, 0, 1
0x056A	0x0BFF      	ANDLW       255
0x056C	0x6E04      	MOVWF       R4 
0x056E	0xF000C004  	MOVFF       R4, R0
0x0572	0x6A01      	CLRF        R1 
0x0574	0xF250C000  	MOVFF       R0, FARG_I2C_soft_write_dato
0x0578	0xDDB3      	RCALL       _I2C_soft_write
;eepromi2cbrian_v2.h,150 :: 		I2C_soft_write(registro & BYTE_BAJO);
0x057A	0x0EFF      	MOVLW       255
0x057C	0x0102      	MOVLB       2
0x057E	0x1536      	ANDWF       FARG_eepromLeeNumero_registro, 0, 1
0x0580	0x6F50      	MOVWF       FARG_I2C_soft_write_dato, 1
0x0582	0xDDAE      	RCALL       _I2C_soft_write
;eepromi2cbrian_v2.h,151 :: 		I2C_soft_start();
0x0584	0xDDD9      	RCALL       _I2C_soft_start
;eepromi2cbrian_v2.h,152 :: 		I2C_soft_write(EEPROM_DIR_24LC256 | RW);
0x0586	0x0EA0      	MOVLW       160
0x0588	0x105A      	IORWF       _RW, 0 
0x058A	0x0102      	MOVLB       2
0x058C	0x6F50      	MOVWF       FARG_I2C_soft_write_dato, 1
0x058E	0xDDA8      	RCALL       _I2C_soft_write
;eepromi2cbrian_v2.h,153 :: 		bufferLong[0] = I2C_soft_read(NACK);
0x0590	0x0102      	MOVLB       2
0x0592	0x6B50      	CLRF        FARG_I2C_soft_read_ACK, 1
0x0594	0xDD7E      	RCALL       _I2C_soft_read
0x0596	0xF239C000  	MOVFF       R0, eepromLeeNumero_bufferLong_L0
0x059A	0x0E00      	MOVLW       0
0x059C	0x6F3A      	MOVWF       eepromLeeNumero_bufferLong_L0+1, 1
0x059E	0x6F3B      	MOVWF       eepromLeeNumero_bufferLong_L0+2, 1
0x05A0	0x6F3C      	MOVWF       eepromLeeNumero_bufferLong_L0+3, 1
;eepromi2cbrian_v2.h,154 :: 		I2C_soft_stop();
0x05A2	0xDDF6      	RCALL       _I2C_soft_stop
;eepromi2cbrian_v2.h,156 :: 		return lectura = bufferLong[0];
0x05A4	0xF249C239  	MOVFF       eepromLeeNumero_bufferLong_L0, eepromLeeNumero_lectura_L0
0x05A8	0xF24AC23A  	MOVFF       eepromLeeNumero_bufferLong_L0+1, eepromLeeNumero_lectura_L0+1
0x05AC	0xF24BC23B  	MOVFF       eepromLeeNumero_bufferLong_L0+2, eepromLeeNumero_lectura_L0+2
0x05B0	0xF24CC23C  	MOVFF       eepromLeeNumero_bufferLong_L0+3, eepromLeeNumero_lectura_L0+3
0x05B4	0xF000C239  	MOVFF       eepromLeeNumero_bufferLong_L0, R0
0x05B8	0xF001C23A  	MOVFF       eepromLeeNumero_bufferLong_L0+1, R1
0x05BC	0xF002C23B  	MOVFF       eepromLeeNumero_bufferLong_L0+2, R2
0x05C0	0xF003C23C  	MOVFF       eepromLeeNumero_bufferLong_L0+3, R3
0x05C4	0xD16F      	BRA         L_end_eepromLeeNumero
;eepromi2cbrian_v2.h,157 :: 		}
L_eepromLeeNumero155:
;eepromi2cbrian_v2.h,159 :: 		if(BYTES == 2){
0x05C6	0x5138      	MOVF        FARG_eepromLeeNumero_BYTES, 0, 1
0x05C8	0x0A02      	XORLW       2
0x05CA	0xA4D8      	BTFSS       STATUS, 2 
0x05CC	0xD089      	BRA         L_eepromLeeNumero156
;eepromi2cbrian_v2.h,160 :: 		I2C_soft_start();
0x05CE	0xDDB4      	RCALL       _I2C_soft_start
;eepromi2cbrian_v2.h,161 :: 		I2C_soft_write(EEPROM_DIR_24LC256);
0x05D0	0x0EA0      	MOVLW       160
0x05D2	0x6F50      	MOVWF       FARG_I2C_soft_write_dato, 1
0x05D4	0xDD85      	RCALL       _I2C_soft_write
;eepromi2cbrian_v2.h,162 :: 		I2C_soft_write((registro & BYTE_ALTO)>>8);
0x05D6	0x0E00      	MOVLW       0
0x05D8	0x0102      	MOVLB       2
0x05DA	0x1536      	ANDWF       FARG_eepromLeeNumero_registro, 0, 1
0x05DC	0x6E03      	MOVWF       R3 
0x05DE	0x5137      	MOVF        FARG_eepromLeeNumero_registro+1, 0, 1
0x05E0	0x0BFF      	ANDLW       255
0x05E2	0x6E04      	MOVWF       R4 
0x05E4	0xF000C004  	MOVFF       R4, R0
0x05E8	0x6A01      	CLRF        R1 
0x05EA	0xF250C000  	MOVFF       R0, FARG_I2C_soft_write_dato
0x05EE	0xDD78      	RCALL       _I2C_soft_write
;eepromi2cbrian_v2.h,163 :: 		I2C_soft_write(registro & BYTE_BAJO);
0x05F0	0x0EFF      	MOVLW       255
0x05F2	0x0102      	MOVLB       2
0x05F4	0x1536      	ANDWF       FARG_eepromLeeNumero_registro, 0, 1
0x05F6	0x6F50      	MOVWF       FARG_I2C_soft_write_dato, 1
0x05F8	0xDD73      	RCALL       _I2C_soft_write
;eepromi2cbrian_v2.h,164 :: 		I2C_soft_start();
0x05FA	0xDD9E      	RCALL       _I2C_soft_start
;eepromi2cbrian_v2.h,165 :: 		I2C_soft_write(EEPROM_DIR_24LC256 | RW);
0x05FC	0x0EA0      	MOVLW       160
0x05FE	0x105A      	IORWF       _RW, 0 
0x0600	0x0102      	MOVLB       2
0x0602	0x6F50      	MOVWF       FARG_I2C_soft_write_dato, 1
0x0604	0xDD6D      	RCALL       _I2C_soft_write
;eepromi2cbrian_v2.h,166 :: 		for(i = 0;i < 2;i++){
0x0606	0x0102      	MOVLB       2
0x0608	0x6B4D      	CLRF        eepromLeeNumero_i_L0, 1
L_eepromLeeNumero157:
0x060A	0x0E80      	MOVLW       128
0x060C	0x194D      	XORWF       eepromLeeNumero_i_L0, 0, 1
0x060E	0x6E00      	MOVWF       R0 
0x0610	0x0E80      	MOVLW       128
0x0612	0x0A02      	XORLW       2
0x0614	0x5C00      	SUBWF       R0, 0 
0x0616	0xE244      	BC          L_eepromLeeNumero158
;eepromi2cbrian_v2.h,167 :: 		if(i == 2 - 1){
0x0618	0x514D      	MOVF        eepromLeeNumero_i_L0, 0, 1
0x061A	0x0A01      	XORLW       1
0x061C	0xE120      	BNZ         L_eepromLeeNumero160
;eepromi2cbrian_v2.h,168 :: 		bufferLong[i] = I2C_soft_read(NACK);
0x061E	0xF000C24D  	MOVFF       eepromLeeNumero_i_L0, R0
0x0622	0x0E00      	MOVLW       0
0x0624	0xBF4D      	BTFSC       eepromLeeNumero_i_L0, 7, 1
0x0626	0x0EFF      	MOVLW       255
0x0628	0x6E01      	MOVWF       R1 
0x062A	0x3600      	RLCF        R0, 1 
0x062C	0x9000      	BCF         R0, 0 
0x062E	0x3601      	RLCF        R1, 1 
0x0630	0x3600      	RLCF        R0, 1 
0x0632	0x9000      	BCF         R0, 0 
0x0634	0x3601      	RLCF        R1, 1 
0x0636	0x0E39      	MOVLW       eepromLeeNumero_bufferLong_L0
0x0638	0x2400      	ADDWF       R0, 0 
0x063A	0x6F4E      	MOVWF       FLOC__eepromLeeNumero, 1
0x063C	0x0E02      	MOVLW       hi_addr(eepromLeeNumero_bufferLong_L0)
0x063E	0x2001      	ADDWFC      R1, 0 
0x0640	0x6F4F      	MOVWF       FLOC__eepromLeeNumero+1, 1
0x0642	0x6B50      	CLRF        FARG_I2C_soft_read_ACK, 1
0x0644	0xDD26      	RCALL       _I2C_soft_read
0x0646	0xFFE1C24E  	MOVFF       FLOC__eepromLeeNumero, FSR1L
0x064A	0xFFE2C24F  	MOVFF       FLOC__eepromLeeNumero+1, FSR1H
0x064E	0xFFE6C000  	MOVFF       R0, POSTINC1
0x0652	0x0E00      	MOVLW       0
0x0654	0x6EE6      	MOVWF       POSTINC1 
0x0656	0x6EE6      	MOVWF       POSTINC1 
0x0658	0x6EE6      	MOVWF       POSTINC1 
;eepromi2cbrian_v2.h,169 :: 		I2C_soft_stop();
0x065A	0xDD9A      	RCALL       _I2C_soft_stop
;eepromi2cbrian_v2.h,170 :: 		}
0x065C	0xD01F      	BRA         L_eepromLeeNumero161
L_eepromLeeNumero160:
;eepromi2cbrian_v2.h,172 :: 		bufferLong[i] = I2C_soft_read(ACK);
0x065E	0xF000C24D  	MOVFF       eepromLeeNumero_i_L0, R0
0x0662	0x0E00      	MOVLW       0
0x0664	0xBF4D      	BTFSC       eepromLeeNumero_i_L0, 7, 1
0x0666	0x0EFF      	MOVLW       255
0x0668	0x6E01      	MOVWF       R1 
0x066A	0x3600      	RLCF        R0, 1 
0x066C	0x9000      	BCF         R0, 0 
0x066E	0x3601      	RLCF        R1, 1 
0x0670	0x3600      	RLCF        R0, 1 
0x0672	0x9000      	BCF         R0, 0 
0x0674	0x3601      	RLCF        R1, 1 
0x0676	0x0E39      	MOVLW       eepromLeeNumero_bufferLong_L0
0x0678	0x2400      	ADDWF       R0, 0 
0x067A	0x6F4E      	MOVWF       FLOC__eepromLeeNumero, 1
0x067C	0x0E02      	MOVLW       hi_addr(eepromLeeNumero_bufferLong_L0)
0x067E	0x2001      	ADDWFC      R1, 0 
0x0680	0x6F4F      	MOVWF       FLOC__eepromLeeNumero+1, 1
0x0682	0x0E01      	MOVLW       1
0x0684	0x6F50      	MOVWF       FARG_I2C_soft_read_ACK, 1
0x0686	0xDD05      	RCALL       _I2C_soft_read
0x0688	0xFFE1C24E  	MOVFF       FLOC__eepromLeeNumero, FSR1L
0x068C	0xFFE2C24F  	MOVFF       FLOC__eepromLeeNumero+1, FSR1H
0x0690	0xFFE6C000  	MOVFF       R0, POSTINC1
0x0694	0x0E00      	MOVLW       0
0x0696	0x6EE6      	MOVWF       POSTINC1 
0x0698	0x6EE6      	MOVWF       POSTINC1 
0x069A	0x6EE6      	MOVWF       POSTINC1 
;eepromi2cbrian_v2.h,173 :: 		}
L_eepromLeeNumero161:
;eepromi2cbrian_v2.h,166 :: 		for(i = 0;i < 2;i++){
0x069C	0x2B4D      	INCF        eepromLeeNumero_i_L0, 1, 1
;eepromi2cbrian_v2.h,174 :: 		}
0x069E	0xD7B5      	BRA         L_eepromLeeNumero157
L_eepromLeeNumero158:
;eepromi2cbrian_v2.h,175 :: 		lectura = bufferLong[0];
0x06A0	0xF249C239  	MOVFF       eepromLeeNumero_bufferLong_L0, eepromLeeNumero_lectura_L0
0x06A4	0xF24AC23A  	MOVFF       eepromLeeNumero_bufferLong_L0+1, eepromLeeNumero_lectura_L0+1
0x06A8	0xF24BC23B  	MOVFF       eepromLeeNumero_bufferLong_L0+2, eepromLeeNumero_lectura_L0+2
0x06AC	0xF24CC23C  	MOVFF       eepromLeeNumero_bufferLong_L0+3, eepromLeeNumero_lectura_L0+3
;eepromi2cbrian_v2.h,176 :: 		return lectura |= bufferLong[1]<<8;
0x06B0	0xF003C23F  	MOVFF       eepromLeeNumero_bufferLong_L0+6, R3
0x06B4	0xF002C23E  	MOVFF       eepromLeeNumero_bufferLong_L0+5, R2
0x06B8	0xF001C23D  	MOVFF       eepromLeeNumero_bufferLong_L0+4, R1
0x06BC	0x6A00      	CLRF        R0 
0x06BE	0x5139      	MOVF        eepromLeeNumero_bufferLong_L0, 0, 1
0x06C0	0x1200      	IORWF       R0, 1 
0x06C2	0x513A      	MOVF        eepromLeeNumero_bufferLong_L0+1, 0, 1
0x06C4	0x1201      	IORWF       R1, 1 
0x06C6	0x513B      	MOVF        eepromLeeNumero_bufferLong_L0+2, 0, 1
0x06C8	0x1202      	IORWF       R2, 1 
0x06CA	0x513C      	MOVF        eepromLeeNumero_bufferLong_L0+3, 0, 1
0x06CC	0x1203      	IORWF       R3, 1 
0x06CE	0xF249C000  	MOVFF       R0, eepromLeeNumero_lectura_L0
0x06D2	0xF24AC001  	MOVFF       R1, eepromLeeNumero_lectura_L0+1
0x06D6	0xF24BC002  	MOVFF       R2, eepromLeeNumero_lectura_L0+2
0x06DA	0xF24CC003  	MOVFF       R3, eepromLeeNumero_lectura_L0+3
0x06DE	0xD0E2      	BRA         L_end_eepromLeeNumero
;eepromi2cbrian_v2.h,177 :: 		}
L_eepromLeeNumero156:
;eepromi2cbrian_v2.h,179 :: 		if(BYTES == 4){
0x06E0	0x5138      	MOVF        FARG_eepromLeeNumero_BYTES, 0, 1
0x06E2	0x0A04      	XORLW       4
0x06E4	0xA4D8      	BTFSS       STATUS, 2 
0x06E6	0xD0DE      	BRA         L_eepromLeeNumero162
;eepromi2cbrian_v2.h,180 :: 		I2C_soft_start();
0x06E8	0xDD27      	RCALL       _I2C_soft_start
;eepromi2cbrian_v2.h,181 :: 		I2C_soft_write(EEPROM_DIR_24LC256);
0x06EA	0x0EA0      	MOVLW       160
0x06EC	0x6F50      	MOVWF       FARG_I2C_soft_write_dato, 1
0x06EE	0xDCF8      	RCALL       _I2C_soft_write
;eepromi2cbrian_v2.h,182 :: 		I2C_soft_write((registro & BYTE_ALTO)>>8);
0x06F0	0x0E00      	MOVLW       0
0x06F2	0x0102      	MOVLB       2
0x06F4	0x1536      	ANDWF       FARG_eepromLeeNumero_registro, 0, 1
0x06F6	0x6E03      	MOVWF       R3 
0x06F8	0x5137      	MOVF        FARG_eepromLeeNumero_registro+1, 0, 1
0x06FA	0x0BFF      	ANDLW       255
0x06FC	0x6E04      	MOVWF       R4 
0x06FE	0xF000C004  	MOVFF       R4, R0
0x0702	0x6A01      	CLRF        R1 
0x0704	0xF250C000  	MOVFF       R0, FARG_I2C_soft_write_dato
0x0708	0xDCEB      	RCALL       _I2C_soft_write
;eepromi2cbrian_v2.h,183 :: 		I2C_soft_write(registro & BYTE_BAJO);
0x070A	0x0EFF      	MOVLW       255
0x070C	0x0102      	MOVLB       2
0x070E	0x1536      	ANDWF       FARG_eepromLeeNumero_registro, 0, 1
0x0710	0x6F50      	MOVWF       FARG_I2C_soft_write_dato, 1
0x0712	0xDCE6      	RCALL       _I2C_soft_write
;eepromi2cbrian_v2.h,184 :: 		I2C_soft_start();
0x0714	0xDD11      	RCALL       _I2C_soft_start
;eepromi2cbrian_v2.h,185 :: 		I2C_soft_write(EEPROM_DIR_24LC256 | RW);
0x0716	0x0EA0      	MOVLW       160
0x0718	0x105A      	IORWF       _RW, 0 
0x071A	0x0102      	MOVLB       2
0x071C	0x6F50      	MOVWF       FARG_I2C_soft_write_dato, 1
0x071E	0xDCE0      	RCALL       _I2C_soft_write
;eepromi2cbrian_v2.h,186 :: 		for(i = 0;i < 4;i++){
0x0720	0x0102      	MOVLB       2
0x0722	0x6B4D      	CLRF        eepromLeeNumero_i_L0, 1
L_eepromLeeNumero163:
0x0724	0x0E80      	MOVLW       128
0x0726	0x194D      	XORWF       eepromLeeNumero_i_L0, 0, 1
0x0728	0x6E00      	MOVWF       R0 
0x072A	0x0E80      	MOVLW       128
0x072C	0x0A04      	XORLW       4
0x072E	0x5C00      	SUBWF       R0, 0 
0x0730	0xE244      	BC          L_eepromLeeNumero164
;eepromi2cbrian_v2.h,187 :: 		if(i == 4 - 1){
0x0732	0x514D      	MOVF        eepromLeeNumero_i_L0, 0, 1
0x0734	0x0A03      	XORLW       3
0x0736	0xE120      	BNZ         L_eepromLeeNumero166
;eepromi2cbrian_v2.h,188 :: 		bufferLong[i] = I2C_soft_read(NACK);
0x0738	0xF000C24D  	MOVFF       eepromLeeNumero_i_L0, R0
0x073C	0x0E00      	MOVLW       0
0x073E	0xBF4D      	BTFSC       eepromLeeNumero_i_L0, 7, 1
0x0740	0x0EFF      	MOVLW       255
0x0742	0x6E01      	MOVWF       R1 
0x0744	0x3600      	RLCF        R0, 1 
0x0746	0x9000      	BCF         R0, 0 
0x0748	0x3601      	RLCF        R1, 1 
0x074A	0x3600      	RLCF        R0, 1 
0x074C	0x9000      	BCF         R0, 0 
0x074E	0x3601      	RLCF        R1, 1 
0x0750	0x0E39      	MOVLW       eepromLeeNumero_bufferLong_L0
0x0752	0x2400      	ADDWF       R0, 0 
0x0754	0x6F4E      	MOVWF       FLOC__eepromLeeNumero, 1
0x0756	0x0E02      	MOVLW       hi_addr(eepromLeeNumero_bufferLong_L0)
0x0758	0x2001      	ADDWFC      R1, 0 
0x075A	0x6F4F      	MOVWF       FLOC__eepromLeeNumero+1, 1
0x075C	0x6B50      	CLRF        FARG_I2C_soft_read_ACK, 1
0x075E	0xDC99      	RCALL       _I2C_soft_read
0x0760	0xFFE1C24E  	MOVFF       FLOC__eepromLeeNumero, FSR1L
0x0764	0xFFE2C24F  	MOVFF       FLOC__eepromLeeNumero+1, FSR1H
0x0768	0xFFE6C000  	MOVFF       R0, POSTINC1
0x076C	0x0E00      	MOVLW       0
0x076E	0x6EE6      	MOVWF       POSTINC1 
0x0770	0x6EE6      	MOVWF       POSTINC1 
0x0772	0x6EE6      	MOVWF       POSTINC1 
;eepromi2cbrian_v2.h,189 :: 		I2C_soft_stop();
0x0774	0xDD0D      	RCALL       _I2C_soft_stop
;eepromi2cbrian_v2.h,190 :: 		}
0x0776	0xD01F      	BRA         L_eepromLeeNumero167
L_eepromLeeNumero166:
;eepromi2cbrian_v2.h,192 :: 		bufferLong[i] = I2C_soft_read(ACK);
0x0778	0xF000C24D  	MOVFF       eepromLeeNumero_i_L0, R0
0x077C	0x0E00      	MOVLW       0
0x077E	0xBF4D      	BTFSC       eepromLeeNumero_i_L0, 7, 1
0x0780	0x0EFF      	MOVLW       255
0x0782	0x6E01      	MOVWF       R1 
0x0784	0x3600      	RLCF        R0, 1 
0x0786	0x9000      	BCF         R0, 0 
0x0788	0x3601      	RLCF        R1, 1 
0x078A	0x3600      	RLCF        R0, 1 
0x078C	0x9000      	BCF         R0, 0 
0x078E	0x3601      	RLCF        R1, 1 
0x0790	0x0E39      	MOVLW       eepromLeeNumero_bufferLong_L0
0x0792	0x2400      	ADDWF       R0, 0 
0x0794	0x6F4E      	MOVWF       FLOC__eepromLeeNumero, 1
0x0796	0x0E02      	MOVLW       hi_addr(eepromLeeNumero_bufferLong_L0)
0x0798	0x2001      	ADDWFC      R1, 0 
0x079A	0x6F4F      	MOVWF       FLOC__eepromLeeNumero+1, 1
0x079C	0x0E01      	MOVLW       1
0x079E	0x6F50      	MOVWF       FARG_I2C_soft_read_ACK, 1
0x07A0	0xDC78      	RCALL       _I2C_soft_read
0x07A2	0xFFE1C24E  	MOVFF       FLOC__eepromLeeNumero, FSR1L
0x07A6	0xFFE2C24F  	MOVFF       FLOC__eepromLeeNumero+1, FSR1H
0x07AA	0xFFE6C000  	MOVFF       R0, POSTINC1
0x07AE	0x0E00      	MOVLW       0
0x07B0	0x6EE6      	MOVWF       POSTINC1 
0x07B2	0x6EE6      	MOVWF       POSTINC1 
0x07B4	0x6EE6      	MOVWF       POSTINC1 
;eepromi2cbrian_v2.h,193 :: 		}
L_eepromLeeNumero167:
;eepromi2cbrian_v2.h,186 :: 		for(i = 0;i < 4;i++){
0x07B6	0x2B4D      	INCF        eepromLeeNumero_i_L0, 1, 1
;eepromi2cbrian_v2.h,194 :: 		}
0x07B8	0xD7B5      	BRA         L_eepromLeeNumero163
L_eepromLeeNumero164:
;eepromi2cbrian_v2.h,195 :: 		for(i = 0;i < 4;i++){
0x07BA	0x6B4D      	CLRF        eepromLeeNumero_i_L0, 1
L_eepromLeeNumero168:
0x07BC	0x0E80      	MOVLW       128
0x07BE	0x194D      	XORWF       eepromLeeNumero_i_L0, 0, 1
0x07C0	0x6E00      	MOVWF       R0 
0x07C2	0x0E80      	MOVLW       128
0x07C4	0x0A04      	XORLW       4
0x07C6	0x5C00      	SUBWF       R0, 0 
0x07C8	0xE264      	BC          L_eepromLeeNumero169
;eepromi2cbrian_v2.h,196 :: 		if(i==0){
0x07CA	0x514D      	MOVF        eepromLeeNumero_i_L0, 0, 1
0x07CC	0x0A00      	XORLW       0
0x07CE	0xE11B      	BNZ         L_eepromLeeNumero171
;eepromi2cbrian_v2.h,197 :: 		lectura = bufferLong[i];
0x07D0	0xF000C24D  	MOVFF       eepromLeeNumero_i_L0, R0
0x07D4	0x0E00      	MOVLW       0
0x07D6	0xBF4D      	BTFSC       eepromLeeNumero_i_L0, 7, 1
0x07D8	0x0EFF      	MOVLW       255
0x07DA	0x6E01      	MOVWF       R1 
0x07DC	0x3600      	RLCF        R0, 1 
0x07DE	0x9000      	BCF         R0, 0 
0x07E0	0x3601      	RLCF        R1, 1 
0x07E2	0x3600      	RLCF        R0, 1 
0x07E4	0x9000      	BCF         R0, 0 
0x07E6	0x3601      	RLCF        R1, 1 
0x07E8	0x0E39      	MOVLW       eepromLeeNumero_bufferLong_L0
0x07EA	0x2400      	ADDWF       R0, 0 
0x07EC	0x6EE9      	MOVWF       FSR0L 
0x07EE	0x0E02      	MOVLW       hi_addr(eepromLeeNumero_bufferLong_L0)
0x07F0	0x2001      	ADDWFC      R1, 0 
0x07F2	0x6EEA      	MOVWF       FSR0H 
0x07F4	0xF249CFEE  	MOVFF       POSTINC0, eepromLeeNumero_lectura_L0
0x07F8	0xF24ACFEE  	MOVFF       POSTINC0, eepromLeeNumero_lectura_L0+1
0x07FC	0xF24BCFEE  	MOVFF       POSTINC0, eepromLeeNumero_lectura_L0+2
0x0800	0xF24CCFEE  	MOVFF       POSTINC0, eepromLeeNumero_lectura_L0+3
;eepromi2cbrian_v2.h,198 :: 		}
0x0804	0xD044      	BRA         L_eepromLeeNumero172
L_eepromLeeNumero171:
;eepromi2cbrian_v2.h,200 :: 		lectura |= bufferLong[i] << 8*i;
0x0806	0xF000C24D  	MOVFF       eepromLeeNumero_i_L0, R0
0x080A	0x0E00      	MOVLW       0
0x080C	0xBF4D      	BTFSC       eepromLeeNumero_i_L0, 7, 1
0x080E	0x0EFF      	MOVLW       255
0x0810	0x6E01      	MOVWF       R1 
0x0812	0x3600      	RLCF        R0, 1 
0x0814	0x9000      	BCF         R0, 0 
0x0816	0x3601      	RLCF        R1, 1 
0x0818	0x3600      	RLCF        R0, 1 
0x081A	0x9000      	BCF         R0, 0 
0x081C	0x3601      	RLCF        R1, 1 
0x081E	0x0E39      	MOVLW       eepromLeeNumero_bufferLong_L0
0x0820	0x2400      	ADDWF       R0, 0 
0x0822	0x6EE9      	MOVWF       FSR0L 
0x0824	0x0E02      	MOVLW       hi_addr(eepromLeeNumero_bufferLong_L0)
0x0826	0x2001      	ADDWFC      R1, 0 
0x0828	0x6EEA      	MOVWF       FSR0H 
0x082A	0xF005CFEE  	MOVFF       POSTINC0, R5
0x082E	0xF006CFEE  	MOVFF       POSTINC0, R6
0x0832	0xF007CFEE  	MOVFF       POSTINC0, R7
0x0836	0xF008CFEE  	MOVFF       POSTINC0, R8
0x083A	0x0E03      	MOVLW       3
0x083C	0x6E02      	MOVWF       R2 
0x083E	0xF000C24D  	MOVFF       eepromLeeNumero_i_L0, R0
0x0842	0x0E00      	MOVLW       0
0x0844	0xBF4D      	BTFSC       eepromLeeNumero_i_L0, 7, 1
0x0846	0x0EFF      	MOVLW       255
0x0848	0x6E01      	MOVWF       R1 
0x084A	0x5002      	MOVF        R2, 0 
L__eepromLeeNumero715:
0x084C	0xE005      	BZ          L__eepromLeeNumero716
0x084E	0x3600      	RLCF        R0, 1 
0x0850	0x9000      	BCF         R0, 0 
0x0852	0x3601      	RLCF        R1, 1 
0x0854	0x0FFF      	ADDLW       255
0x0856	0xD7FA      	BRA         L__eepromLeeNumero715
L__eepromLeeNumero716:
0x0858	0xF004C000  	MOVFF       R0, R4
0x085C	0xF000C005  	MOVFF       R5, R0
0x0860	0xF001C006  	MOVFF       R6, R1
0x0864	0xF002C007  	MOVFF       R7, R2
0x0868	0xF003C008  	MOVFF       R8, R3
0x086C	0x5004      	MOVF        R4, 0 
L__eepromLeeNumero717:
0x086E	0xE007      	BZ          L__eepromLeeNumero718
0x0870	0x3600      	RLCF        R0, 1 
0x0872	0x9000      	BCF         R0, 0 
0x0874	0x3601      	RLCF        R1, 1 
0x0876	0x3602      	RLCF        R2, 1 
0x0878	0x3603      	RLCF        R3, 1 
0x087A	0x0FFF      	ADDLW       255
0x087C	0xD7F8      	BRA         L__eepromLeeNumero717
L__eepromLeeNumero718:
0x087E	0x5000      	MOVF        R0, 0 
0x0880	0x1349      	IORWF       eepromLeeNumero_lectura_L0, 1, 1
0x0882	0x5001      	MOVF        R1, 0 
0x0884	0x134A      	IORWF       eepromLeeNumero_lectura_L0+1, 1, 1
0x0886	0x5002      	MOVF        R2, 0 
0x0888	0x134B      	IORWF       eepromLeeNumero_lectura_L0+2, 1, 1
0x088A	0x5003      	MOVF        R3, 0 
0x088C	0x134C      	IORWF       eepromLeeNumero_lectura_L0+3, 1, 1
;eepromi2cbrian_v2.h,201 :: 		}
L_eepromLeeNumero172:
;eepromi2cbrian_v2.h,195 :: 		for(i = 0;i < 4;i++){
0x088E	0x2B4D      	INCF        eepromLeeNumero_i_L0, 1, 1
;eepromi2cbrian_v2.h,202 :: 		}
0x0890	0xD795      	BRA         L_eepromLeeNumero168
L_eepromLeeNumero169:
;eepromi2cbrian_v2.h,203 :: 		return lectura;
0x0892	0xF000C249  	MOVFF       eepromLeeNumero_lectura_L0, R0
0x0896	0xF001C24A  	MOVFF       eepromLeeNumero_lectura_L0+1, R1
0x089A	0xF002C24B  	MOVFF       eepromLeeNumero_lectura_L0+2, R2
0x089E	0xF003C24C  	MOVFF       eepromLeeNumero_lectura_L0+3, R3
0x08A2	0xD000      	BRA         L_end_eepromLeeNumero
;eepromi2cbrian_v2.h,204 :: 		}
L_eepromLeeNumero162:
;eepromi2cbrian_v2.h,205 :: 		}
L_end_eepromLeeNumero:
0x08A4	0x0012      	RETURN      0
; end of _eepromLeeNumero
_ByteToStr:
;__Lib_Conversions.c,66 :: 		
;__Lib_Conversions.c,69 :: 		
0x08A6	0x0102      	MOVLB       2
0x08A8	0x6B39      	CLRF        ByteToStr_DigitPos_L0, 1
L_ByteToStr0:
0x08AA	0x0E03      	MOVLW       3
0x08AC	0x5D39      	SUBWF       ByteToStr_DigitPos_L0, 0, 1
0x08AE	0xE20A      	BC          L_ByteToStr1
;__Lib_Conversions.c,70 :: 		
0x08B0	0x5139      	MOVF        ByteToStr_DigitPos_L0, 0, 1
0x08B2	0x2537      	ADDWF       FARG_ByteToStr_output, 0, 1
0x08B4	0x6EE1      	MOVWF       FSR1L 
0x08B6	0x0E00      	MOVLW       0
0x08B8	0x2138      	ADDWFC      FARG_ByteToStr_output+1, 0, 1
0x08BA	0x6EE2      	MOVWF       FSR1H 
0x08BC	0x0E20      	MOVLW       32
0x08BE	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Conversions.c,69 :: 		
0x08C0	0x2B39      	INCF        ByteToStr_DigitPos_L0, 1, 1
;__Lib_Conversions.c,70 :: 		
0x08C2	0xD7F3      	BRA         L_ByteToStr0
L_ByteToStr1:
;__Lib_Conversions.c,72 :: 		
0x08C4	0x5139      	MOVF        ByteToStr_DigitPos_L0, 0, 1
0x08C6	0x2537      	ADDWF       FARG_ByteToStr_output, 0, 1
0x08C8	0x6EE1      	MOVWF       FSR1L 
0x08CA	0x0E00      	MOVLW       0
0x08CC	0x2138      	ADDWFC      FARG_ByteToStr_output+1, 0, 1
0x08CE	0x6EE2      	MOVWF       FSR1H 
0x08D0	0x6AE6      	CLRF        POSTINC1 
0x08D2	0x0739      	DECF        ByteToStr_DigitPos_L0, 1, 1
;__Lib_Conversions.c,74 :: 		
L_ByteToStr3:
;__Lib_Conversions.c,75 :: 		
0x08D4	0x5139      	MOVF        ByteToStr_DigitPos_L0, 0, 1
0x08D6	0x2537      	ADDWF       FARG_ByteToStr_output, 0, 1
0x08D8	0x6F3A      	MOVWF       FLOC__ByteToStr, 1
0x08DA	0x0E00      	MOVLW       0
0x08DC	0x2138      	ADDWFC      FARG_ByteToStr_output+1, 0, 1
0x08DE	0x6F3B      	MOVWF       FLOC__ByteToStr+1, 1
0x08E0	0x0E0A      	MOVLW       10
0x08E2	0x6E04      	MOVWF       R4 
0x08E4	0xF000C236  	MOVFF       FARG_ByteToStr_input, R0
0x08E8	0xDC60      	RCALL       _Div_8x8_U
0x08EA	0xF000C008  	MOVFF       R8, R0
0x08EE	0x0E30      	MOVLW       48
0x08F0	0x2600      	ADDWF       R0, 1 
0x08F2	0xFFE1C23A  	MOVFF       FLOC__ByteToStr, FSR1L
0x08F6	0xFFE2C23B  	MOVFF       FLOC__ByteToStr+1, FSR1H
0x08FA	0xFFE6C000  	MOVFF       R0, POSTINC1
;__Lib_Conversions.c,76 :: 		
0x08FE	0x0E0A      	MOVLW       10
0x0900	0x6E04      	MOVWF       R4 
0x0902	0xF000C236  	MOVFF       FARG_ByteToStr_input, R0
0x0906	0xDC51      	RCALL       _Div_8x8_U
0x0908	0xF236C000  	MOVFF       R0, FARG_ByteToStr_input
;__Lib_Conversions.c,77 :: 		
0x090C	0x5000      	MOVF        R0, 0 
0x090E	0x0A00      	XORLW       0
0x0910	0xE101      	BNZ         L_ByteToStr5
;__Lib_Conversions.c,78 :: 		
0x0912	0xD002      	BRA         L_ByteToStr4
L_ByteToStr5:
;__Lib_Conversions.c,79 :: 		
0x0914	0x0739      	DECF        ByteToStr_DigitPos_L0, 1, 1
;__Lib_Conversions.c,80 :: 		
0x0916	0xD7DE      	BRA         L_ByteToStr3
L_ByteToStr4:
;__Lib_Conversions.c,81 :: 		
L_end_ByteToStr:
0x0918	0x0012      	RETURN      0
; end of _ByteToStr
_Add_32x32_FP:
;__Lib_MathDouble.c,563 :: 		
;__Lib_MathDouble.c,578 :: 		
0x091A	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,579 :: 		
0x091C	0x1806      	XORWF       R6, 0, 0
;__Lib_MathDouble.c,580 :: 		
0x091E	0x6E0E      	MOVWF       R14, 0
;__Lib_MathDouble.c,582 :: 		
0x0920	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,583 :: 		
0x0922	0x6A09      	CLRF        R9, 0
;__Lib_MathDouble.c,584 :: 		
0x0924	0x6A0B      	CLRF        R11, 0
;__Lib_MathDouble.c,586 :: 		
0x0926	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,587 :: 		
0x0928	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,588 :: 		
0x092A	0xF005EF80  	GOTO        USEA32
;__Lib_MathDouble.c,591 :: 		
0x092E	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,592 :: 		
0x0930	0x6E0A      	MOVWF       R10, 0
;__Lib_MathDouble.c,593 :: 		
0x0932	0x8E06      	BSF         R6, 7, 0
;__Lib_MathDouble.c,594 :: 		
0x0934	0x8E02      	BSF         R2, 7, 0
;__Lib_MathDouble.c,596 :: 		
0x0936	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,597 :: 		
0x0938	0x6E0B      	MOVWF       R11, 0
;__Lib_MathDouble.c,598 :: 		
0x093A	0x5007      	MOVF        R7, 0, 0
;__Lib_MathDouble.c,599 :: 		
0x093C	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,601 :: 		
0x093E	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,602 :: 		
0x0940	0x640B      	CPFSGT      R11, 0
;__Lib_MathDouble.c,603 :: 		
0x0942	0xF004EFD0  	GOTO        BRETURN32
;__Lib_MathDouble.c,604 :: 		
0x0946	0x500B      	MOVF        R11, 0, 0
;__Lib_MathDouble.c,605 :: 		
0x0948	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,606 :: 		
0x094A	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,607 :: 		
0x094C	0xF005EF71  	GOTO        BLIGNED32
;__Lib_MathDouble.c,609 :: 		
0x0950	0x0E07      	MOVLW       7
;__Lib_MathDouble.c,610 :: 		
0x0952	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,611 :: 		
0x0954	0xF005EF3F  	GOTO        BNIB32
;__Lib_MathDouble.c,613 :: 		
0x0958	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,614 :: 		
0x095A	0xF008C000  	MOVFF       R0, R8
;__Lib_MathDouble.c,615 :: 		
0x095E	0xF000C001  	MOVFF       R1, R0
;__Lib_MathDouble.c,616 :: 		
0x0962	0xF001C002  	MOVFF       R2, R1
;__Lib_MathDouble.c,617 :: 		
0x0966	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,618 :: 		
0x0968	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,619 :: 		
0x096A	0xF005EF71  	GOTO        BLIGNED32
;__Lib_MathDouble.c,621 :: 		
0x096E	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,622 :: 		
0x0970	0xF005EF14  	GOTO        BNIB32A
;__Lib_MathDouble.c,623 :: 		
0x0974	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,624 :: 		
0x0976	0xF008C000  	MOVFF       R0, R8
;__Lib_MathDouble.c,625 :: 		
0x097A	0xF000C001  	MOVFF       R1, R0
;__Lib_MathDouble.c,626 :: 		
0x097E	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,627 :: 		
0x0980	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,628 :: 		
0x0982	0xF005EF71  	GOTO        BLIGNED32
;__Lib_MathDouble.c,630 :: 		
0x0986	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,631 :: 		
0x0988	0xF004EFF2  	GOTO        BNIB32B
;__Lib_MathDouble.c,632 :: 		
0x098C	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,633 :: 		
0x098E	0xF008C000  	MOVFF       R0, R8
;__Lib_MathDouble.c,634 :: 		
0x0992	0x6A00      	CLRF        R0, 0
;__Lib_MathDouble.c,635 :: 		
0x0994	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,636 :: 		
0x0996	0xF005EF71  	GOTO        BLIGNED32
;__Lib_MathDouble.c,638 :: 		
0x099A	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,639 :: 		
0x099C	0xF004EFD9  	GOTO        BNIB32C
;__Lib_MathDouble.c,641 :: 		
BRETURN32:
;__Lib_MathDouble.c,642 :: 		
0x09A0	0xF002C00A  	MOVFF       R10, R2
;__Lib_MathDouble.c,643 :: 		
0x09A4	0xF001C005  	MOVFF       R5, R1
;__Lib_MathDouble.c,644 :: 		
0x09A8	0xF000C004  	MOVFF       R4, R0
;__Lib_MathDouble.c,645 :: 		
0x09AC	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,646 :: 		
0x09AE	0xF006EF9D  	GOTO        ADDEOK
;__Lib_MathDouble.c,648 :: 		
BNIB32C:
;__Lib_MathDouble.c,649 :: 		
0x09B2	0x0E03      	MOVLW       3
;__Lib_MathDouble.c,650 :: 		
0x09B4	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,651 :: 		
0x09B6	0xF004EFE4  	GOTO        BLOOP32C
;__Lib_MathDouble.c,652 :: 		
0x09BA	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,653 :: 		
0x09BC	0x3808      	SWAPF       R8, 0, 0
;__Lib_MathDouble.c,654 :: 		
0x09BE	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,655 :: 		
0x09C0	0x6E08      	MOVWF       R8, 0
;__Lib_MathDouble.c,656 :: 		
0x09C2	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,657 :: 		
0x09C4	0xF005EF71  	GOTO        BLIGNED32
;__Lib_MathDouble.c,659 :: 		
BLOOP32C:
;__Lib_MathDouble.c,660 :: 		
0x09C8	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,661 :: 		
0x09CA	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,662 :: 		
0x09CC	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,663 :: 		
0x09CE	0xF005EF71  	GOTO        BLIGNED32
;__Lib_MathDouble.c,664 :: 		
0x09D2	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,665 :: 		
0x09D4	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,666 :: 		
0x09D6	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,667 :: 		
0x09D8	0xF005EF71  	GOTO        BLIGNED32
;__Lib_MathDouble.c,668 :: 		
0x09DC	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,669 :: 		
0x09DE	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,670 :: 		
0x09E0	0xF005EF71  	GOTO        BLIGNED32
;__Lib_MathDouble.c,672 :: 		
BNIB32B:
;__Lib_MathDouble.c,673 :: 		
0x09E4	0x0E03      	MOVLW       3
;__Lib_MathDouble.c,674 :: 		
0x09E6	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,675 :: 		
0x09E8	0xF005EF03  	GOTO        BLOOP32B
;__Lib_MathDouble.c,676 :: 		
0x09EC	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,677 :: 		
0x09EE	0x3808      	SWAPF       R8, 0, 0
;__Lib_MathDouble.c,678 :: 		
0x09F0	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,679 :: 		
0x09F2	0x6E08      	MOVWF       R8, 0
;__Lib_MathDouble.c,680 :: 		
0x09F4	0x3800      	SWAPF       R0, 0, 0
;__Lib_MathDouble.c,681 :: 		
0x09F6	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,682 :: 		
0x09F8	0x2608      	ADDWF       R8, 1, 0
;__Lib_MathDouble.c,683 :: 		
0x09FA	0x3800      	SWAPF       R0, 0, 0
;__Lib_MathDouble.c,684 :: 		
0x09FC	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,685 :: 		
0x09FE	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,686 :: 		
0x0A00	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,687 :: 		
0x0A02	0xF005EF71  	GOTO        BLIGNED32
;__Lib_MathDouble.c,689 :: 		
BLOOP32B:
;__Lib_MathDouble.c,690 :: 		
0x0A06	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,691 :: 		
0x0A08	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,692 :: 		
0x0A0A	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,693 :: 		
0x0A0C	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,694 :: 		
0x0A0E	0xF005EF71  	GOTO        BLIGNED32
;__Lib_MathDouble.c,695 :: 		
0x0A12	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,696 :: 		
0x0A14	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,697 :: 		
0x0A16	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,698 :: 		
0x0A18	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,699 :: 		
0x0A1A	0xF005EF71  	GOTO        BLIGNED32
;__Lib_MathDouble.c,700 :: 		
0x0A1E	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,701 :: 		
0x0A20	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,702 :: 		
0x0A22	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,703 :: 		
0x0A24	0xF005EF71  	GOTO        BLIGNED32
;__Lib_MathDouble.c,705 :: 		
BNIB32A:
;__Lib_MathDouble.c,706 :: 		
0x0A28	0x0E03      	MOVLW       3
;__Lib_MathDouble.c,707 :: 		
0x0A2A	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,708 :: 		
0x0A2C	0xF005EF2B  	GOTO        BLOOP32A
;__Lib_MathDouble.c,709 :: 		
0x0A30	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,710 :: 		
0x0A32	0x3808      	SWAPF       R8, 0, 0
;__Lib_MathDouble.c,711 :: 		
0x0A34	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,712 :: 		
0x0A36	0x6E08      	MOVWF       R8, 0
;__Lib_MathDouble.c,713 :: 		
0x0A38	0x3800      	SWAPF       R0, 0, 0
;__Lib_MathDouble.c,714 :: 		
0x0A3A	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,715 :: 		
0x0A3C	0x2608      	ADDWF       R8, 1, 0
;__Lib_MathDouble.c,716 :: 		
0x0A3E	0x3800      	SWAPF       R0, 0, 0
;__Lib_MathDouble.c,717 :: 		
0x0A40	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,718 :: 		
0x0A42	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,719 :: 		
0x0A44	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,720 :: 		
0x0A46	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,721 :: 		
0x0A48	0x2600      	ADDWF       R0, 1, 0
;__Lib_MathDouble.c,722 :: 		
0x0A4A	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,723 :: 		
0x0A4C	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,724 :: 		
0x0A4E	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,725 :: 		
0x0A50	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,726 :: 		
0x0A52	0xF005EF71  	GOTO        BLIGNED32
;__Lib_MathDouble.c,728 :: 		
BLOOP32A:
;__Lib_MathDouble.c,729 :: 		
0x0A56	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,730 :: 		
0x0A58	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,731 :: 		
0x0A5A	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,732 :: 		
0x0A5C	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,733 :: 		
0x0A5E	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,734 :: 		
0x0A60	0xF005EF71  	GOTO        BLIGNED32
;__Lib_MathDouble.c,735 :: 		
0x0A64	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,736 :: 		
0x0A66	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,737 :: 		
0x0A68	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,738 :: 		
0x0A6A	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,739 :: 		
0x0A6C	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,740 :: 		
0x0A6E	0xF005EF71  	GOTO        BLIGNED32
;__Lib_MathDouble.c,741 :: 		
0x0A72	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,742 :: 		
0x0A74	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,743 :: 		
0x0A76	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,744 :: 		
0x0A78	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,745 :: 		
0x0A7A	0xF005EF71  	GOTO        BLIGNED32
;__Lib_MathDouble.c,747 :: 		
BNIB32:
;__Lib_MathDouble.c,748 :: 		
0x0A7E	0x0E03      	MOVLW       3
;__Lib_MathDouble.c,749 :: 		
0x0A80	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,750 :: 		
0x0A82	0xF005EF5C  	GOTO        BLOOP32
;__Lib_MathDouble.c,751 :: 		
0x0A86	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,752 :: 		
0x0A88	0x3808      	SWAPF       R8, 0, 0
;__Lib_MathDouble.c,753 :: 		
0x0A8A	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,754 :: 		
0x0A8C	0x6E08      	MOVWF       R8, 0
;__Lib_MathDouble.c,755 :: 		
0x0A8E	0x3800      	SWAPF       R0, 0, 0
;__Lib_MathDouble.c,756 :: 		
0x0A90	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,757 :: 		
0x0A92	0x2608      	ADDWF       R8, 1, 0
;__Lib_MathDouble.c,758 :: 		
0x0A94	0x3800      	SWAPF       R0, 0, 0
;__Lib_MathDouble.c,759 :: 		
0x0A96	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,760 :: 		
0x0A98	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,761 :: 		
0x0A9A	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,762 :: 		
0x0A9C	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,763 :: 		
0x0A9E	0x2600      	ADDWF       R0, 1, 0
;__Lib_MathDouble.c,764 :: 		
0x0AA0	0x3801      	SWAPF       R1, 0, 0
;__Lib_MathDouble.c,765 :: 		
0x0AA2	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,766 :: 		
0x0AA4	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,767 :: 		
0x0AA6	0x3802      	SWAPF       R2, 0, 0
;__Lib_MathDouble.c,768 :: 		
0x0AA8	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,769 :: 		
0x0AAA	0x2601      	ADDWF       R1, 1, 0
;__Lib_MathDouble.c,770 :: 		
0x0AAC	0x3802      	SWAPF       R2, 0, 0
;__Lib_MathDouble.c,771 :: 		
0x0AAE	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,772 :: 		
0x0AB0	0x6E02      	MOVWF       R2, 0
;__Lib_MathDouble.c,773 :: 		
0x0AB2	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,774 :: 		
0x0AB4	0xF005EF71  	GOTO        BLIGNED32
;__Lib_MathDouble.c,776 :: 		
BLOOP32:
;__Lib_MathDouble.c,777 :: 		
0x0AB8	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,778 :: 		
0x0ABA	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,779 :: 		
0x0ABC	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,780 :: 		
0x0ABE	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,781 :: 		
0x0AC0	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,782 :: 		
0x0AC2	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,783 :: 		
0x0AC4	0xF005EF71  	GOTO        BLIGNED32
;__Lib_MathDouble.c,784 :: 		
0x0AC8	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,785 :: 		
0x0ACA	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,786 :: 		
0x0ACC	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,787 :: 		
0x0ACE	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,788 :: 		
0x0AD0	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,789 :: 		
0x0AD2	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,790 :: 		
0x0AD4	0xF005EF71  	GOTO        BLIGNED32
;__Lib_MathDouble.c,791 :: 		
0x0AD8	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,792 :: 		
0x0ADA	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,793 :: 		
0x0ADC	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,794 :: 		
0x0ADE	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,795 :: 		
0x0AE0	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,797 :: 		
BLIGNED32:
;__Lib_MathDouble.c,798 :: 		
0x0AE2	0x6A09      	CLRF        R9, 0
;__Lib_MathDouble.c,799 :: 		
0x0AE4	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,800 :: 		
0x0AE6	0xAE0E      	BTFSS       R14, 7, 0
;__Lib_MathDouble.c,801 :: 		
0x0AE8	0xF006EF65  	GOTO        AOK32
;__Lib_MathDouble.c,802 :: 		
0x0AEC	0x1E08      	COMF        R8, 1, 0
;__Lib_MathDouble.c,803 :: 		
0x0AEE	0x1E00      	COMF        R0, 1, 0
;__Lib_MathDouble.c,804 :: 		
0x0AF0	0x1E01      	COMF        R1, 1, 0
;__Lib_MathDouble.c,805 :: 		
0x0AF2	0x1E02      	COMF        R2, 1, 0
;__Lib_MathDouble.c,806 :: 		
0x0AF4	0x2A08      	INCF        R8, 1, 0
;__Lib_MathDouble.c,807 :: 		
0x0AF6	0x2200      	ADDWFC      R0, 1, 0
;__Lib_MathDouble.c,808 :: 		
0x0AF8	0x2201      	ADDWFC      R1, 1, 0
;__Lib_MathDouble.c,809 :: 		
0x0AFA	0x2202      	ADDWFC      R2, 1, 0
;__Lib_MathDouble.c,810 :: 		
0x0AFC	0xF006EF65  	GOTO        AOK32
;__Lib_MathDouble.c,812 :: 		
USEA32:
;__Lib_MathDouble.c,813 :: 		
0x0B00	0x5007      	MOVF        R7, 0, 0
;__Lib_MathDouble.c,814 :: 		
0x0B02	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,815 :: 		
0x0B04	0xF005EF86  	GOTO        BNE032
;__Lib_MathDouble.c,816 :: 		
0x0B08	0xF006EF9D  	GOTO        ADDEOK
;__Lib_MathDouble.c,818 :: 		
BNE032:
;__Lib_MathDouble.c,819 :: 		
0x0B0C	0x6A09      	CLRF        R9, 0
;__Lib_MathDouble.c,820 :: 		
0x0B0E	0xF00AC002  	MOVFF       R2, R10
;__Lib_MathDouble.c,821 :: 		
0x0B12	0x8E02      	BSF         R2, 7, 0
;__Lib_MathDouble.c,822 :: 		
0x0B14	0x8E06      	BSF         R6, 7, 0
;__Lib_MathDouble.c,824 :: 		
0x0B16	0x5007      	MOVF        R7, 0, 0
;__Lib_MathDouble.c,825 :: 		
0x0B18	0x5C03      	SUBWF       R3, 0, 0
;__Lib_MathDouble.c,826 :: 		
0x0B1A	0x6E07      	MOVWF       R7, 0
;__Lib_MathDouble.c,827 :: 		
0x0B1C	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,828 :: 		
0x0B1E	0xF006EF58  	GOTO        ALIGNED32
;__Lib_MathDouble.c,830 :: 		
0x0B22	0x0E07      	MOVLW       7
;__Lib_MathDouble.c,831 :: 		
0x0B24	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,832 :: 		
0x0B26	0xF006EF26  	GOTO        ANIB32
;__Lib_MathDouble.c,833 :: 		
0x0B2A	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,834 :: 		
0x0B2C	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,835 :: 		
0x0B2E	0x6E09      	MOVWF       R9, 0
;__Lib_MathDouble.c,836 :: 		
0x0B30	0x5005      	MOVF        R5, 0, 0
;__Lib_MathDouble.c,837 :: 		
0x0B32	0x6E04      	MOVWF       R4, 0
;__Lib_MathDouble.c,838 :: 		
0x0B34	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,839 :: 		
0x0B36	0x6E05      	MOVWF       R5, 0
;__Lib_MathDouble.c,840 :: 		
0x0B38	0x6A06      	CLRF        R6, 0
;__Lib_MathDouble.c,841 :: 		
0x0B3A	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,842 :: 		
0x0B3C	0xF006EF58  	GOTO        ALIGNED32
;__Lib_MathDouble.c,844 :: 		
0x0B40	0x0E07      	MOVLW       7
;__Lib_MathDouble.c,845 :: 		
0x0B42	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,846 :: 		
0x0B44	0xF005EFFB  	GOTO        ANIB32A
;__Lib_MathDouble.c,847 :: 		
0x0B48	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,848 :: 		
0x0B4A	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,849 :: 		
0x0B4C	0x6E09      	MOVWF       R9, 0
;__Lib_MathDouble.c,850 :: 		
0x0B4E	0x5005      	MOVF        R5, 0, 0
;__Lib_MathDouble.c,851 :: 		
0x0B50	0x6E04      	MOVWF       R4, 0
;__Lib_MathDouble.c,852 :: 		
0x0B52	0x6A05      	CLRF        R5, 0
;__Lib_MathDouble.c,853 :: 		
0x0B54	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,854 :: 		
0x0B56	0xF006EF58  	GOTO        ALIGNED32
;__Lib_MathDouble.c,856 :: 		
0x0B5A	0x0E07      	MOVLW       7
;__Lib_MathDouble.c,857 :: 		
0x0B5C	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,858 :: 		
0x0B5E	0xF005EFD9  	GOTO        ANIB32B
;__Lib_MathDouble.c,859 :: 		
0x0B62	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,860 :: 		
0x0B64	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,861 :: 		
0x0B66	0x6E09      	MOVWF       R9, 0
;__Lib_MathDouble.c,862 :: 		
0x0B68	0x6A04      	CLRF        R4, 0
;__Lib_MathDouble.c,863 :: 		
0x0B6A	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,864 :: 		
0x0B6C	0xF006EF58  	GOTO        ALIGNED32
;__Lib_MathDouble.c,866 :: 		
0x0B70	0x0E07      	MOVLW       7
;__Lib_MathDouble.c,867 :: 		
0x0B72	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,868 :: 		
0x0B74	0xF005EFC0  	GOTO        ANIB32C
;__Lib_MathDouble.c,870 :: 		
0x0B78	0xF002C00A  	MOVFF       R10, R2
;__Lib_MathDouble.c,871 :: 		
0x0B7C	0xF006EF9D  	GOTO        ADDEOK
;__Lib_MathDouble.c,873 :: 		
ANIB32C:
;__Lib_MathDouble.c,874 :: 		
0x0B80	0x0E03      	MOVLW       3
;__Lib_MathDouble.c,875 :: 		
0x0B82	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,876 :: 		
0x0B84	0xF005EFCB  	GOTO        ALOOP32C
;__Lib_MathDouble.c,877 :: 		
0x0B88	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,878 :: 		
0x0B8A	0x3809      	SWAPF       R9, 0, 0
;__Lib_MathDouble.c,879 :: 		
0x0B8C	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,880 :: 		
0x0B8E	0x6E09      	MOVWF       R9, 0
;__Lib_MathDouble.c,881 :: 		
0x0B90	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,882 :: 		
0x0B92	0xF006EF58  	GOTO        ALIGNED32
;__Lib_MathDouble.c,884 :: 		
ALOOP32C:
;__Lib_MathDouble.c,885 :: 		
0x0B96	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,886 :: 		
0x0B98	0x3209      	RRCF        R9, 1, 0
;__Lib_MathDouble.c,887 :: 		
0x0B9A	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,888 :: 		
0x0B9C	0xF006EF58  	GOTO        ALIGNED32
;__Lib_MathDouble.c,889 :: 		
0x0BA0	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,890 :: 		
0x0BA2	0x3209      	RRCF        R9, 1, 0
;__Lib_MathDouble.c,891 :: 		
0x0BA4	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,892 :: 		
0x0BA6	0xF006EF58  	GOTO        ALIGNED32
;__Lib_MathDouble.c,893 :: 		
0x0BAA	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,894 :: 		
0x0BAC	0x3209      	RRCF        R9, 1, 0
;__Lib_MathDouble.c,895 :: 		
0x0BAE	0xF006EF58  	GOTO        ALIGNED32
;__Lib_MathDouble.c,897 :: 		
ANIB32B:
;__Lib_MathDouble.c,898 :: 		
0x0BB2	0x0E03      	MOVLW       3
;__Lib_MathDouble.c,899 :: 		
0x0BB4	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,900 :: 		
0x0BB6	0xF005EFEA  	GOTO        ALOOP32B
;__Lib_MathDouble.c,901 :: 		
0x0BBA	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,902 :: 		
0x0BBC	0x3809      	SWAPF       R9, 0, 0
;__Lib_MathDouble.c,903 :: 		
0x0BBE	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,904 :: 		
0x0BC0	0x6E09      	MOVWF       R9, 0
;__Lib_MathDouble.c,905 :: 		
0x0BC2	0x3804      	SWAPF       R4, 0, 0
;__Lib_MathDouble.c,906 :: 		
0x0BC4	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,907 :: 		
0x0BC6	0x2609      	ADDWF       R9, 1, 0
;__Lib_MathDouble.c,908 :: 		
0x0BC8	0x3804      	SWAPF       R4, 0, 0
;__Lib_MathDouble.c,909 :: 		
0x0BCA	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,910 :: 		
0x0BCC	0x6E04      	MOVWF       R4, 0
;__Lib_MathDouble.c,911 :: 		
0x0BCE	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,912 :: 		
0x0BD0	0xF006EF58  	GOTO        ALIGNED32
;__Lib_MathDouble.c,914 :: 		
ALOOP32B:
;__Lib_MathDouble.c,915 :: 		
0x0BD4	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,916 :: 		
0x0BD6	0x3204      	RRCF        R4, 1, 0
;__Lib_MathDouble.c,917 :: 		
0x0BD8	0x3209      	RRCF        R9, 1, 0
;__Lib_MathDouble.c,918 :: 		
0x0BDA	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,919 :: 		
0x0BDC	0xF006EF58  	GOTO        ALIGNED32
;__Lib_MathDouble.c,920 :: 		
0x0BE0	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,921 :: 		
0x0BE2	0x3204      	RRCF        R4, 1, 0
;__Lib_MathDouble.c,922 :: 		
0x0BE4	0x3209      	RRCF        R9, 1, 0
;__Lib_MathDouble.c,923 :: 		
0x0BE6	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,924 :: 		
0x0BE8	0xF006EF58  	GOTO        ALIGNED32
;__Lib_MathDouble.c,925 :: 		
0x0BEC	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,926 :: 		
0x0BEE	0x3204      	RRCF        R4, 1, 0
;__Lib_MathDouble.c,927 :: 		
0x0BF0	0x3209      	RRCF        R9, 1, 0
;__Lib_MathDouble.c,928 :: 		
0x0BF2	0xF006EF58  	GOTO        ALIGNED32
;__Lib_MathDouble.c,930 :: 		
ANIB32A:
;__Lib_MathDouble.c,931 :: 		
0x0BF6	0x0E03      	MOVLW       3
;__Lib_MathDouble.c,932 :: 		
0x0BF8	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,933 :: 		
0x0BFA	0xF006EF12  	GOTO        ALOOP32A
;__Lib_MathDouble.c,934 :: 		
0x0BFE	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,935 :: 		
0x0C00	0x3809      	SWAPF       R9, 0, 0
;__Lib_MathDouble.c,936 :: 		
0x0C02	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,937 :: 		
0x0C04	0x6E09      	MOVWF       R9, 0
;__Lib_MathDouble.c,938 :: 		
0x0C06	0x3804      	SWAPF       R4, 0, 0
;__Lib_MathDouble.c,939 :: 		
0x0C08	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,940 :: 		
0x0C0A	0x2609      	ADDWF       R9, 1, 0
;__Lib_MathDouble.c,941 :: 		
0x0C0C	0x3804      	SWAPF       R4, 0, 0
;__Lib_MathDouble.c,942 :: 		
0x0C0E	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,943 :: 		
0x0C10	0x6E04      	MOVWF       R4, 0
;__Lib_MathDouble.c,944 :: 		
0x0C12	0x3805      	SWAPF       R5, 0, 0
;__Lib_MathDouble.c,945 :: 		
0x0C14	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,946 :: 		
0x0C16	0x2604      	ADDWF       R4, 1, 0
;__Lib_MathDouble.c,947 :: 		
0x0C18	0x3805      	SWAPF       R5, 0, 0
;__Lib_MathDouble.c,948 :: 		
0x0C1A	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,949 :: 		
0x0C1C	0x6E05      	MOVWF       R5, 0
;__Lib_MathDouble.c,950 :: 		
0x0C1E	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,951 :: 		
0x0C20	0xF006EF58  	GOTO        ALIGNED32
;__Lib_MathDouble.c,953 :: 		
ALOOP32A:
;__Lib_MathDouble.c,954 :: 		
0x0C24	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,955 :: 		
0x0C26	0x3205      	RRCF        R5, 1, 0
;__Lib_MathDouble.c,956 :: 		
0x0C28	0x3204      	RRCF        R4, 1, 0
;__Lib_MathDouble.c,957 :: 		
0x0C2A	0x3209      	RRCF        R9, 1, 0
;__Lib_MathDouble.c,958 :: 		
0x0C2C	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,959 :: 		
0x0C2E	0xF006EF58  	GOTO        ALIGNED32
;__Lib_MathDouble.c,960 :: 		
0x0C32	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,961 :: 		
0x0C34	0x3205      	RRCF        R5, 1, 0
;__Lib_MathDouble.c,962 :: 		
0x0C36	0x3204      	RRCF        R4, 1, 0
;__Lib_MathDouble.c,963 :: 		
0x0C38	0x3209      	RRCF        R9, 1, 0
;__Lib_MathDouble.c,964 :: 		
0x0C3A	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,965 :: 		
0x0C3C	0xF006EF58  	GOTO        ALIGNED32
;__Lib_MathDouble.c,966 :: 		
0x0C40	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,967 :: 		
0x0C42	0x3205      	RRCF        R5, 1, 0
;__Lib_MathDouble.c,968 :: 		
0x0C44	0x3204      	RRCF        R4, 1, 0
;__Lib_MathDouble.c,969 :: 		
0x0C46	0x3209      	RRCF        R9, 1, 0
;__Lib_MathDouble.c,970 :: 		
0x0C48	0xF006EF58  	GOTO        ALIGNED32
;__Lib_MathDouble.c,972 :: 		
ANIB32:
;__Lib_MathDouble.c,973 :: 		
0x0C4C	0x0E03      	MOVLW       3
;__Lib_MathDouble.c,974 :: 		
0x0C4E	0x6407      	CPFSGT      R7, 0
;__Lib_MathDouble.c,975 :: 		
0x0C50	0xF006EF43  	GOTO        ALOOP32
;__Lib_MathDouble.c,976 :: 		
0x0C54	0x5E07      	SUBWF       R7, 1, 0
;__Lib_MathDouble.c,977 :: 		
0x0C56	0x3809      	SWAPF       R9, 0, 0
;__Lib_MathDouble.c,978 :: 		
0x0C58	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,979 :: 		
0x0C5A	0x6E09      	MOVWF       R9, 0
;__Lib_MathDouble.c,980 :: 		
0x0C5C	0x3804      	SWAPF       R4, 0, 0
;__Lib_MathDouble.c,981 :: 		
0x0C5E	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,982 :: 		
0x0C60	0x2609      	ADDWF       R9, 1, 0
;__Lib_MathDouble.c,983 :: 		
0x0C62	0x3804      	SWAPF       R4, 0, 0
;__Lib_MathDouble.c,984 :: 		
0x0C64	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,985 :: 		
0x0C66	0x6E04      	MOVWF       R4, 0
;__Lib_MathDouble.c,986 :: 		
0x0C68	0x3805      	SWAPF       R5, 0, 0
;__Lib_MathDouble.c,987 :: 		
0x0C6A	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,988 :: 		
0x0C6C	0x2604      	ADDWF       R4, 1, 0
;__Lib_MathDouble.c,989 :: 		
0x0C6E	0x3805      	SWAPF       R5, 0, 0
;__Lib_MathDouble.c,990 :: 		
0x0C70	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,991 :: 		
0x0C72	0x6E05      	MOVWF       R5, 0
;__Lib_MathDouble.c,992 :: 		
0x0C74	0x3806      	SWAPF       R6, 0, 0
;__Lib_MathDouble.c,993 :: 		
0x0C76	0x0BF0      	ANDLW       240
;__Lib_MathDouble.c,994 :: 		
0x0C78	0x2605      	ADDWF       R5, 1, 0
;__Lib_MathDouble.c,995 :: 		
0x0C7A	0x3806      	SWAPF       R6, 0, 0
;__Lib_MathDouble.c,996 :: 		
0x0C7C	0x0B0F      	ANDLW       15
;__Lib_MathDouble.c,997 :: 		
0x0C7E	0x6E06      	MOVWF       R6, 0
;__Lib_MathDouble.c,998 :: 		
0x0C80	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,999 :: 		
0x0C82	0xF006EF58  	GOTO        ALIGNED32
;__Lib_MathDouble.c,1001 :: 		
ALOOP32:
;__Lib_MathDouble.c,1002 :: 		
0x0C86	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,1003 :: 		
0x0C88	0x3206      	RRCF        R6, 1, 0
;__Lib_MathDouble.c,1004 :: 		
0x0C8A	0x3205      	RRCF        R5, 1, 0
;__Lib_MathDouble.c,1005 :: 		
0x0C8C	0x3204      	RRCF        R4, 1, 0
;__Lib_MathDouble.c,1006 :: 		
0x0C8E	0x3209      	RRCF        R9, 1, 0
;__Lib_MathDouble.c,1007 :: 		
0x0C90	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,1008 :: 		
0x0C92	0xF006EF58  	GOTO        ALIGNED32
;__Lib_MathDouble.c,1009 :: 		
0x0C96	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,1010 :: 		
0x0C98	0x3206      	RRCF        R6, 1, 0
;__Lib_MathDouble.c,1011 :: 		
0x0C9A	0x3205      	RRCF        R5, 1, 0
;__Lib_MathDouble.c,1012 :: 		
0x0C9C	0x3204      	RRCF        R4, 1, 0
;__Lib_MathDouble.c,1013 :: 		
0x0C9E	0x3209      	RRCF        R9, 1, 0
;__Lib_MathDouble.c,1014 :: 		
0x0CA0	0x4E07      	DCFSNZ      R7, 1, 0
;__Lib_MathDouble.c,1015 :: 		
0x0CA2	0xF006EF58  	GOTO        ALIGNED32
;__Lib_MathDouble.c,1016 :: 		
0x0CA6	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,1017 :: 		
0x0CA8	0x3206      	RRCF        R6, 1, 0
;__Lib_MathDouble.c,1018 :: 		
0x0CAA	0x3205      	RRCF        R5, 1, 0
;__Lib_MathDouble.c,1019 :: 		
0x0CAC	0x3204      	RRCF        R4, 1, 0
;__Lib_MathDouble.c,1020 :: 		
0x0CAE	0x3209      	RRCF        R9, 1, 0
;__Lib_MathDouble.c,1022 :: 		
ALIGNED32:
;__Lib_MathDouble.c,1023 :: 		
0x0CB0	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,1024 :: 		
0x0CB2	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1025 :: 		
0x0CB4	0xAE0E      	BTFSS       R14, 7, 0
;__Lib_MathDouble.c,1026 :: 		
0x0CB6	0xF006EF65  	GOTO        AOK32
;__Lib_MathDouble.c,1027 :: 		
0x0CBA	0x1E09      	COMF        R9, 1, 0
;__Lib_MathDouble.c,1028 :: 		
0x0CBC	0x1E04      	COMF        R4, 1, 0
;__Lib_MathDouble.c,1029 :: 		
0x0CBE	0x1E05      	COMF        R5, 1, 0
;__Lib_MathDouble.c,1030 :: 		
0x0CC0	0x1E06      	COMF        R6, 1, 0
;__Lib_MathDouble.c,1031 :: 		
0x0CC2	0x2A09      	INCF        R9, 1, 0
;__Lib_MathDouble.c,1032 :: 		
0x0CC4	0x2204      	ADDWFC      R4, 1, 0
;__Lib_MathDouble.c,1033 :: 		
0x0CC6	0x2205      	ADDWFC      R5, 1, 0
;__Lib_MathDouble.c,1034 :: 		
0x0CC8	0x2206      	ADDWFC      R6, 1, 0
;__Lib_MathDouble.c,1036 :: 		
AOK32:
;__Lib_MathDouble.c,1037 :: 		
0x0CCA	0x5009      	MOVF        R9, 0, 0
;__Lib_MathDouble.c,1038 :: 		
0x0CCC	0x2608      	ADDWF       R8, 1, 0
;__Lib_MathDouble.c,1039 :: 		
0x0CCE	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,1040 :: 		
0x0CD0	0x2200      	ADDWFC      R0, 1, 0
;__Lib_MathDouble.c,1041 :: 		
0x0CD2	0x5005      	MOVF        R5, 0, 0
;__Lib_MathDouble.c,1042 :: 		
0x0CD4	0x2201      	ADDWFC      R1, 1, 0
;__Lib_MathDouble.c,1043 :: 		
0x0CD6	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,1044 :: 		
0x0CD8	0x2202      	ADDWFC      R2, 1, 0
;__Lib_MathDouble.c,1046 :: 		
0x0CDA	0xBE0E      	BTFSC       R14, 7, 0
;__Lib_MathDouble.c,1047 :: 		
0x0CDC	0xF006EF7C  	GOTO        ACOMP32
;__Lib_MathDouble.c,1048 :: 		
0x0CE0	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1049 :: 		
0x0CE2	0xF006EF8B  	GOTO        ADDJPNRMRND4032
;__Lib_MathDouble.c,1051 :: 		
0x0CE6	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,1052 :: 		
0x0CE8	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,1053 :: 		
0x0CEA	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,1054 :: 		
0x0CEC	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,1055 :: 		
0x0CEE	0x3E03      	INCFSZ      R3, 1, 0
;__Lib_MathDouble.c,1056 :: 		
0x0CF0	0xF006EF8B  	GOTO        ADDJPNRMRND4032
;__Lib_MathDouble.c,1057 :: 		
0x0CF4	0xF006EF97  	GOTO        ADDJPSETFOV32
;__Lib_MathDouble.c,1059 :: 		
ACOMP32:
;__Lib_MathDouble.c,1060 :: 		
0x0CF8	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_MathDouble.c,1061 :: 		
0x0CFA	0xF006EF91  	GOTO        ADDJPNRM4032
;__Lib_MathDouble.c,1062 :: 		
0x0CFE	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1063 :: 		
0x0D00	0x1E08      	COMF        R8, 1, 0
;__Lib_MathDouble.c,1064 :: 		
0x0D02	0x1E00      	COMF        R0, 1, 0
;__Lib_MathDouble.c,1065 :: 		
0x0D04	0x1E01      	COMF        R1, 1, 0
;__Lib_MathDouble.c,1066 :: 		
0x0D06	0x1E02      	COMF        R2, 1, 0
;__Lib_MathDouble.c,1067 :: 		
0x0D08	0x2A08      	INCF        R8, 1, 0
;__Lib_MathDouble.c,1068 :: 		
0x0D0A	0x2200      	ADDWFC      R0, 1, 0
;__Lib_MathDouble.c,1069 :: 		
0x0D0C	0x2201      	ADDWFC      R1, 1, 0
;__Lib_MathDouble.c,1070 :: 		
0x0D0E	0x2202      	ADDWFC      R2, 1, 0
;__Lib_MathDouble.c,1071 :: 		
0x0D10	0x7E0A      	BTG         R10, 7, 0
;__Lib_MathDouble.c,1072 :: 		
0x0D12	0xF006EF91  	GOTO        ADDJPNRM4032
;__Lib_MathDouble.c,1074 :: 		
ADDJPNRMRND4032:
;__Lib_MathDouble.c,1075 :: 		
0x0D16	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,1076 :: 		
0x0D18	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,1078 :: 		
0x0D1A	0xF001EC76  	CALL        _NRM4032, 0
;__Lib_MathDouble.c,1080 :: 		
0x0D1E	0xF006EF9F  	GOTO        ADDEEE
;__Lib_MathDouble.c,1081 :: 		
ADDJPNRM4032:
;__Lib_MathDouble.c,1082 :: 		
0x0D22	0x0E02      	MOVLW       2
;__Lib_MathDouble.c,1083 :: 		
0x0D24	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,1085 :: 		
0x0D26	0xF001EC76  	CALL        _NRM4032, 0
;__Lib_MathDouble.c,1087 :: 		
0x0D2A	0xF006EF9F  	GOTO        ADDEEE
;__Lib_MathDouble.c,1088 :: 		
ADDJPSETFOV32:
;__Lib_MathDouble.c,1089 :: 		
0x0D2E	0x0E04      	MOVLW       4
;__Lib_MathDouble.c,1090 :: 		
0x0D30	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,1092 :: 		
0x0D32	0xF000ECBC  	CALL        _SETFOV32, 0
;__Lib_MathDouble.c,1094 :: 		
0x0D36	0xF006EF9F  	GOTO        ADDEEE
;__Lib_MathDouble.c,1095 :: 		
ADDEOK:
;__Lib_MathDouble.c,1096 :: 		
0x0D3A	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1097 :: 		
0x0D3C	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,1098 :: 		
ADDEEE:
;__Lib_MathDouble.c,1105 :: 		
L_end_Add_32x32_FP:
0x0D3E	0x0012      	RETURN      0
; end of _Add_32x32_FP
_Double2Word:
;__Lib_MathDouble.c,2023 :: 		
;__Lib_MathDouble.c,2032 :: 		
0x0D40	0x6A0B      	CLRF        R11, 0
;__Lib_MathDouble.c,2033 :: 		
0x0D42	0x6A0C      	CLRF        R12, 0
;__Lib_MathDouble.c,2034 :: 		
0x0D44	0x6A0A      	CLRF        R10, 0
;__Lib_MathDouble.c,2036 :: 		
0x0D46	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,2037 :: 		
0x0D48	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2038 :: 		
0x0D4A	0xF006EFEA  	GOTO        IRES016U
;__Lib_MathDouble.c,2040 :: 		
0x0D4E	0x8E02      	BSF         R2, 7, 0
;__Lib_MathDouble.c,2042 :: 		
0x0D50	0x0E8E      	MOVLW       142
;__Lib_MathDouble.c,2043 :: 		
0x0D52	0x5E03      	SUBWF       R3, 1, 0
;__Lib_MathDouble.c,2044 :: 		
0x0D54	0xBE03      	BTFSC       R3, 7, 0
;__Lib_MathDouble.c,2045 :: 		
0x0D56	0xF006EFB2  	GOTO        SETEXP16U
;__Lib_MathDouble.c,2046 :: 		
0x0D5A	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2047 :: 		
0x0D5C	0xF006EFB2  	GOTO        SETEXP16U
;__Lib_MathDouble.c,2048 :: 		
0x0D60	0xF006EFEE  	GOTO        SETIOV16U
;__Lib_MathDouble.c,2049 :: 		
SETEXP16U:
;__Lib_MathDouble.c,2050 :: 		
0x0D64	0x6C03      	NEGF        R3, 0
;__Lib_MathDouble.c,2052 :: 		
0x0D66	0x0E08      	MOVLW       8
;__Lib_MathDouble.c,2053 :: 		
0x0D68	0x5C03      	SUBWF       R3, 0, 0
;__Lib_MathDouble.c,2054 :: 		
0x0D6A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,2055 :: 		
0x0D6C	0xF006EFC9  	GOTO        TSHIFT3216U
;__Lib_MathDouble.c,2056 :: 		
0x0D70	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,2057 :: 		
0x0D72	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,2058 :: 		
0x0D74	0xF001C002  	MOVFF       R2, R1
;__Lib_MathDouble.c,2059 :: 		
0x0D78	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,2061 :: 		
0x0D7A	0x0E08      	MOVLW       8
;__Lib_MathDouble.c,2062 :: 		
0x0D7C	0x5C03      	SUBWF       R3, 0, 0
;__Lib_MathDouble.c,2063 :: 		
0x0D7E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,2064 :: 		
0x0D80	0xF006EFC9  	GOTO        TSHIFT3216U
;__Lib_MathDouble.c,2065 :: 		
0x0D84	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,2066 :: 		
0x0D86	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,2068 :: 		
0x0D88	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,2069 :: 		
0x0D8A	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,2070 :: 		
0x0D8C	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,2071 :: 		
0x0D8E	0xF006EFD3  	GOTO        SHIFT3216UOK
;__Lib_MathDouble.c,2072 :: 		
TSHIFT3216U:
;__Lib_MathDouble.c,2073 :: 		
0x0D92	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,2074 :: 		
0x0D94	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2075 :: 		
0x0D96	0xF006EFD3  	GOTO        SHIFT3216UOK
;__Lib_MathDouble.c,2076 :: 		
SHIFT3216U:
;__Lib_MathDouble.c,2077 :: 		
0x0D9A	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,2078 :: 		
0x0D9C	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,2079 :: 		
0x0D9E	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,2080 :: 		
0x0DA0	0x2E03      	DECFSZ      R3, 1, 0
;__Lib_MathDouble.c,2081 :: 		
0x0DA2	0xF006EFCD  	GOTO        SHIFT3216U
;__Lib_MathDouble.c,2082 :: 		
SHIFT3216UOK:
;__Lib_MathDouble.c,2083 :: 		
0x0DA6	0xBC0B      	BTFSC       R11, 6, 0
;__Lib_MathDouble.c,2084 :: 		
0x0DA8	0xA001      	BTFSS       R1, 0, 0
;__Lib_MathDouble.c,2085 :: 		
0x0DAA	0xF006EFE0  	GOTO        INT3216UOK
;__Lib_MathDouble.c,2086 :: 		
0x0DAE	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,2087 :: 		
0x0DB0	0xF006EFE0  	GOTO        INT3216UOK
;__Lib_MathDouble.c,2088 :: 		
0x0DB4	0x2A01      	INCF        R1, 1, 0
;__Lib_MathDouble.c,2089 :: 		
0x0DB6	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2090 :: 		
0x0DB8	0x2A02      	INCF        R2, 1, 0
;__Lib_MathDouble.c,2091 :: 		
0x0DBA	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,2092 :: 		
0x0DBC	0xF006EFFD  	GOTO        JPKSETIOV3224
;__Lib_MathDouble.c,2093 :: 		
INT3216UOK:
;__Lib_MathDouble.c,2094 :: 		
0x0DC0	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,2095 :: 		
0x0DC2	0xF007EF03  	GOTO        INT3216UEOK
;__Lib_MathDouble.c,2097 :: 		
0x0DC6	0x1E02      	COMF        R2, 1, 0
;__Lib_MathDouble.c,2098 :: 		
0x0DC8	0x1E01      	COMF        R1, 1, 0
;__Lib_MathDouble.c,2099 :: 		
0x0DCA	0x2A01      	INCF        R1, 1, 0
;__Lib_MathDouble.c,2100 :: 		
0x0DCC	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2101 :: 		
0x0DCE	0x2A02      	INCF        R2, 1, 0
;__Lib_MathDouble.c,2102 :: 		
0x0DD0	0xF007EF03  	GOTO        INT3216UEOK
;__Lib_MathDouble.c,2104 :: 		
IRES016U:
;__Lib_MathDouble.c,2105 :: 		
0x0DD4	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,2106 :: 		
0x0DD6	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,2107 :: 		
0x0DD8	0xF007EF03  	GOTO        INT3216UEOK
;__Lib_MathDouble.c,2108 :: 		
SETIOV16U:
;__Lib_MathDouble.c,2109 :: 		
0x0DDC	0x800B      	BSF         R11, 0, 0
;__Lib_MathDouble.c,2110 :: 		
0x0DDE	0xAE0B      	BTFSS       R11, 7, 0
;__Lib_MathDouble.c,2111 :: 		
0x0DE0	0xF007EF07  	GOTO        INT3216UEER
;__Lib_MathDouble.c,2113 :: 		
0x0DE4	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,2114 :: 		
0x0DE6	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,2115 :: 		
0x0DE8	0xF007EF07  	GOTO        INT3216UEER
;__Lib_MathDouble.c,2116 :: 		
0x0DEC	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,2117 :: 		
0x0DEE	0x6E02      	MOVWF       R2, 0
;__Lib_MathDouble.c,2118 :: 		
0x0DF0	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,2119 :: 		
0x0DF2	0x360A      	RLCF        R10, 1, 0
;__Lib_MathDouble.c,2120 :: 		
0x0DF4	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,2121 :: 		
0x0DF6	0xF007EF07  	GOTO        INT3216UEER
;__Lib_MathDouble.c,2123 :: 		
JPKSETIOV3224:
;__Lib_MathDouble.c,2124 :: 		
0x0DFA	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,2125 :: 		
0x0DFC	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,2127 :: 		
0x0DFE	0xF002EC67  	CALL        _SETIOV3224, 0
;__Lib_MathDouble.c,2129 :: 		
0x0E02	0xF007EF09  	GOTO        INT3216UEEE
;__Lib_MathDouble.c,2130 :: 		
INT3216UEOK:
;__Lib_MathDouble.c,2131 :: 		
0x0E06	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,2132 :: 		
0x0E08	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,2133 :: 		
0x0E0A	0xF007EF09  	GOTO        INT3216UEEE
;__Lib_MathDouble.c,2134 :: 		
INT3216UEER:
;__Lib_MathDouble.c,2135 :: 		
0x0E0E	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,2136 :: 		
0x0E10	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,2137 :: 		
INT3216UEEE:
;__Lib_MathDouble.c,2138 :: 		
0x0E12	0x5001      	MOVF        R1, 0, 0
;__Lib_MathDouble.c,2139 :: 		
0x0E14	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,2140 :: 		
0x0E16	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,2141 :: 		
0x0E18	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,2146 :: 		
L_end_Double2Word:
0x0E1A	0x0012      	RETURN      0
; end of _Double2Word
_Double2Longint:
;__Lib_MathDouble.c,1730 :: 		
;__Lib_MathDouble.c,1740 :: 		
0x0E1C	0x6A0B      	CLRF        R11, 0
;__Lib_MathDouble.c,1741 :: 		
0x0E1E	0x6A0C      	CLRF        R12, 0
;__Lib_MathDouble.c,1743 :: 		
0x0E20	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,1744 :: 		
0x0E22	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,1745 :: 		
0x0E24	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1746 :: 		
0x0E26	0xF007EF92  	GOTO        INT3232EOK
;__Lib_MathDouble.c,1748 :: 		
0x0E2A	0xF00AC002  	MOVFF       R2, R10
;__Lib_MathDouble.c,1749 :: 		
0x0E2E	0x8E02      	BSF         R2, 7, 0
;__Lib_MathDouble.c,1751 :: 		
0x0E30	0x0E9E      	MOVLW       158
;__Lib_MathDouble.c,1752 :: 		
0x0E32	0x5E03      	SUBWF       R3, 1, 0
;__Lib_MathDouble.c,1753 :: 		
0x0E34	0xAE03      	BTFSS       R3, 7, 0
;__Lib_MathDouble.c,1754 :: 		
0x0E36	0xF007EF82  	GOTO        SETIOV32
;__Lib_MathDouble.c,1755 :: 		
0x0E3A	0x6C03      	NEGF        R3, 0
;__Lib_MathDouble.c,1757 :: 		
0x0E3C	0x0E08      	MOVLW       8
;__Lib_MathDouble.c,1758 :: 		
0x0E3E	0x5C03      	SUBWF       R3, 0, 0
;__Lib_MathDouble.c,1759 :: 		
0x0E40	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1760 :: 		
0x0E42	0xF007EF4F  	GOTO        TSHIFT3232
;__Lib_MathDouble.c,1761 :: 		
0x0E46	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,1762 :: 		
0x0E48	0x3608      	RLCF        R8, 1, 0
;__Lib_MathDouble.c,1763 :: 		
0x0E4A	0xF008C000  	MOVFF       R0, R8
;__Lib_MathDouble.c,1764 :: 		
0x0E4E	0xF000C001  	MOVFF       R1, R0
;__Lib_MathDouble.c,1765 :: 		
0x0E52	0xF001C002  	MOVFF       R2, R1
;__Lib_MathDouble.c,1766 :: 		
0x0E56	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,1768 :: 		
0x0E58	0x0E08      	MOVLW       8
;__Lib_MathDouble.c,1769 :: 		
0x0E5A	0x5C03      	SUBWF       R3, 0, 0
;__Lib_MathDouble.c,1770 :: 		
0x0E5C	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1771 :: 		
0x0E5E	0xF007EF4F  	GOTO        TSHIFT3232
;__Lib_MathDouble.c,1772 :: 		
0x0E62	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,1773 :: 		
0x0E64	0x3608      	RLCF        R8, 1, 0
;__Lib_MathDouble.c,1774 :: 		
0x0E66	0xF008C000  	MOVFF       R0, R8
;__Lib_MathDouble.c,1775 :: 		
0x0E6A	0xF000C001  	MOVFF       R1, R0
;__Lib_MathDouble.c,1776 :: 		
0x0E6E	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,1778 :: 		
0x0E70	0x0E08      	MOVLW       8
;__Lib_MathDouble.c,1779 :: 		
0x0E72	0x5C03      	SUBWF       R3, 0, 0
;__Lib_MathDouble.c,1780 :: 		
0x0E74	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1781 :: 		
0x0E76	0xF007EF4F  	GOTO        TSHIFT3232
;__Lib_MathDouble.c,1782 :: 		
0x0E7A	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,1783 :: 		
0x0E7C	0x3608      	RLCF        R8, 1, 0
;__Lib_MathDouble.c,1784 :: 		
0x0E7E	0xF008C000  	MOVFF       R0, R8
;__Lib_MathDouble.c,1785 :: 		
0x0E82	0x6A00      	CLRF        R0, 0
;__Lib_MathDouble.c,1787 :: 		
0x0E84	0x0E08      	MOVLW       8
;__Lib_MathDouble.c,1788 :: 		
0x0E86	0x5C03      	SUBWF       R3, 0, 0
;__Lib_MathDouble.c,1789 :: 		
0x0E88	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1790 :: 		
0x0E8A	0xF007EF4F  	GOTO        TSHIFT3232
;__Lib_MathDouble.c,1791 :: 		
0x0E8E	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,1792 :: 		
0x0E90	0x3608      	RLCF        R8, 1, 0
;__Lib_MathDouble.c,1793 :: 		
0x0E92	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,1794 :: 		
0x0E94	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,1795 :: 		
0x0E96	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,1796 :: 		
0x0E98	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,1797 :: 		
0x0E9A	0xF007EF5B  	GOTO        SHIFT3232OK
;__Lib_MathDouble.c,1798 :: 		
TSHIFT3232:
;__Lib_MathDouble.c,1799 :: 		
0x0E9E	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,1800 :: 		
0x0EA0	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1801 :: 		
0x0EA2	0xF007EF5B  	GOTO        SHIFT3232OK
;__Lib_MathDouble.c,1802 :: 		
SHIFT3232:
;__Lib_MathDouble.c,1803 :: 		
0x0EA6	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,1804 :: 		
0x0EA8	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,1805 :: 		
0x0EAA	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,1806 :: 		
0x0EAC	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,1807 :: 		
0x0EAE	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,1808 :: 		
0x0EB0	0x2E03      	DECFSZ      R3, 1, 0
;__Lib_MathDouble.c,1809 :: 		
0x0EB2	0xF007EF53  	GOTO        SHIFT3232
;__Lib_MathDouble.c,1810 :: 		
SHIFT3232OK:
;__Lib_MathDouble.c,1811 :: 		
0x0EB6	0xBC0B      	BTFSC       R11, 6, 0
;__Lib_MathDouble.c,1812 :: 		
0x0EB8	0xA008      	BTFSS       R8, 0, 0
;__Lib_MathDouble.c,1813 :: 		
0x0EBA	0xF007EF6C  	GOTO        INT3232OK
;__Lib_MathDouble.c,1814 :: 		
0x0EBE	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1815 :: 		
0x0EC0	0xF007EF6C  	GOTO        INT3232OK
;__Lib_MathDouble.c,1816 :: 		
0x0EC4	0x2A08      	INCF        R8, 1, 0
;__Lib_MathDouble.c,1817 :: 		
0x0EC6	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1818 :: 		
0x0EC8	0x2A00      	INCF        R0, 1, 0
;__Lib_MathDouble.c,1819 :: 		
0x0ECA	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1820 :: 		
0x0ECC	0x2A01      	INCF        R1, 1, 0
;__Lib_MathDouble.c,1821 :: 		
0x0ECE	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1822 :: 		
0x0ED0	0x2A02      	INCF        R2, 1, 0
;__Lib_MathDouble.c,1823 :: 		
0x0ED2	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,1824 :: 		
0x0ED4	0xF007EF96  	GOTO        JPISETIOV3224
;__Lib_MathDouble.c,1825 :: 		
INT3232OK:
;__Lib_MathDouble.c,1826 :: 		
0x0ED8	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,1827 :: 		
0x0EDA	0xF007EF92  	GOTO        INT3232EOK
;__Lib_MathDouble.c,1829 :: 		
0x0EDE	0x1E02      	COMF        R2, 1, 0
;__Lib_MathDouble.c,1830 :: 		
0x0EE0	0x1E01      	COMF        R1, 1, 0
;__Lib_MathDouble.c,1831 :: 		
0x0EE2	0x1E00      	COMF        R0, 1, 0
;__Lib_MathDouble.c,1832 :: 		
0x0EE4	0x1E08      	COMF        R8, 1, 0
;__Lib_MathDouble.c,1833 :: 		
0x0EE6	0x2A08      	INCF        R8, 1, 0
;__Lib_MathDouble.c,1834 :: 		
0x0EE8	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1835 :: 		
0x0EEA	0x2A00      	INCF        R0, 1, 0
;__Lib_MathDouble.c,1836 :: 		
0x0EEC	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1837 :: 		
0x0EEE	0x2A01      	INCF        R1, 1, 0
;__Lib_MathDouble.c,1838 :: 		
0x0EF0	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1839 :: 		
0x0EF2	0x2A02      	INCF        R2, 1, 0
;__Lib_MathDouble.c,1840 :: 		
0x0EF4	0xF007EF92  	GOTO        INT3232EOK
;__Lib_MathDouble.c,1842 :: 		
0x0EF8	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,1843 :: 		
0x0EFA	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,1844 :: 		
0x0EFC	0x6A00      	CLRF        R0, 0
;__Lib_MathDouble.c,1845 :: 		
0x0EFE	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,1846 :: 		
0x0F00	0xF007EF92  	GOTO        INT3232EOK
;__Lib_MathDouble.c,1847 :: 		
SETIOV32:
;__Lib_MathDouble.c,1848 :: 		
0x0F04	0x800B      	BSF         R11, 0, 0
;__Lib_MathDouble.c,1849 :: 		
0x0F06	0xAE0B      	BTFSS       R11, 7, 0
;__Lib_MathDouble.c,1850 :: 		
0x0F08	0xF007EF9D  	GOTO        INT3232EER
;__Lib_MathDouble.c,1852 :: 		
0x0F0C	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,1853 :: 		
0x0F0E	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,1854 :: 		
0x0F10	0xF007EF9D  	GOTO        INT3232EER
;__Lib_MathDouble.c,1855 :: 		
0x0F14	0x6E02      	MOVWF       R2, 0
;__Lib_MathDouble.c,1856 :: 		
0x0F16	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,1857 :: 		
0x0F18	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,1858 :: 		
0x0F1A	0x6E08      	MOVWF       R8, 0
;__Lib_MathDouble.c,1859 :: 		
0x0F1C	0x360A      	RLCF        R10, 1, 0
;__Lib_MathDouble.c,1860 :: 		
0x0F1E	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,1861 :: 		
0x0F20	0xF007EF9D  	GOTO        INT3232EER
;__Lib_MathDouble.c,1863 :: 		
INT3232EOK:
;__Lib_MathDouble.c,1864 :: 		
0x0F24	0x6A0C      	CLRF        R12, 0
;__Lib_MathDouble.c,1865 :: 		
0x0F26	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1866 :: 		
0x0F28	0xF007EF9E  	GOTO        INT3232EEE
;__Lib_MathDouble.c,1867 :: 		
JPISETIOV3224:
;__Lib_MathDouble.c,1868 :: 		
0x0F2C	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,1869 :: 		
0x0F2E	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,1870 :: 		
0x0F30	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1872 :: 		
0x0F32	0xF002EC67  	CALL        _SETIOV3224, 0
;__Lib_MathDouble.c,1874 :: 		
0x0F36	0xF007EF9E  	GOTO        INT3232EEE
;__Lib_MathDouble.c,1875 :: 		
INT3232EER:
;__Lib_MathDouble.c,1876 :: 		
0x0F3A	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,1877 :: 		
INT3232EEE:
;__Lib_MathDouble.c,1878 :: 		
0x0F3C	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,1879 :: 		
0x0F3E	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,1880 :: 		
0x0F40	0x5001      	MOVF        R1, 0, 0
;__Lib_MathDouble.c,1881 :: 		
0x0F42	0x6E02      	MOVWF       R2, 0
;__Lib_MathDouble.c,1882 :: 		
0x0F44	0x5000      	MOVF        R0, 0, 0
;__Lib_MathDouble.c,1883 :: 		
0x0F46	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,1884 :: 		
0x0F48	0x5008      	MOVF        R8, 0, 0
;__Lib_MathDouble.c,1885 :: 		
0x0F4A	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,1890 :: 		
L_end_Double2Longint:
0x0F4C	0x0012      	RETURN      0
; end of _Double2Longint
_Div_32x32_FP:
;__Lib_MathDouble.c,1325 :: 		
;__Lib_MathDouble.c,1339 :: 		
0x0F4E	0x5004      	MOVF        R4, 0 
0x0F50	0x0A00      	XORLW       0
0x0F52	0xE112      	BNZ         L_Div_32x32_FP11
;__Lib_MathDouble.c,1340 :: 		
0x0F54	0x5005      	MOVF        R5, 0 
0x0F56	0x0A00      	XORLW       0
0x0F58	0xE10F      	BNZ         L_Div_32x32_FP12
;__Lib_MathDouble.c,1341 :: 		
0x0F5A	0x5006      	MOVF        R6, 0 
0x0F5C	0x0A00      	XORLW       0
0x0F5E	0xE10C      	BNZ         L_Div_32x32_FP13
;__Lib_MathDouble.c,1342 :: 		
0x0F60	0x5007      	MOVF        R7, 0 
0x0F62	0x0A00      	XORLW       0
0x0F64	0xE109      	BNZ         L_Div_32x32_FP14
;__Lib_MathDouble.c,1343 :: 		
0x0F66	0x0EFF      	MOVLW       255
0x0F68	0x6E00      	MOVWF       R0 
;__Lib_MathDouble.c,1344 :: 		
0x0F6A	0x0EFF      	MOVLW       255
0x0F6C	0x6E01      	MOVWF       R1 
;__Lib_MathDouble.c,1345 :: 		
0x0F6E	0x0E7F      	MOVLW       127
0x0F70	0x6E02      	MOVWF       R2 
;__Lib_MathDouble.c,1346 :: 		
0x0F72	0x0EFF      	MOVLW       255
0x0F74	0x6E03      	MOVWF       R3 
;__Lib_MathDouble.c,1347 :: 		
0x0F76	0xD0A8      	BRA         L_end_Div_32x32_FP
;__Lib_MathDouble.c,1348 :: 		
L_Div_32x32_FP14:
L_Div_32x32_FP13:
L_Div_32x32_FP12:
L_Div_32x32_FP11:
;__Lib_MathDouble.c,1353 :: 		
0x0F78	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,1354 :: 		
0x0F7A	0x6A09      	CLRF        R9, 0
;__Lib_MathDouble.c,1356 :: 		
0x0F7C	0x5007      	MOVF        R7, 0, 0
;__Lib_MathDouble.c,1357 :: 		
0x0F7E	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1358 :: 		
0x0F80	0xF008EF52  	GOTO        JPDSETFDZ32
;__Lib_MathDouble.c,1360 :: 		
0x0F84	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,1361 :: 		
0x0F86	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1362 :: 		
0x0F88	0xF008EF57  	GOTO        JPDRES032
;__Lib_MathDouble.c,1364 :: 		
0x0F8C	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,1365 :: 		
0x0F8E	0x1806      	XORWF       R6, 0, 0
;__Lib_MathDouble.c,1366 :: 		
0x0F90	0x6E0A      	MOVWF       R10, 0
;__Lib_MathDouble.c,1367 :: 		
0x0F92	0x8E02      	BSF         R2, 7, 0
;__Lib_MathDouble.c,1368 :: 		
0x0F94	0x8E06      	BSF         R6, 7, 0
;__Lib_MathDouble.c,1370 :: 		
0x0F96	0x6A0E      	CLRF        R14, 0
;__Lib_MathDouble.c,1371 :: 		
0x0F98	0xF008C002  	MOVFF       R2, R8
;__Lib_MathDouble.c,1372 :: 		
0x0F9C	0xF00CC001  	MOVFF       R1, R12
;__Lib_MathDouble.c,1373 :: 		
0x0FA0	0xF00DC000  	MOVFF       R0, R13
;__Lib_MathDouble.c,1375 :: 		
0x0FA4	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,1376 :: 		
0x0FA6	0x5E0D      	SUBWF       R13, 1, 0
;__Lib_MathDouble.c,1377 :: 		
0x0FA8	0x5005      	MOVF        R5, 0, 0
;__Lib_MathDouble.c,1378 :: 		
0x0FAA	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1379 :: 		
0x0FAC	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_MathDouble.c,1381 :: 		
0x0FAE	0x5E0C      	SUBWF       R12, 1, 0
;__Lib_MathDouble.c,1382 :: 		
0x0FB0	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,1383 :: 		
0x0FB2	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1384 :: 		
0x0FB4	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_MathDouble.c,1386 :: 		
0x0FB6	0x5E08      	SUBWF       R8, 1, 0
;__Lib_MathDouble.c,1387 :: 		
0x0FB8	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,1388 :: 		
0x0FBA	0x6A0C      	CLRF        R12, 0
;__Lib_MathDouble.c,1389 :: 		
0x0FBC	0x6A0D      	CLRF        R13, 0
;__Lib_MathDouble.c,1390 :: 		
0x0FBE	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1391 :: 		
0x0FC0	0xF007EFE9  	GOTO        DALIGN32OK
;__Lib_MathDouble.c,1393 :: 		
0x0FC4	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,1394 :: 		
0x0FC6	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,1395 :: 		
0x0FC8	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,1396 :: 		
0x0FCA	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,1397 :: 		
0x0FCC	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,1398 :: 		
0x0FCE	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,1399 :: 		
0x0FD0	0x6E0E      	MOVWF       R14, 0
;__Lib_MathDouble.c,1400 :: 		
DALIGN32OK:
;__Lib_MathDouble.c,1401 :: 		
0x0FD2	0x5007      	MOVF        R7, 0, 0
;__Lib_MathDouble.c,1402 :: 		
0x0FD4	0x5E03      	SUBWF       R3, 1, 0
;__Lib_MathDouble.c,1403 :: 		
0x0FD6	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1404 :: 		
0x0FD8	0xF007EFF6  	GOTO        ALTB32
;__Lib_MathDouble.c,1406 :: 		
0x0FDC	0x0E7E      	MOVLW       126
;__Lib_MathDouble.c,1407 :: 		
0x0FDE	0x240E      	ADDWF       R14, 0, 0
;__Lib_MathDouble.c,1408 :: 		
0x0FE0	0x2603      	ADDWF       R3, 1, 0
;__Lib_MathDouble.c,1409 :: 		
0x0FE2	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_MathDouble.c,1410 :: 		
0x0FE4	0xF008EF5C  	GOTO        JPDSETFOV32
;__Lib_MathDouble.c,1411 :: 		
0x0FE8	0xF007EFFC  	GOTO        DARGOK32
;__Lib_MathDouble.c,1412 :: 		
ALTB32:
;__Lib_MathDouble.c,1413 :: 		
0x0FEC	0x0E7E      	MOVLW       126
;__Lib_MathDouble.c,1414 :: 		
0x0FEE	0x240E      	ADDWF       R14, 0, 0
;__Lib_MathDouble.c,1415 :: 		
0x0FF0	0x2603      	ADDWF       R3, 1, 0
;__Lib_MathDouble.c,1416 :: 		
0x0FF2	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1417 :: 		
0x0FF4	0xF008EF61  	GOTO        JPDSETFUN32
;__Lib_MathDouble.c,1418 :: 		
DARGOK32:
;__Lib_MathDouble.c,1419 :: 		
0x0FF8	0x0E18      	MOVLW       24
;__Lib_MathDouble.c,1420 :: 		
0x0FFA	0x6E0B      	MOVWF       R11, 0
;__Lib_MathDouble.c,1421 :: 		
DLOOP32:
;__Lib_MathDouble.c,1422 :: 		
0x0FFC	0x360D      	RLCF        R13, 1, 0
;__Lib_MathDouble.c,1423 :: 		
0x0FFE	0x360C      	RLCF        R12, 1, 0
;__Lib_MathDouble.c,1424 :: 		
0x1000	0x3608      	RLCF        R8, 1, 0
;__Lib_MathDouble.c,1425 :: 		
0x1002	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,1426 :: 		
0x1004	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,1427 :: 		
0x1006	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,1428 :: 		
0x1008	0x360E      	RLCF        R14, 1, 0
;__Lib_MathDouble.c,1430 :: 		
0x100A	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,1431 :: 		
0x100C	0x5E00      	SUBWF       R0, 1, 0
;__Lib_MathDouble.c,1432 :: 		
0x100E	0x5005      	MOVF        R5, 0, 0
;__Lib_MathDouble.c,1433 :: 		
0x1010	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1434 :: 		
0x1012	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_MathDouble.c,1436 :: 		
0x1014	0x5E01      	SUBWF       R1, 1, 0
;__Lib_MathDouble.c,1437 :: 		
0x1016	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,1438 :: 		
0x1018	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1439 :: 		
0x101A	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_MathDouble.c,1441 :: 		
0x101C	0x5E02      	SUBWF       R2, 1, 0
;__Lib_MathDouble.c,1442 :: 		
0x101E	0x3406      	RLCF        R6, 0, 0
;__Lib_MathDouble.c,1443 :: 		
0x1020	0x120E      	IORWF       R14, 1, 0
;__Lib_MathDouble.c,1444 :: 		
0x1022	0xA00E      	BTFSS       R14, 0, 0
;__Lib_MathDouble.c,1445 :: 		
0x1024	0xF008EF17  	GOTO        DREST32
;__Lib_MathDouble.c,1446 :: 		
0x1028	0x800D      	BSF         R13, 0, 0
;__Lib_MathDouble.c,1447 :: 		
0x102A	0xF008EF22  	GOTO        DOK32
;__Lib_MathDouble.c,1448 :: 		
DREST32:
;__Lib_MathDouble.c,1449 :: 		
0x102E	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,1450 :: 		
0x1030	0x2600      	ADDWF       R0, 1, 0
;__Lib_MathDouble.c,1451 :: 		
0x1032	0x5005      	MOVF        R5, 0, 0
;__Lib_MathDouble.c,1452 :: 		
0x1034	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_MathDouble.c,1453 :: 		
0x1036	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_MathDouble.c,1455 :: 		
0x1038	0x2601      	ADDWF       R1, 1, 0
;__Lib_MathDouble.c,1456 :: 		
0x103A	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,1457 :: 		
0x103C	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_MathDouble.c,1458 :: 		
0x103E	0x2806      	INCF        R6, 0, 0
;__Lib_MathDouble.c,1459 :: 		
0x1040	0x2602      	ADDWF       R2, 1, 0
;__Lib_MathDouble.c,1460 :: 		
0x1042	0x900D      	BCF         R13, 0, 0
;__Lib_MathDouble.c,1461 :: 		
DOK32:
;__Lib_MathDouble.c,1462 :: 		
0x1044	0x2E0B      	DECFSZ      R11, 1, 0
;__Lib_MathDouble.c,1463 :: 		
0x1046	0xF007EFFE  	GOTO        DLOOP32
;__Lib_MathDouble.c,1467 :: 		
0x104A	0xF008EF48  	GOTO        DIV32OK
;__Lib_MathDouble.c,1468 :: 		
0x104E	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,1469 :: 		
0x1050	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,1470 :: 		
0x1052	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,1471 :: 		
0x1054	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,1472 :: 		
0x1056	0x360E      	RLCF        R14, 1, 0
;__Lib_MathDouble.c,1474 :: 		
0x1058	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,1475 :: 		
0x105A	0x5E00      	SUBWF       R0, 1, 0
;__Lib_MathDouble.c,1476 :: 		
0x105C	0x5005      	MOVF        R5, 0, 0
;__Lib_MathDouble.c,1477 :: 		
0x105E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1478 :: 		
0x1060	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_MathDouble.c,1479 :: 		
0x1062	0x5E01      	SUBWF       R1, 1, 0
;__Lib_MathDouble.c,1480 :: 		
0x1064	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,1481 :: 		
0x1066	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1482 :: 		
0x1068	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_MathDouble.c,1483 :: 		
0x106A	0x5E02      	SUBWF       R2, 1, 0
;__Lib_MathDouble.c,1484 :: 		
0x106C	0x3406      	RLCF        R6, 0, 0
;__Lib_MathDouble.c,1485 :: 		
0x106E	0x100E      	IORWF       R14, 0, 0
;__Lib_MathDouble.c,1486 :: 		
0x1070	0x0B01      	ANDLW       1
;__Lib_MathDouble.c,1487 :: 		
0x1072	0x260D      	ADDWF       R13, 1, 0
;__Lib_MathDouble.c,1488 :: 		
0x1074	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_MathDouble.c,1489 :: 		
0x1076	0x2A0C      	INCF        R12, 1, 0
;__Lib_MathDouble.c,1490 :: 		
0x1078	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1491 :: 		
0x107A	0x2A08      	INCF        R8, 1, 0
;__Lib_MathDouble.c,1492 :: 		
0x107C	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,1493 :: 		
0x107E	0xF008EF48  	GOTO        DIV32OK
;__Lib_MathDouble.c,1494 :: 		
0x1082	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,1495 :: 		
0x1084	0x320C      	RRCF        R12, 1, 0
;__Lib_MathDouble.c,1496 :: 		
0x1086	0x320D      	RRCF        R13, 1, 0
;__Lib_MathDouble.c,1497 :: 		
0x1088	0x2A03      	INCF        R3, 1, 0
;__Lib_MathDouble.c,1498 :: 		
0x108A	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1499 :: 		
0x108C	0xF008EF5C  	GOTO        JPDSETFOV32
;__Lib_MathDouble.c,1500 :: 		
DIV32OK:
;__Lib_MathDouble.c,1501 :: 		
0x1090	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,1502 :: 		
0x1092	0x9E08      	BCF         R8, 7, 0
;__Lib_MathDouble.c,1503 :: 		
0x1094	0x5008      	MOVF        R8, 0, 0
;__Lib_MathDouble.c,1504 :: 		
0x1096	0x6E02      	MOVWF       R2, 0
;__Lib_MathDouble.c,1505 :: 		
0x1098	0x500C      	MOVF        R12, 0, 0
;__Lib_MathDouble.c,1506 :: 		
0x109A	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,1507 :: 		
0x109C	0x500D      	MOVF        R13, 0, 0
;__Lib_MathDouble.c,1508 :: 		
0x109E	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,1511 :: 		
0x10A0	0xF008EF64  	GOTO        DIV32EEE
;__Lib_MathDouble.c,1512 :: 		
JPDSETFDZ32:
;__Lib_MathDouble.c,1513 :: 		
0x10A4	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,1516 :: 		
0x10A6	0xF001EC12  	CALL        _SETFDZ32, 0
;__Lib_MathDouble.c,1518 :: 		
0x10AA	0xF008EF64  	GOTO        DIV32EEE
;__Lib_MathDouble.c,1519 :: 		
JPDRES032:
;__Lib_MathDouble.c,1520 :: 		
0x10AE	0x0E02      	MOVLW       2
;__Lib_MathDouble.c,1523 :: 		
0x10B0	0xF000ECE4  	CALL        _RES032, 0
;__Lib_MathDouble.c,1525 :: 		
0x10B4	0xF008EF64  	GOTO        DIV32EEE
;__Lib_MathDouble.c,1526 :: 		
JPDSETFOV32:
;__Lib_MathDouble.c,1527 :: 		
0x10B8	0x0E04      	MOVLW       4
;__Lib_MathDouble.c,1530 :: 		
0x10BA	0xF000ECBC  	CALL        _SETFOV32, 0
;__Lib_MathDouble.c,1532 :: 		
0x10BE	0xF008EF64  	GOTO        DIV32EEE
;__Lib_MathDouble.c,1533 :: 		
JPDSETFUN32:
;__Lib_MathDouble.c,1534 :: 		
0x10C2	0x0E08      	MOVLW       8
;__Lib_MathDouble.c,1537 :: 		
0x10C4	0xF000ECAB  	CALL        _SETFUN32, 0
;__Lib_MathDouble.c,1539 :: 		
DIV32EEE:
;__Lib_MathDouble.c,1547 :: 		
L_end_Div_32x32_FP:
0x10C8	0x0012      	RETURN      0
; end of _Div_32x32_FP
_Word2Double:
;__Lib_MathDouble.c,2335 :: 		
;__Lib_MathDouble.c,2344 :: 		
0x10CA	0x5000      	MOVF        R0, 0, 0
;__Lib_MathDouble.c,2345 :: 		
0x10CC	0x6E08      	MOVWF       R8, 0
;__Lib_MathDouble.c,2346 :: 		
0x10CE	0x5001      	MOVF        R1, 0, 0
;__Lib_MathDouble.c,2347 :: 		
0x10D0	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,2348 :: 		
0x10D2	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,2349 :: 		
0x10D4	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,2350 :: 		
0x10D6	0x6A03      	CLRF        R3, 0
;__Lib_MathDouble.c,2353 :: 		
0x10D8	0x6A0B      	CLRF        R11, 0
;__Lib_MathDouble.c,2354 :: 		
0x10DA	0x6A0C      	CLRF        R12, 0
;__Lib_MathDouble.c,2356 :: 		
0x10DC	0x0E96      	MOVLW       150
;__Lib_MathDouble.c,2357 :: 		
0x10DE	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,2358 :: 		
0x10E0	0x6A0A      	CLRF        R10, 0
;__Lib_MathDouble.c,2360 :: 		
0x10E2	0xF001C000  	MOVFF       R0, R1
;__Lib_MathDouble.c,2361 :: 		
0x10E6	0xF000C008  	MOVFF       R8, R0
;__Lib_MathDouble.c,2362 :: 		
0x10EA	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,2363 :: 		
0x10EC	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,2365 :: 		
0x10EE	0xF001EC3D  	CALL        _NRM3232, 0
;__Lib_MathDouble.c,2366 :: 		
L_end_Word2Double:
0x10F2	0x0012      	RETURN      0
; end of _Word2Double
_lcd_cmd:
;lcd_4x20.h,132 :: 		void lcd_cmd(char comando){
;lcd_4x20.h,133 :: 		lcd_send_byte(0, comando);
0x10F4	0x0102      	MOVLB       2
0x10F6	0x6B52      	CLRF        FARG_lcd_send_byte_address, 1
0x10F8	0xF253C21D  	MOVFF       FARG_lcd_cmd_comando, FARG_lcd_send_byte_enviar
0x10FC	0xF000EC30  	CALL        _lcd_send_byte, 0
;lcd_4x20.h,134 :: 		delay_ms(2);
0x1100	0x0E0D      	MOVLW       13
0x1102	0x6E0C      	MOVWF       R12, 0
0x1104	0x0EFB      	MOVLW       251
0x1106	0x6E0D      	MOVWF       R13, 0
L_lcd_cmd25:
0x1108	0x2E0D      	DECFSZ      R13, 1, 0
0x110A	0xD7FE      	BRA         L_lcd_cmd25
0x110C	0x2E0C      	DECFSZ      R12, 1, 0
0x110E	0xD7FC      	BRA         L_lcd_cmd25
0x1110	0x0000      	NOP
0x1112	0x0000      	NOP
;lcd_4x20.h,135 :: 		}
L_end_lcd_cmd:
0x1114	0x0012      	RETURN      0
; end of _lcd_cmd
_muestraEstatus:
;rutinasensores_v4(mstr-slv).h,42 :: 		void muestraEstatus(){
;rutinasensores_v4(mstr-slv).h,43 :: 		if(MSTR){
0x1116	0xA483      	BTFSS       PORTD, 2 
0x1118	0xD0CE      	BRA         L_muestraEstatus173
;rutinasensores_v4(mstr-slv).h,44 :: 		lcd_out(3,8,"MST");
0x111A	0x0E03      	MOVLW       3
0x111C	0x0102      	MOVLB       2
0x111E	0x6F36      	MOVWF       FARG_lcd_out_fila, 1
0x1120	0x0E08      	MOVLW       8
0x1122	0x6F37      	MOVWF       FARG_lcd_out_col, 1
0x1124	0x0E8E      	MOVLW       ?lstr1_MyProject
0x1126	0x6F38      	MOVWF       FARG_lcd_out_texto, 1
0x1128	0x0E00      	MOVLW       hi_addr(?lstr1_MyProject)
0x112A	0x6F39      	MOVWF       FARG_lcd_out_texto+1, 1
0x112C	0xF002EC75  	CALL        _lcd_out, 0
;rutinasensores_v4(mstr-slv).h,45 :: 		lecturaTablaS = eepromLeenumero(0x0000,2);
0x1130	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x1132	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x1134	0x0E02      	MOVLW       2
0x1136	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x1138	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x113C	0xF0C0C000  	MOVFF       R0, _lecturaTablaS
0x1140	0xF0C1C001  	MOVFF       R1, _lecturaTablaS+1
;rutinasensores_v4(mstr-slv).h,46 :: 		bytetostr(lecturaTablaS, auxS);
0x1144	0xF236C000  	MOVFF       R0, FARG_ByteToStr_input
0x1148	0x0EB4      	MOVLW       _auxS
0x114A	0x6F37      	MOVWF       FARG_ByteToStr_output, 1
0x114C	0x0E00      	MOVLW       hi_addr(_auxS)
0x114E	0x6F38      	MOVWF       FARG_ByteToStr_output+1, 1
0x1150	0xF004EC53  	CALL        _ByteToStr, 0
;rutinasensores_v4(mstr-slv).h,47 :: 		lcd_out(1, 15, auxS);
0x1154	0x0E01      	MOVLW       1
0x1156	0x6F36      	MOVWF       FARG_lcd_out_fila, 1
0x1158	0x0E0F      	MOVLW       15
0x115A	0x6F37      	MOVWF       FARG_lcd_out_col, 1
0x115C	0x0EB4      	MOVLW       _auxS
0x115E	0x6F38      	MOVWF       FARG_lcd_out_texto, 1
0x1160	0x0E00      	MOVLW       hi_addr(_auxS)
0x1162	0x6F39      	MOVWF       FARG_lcd_out_texto+1, 1
0x1164	0xF002EC75  	CALL        _lcd_out, 0
;rutinasensores_v4(mstr-slv).h,48 :: 		lecturaTablaSubenE = eepromLeeNumero(0x0900, 2);
0x1168	0x0E00      	MOVLW       0
0x116A	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x116C	0x0E09      	MOVLW       9
0x116E	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x1170	0x0E02      	MOVLW       2
0x1172	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x1174	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x1178	0xF0C2C000  	MOVFF       R0, _lecturaTablaSubenE
0x117C	0xF0C3C001  	MOVFF       R1, _lecturaTablaSubenE+1
;rutinasensores_v4(mstr-slv).h,49 :: 		bytetostr(lecturaTablaSubenE, auxS);
0x1180	0xF236C000  	MOVFF       R0, FARG_ByteToStr_input
0x1184	0x0EB4      	MOVLW       _auxS
0x1186	0x6F37      	MOVWF       FARG_ByteToStr_output, 1
0x1188	0x0E00      	MOVLW       hi_addr(_auxS)
0x118A	0x6F38      	MOVWF       FARG_ByteToStr_output+1, 1
0x118C	0xF004EC53  	CALL        _ByteToStr, 0
;rutinasensores_v4(mstr-slv).h,50 :: 		lcd_out(1, 18, auxS);
0x1190	0x0E01      	MOVLW       1
0x1192	0x6F36      	MOVWF       FARG_lcd_out_fila, 1
0x1194	0x0E12      	MOVLW       18
0x1196	0x6F37      	MOVWF       FARG_lcd_out_col, 1
0x1198	0x0EB4      	MOVLW       _auxS
0x119A	0x6F38      	MOVWF       FARG_lcd_out_texto, 1
0x119C	0x0E00      	MOVLW       hi_addr(_auxS)
0x119E	0x6F39      	MOVWF       FARG_lcd_out_texto+1, 1
0x11A0	0xF002EC75  	CALL        _lcd_out, 0
;rutinasensores_v4(mstr-slv).h,54 :: 		lecturaTablaB = eepromLeeNumero(0x0003,2);
0x11A4	0x0E03      	MOVLW       3
0x11A6	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x11A8	0x0E00      	MOVLW       0
0x11AA	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x11AC	0x0E02      	MOVLW       2
0x11AE	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x11B0	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x11B4	0xF0D0C000  	MOVFF       R0, _lecturaTablaB
0x11B8	0xF0D1C001  	MOVFF       R1, _lecturaTablaB+1
;rutinasensores_v4(mstr-slv).h,55 :: 		bytetostr(lecturaTablaB, auxB);
0x11BC	0xF236C000  	MOVFF       R0, FARG_ByteToStr_input
0x11C0	0x0EC4      	MOVLW       _auxB
0x11C2	0x6F37      	MOVWF       FARG_ByteToStr_output, 1
0x11C4	0x0E00      	MOVLW       hi_addr(_auxB)
0x11C6	0x6F38      	MOVWF       FARG_ByteToStr_output+1, 1
0x11C8	0xF004EC53  	CALL        _ByteToStr, 0
;rutinasensores_v4(mstr-slv).h,56 :: 		lcd_out(2, 15, auxB);
0x11CC	0x0E02      	MOVLW       2
0x11CE	0x6F36      	MOVWF       FARG_lcd_out_fila, 1
0x11D0	0x0E0F      	MOVLW       15
0x11D2	0x6F37      	MOVWF       FARG_lcd_out_col, 1
0x11D4	0x0EC4      	MOVLW       _auxB
0x11D6	0x6F38      	MOVWF       FARG_lcd_out_texto, 1
0x11D8	0x0E00      	MOVLW       hi_addr(_auxB)
0x11DA	0x6F39      	MOVWF       FARG_lcd_out_texto+1, 1
0x11DC	0xF002EC75  	CALL        _lcd_out, 0
;rutinasensores_v4(mstr-slv).h,57 :: 		lecturaTablaBajanE = eepromLeeNumero(0x0700, 2);
0x11E0	0x0E00      	MOVLW       0
0x11E2	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x11E4	0x0E07      	MOVLW       7
0x11E6	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x11E8	0x0E02      	MOVLW       2
0x11EA	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x11EC	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x11F0	0xF0B2C000  	MOVFF       R0, _lecturaTablaBajanE
0x11F4	0xF0B3C001  	MOVFF       R1, _lecturaTablaBajanE+1
;rutinasensores_v4(mstr-slv).h,58 :: 		bytetostr(lecturaTablaBajanE, auxB);
0x11F8	0xF236C000  	MOVFF       R0, FARG_ByteToStr_input
0x11FC	0x0EC4      	MOVLW       _auxB
0x11FE	0x6F37      	MOVWF       FARG_ByteToStr_output, 1
0x1200	0x0E00      	MOVLW       hi_addr(_auxB)
0x1202	0x6F38      	MOVWF       FARG_ByteToStr_output+1, 1
0x1204	0xF004EC53  	CALL        _ByteToStr, 0
;rutinasensores_v4(mstr-slv).h,59 :: 		lcd_out(2, 18, auxB);
0x1208	0x0E02      	MOVLW       2
0x120A	0x6F36      	MOVWF       FARG_lcd_out_fila, 1
0x120C	0x0E12      	MOVLW       18
0x120E	0x6F37      	MOVWF       FARG_lcd_out_col, 1
0x1210	0x0EC4      	MOVLW       _auxB
0x1212	0x6F38      	MOVWF       FARG_lcd_out_texto, 1
0x1214	0x0E00      	MOVLW       hi_addr(_auxB)
0x1216	0x6F39      	MOVWF       FARG_lcd_out_texto+1, 1
0x1218	0xF002EC75  	CALL        _lcd_out, 0
;rutinasensores_v4(mstr-slv).h,63 :: 		lecturaTablaPVerdaderos = eepromLeeNumero(0x0005, 2);
0x121C	0x0E05      	MOVLW       5
0x121E	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x1220	0x0E00      	MOVLW       0
0x1222	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x1224	0x0E02      	MOVLW       2
0x1226	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x1228	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x122C	0xF0EEC000  	MOVFF       R0, _lecturaTablaPVerdaderos
0x1230	0xF0EFC001  	MOVFF       R1, _lecturaTablaPVerdaderos+1
;rutinasensores_v4(mstr-slv).h,64 :: 		bytetostr(lecturaTablaPVerdaderos, auxP);
0x1234	0xF236C000  	MOVFF       R0, FARG_ByteToStr_input
0x1238	0x0E94      	MOVLW       _auxP
0x123A	0x6F37      	MOVWF       FARG_ByteToStr_output, 1
0x123C	0x0E00      	MOVLW       hi_addr(_auxP)
0x123E	0x6F38      	MOVWF       FARG_ByteToStr_output+1, 1
0x1240	0xF004EC53  	CALL        _ByteToStr, 0
;rutinasensores_v4(mstr-slv).h,65 :: 		lcd_out(4, 17, auxP);
0x1244	0x0E04      	MOVLW       4
0x1246	0x6F36      	MOVWF       FARG_lcd_out_fila, 1
0x1248	0x0E11      	MOVLW       17
0x124A	0x6F37      	MOVWF       FARG_lcd_out_col, 1
0x124C	0x0E94      	MOVLW       _auxP
0x124E	0x6F38      	MOVWF       FARG_lcd_out_texto, 1
0x1250	0x0E00      	MOVLW       hi_addr(_auxP)
0x1252	0x6F39      	MOVWF       FARG_lcd_out_texto+1, 1
0x1254	0xF002EC75  	CALL        _lcd_out, 0
;rutinasensores_v4(mstr-slv).h,69 :: 		lecturaBloqueo = eepromLeenumero(0x000B, 1) + eepromLeeNumero(0x000C, 1);
0x1258	0x0E0B      	MOVLW       11
0x125A	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x125C	0x0E00      	MOVLW       0
0x125E	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x1260	0x0E01      	MOVLW       1
0x1262	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x1264	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x1268	0xF21DC000  	MOVFF       R0, FLOC__muestraEstatus
0x126C	0xF21EC001  	MOVFF       R1, FLOC__muestraEstatus+1
0x1270	0xF21FC002  	MOVFF       R2, FLOC__muestraEstatus+2
0x1274	0xF220C003  	MOVFF       R3, FLOC__muestraEstatus+3
0x1278	0x0E0C      	MOVLW       12
0x127A	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x127C	0x0E00      	MOVLW       0
0x127E	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x1280	0x0E01      	MOVLW       1
0x1282	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x1284	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x1288	0x511D      	MOVF        FLOC__muestraEstatus, 0, 1
0x128A	0x2600      	ADDWF       R0, 1 
0x128C	0xF093C000  	MOVFF       R0, _lecturaBloqueo
;rutinasensores_v4(mstr-slv).h,70 :: 		bytetostr(lecturaBloqueo, auxBloq);
0x1290	0xF236C000  	MOVFF       R0, FARG_ByteToStr_input
0x1294	0x0EA0      	MOVLW       _auxBloq
0x1296	0x6F37      	MOVWF       FARG_ByteToStr_output, 1
0x1298	0x0E00      	MOVLW       hi_addr(_auxBloq)
0x129A	0x6F38      	MOVWF       FARG_ByteToStr_output+1, 1
0x129C	0xF004EC53  	CALL        _ByteToStr, 0
;rutinasensores_v4(mstr-slv).h,71 :: 		lcd_out(3, 18, auxBloq);
0x12A0	0x0E03      	MOVLW       3
0x12A2	0x6F36      	MOVWF       FARG_lcd_out_fila, 1
0x12A4	0x0E12      	MOVLW       18
0x12A6	0x6F37      	MOVWF       FARG_lcd_out_col, 1
0x12A8	0x0EA0      	MOVLW       _auxBloq
0x12AA	0x6F38      	MOVWF       FARG_lcd_out_texto, 1
0x12AC	0x0E00      	MOVLW       hi_addr(_auxBloq)
0x12AE	0x6F39      	MOVWF       FARG_lcd_out_texto+1, 1
0x12B0	0xF002EC75  	CALL        _lcd_out, 0
;rutinasensores_v4(mstr-slv).h,75 :: 		}
0x12B4	0xD081      	BRA         L_muestraEstatus174
L_muestraEstatus173:
;rutinasensores_v4(mstr-slv).h,76 :: 		else if(!MSTR){
0x12B6	0xB483      	BTFSC       PORTD, 2 
0x12B8	0xD07F      	BRA         L_muestraEstatus175
;rutinasensores_v4(mstr-slv).h,77 :: 		lcd_out(3, 8, "SLV");
0x12BA	0x0102      	MOVLB       2
0x12BC	0x0E03      	MOVLW       3
0x12BE	0x6F36      	MOVWF       FARG_lcd_out_fila, 1
0x12C0	0x0E08      	MOVLW       8
0x12C2	0x6F37      	MOVWF       FARG_lcd_out_col, 1
0x12C4	0x0EAE      	MOVLW       ?lstr2_MyProject
0x12C6	0x6F38      	MOVWF       FARG_lcd_out_texto, 1
0x12C8	0x0E00      	MOVLW       hi_addr(?lstr2_MyProject)
0x12CA	0x6F39      	MOVWF       FARG_lcd_out_texto+1, 1
0x12CC	0xF002EC75  	CALL        _lcd_out, 0
;rutinasensores_v4(mstr-slv).h,78 :: 		lecturaTablaS = eepromLeeNumero(0x0000,2);
0x12D0	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x12D2	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x12D4	0x0E02      	MOVLW       2
0x12D6	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x12D8	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x12DC	0xF0C0C000  	MOVFF       R0, _lecturaTablaS
0x12E0	0xF0C1C001  	MOVFF       R1, _lecturaTablaS+1
;rutinasensores_v4(mstr-slv).h,79 :: 		bytetostr(lecturaTablaS, auxS);
0x12E4	0xF236C000  	MOVFF       R0, FARG_ByteToStr_input
0x12E8	0x0EB4      	MOVLW       _auxS
0x12EA	0x6F37      	MOVWF       FARG_ByteToStr_output, 1
0x12EC	0x0E00      	MOVLW       hi_addr(_auxS)
0x12EE	0x6F38      	MOVWF       FARG_ByteToStr_output+1, 1
0x12F0	0xF004EC53  	CALL        _ByteToStr, 0
;rutinasensores_v4(mstr-slv).h,80 :: 		lcd_out(1, 16, auxS);
0x12F4	0x0E01      	MOVLW       1
0x12F6	0x6F36      	MOVWF       FARG_lcd_out_fila, 1
0x12F8	0x0E10      	MOVLW       16
0x12FA	0x6F37      	MOVWF       FARG_lcd_out_col, 1
0x12FC	0x0EB4      	MOVLW       _auxS
0x12FE	0x6F38      	MOVWF       FARG_lcd_out_texto, 1
0x1300	0x0E00      	MOVLW       hi_addr(_auxS)
0x1302	0x6F39      	MOVWF       FARG_lcd_out_texto+1, 1
0x1304	0xF002EC75  	CALL        _lcd_out, 0
;rutinasensores_v4(mstr-slv).h,84 :: 		lecturaTablaB = eepromLeeNumero(0x0003,2);
0x1308	0x0E03      	MOVLW       3
0x130A	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x130C	0x0E00      	MOVLW       0
0x130E	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x1310	0x0E02      	MOVLW       2
0x1312	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x1314	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x1318	0xF0D0C000  	MOVFF       R0, _lecturaTablaB
0x131C	0xF0D1C001  	MOVFF       R1, _lecturaTablaB+1
;rutinasensores_v4(mstr-slv).h,85 :: 		bytetostr(lecturaTablaB, auxB);
0x1320	0xF236C000  	MOVFF       R0, FARG_ByteToStr_input
0x1324	0x0EC4      	MOVLW       _auxB
0x1326	0x6F37      	MOVWF       FARG_ByteToStr_output, 1
0x1328	0x0E00      	MOVLW       hi_addr(_auxB)
0x132A	0x6F38      	MOVWF       FARG_ByteToStr_output+1, 1
0x132C	0xF004EC53  	CALL        _ByteToStr, 0
;rutinasensores_v4(mstr-slv).h,86 :: 		lcd_out(2, 16, auxB);
0x1330	0x0E02      	MOVLW       2
0x1332	0x6F36      	MOVWF       FARG_lcd_out_fila, 1
0x1334	0x0E10      	MOVLW       16
0x1336	0x6F37      	MOVWF       FARG_lcd_out_col, 1
0x1338	0x0EC4      	MOVLW       _auxB
0x133A	0x6F38      	MOVWF       FARG_lcd_out_texto, 1
0x133C	0x0E00      	MOVLW       hi_addr(_auxB)
0x133E	0x6F39      	MOVWF       FARG_lcd_out_texto+1, 1
0x1340	0xF002EC75  	CALL        _lcd_out, 0
;rutinasensores_v4(mstr-slv).h,90 :: 		lecturaTablaPasajerosTotales = eepromLeeNumero(0x0009, 2);
0x1344	0x0E09      	MOVLW       9
0x1346	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x1348	0x0E00      	MOVLW       0
0x134A	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x134C	0x0E02      	MOVLW       2
0x134E	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x1350	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x1354	0xF0ACC000  	MOVFF       R0, _lecturaTablaPasajerosTotales
0x1358	0xF0ADC001  	MOVFF       R1, _lecturaTablaPasajerosTotales+1
;rutinasensores_v4(mstr-slv).h,91 :: 		bytetostr(lecturaTablaPasajerosTotales, auxT);
0x135C	0xF236C000  	MOVFF       R0, FARG_ByteToStr_input
0x1360	0x0E82      	MOVLW       _auxT
0x1362	0x6F37      	MOVWF       FARG_ByteToStr_output, 1
0x1364	0x0E00      	MOVLW       hi_addr(_auxT)
0x1366	0x6F38      	MOVWF       FARG_ByteToStr_output+1, 1
0x1368	0xF004EC53  	CALL        _ByteToStr, 0
;rutinasensores_v4(mstr-slv).h,92 :: 		lcd_out(4, 18, auxT);
0x136C	0x0E04      	MOVLW       4
0x136E	0x6F36      	MOVWF       FARG_lcd_out_fila, 1
0x1370	0x0E12      	MOVLW       18
0x1372	0x6F37      	MOVWF       FARG_lcd_out_col, 1
0x1374	0x0E82      	MOVLW       _auxT
0x1376	0x6F38      	MOVWF       FARG_lcd_out_texto, 1
0x1378	0x0E00      	MOVLW       hi_addr(_auxT)
0x137A	0x6F39      	MOVWF       FARG_lcd_out_texto+1, 1
0x137C	0xF002EC75  	CALL        _lcd_out, 0
;rutinasensores_v4(mstr-slv).h,96 :: 		lecturaBloqueo = eepromLeenumero(0x000B, 1);
0x1380	0x0E0B      	MOVLW       11
0x1382	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x1384	0x0E00      	MOVLW       0
0x1386	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x1388	0x0E01      	MOVLW       1
0x138A	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x138C	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x1390	0xF093C000  	MOVFF       R0, _lecturaBloqueo
;rutinasensores_v4(mstr-slv).h,97 :: 		bytetostr(lecturaBloqueo, auxBloq);
0x1394	0xF236C000  	MOVFF       R0, FARG_ByteToStr_input
0x1398	0x0EA0      	MOVLW       _auxBloq
0x139A	0x6F37      	MOVWF       FARG_ByteToStr_output, 1
0x139C	0x0E00      	MOVLW       hi_addr(_auxBloq)
0x139E	0x6F38      	MOVWF       FARG_ByteToStr_output+1, 1
0x13A0	0xF004EC53  	CALL        _ByteToStr, 0
;rutinasensores_v4(mstr-slv).h,98 :: 		lcd_out(3, 18, auxBloq);
0x13A4	0x0E03      	MOVLW       3
0x13A6	0x6F36      	MOVWF       FARG_lcd_out_fila, 1
0x13A8	0x0E12      	MOVLW       18
0x13AA	0x6F37      	MOVWF       FARG_lcd_out_col, 1
0x13AC	0x0EA0      	MOVLW       _auxBloq
0x13AE	0x6F38      	MOVWF       FARG_lcd_out_texto, 1
0x13B0	0x0E00      	MOVLW       hi_addr(_auxBloq)
0x13B2	0x6F39      	MOVWF       FARG_lcd_out_texto+1, 1
0x13B4	0xF002EC75  	CALL        _lcd_out, 0
;rutinasensores_v4(mstr-slv).h,99 :: 		}
L_muestraEstatus175:
L_muestraEstatus174:
0x13B8	0x0102      	MOVLB       2
;rutinasensores_v4(mstr-slv).h,100 :: 		lcd_outConst(4, 11, "TOTAL:");
0x13BA	0x0E04      	MOVLW       4
0x13BC	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x13BE	0x0E0B      	MOVLW       11
0x13C0	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x13C2	0x0E1C      	MOVLW       ?lstr_3_MyProject
0x13C4	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x13C6	0x0EDB      	MOVLW       hi_addr(?lstr_3_MyProject)
0x13C8	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x13CA	0x0E00      	MOVLW       higher_addr(?lstr_3_MyProject)
0x13CC	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x13CE	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,101 :: 		lcd_outConst(1, 10, "SUBEN:");
0x13D2	0x0E01      	MOVLW       1
0x13D4	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x13D6	0x0E0A      	MOVLW       10
0x13D8	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x13DA	0x0E15      	MOVLW       ?lstr_4_MyProject
0x13DC	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x13DE	0x0EDB      	MOVLW       hi_addr(?lstr_4_MyProject)
0x13E0	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x13E2	0x0E00      	MOVLW       higher_addr(?lstr_4_MyProject)
0x13E4	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x13E6	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,102 :: 		lcd_outConst(2, 10, "BAJAN:");
0x13EA	0x0E02      	MOVLW       2
0x13EC	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x13EE	0x0E0A      	MOVLW       10
0x13F0	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x13F2	0x0E23      	MOVLW       ?lstr_5_MyProject
0x13F4	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x13F6	0x0EDB      	MOVLW       hi_addr(?lstr_5_MyProject)
0x13F8	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x13FA	0x0E00      	MOVLW       higher_addr(?lstr_5_MyProject)
0x13FC	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x13FE	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,103 :: 		LCD_OUTCONST(3, 1, "ESPERA");
0x1402	0x0E03      	MOVLW       3
0x1404	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x1406	0x0E01      	MOVLW       1
0x1408	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x140A	0x0E31      	MOVLW       ?lstr_6_MyProject
0x140C	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x140E	0x0EDB      	MOVLW       hi_addr(?lstr_6_MyProject)
0x1410	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x1412	0x0E00      	MOVLW       higher_addr(?lstr_6_MyProject)
0x1414	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x1416	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,104 :: 		lcd_outConst(3, 12, "BLOCK:");
0x141A	0x0E03      	MOVLW       3
0x141C	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x141E	0x0E0C      	MOVLW       12
0x1420	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x1422	0x0E2A      	MOVLW       ?lstr_7_MyProject
0x1424	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x1426	0x0EDB      	MOVLW       hi_addr(?lstr_7_MyProject)
0x1428	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x142A	0x0E00      	MOVLW       higher_addr(?lstr_7_MyProject)
0x142C	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x142E	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,105 :: 		}
L_end_muestraEstatus:
0x1432	0x0012      	RETURN      0
; end of _muestraEstatus
_eepromEscribeNumero:
;eepromi2cbrian_v2.h,26 :: 		void eepromEscribeNumero(unsigned int Registro, long Dato, short BYTES){
;eepromi2cbrian_v2.h,27 :: 		long    bufferLong[] = {0,0,0,0};
0x1434	0x0102      	MOVLB       2
0x1436	0x6B24      	CLRF        eepromEscribeNumero_bufferLong_L0, 1
0x1438	0x6B25      	CLRF        eepromEscribeNumero_bufferLong_L0+1, 1
0x143A	0x6B26      	CLRF        eepromEscribeNumero_bufferLong_L0+2, 1
0x143C	0x6B27      	CLRF        eepromEscribeNumero_bufferLong_L0+3, 1
0x143E	0x6B28      	CLRF        eepromEscribeNumero_bufferLong_L0+4, 1
0x1440	0x6B29      	CLRF        eepromEscribeNumero_bufferLong_L0+5, 1
0x1442	0x6B2A      	CLRF        eepromEscribeNumero_bufferLong_L0+6, 1
0x1444	0x6B2B      	CLRF        eepromEscribeNumero_bufferLong_L0+7, 1
0x1446	0x6B2C      	CLRF        eepromEscribeNumero_bufferLong_L0+8, 1
0x1448	0x6B2D      	CLRF        eepromEscribeNumero_bufferLong_L0+9, 1
0x144A	0x6B2E      	CLRF        eepromEscribeNumero_bufferLong_L0+10, 1
0x144C	0x6B2F      	CLRF        eepromEscribeNumero_bufferLong_L0+11, 1
0x144E	0x6B30      	CLRF        eepromEscribeNumero_bufferLong_L0+12, 1
0x1450	0x6B31      	CLRF        eepromEscribeNumero_bufferLong_L0+13, 1
0x1452	0x6B32      	CLRF        eepromEscribeNumero_bufferLong_L0+14, 1
0x1454	0x6B33      	CLRF        eepromEscribeNumero_bufferLong_L0+15, 1
0x1456	0x6B34      	CLRF        eepromEscribeNumero_i_L0, 1
0x1458	0x6B35      	CLRF        eepromEscribeNumero_aux_L0, 1
;eepromi2cbrian_v2.h,29 :: 		RW = ESCRIBE;
0x145A	0x6A5A      	CLRF        _RW 
;eepromi2cbrian_v2.h,31 :: 		bufferLong[0] = Dato & 0x000000FF;
0x145C	0x0EFF      	MOVLW       255
0x145E	0x151F      	ANDWF       FARG_eepromEscribeNumero_Dato, 0, 1
0x1460	0x6F24      	MOVWF       eepromEscribeNumero_bufferLong_L0, 1
0x1462	0xF225C220  	MOVFF       FARG_eepromEscribeNumero_Dato+1, eepromEscribeNumero_bufferLong_L0+1
0x1466	0xF226C221  	MOVFF       FARG_eepromEscribeNumero_Dato+2, eepromEscribeNumero_bufferLong_L0+2
0x146A	0xF227C222  	MOVFF       FARG_eepromEscribeNumero_Dato+3, eepromEscribeNumero_bufferLong_L0+3
0x146E	0x0E00      	MOVLW       0
0x1470	0x1725      	ANDWF       eepromEscribeNumero_bufferLong_L0+1, 1, 1
0x1472	0x1726      	ANDWF       eepromEscribeNumero_bufferLong_L0+2, 1, 1
0x1474	0x1727      	ANDWF       eepromEscribeNumero_bufferLong_L0+3, 1, 1
;eepromi2cbrian_v2.h,32 :: 		bufferLong[1] = (Dato & 0x0000FF00)>>8;
0x1476	0x0E00      	MOVLW       0
0x1478	0x151F      	ANDWF       FARG_eepromEscribeNumero_Dato, 0, 1
0x147A	0x6F28      	MOVWF       eepromEscribeNumero_bufferLong_L0+4, 1
0x147C	0x0EFF      	MOVLW       255
0x147E	0x1520      	ANDWF       FARG_eepromEscribeNumero_Dato+1, 0, 1
0x1480	0x6F29      	MOVWF       eepromEscribeNumero_bufferLong_L0+5, 1
0x1482	0xF22AC221  	MOVFF       FARG_eepromEscribeNumero_Dato+2, eepromEscribeNumero_bufferLong_L0+6
0x1486	0xF22BC222  	MOVFF       FARG_eepromEscribeNumero_Dato+3, eepromEscribeNumero_bufferLong_L0+7
0x148A	0x0E00      	MOVLW       0
0x148C	0x172A      	ANDWF       eepromEscribeNumero_bufferLong_L0+6, 1, 1
0x148E	0x172B      	ANDWF       eepromEscribeNumero_bufferLong_L0+7, 1, 1
0x1490	0xF228C229  	MOVFF       eepromEscribeNumero_bufferLong_L0+5, eepromEscribeNumero_bufferLong_L0+4
0x1494	0xF229C22A  	MOVFF       eepromEscribeNumero_bufferLong_L0+6, eepromEscribeNumero_bufferLong_L0+5
0x1498	0xF22AC22B  	MOVFF       eepromEscribeNumero_bufferLong_L0+7, eepromEscribeNumero_bufferLong_L0+6
0x149C	0x0E00      	MOVLW       0
0x149E	0xBF2B      	BTFSC       eepromEscribeNumero_bufferLong_L0+7, 7, 1
0x14A0	0x0EFF      	MOVLW       255
0x14A2	0x6F2B      	MOVWF       eepromEscribeNumero_bufferLong_L0+7, 1
;eepromi2cbrian_v2.h,33 :: 		bufferLong[2] = (Dato & 0x00FF0000)>>16;
0x14A4	0x0E00      	MOVLW       0
0x14A6	0x151F      	ANDWF       FARG_eepromEscribeNumero_Dato, 0, 1
0x14A8	0x6F2C      	MOVWF       eepromEscribeNumero_bufferLong_L0+8, 1
0x14AA	0x0E00      	MOVLW       0
0x14AC	0x1520      	ANDWF       FARG_eepromEscribeNumero_Dato+1, 0, 1
0x14AE	0x6F2D      	MOVWF       eepromEscribeNumero_bufferLong_L0+9, 1
0x14B0	0x0EFF      	MOVLW       255
0x14B2	0x1521      	ANDWF       FARG_eepromEscribeNumero_Dato+2, 0, 1
0x14B4	0x6F2E      	MOVWF       eepromEscribeNumero_bufferLong_L0+10, 1
0x14B6	0x0E00      	MOVLW       0
0x14B8	0x1522      	ANDWF       FARG_eepromEscribeNumero_Dato+3, 0, 1
0x14BA	0x6F2F      	MOVWF       eepromEscribeNumero_bufferLong_L0+11, 1
0x14BC	0xF22CC22E  	MOVFF       eepromEscribeNumero_bufferLong_L0+10, eepromEscribeNumero_bufferLong_L0+8
0x14C0	0xF22DC22F  	MOVFF       eepromEscribeNumero_bufferLong_L0+11, eepromEscribeNumero_bufferLong_L0+9
0x14C4	0x0E00      	MOVLW       0
0x14C6	0xBF2F      	BTFSC       eepromEscribeNumero_bufferLong_L0+11, 7, 1
0x14C8	0x0EFF      	MOVLW       255
0x14CA	0x6F2F      	MOVWF       eepromEscribeNumero_bufferLong_L0+11, 1
;eepromi2cbrian_v2.h,34 :: 		bufferLong[3] = (Dato & 0xFF000000)>>24;
0x14CC	0x0E00      	MOVLW       0
0x14CE	0x151F      	ANDWF       FARG_eepromEscribeNumero_Dato, 0, 1
0x14D0	0x6F30      	MOVWF       eepromEscribeNumero_bufferLong_L0+12, 1
0x14D2	0x0E00      	MOVLW       0
0x14D4	0x1520      	ANDWF       FARG_eepromEscribeNumero_Dato+1, 0, 1
0x14D6	0x6F31      	MOVWF       eepromEscribeNumero_bufferLong_L0+13, 1
0x14D8	0x0E00      	MOVLW       0
0x14DA	0x1521      	ANDWF       FARG_eepromEscribeNumero_Dato+2, 0, 1
0x14DC	0x6F32      	MOVWF       eepromEscribeNumero_bufferLong_L0+14, 1
0x14DE	0x0EFF      	MOVLW       255
0x14E0	0x1522      	ANDWF       FARG_eepromEscribeNumero_Dato+3, 0, 1
0x14E2	0x6F33      	MOVWF       eepromEscribeNumero_bufferLong_L0+15, 1
0x14E4	0xF230C233  	MOVFF       eepromEscribeNumero_bufferLong_L0+15, eepromEscribeNumero_bufferLong_L0+12
0x14E8	0x6B31      	CLRF        eepromEscribeNumero_bufferLong_L0+13, 1
0x14EA	0x6B32      	CLRF        eepromEscribeNumero_bufferLong_L0+14, 1
0x14EC	0x6B33      	CLRF        eepromEscribeNumero_bufferLong_L0+15, 1
;eepromi2cbrian_v2.h,35 :: 		if(BYTES == 1){
0x14EE	0x5123      	MOVF        FARG_eepromEscribeNumero_BYTES, 0, 1
0x14F0	0x0A01      	XORLW       1
0x14F2	0xE139      	BNZ         L_eepromEscribeNumero117
;eepromi2cbrian_v2.h,36 :: 		while(i < BYTES){
L_eepromEscribeNumero118:
0x14F4	0x0102      	MOVLB       2
0x14F6	0x0E80      	MOVLW       128
0x14F8	0x1934      	XORWF       eepromEscribeNumero_i_L0, 0, 1
0x14FA	0x6E00      	MOVWF       R0 
0x14FC	0x0E80      	MOVLW       128
0x14FE	0x1923      	XORWF       FARG_eepromEscribeNumero_BYTES, 0, 1
0x1500	0x5C00      	SUBWF       R0, 0 
0x1502	0xE231      	BC          L_eepromEscribeNumero119
;eepromi2cbrian_v2.h,37 :: 		I2C_soft_start();
0x1504	0xF000EC9C  	CALL        _I2C_soft_start, 0
;eepromi2cbrian_v2.h,38 :: 		I2C_soft_write(EEPROM_DIR_24LC256 | RW);
0x1508	0x0EA0      	MOVLW       160
0x150A	0x105A      	IORWF       _RW, 0 
0x150C	0x6F50      	MOVWF       FARG_I2C_soft_write_dato, 1
0x150E	0xF000EC70  	CALL        _I2C_soft_write, 0
;eepromi2cbrian_v2.h,39 :: 		I2C_soft_write((registro & BYTE_ALTO)>>8);
0x1512	0x0E00      	MOVLW       0
0x1514	0x0102      	MOVLB       2
0x1516	0x151D      	ANDWF       FARG_eepromEscribeNumero_Registro, 0, 1
0x1518	0x6E03      	MOVWF       R3 
0x151A	0x511E      	MOVF        FARG_eepromEscribeNumero_Registro+1, 0, 1
0x151C	0x0BFF      	ANDLW       255
0x151E	0x6E04      	MOVWF       R4 
0x1520	0xF000C004  	MOVFF       R4, R0
0x1524	0x6A01      	CLRF        R1 
0x1526	0xF250C000  	MOVFF       R0, FARG_I2C_soft_write_dato
0x152A	0xF000EC70  	CALL        _I2C_soft_write, 0
;eepromi2cbrian_v2.h,40 :: 		I2C_soft_write(registro & BYTE_BAJO);
0x152E	0x0EFF      	MOVLW       255
0x1530	0x0102      	MOVLB       2
0x1532	0x151D      	ANDWF       FARG_eepromEscribeNumero_Registro, 0, 1
0x1534	0x6F50      	MOVWF       FARG_I2C_soft_write_dato, 1
0x1536	0xF000EC70  	CALL        _I2C_soft_write, 0
;eepromi2cbrian_v2.h,41 :: 		i++;
0x153A	0x0102      	MOVLB       2
0x153C	0x2B34      	INCF        eepromEscribeNumero_i_L0, 1, 1
;eepromi2cbrian_v2.h,42 :: 		I2C_soft_write(bufferLong[0]);
0x153E	0xF250C224  	MOVFF       eepromEscribeNumero_bufferLong_L0, FARG_I2C_soft_write_dato
0x1542	0xF000EC70  	CALL        _I2C_soft_write, 0
;eepromi2cbrian_v2.h,43 :: 		I2C_soft_stop();
0x1546	0xF000ECC8  	CALL        _I2C_soft_stop, 0
;eepromi2cbrian_v2.h,44 :: 		while(true){
L_eepromEscribeNumero120:
;eepromi2cbrian_v2.h,45 :: 		I2C_soft_start();
0x154A	0xF000EC9C  	CALL        _I2C_soft_start, 0
;eepromi2cbrian_v2.h,46 :: 		if(!I2C_soft_write(EEPROM_DIR_24LC256))
0x154E	0x0EA0      	MOVLW       160
0x1550	0x0102      	MOVLB       2
0x1552	0x6F50      	MOVWF       FARG_I2C_soft_write_dato, 1
0x1554	0xF000EC70  	CALL        _I2C_soft_write, 0
0x1558	0x5200      	MOVF        R0, 1 
0x155A	0xE101      	BNZ         L_eepromEscribeNumero122
;eepromi2cbrian_v2.h,47 :: 		break;
0x155C	0xD001      	BRA         L_eepromEscribeNumero121
L_eepromEscribeNumero122:
;eepromi2cbrian_v2.h,48 :: 		}
0x155E	0xD7F5      	BRA         L_eepromEscribeNumero120
L_eepromEscribeNumero121:
;eepromi2cbrian_v2.h,49 :: 		I2C_soft_stop();      // Issue stop signal
0x1560	0xF000ECC8  	CALL        _I2C_soft_stop, 0
;eepromi2cbrian_v2.h,50 :: 		}
0x1564	0xD7C7      	BRA         L_eepromEscribeNumero118
L_eepromEscribeNumero119:
;eepromi2cbrian_v2.h,51 :: 		}
L_eepromEscribeNumero117:
;eepromi2cbrian_v2.h,53 :: 		if(BYTES == 2){
0x1566	0x0102      	MOVLB       2
0x1568	0x5123      	MOVF        FARG_eepromEscribeNumero_BYTES, 0, 1
0x156A	0x0A02      	XORLW       2
0x156C	0xE155      	BNZ         L_eepromEscribeNumero123
;eepromi2cbrian_v2.h,54 :: 		while(i < BYTES){
L_eepromEscribeNumero124:
0x156E	0x0102      	MOVLB       2
0x1570	0x0E80      	MOVLW       128
0x1572	0x1934      	XORWF       eepromEscribeNumero_i_L0, 0, 1
0x1574	0x6E00      	MOVWF       R0 
0x1576	0x0E80      	MOVLW       128
0x1578	0x1923      	XORWF       FARG_eepromEscribeNumero_BYTES, 0, 1
0x157A	0x5C00      	SUBWF       R0, 0 
0x157C	0xE24D      	BC          L_eepromEscribeNumero125
;eepromi2cbrian_v2.h,55 :: 		I2C_soft_start();
0x157E	0xF000EC9C  	CALL        _I2C_soft_start, 0
;eepromi2cbrian_v2.h,56 :: 		I2C_soft_write(EEPROM_DIR_24LC256 | RW);
0x1582	0x0EA0      	MOVLW       160
0x1584	0x105A      	IORWF       _RW, 0 
0x1586	0x6F50      	MOVWF       FARG_I2C_soft_write_dato, 1
0x1588	0xF000EC70  	CALL        _I2C_soft_write, 0
;eepromi2cbrian_v2.h,57 :: 		I2C_soft_write((registro & BYTE_ALTO)>>8);
0x158C	0x0E00      	MOVLW       0
0x158E	0x0102      	MOVLB       2
0x1590	0x151D      	ANDWF       FARG_eepromEscribeNumero_Registro, 0, 1
0x1592	0x6E03      	MOVWF       R3 
0x1594	0x511E      	MOVF        FARG_eepromEscribeNumero_Registro+1, 0, 1
0x1596	0x0BFF      	ANDLW       255
0x1598	0x6E04      	MOVWF       R4 
0x159A	0xF000C004  	MOVFF       R4, R0
0x159E	0x6A01      	CLRF        R1 
0x15A0	0xF250C000  	MOVFF       R0, FARG_I2C_soft_write_dato
0x15A4	0xF000EC70  	CALL        _I2C_soft_write, 0
;eepromi2cbrian_v2.h,58 :: 		I2C_soft_write(registro & BYTE_BAJO);
0x15A8	0x0EFF      	MOVLW       255
0x15AA	0x0102      	MOVLB       2
0x15AC	0x151D      	ANDWF       FARG_eepromEscribeNumero_Registro, 0, 1
0x15AE	0x6F50      	MOVWF       FARG_I2C_soft_write_dato, 1
0x15B0	0xF000EC70  	CALL        _I2C_soft_write, 0
;eepromi2cbrian_v2.h,59 :: 		for(;aux < BYTES;aux++){
L_eepromEscribeNumero126:
0x15B4	0x0E80      	MOVLW       128
0x15B6	0x0102      	MOVLB       2
0x15B8	0x1935      	XORWF       eepromEscribeNumero_aux_L0, 0, 1
0x15BA	0x6E00      	MOVWF       R0 
0x15BC	0x0E80      	MOVLW       128
0x15BE	0x1923      	XORWF       FARG_eepromEscribeNumero_BYTES, 0, 1
0x15C0	0x5C00      	SUBWF       R0, 0 
0x15C2	0xE21A      	BC          L_eepromEscribeNumero127
;eepromi2cbrian_v2.h,60 :: 		I2C_soft_write(bufferLong[aux]);
0x15C4	0xF000C235  	MOVFF       eepromEscribeNumero_aux_L0, R0
0x15C8	0x0E00      	MOVLW       0
0x15CA	0xBF35      	BTFSC       eepromEscribeNumero_aux_L0, 7, 1
0x15CC	0x0EFF      	MOVLW       255
0x15CE	0x6E01      	MOVWF       R1 
0x15D0	0x3600      	RLCF        R0, 1 
0x15D2	0x9000      	BCF         R0, 0 
0x15D4	0x3601      	RLCF        R1, 1 
0x15D6	0x3600      	RLCF        R0, 1 
0x15D8	0x9000      	BCF         R0, 0 
0x15DA	0x3601      	RLCF        R1, 1 
0x15DC	0x0E24      	MOVLW       eepromEscribeNumero_bufferLong_L0
0x15DE	0x2400      	ADDWF       R0, 0 
0x15E0	0x6EE9      	MOVWF       FSR0L 
0x15E2	0x0E02      	MOVLW       hi_addr(eepromEscribeNumero_bufferLong_L0)
0x15E4	0x2001      	ADDWFC      R1, 0 
0x15E6	0x6EEA      	MOVWF       FSR0H 
0x15E8	0xF250CFEE  	MOVFF       POSTINC0, FARG_I2C_soft_write_dato
0x15EC	0xF000EC70  	CALL        _I2C_soft_write, 0
;eepromi2cbrian_v2.h,61 :: 		i++;
0x15F0	0x0102      	MOVLB       2
0x15F2	0x2B34      	INCF        eepromEscribeNumero_i_L0, 1, 1
;eepromi2cbrian_v2.h,59 :: 		for(;aux < BYTES;aux++){
0x15F4	0x2B35      	INCF        eepromEscribeNumero_aux_L0, 1, 1
;eepromi2cbrian_v2.h,62 :: 		}
0x15F6	0xD7DE      	BRA         L_eepromEscribeNumero126
L_eepromEscribeNumero127:
;eepromi2cbrian_v2.h,63 :: 		I2C_soft_stop();
0x15F8	0xF000ECC8  	CALL        _I2C_soft_stop, 0
;eepromi2cbrian_v2.h,64 :: 		while(true){
L_eepromEscribeNumero129:
0x15FC	0x0102      	MOVLB       2
;eepromi2cbrian_v2.h,65 :: 		I2C_soft_start();
0x15FE	0xF000EC9C  	CALL        _I2C_soft_start, 0
;eepromi2cbrian_v2.h,66 :: 		if(!I2C_soft_write(EEPROM_DIR_24LC256))
0x1602	0x0EA0      	MOVLW       160
0x1604	0x6F50      	MOVWF       FARG_I2C_soft_write_dato, 1
0x1606	0xF000EC70  	CALL        _I2C_soft_write, 0
0x160A	0x5200      	MOVF        R0, 1 
0x160C	0xE101      	BNZ         L_eepromEscribeNumero131
;eepromi2cbrian_v2.h,67 :: 		break;
0x160E	0xD001      	BRA         L_eepromEscribeNumero130
L_eepromEscribeNumero131:
;eepromi2cbrian_v2.h,68 :: 		}
0x1610	0xD7F5      	BRA         L_eepromEscribeNumero129
L_eepromEscribeNumero130:
;eepromi2cbrian_v2.h,69 :: 		I2C_soft_stop();      // Issue stop signal
0x1612	0xF000ECC8  	CALL        _I2C_soft_stop, 0
;eepromi2cbrian_v2.h,70 :: 		}
0x1616	0xD7AB      	BRA         L_eepromEscribeNumero124
L_eepromEscribeNumero125:
;eepromi2cbrian_v2.h,71 :: 		}
L_eepromEscribeNumero123:
;eepromi2cbrian_v2.h,72 :: 		if(BYTES == 4){
0x1618	0x0102      	MOVLB       2
0x161A	0x5123      	MOVF        FARG_eepromEscribeNumero_BYTES, 0, 1
0x161C	0x0A04      	XORLW       4
0x161E	0xE154      	BNZ         L_eepromEscribeNumero132
;eepromi2cbrian_v2.h,73 :: 		while(i < BYTES){
L_eepromEscribeNumero133:
0x1620	0x0102      	MOVLB       2
0x1622	0x0E80      	MOVLW       128
0x1624	0x1934      	XORWF       eepromEscribeNumero_i_L0, 0, 1
0x1626	0x6E00      	MOVWF       R0 
0x1628	0x0E80      	MOVLW       128
0x162A	0x1923      	XORWF       FARG_eepromEscribeNumero_BYTES, 0, 1
0x162C	0x5C00      	SUBWF       R0, 0 
0x162E	0xE24C      	BC          L_eepromEscribeNumero134
;eepromi2cbrian_v2.h,74 :: 		I2C_soft_start();
0x1630	0xF000EC9C  	CALL        _I2C_soft_start, 0
;eepromi2cbrian_v2.h,75 :: 		I2C_soft_write(EEPROM_DIR_24LC256 | RW);
0x1634	0x0EA0      	MOVLW       160
0x1636	0x105A      	IORWF       _RW, 0 
0x1638	0x6F50      	MOVWF       FARG_I2C_soft_write_dato, 1
0x163A	0xF000EC70  	CALL        _I2C_soft_write, 0
;eepromi2cbrian_v2.h,76 :: 		I2C_soft_write((registro & BYTE_ALTO)>>8);
0x163E	0x0E00      	MOVLW       0
0x1640	0x0102      	MOVLB       2
0x1642	0x151D      	ANDWF       FARG_eepromEscribeNumero_Registro, 0, 1
0x1644	0x6E03      	MOVWF       R3 
0x1646	0x511E      	MOVF        FARG_eepromEscribeNumero_Registro+1, 0, 1
0x1648	0x0BFF      	ANDLW       255
0x164A	0x6E04      	MOVWF       R4 
0x164C	0xF000C004  	MOVFF       R4, R0
0x1650	0x6A01      	CLRF        R1 
0x1652	0xF250C000  	MOVFF       R0, FARG_I2C_soft_write_dato
0x1656	0xF000EC70  	CALL        _I2C_soft_write, 0
;eepromi2cbrian_v2.h,77 :: 		I2C_soft_write(registro & BYTE_BAJO);
0x165A	0x0EFF      	MOVLW       255
0x165C	0x0102      	MOVLB       2
0x165E	0x151D      	ANDWF       FARG_eepromEscribeNumero_Registro, 0, 1
0x1660	0x6F50      	MOVWF       FARG_I2C_soft_write_dato, 1
0x1662	0xF000EC70  	CALL        _I2C_soft_write, 0
;eepromi2cbrian_v2.h,78 :: 		for(;i < BYTES;i++){
L_eepromEscribeNumero135:
0x1666	0x0E80      	MOVLW       128
0x1668	0x0102      	MOVLB       2
0x166A	0x1934      	XORWF       eepromEscribeNumero_i_L0, 0, 1
0x166C	0x6E00      	MOVWF       R0 
0x166E	0x0E80      	MOVLW       128
0x1670	0x1923      	XORWF       FARG_eepromEscribeNumero_BYTES, 0, 1
0x1672	0x5C00      	SUBWF       R0, 0 
0x1674	0xE219      	BC          L_eepromEscribeNumero136
;eepromi2cbrian_v2.h,79 :: 		I2C_soft_write(bufferLong[i]);
0x1676	0xF000C234  	MOVFF       eepromEscribeNumero_i_L0, R0
0x167A	0x0E00      	MOVLW       0
0x167C	0xBF34      	BTFSC       eepromEscribeNumero_i_L0, 7, 1
0x167E	0x0EFF      	MOVLW       255
0x1680	0x6E01      	MOVWF       R1 
0x1682	0x3600      	RLCF        R0, 1 
0x1684	0x9000      	BCF         R0, 0 
0x1686	0x3601      	RLCF        R1, 1 
0x1688	0x3600      	RLCF        R0, 1 
0x168A	0x9000      	BCF         R0, 0 
0x168C	0x3601      	RLCF        R1, 1 
0x168E	0x0E24      	MOVLW       eepromEscribeNumero_bufferLong_L0
0x1690	0x2400      	ADDWF       R0, 0 
0x1692	0x6EE9      	MOVWF       FSR0L 
0x1694	0x0E02      	MOVLW       hi_addr(eepromEscribeNumero_bufferLong_L0)
0x1696	0x2001      	ADDWFC      R1, 0 
0x1698	0x6EEA      	MOVWF       FSR0H 
0x169A	0xF250CFEE  	MOVFF       POSTINC0, FARG_I2C_soft_write_dato
0x169E	0xF000EC70  	CALL        _I2C_soft_write, 0
;eepromi2cbrian_v2.h,78 :: 		for(;i < BYTES;i++){
0x16A2	0x0102      	MOVLB       2
0x16A4	0x2B34      	INCF        eepromEscribeNumero_i_L0, 1, 1
;eepromi2cbrian_v2.h,80 :: 		}
0x16A6	0xD7DF      	BRA         L_eepromEscribeNumero135
L_eepromEscribeNumero136:
;eepromi2cbrian_v2.h,81 :: 		I2C_soft_stop();
0x16A8	0xF000ECC8  	CALL        _I2C_soft_stop, 0
;eepromi2cbrian_v2.h,82 :: 		while(true){
L_eepromEscribeNumero138:
0x16AC	0x0102      	MOVLB       2
;eepromi2cbrian_v2.h,83 :: 		I2C_soft_start();
0x16AE	0xF000EC9C  	CALL        _I2C_soft_start, 0
;eepromi2cbrian_v2.h,84 :: 		if(!I2C_soft_write(EEPROM_DIR_24LC256))
0x16B2	0x0EA0      	MOVLW       160
0x16B4	0x6F50      	MOVWF       FARG_I2C_soft_write_dato, 1
0x16B6	0xF000EC70  	CALL        _I2C_soft_write, 0
0x16BA	0x5200      	MOVF        R0, 1 
0x16BC	0xE101      	BNZ         L_eepromEscribeNumero140
;eepromi2cbrian_v2.h,85 :: 		break;
0x16BE	0xD001      	BRA         L_eepromEscribeNumero139
L_eepromEscribeNumero140:
;eepromi2cbrian_v2.h,86 :: 		}
0x16C0	0xD7F5      	BRA         L_eepromEscribeNumero138
L_eepromEscribeNumero139:
;eepromi2cbrian_v2.h,87 :: 		I2C_soft_stop();      // Issue stop signal
0x16C2	0xF000ECC8  	CALL        _I2C_soft_stop, 0
;eepromi2cbrian_v2.h,88 :: 		}
0x16C6	0xD7AC      	BRA         L_eepromEscribeNumero133
L_eepromEscribeNumero134:
;eepromi2cbrian_v2.h,89 :: 		}
L_eepromEscribeNumero132:
;eepromi2cbrian_v2.h,90 :: 		}
L_end_eepromEscribeNumero:
0x16C8	0x0012      	RETURN      0
; end of _eepromEscribeNumero
_salioBP1:
;rutinasensores_v4(mstr-slv).h,1616 :: 		short salioBP1(short estado){
;rutinasensores_v4(mstr-slv).h,1617 :: 		if(estado == SALIO){
0x16CA	0x0102      	MOVLB       2
0x16CC	0x5114      	MOVF        FARG_salioBP1_estado, 0, 1
0x16CE	0x0A06      	XORLW       6
0x16D0	0xA4D8      	BTFSS       STATUS, 2 
0x16D2	0xD116      	BRA         L_salioBP1385
;rutinasensores_v4(mstr-slv).h,1618 :: 		LCD_OUTCONST(3,1,"GRACIAS!");
0x16D4	0x0E03      	MOVLW       3
0x16D6	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x16D8	0x0E01      	MOVLW       1
0x16DA	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x16DC	0x0EA9      	MOVLW       ?lstr_71_MyProject
0x16DE	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x16E0	0x0EDA      	MOVLW       hi_addr(?lstr_71_MyProject)
0x16E2	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x16E4	0x0E00      	MOVLW       higher_addr(?lstr_71_MyProject)
0x16E6	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x16E8	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1619 :: 		pSuben = eepromLeeNumero(0x0000,2);
0x16EC	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x16EE	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x16F0	0x0E02      	MOVLW       2
0x16F2	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x16F4	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x16F8	0xF137C000  	MOVFF       R0, _pSuben
0x16FC	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,1620 :: 		pBajan = eepromLeeNumero(0x0003,2) + 1;
0x1700	0x0E03      	MOVLW       3
0x1702	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x1704	0x0E00      	MOVLW       0
0x1706	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x1708	0x0E02      	MOVLW       2
0x170A	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x170C	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x1710	0x4A00      	INFSNZ      R0, 1 
0x1712	0x2A01      	INCF        R1, 1 
0x1714	0xF135C000  	MOVFF       R0, _pBajan
0x1718	0xF136C001  	MOVFF       R1, _pBajan+1
;rutinasensores_v4(mstr-slv).h,1621 :: 		eepromEscribeNumero(0x0003,pBajan,2);
0x171C	0x0E03      	MOVLW       3
0x171E	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x1720	0x0E00      	MOVLW       0
0x1722	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x1724	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x1728	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x172C	0x0E00      	MOVLW       0
0x172E	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x1730	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x1732	0x0E02      	MOVLW       2
0x1734	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x1736	0xDE7E      	RCALL       _eepromEscribeNumero
;rutinasensores_v4(mstr-slv).h,1622 :: 		pBajan = eepromLeeNumero(0x0003,2);
0x1738	0x0E03      	MOVLW       3
0x173A	0x0102      	MOVLB       2
0x173C	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x173E	0x0E00      	MOVLW       0
0x1740	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x1742	0x0E02      	MOVLW       2
0x1744	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x1746	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x174A	0xF219C000  	MOVFF       R0, FLOC__salioBP1+4
0x174E	0xF21AC001  	MOVFF       R1, FLOC__salioBP1+5
0x1752	0xF21BC002  	MOVFF       R2, FLOC__salioBP1+6
0x1756	0xF21CC003  	MOVFF       R3, FLOC__salioBP1+7
0x175A	0xF135C219  	MOVFF       FLOC__salioBP1+4, _pBajan
0x175E	0xF136C21A  	MOVFF       FLOC__salioBP1+5, _pBajan+1
;rutinasensores_v4(mstr-slv).h,1623 :: 		pasajerosVerdaderos = ((float)pSuben + (float)pBajan)/2;
0x1762	0xF000C137  	MOVFF       _pSuben, R0
0x1766	0xF001C138  	MOVFF       _pSuben+1, R1
0x176A	0xDCAF      	RCALL       _Word2Double
0x176C	0xF215C000  	MOVFF       R0, FLOC__salioBP1
0x1770	0xF216C001  	MOVFF       R1, FLOC__salioBP1+1
0x1774	0xF217C002  	MOVFF       R2, FLOC__salioBP1+2
0x1778	0xF218C003  	MOVFF       R3, FLOC__salioBP1+3
0x177C	0xF000C219  	MOVFF       FLOC__salioBP1+4, R0
0x1780	0xF001C21A  	MOVFF       FLOC__salioBP1+5, R1
0x1784	0xDCA2      	RCALL       _Word2Double
0x1786	0xF004C215  	MOVFF       FLOC__salioBP1, R4
0x178A	0xF005C216  	MOVFF       FLOC__salioBP1+1, R5
0x178E	0xF006C217  	MOVFF       FLOC__salioBP1+2, R6
0x1792	0xF007C218  	MOVFF       FLOC__salioBP1+3, R7
0x1796	0xF004EC8D  	CALL        _Add_32x32_FP, 0
0x179A	0x0E00      	MOVLW       0
0x179C	0x6E04      	MOVWF       R4 
0x179E	0x0E00      	MOVLW       0
0x17A0	0x6E05      	MOVWF       R5 
0x17A2	0x0E00      	MOVLW       0
0x17A4	0x6E06      	MOVWF       R6 
0x17A6	0x0E80      	MOVLW       128
0x17A8	0x6E07      	MOVWF       R7 
0x17AA	0xF007ECA7  	CALL        _Div_32x32_FP, 0
0x17AE	0xF139C000  	MOVFF       R0, _pasajerosVerdaderos
0x17B2	0xF13AC001  	MOVFF       R1, _pasajerosVerdaderos+1
0x17B6	0xF13BC002  	MOVFF       R2, _pasajerosVerdaderos+2
0x17BA	0xF13CC003  	MOVFF       R3, _pasajerosVerdaderos+3
;rutinasensores_v4(mstr-slv).h,1624 :: 		eepromEscribeNumero(0x0009, pasajerosVerdaderos, 2);
0x17BE	0x0E09      	MOVLW       9
0x17C0	0x0102      	MOVLB       2
0x17C2	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x17C4	0x0E00      	MOVLW       0
0x17C6	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x17C8	0xF007EC0E  	CALL        _Double2Longint, 0
0x17CC	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x17D0	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x17D4	0xF221C002  	MOVFF       R2, FARG_eepromEscribeNumero_Dato+2
0x17D8	0xF222C003  	MOVFF       R3, FARG_eepromEscribeNumero_Dato+3
0x17DC	0x0E02      	MOVLW       2
0x17DE	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x17E0	0xDE29      	RCALL       _eepromEscribeNumero
;rutinasensores_v4(mstr-slv).h,1625 :: 		if(MSTR){
0x17E2	0xA483      	BTFSS       PORTD, 2 
0x17E4	0xD084      	BRA         L_salioBP1386
;rutinasensores_v4(mstr-slv).h,1626 :: 		pVerdaderosMEntero = eepromLeeNumero(0x0009, 2);
0x17E6	0x0E09      	MOVLW       9
0x17E8	0x0102      	MOVLB       2
0x17EA	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x17EC	0x0E00      	MOVLW       0
0x17EE	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x17F0	0x0E02      	MOVLW       2
0x17F2	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x17F4	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x17F8	0xF12FC000  	MOVFF       R0, _pVerdaderosMEntero
0x17FC	0xF130C001  	MOVFF       R1, _pVerdaderosMEntero+1
;rutinasensores_v4(mstr-slv).h,1627 :: 		pVerdaderosEEntero = eepromLeeNumero(0x0007, 2);
0x1800	0x0E07      	MOVLW       7
0x1802	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x1804	0x0E00      	MOVLW       0
0x1806	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x1808	0x0E02      	MOVLW       2
0x180A	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x180C	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x1810	0xF12DC000  	MOVFF       R0, _pVerdaderosEEntero
0x1814	0xF12EC001  	MOVFF       R1, _pVerdaderosEEntero+1
;rutinasensores_v4(mstr-slv).h,1628 :: 		pasajerosTotalesL = pVerdaderosMEntero + pVerdaderosEEntero;
0x1818	0x5000      	MOVF        R0, 0 
0x181A	0x0101      	MOVLB       1
0x181C	0x252F      	ADDWF       _pVerdaderosMEntero, 0, 1
0x181E	0x6F33      	MOVWF       _pasajerosTotalesL, 1
0x1820	0x5001      	MOVF        R1, 0 
0x1822	0x2130      	ADDWFC      _pVerdaderosMEntero+1, 0, 1
0x1824	0x6F34      	MOVWF       _pasajerosTotalesL+1, 1
;rutinasensores_v4(mstr-slv).h,1629 :: 		totalCalculado = (eepromLeeNumero(0x0000, 2)+eepromLeeNumero(0x0003, 2)+eepromLeeNumero(0x0900, 2)+eepromLeeNumero(0x0700, 2))/2;
0x1826	0x0102      	MOVLB       2
0x1828	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x182A	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x182C	0x0E02      	MOVLW       2
0x182E	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x1830	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x1834	0xF215C000  	MOVFF       R0, FLOC__salioBP1
0x1838	0xF216C001  	MOVFF       R1, FLOC__salioBP1+1
0x183C	0xF217C002  	MOVFF       R2, FLOC__salioBP1+2
0x1840	0xF218C003  	MOVFF       R3, FLOC__salioBP1+3
0x1844	0x0E03      	MOVLW       3
0x1846	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x1848	0x0E00      	MOVLW       0
0x184A	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x184C	0x0E02      	MOVLW       2
0x184E	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x1850	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x1854	0x5000      	MOVF        R0, 0 
0x1856	0x2715      	ADDWF       FLOC__salioBP1, 1, 1
0x1858	0x5001      	MOVF        R1, 0 
0x185A	0x2316      	ADDWFC      FLOC__salioBP1+1, 1, 1
0x185C	0x5002      	MOVF        R2, 0 
0x185E	0x2317      	ADDWFC      FLOC__salioBP1+2, 1, 1
0x1860	0x5003      	MOVF        R3, 0 
0x1862	0x2318      	ADDWFC      FLOC__salioBP1+3, 1, 1
0x1864	0x0E00      	MOVLW       0
0x1866	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x1868	0x0E09      	MOVLW       9
0x186A	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x186C	0x0E02      	MOVLW       2
0x186E	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x1870	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x1874	0x5000      	MOVF        R0, 0 
0x1876	0x2715      	ADDWF       FLOC__salioBP1, 1, 1
0x1878	0x5001      	MOVF        R1, 0 
0x187A	0x2316      	ADDWFC      FLOC__salioBP1+1, 1, 1
0x187C	0x5002      	MOVF        R2, 0 
0x187E	0x2317      	ADDWFC      FLOC__salioBP1+2, 1, 1
0x1880	0x5003      	MOVF        R3, 0 
0x1882	0x2318      	ADDWFC      FLOC__salioBP1+3, 1, 1
0x1884	0x0E00      	MOVLW       0
0x1886	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x1888	0x0E07      	MOVLW       7
0x188A	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x188C	0x0E02      	MOVLW       2
0x188E	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x1890	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x1894	0x5000      	MOVF        R0, 0 
0x1896	0x2515      	ADDWF       FLOC__salioBP1, 0, 1
0x1898	0x6E05      	MOVWF       R5 
0x189A	0x5001      	MOVF        R1, 0 
0x189C	0x2116      	ADDWFC      FLOC__salioBP1+1, 0, 1
0x189E	0x6E06      	MOVWF       R6 
0x18A0	0x5002      	MOVF        R2, 0 
0x18A2	0x2117      	ADDWFC      FLOC__salioBP1+2, 0, 1
0x18A4	0x6E07      	MOVWF       R7 
0x18A6	0x5003      	MOVF        R3, 0 
0x18A8	0x2118      	ADDWFC      FLOC__salioBP1+3, 0, 1
0x18AA	0x6E08      	MOVWF       R8 
0x18AC	0xF000C005  	MOVFF       R5, R0
0x18B0	0xF001C006  	MOVFF       R6, R1
0x18B4	0xF002C007  	MOVFF       R7, R2
0x18B8	0xF003C008  	MOVFF       R8, R3
0x18BC	0x3203      	RRCF        R3, 1 
0x18BE	0x3202      	RRCF        R2, 1 
0x18C0	0x3201      	RRCF        R1, 1 
0x18C2	0x3200      	RRCF        R0, 1 
0x18C4	0x9E03      	BCF         R3, 7 
0x18C6	0xBC03      	BTFSC       R3, 6 
0x18C8	0x8E03      	BSF         R3, 7 
0x18CA	0xF131C000  	MOVFF       R0, _totalCalculado
0x18CE	0xF132C001  	MOVFF       R1, _totalCalculado+1
;rutinasensores_v4(mstr-slv).h,1630 :: 		eepromEscribeNumero(0x0005, totalCalculado, 2);
0x18D2	0x0E05      	MOVLW       5
0x18D4	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x18D6	0x0E00      	MOVLW       0
0x18D8	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x18DA	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x18DE	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x18E2	0x0E00      	MOVLW       0
0x18E4	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x18E6	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x18E8	0x0E02      	MOVLW       2
0x18EA	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x18EC	0xDDA3      	RCALL       _eepromEscribeNumero
;rutinasensores_v4(mstr-slv).h,1631 :: 		}
L_salioBP1386:
;rutinasensores_v4(mstr-slv).h,1632 :: 		lcd_cmd(_LCD_CLEAR);
0x18EE	0x0E01      	MOVLW       1
0x18F0	0x0102      	MOVLB       2
0x18F2	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x18F4	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1633 :: 		return debugEstadoB = ESPERA;
0x18F8	0x0101      	MOVLB       1
0x18FA	0x6B3D      	CLRF        _debugEstadoB, 1
0x18FC	0x6A00      	CLRF        R0 
0x18FE	0xD000      	BRA         L_end_salioBP1
;rutinasensores_v4(mstr-slv).h,1634 :: 		}
L_salioBP1385:
;rutinasensores_v4(mstr-slv).h,1635 :: 		}
L_end_salioBP1:
0x1900	0x0012      	RETURN      0
; end of _salioBP1
_saliendoBP1:
;rutinasensores_v4(mstr-slv).h,1574 :: 		short saliendoBP1(short estado){
;rutinasensores_v4(mstr-slv).h,1575 :: 		if(estado == SALIENDO){
0x1902	0x0102      	MOVLB       2
0x1904	0x5114      	MOVF        FARG_saliendoBP1_estado, 0, 1
0x1906	0x0A04      	XORLW       4
0x1908	0xE139      	BNZ         L_saliendoBP1376
;rutinasensores_v4(mstr-slv).h,1576 :: 		lcd_outConst(3, 1, "SALIENDO");
0x190A	0x0E03      	MOVLW       3
0x190C	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x190E	0x0E01      	MOVLW       1
0x1910	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x1912	0x0ECD      	MOVLW       ?lstr_68_MyProject
0x1914	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x1916	0x0EDA      	MOVLW       hi_addr(?lstr_68_MyProject)
0x1918	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x191A	0x0E00      	MOVLW       higher_addr(?lstr_68_MyProject)
0x191C	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x191E	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1577 :: 		if((!SENSOR3 & !SENSOR5)){
0x1922	0xB481      	BTFSC       PORTB, 2 
0x1924	0xD002      	BRA         L__saliendoBP11795
0x1926	0x8001      	BSF         R1, 0 
0x1928	0xD001      	BRA         L__saliendoBP11796
L__saliendoBP11795:
0x192A	0x9001      	BCF         R1, 0 
L__saliendoBP11796:
0x192C	0xB081      	BTFSC       PORTB, 0 
0x192E	0xD002      	BRA         L__saliendoBP11797
0x1930	0x80D8      	BSF         STATUS, 0 
0x1932	0xD001      	BRA         L__saliendoBP11798
L__saliendoBP11797:
0x1934	0x90D8      	BCF         STATUS, 0 
L__saliendoBP11798:
0x1936	0xA001      	BTFSS       R1, 0 
0x1938	0xD003      	BRA         L__saliendoBP11799
0x193A	0xE302      	BNC         L__saliendoBP11799
0x193C	0x8001      	BSF         R1, 0 
0x193E	0xD001      	BRA         L__saliendoBP11800
L__saliendoBP11799:
0x1940	0x9001      	BCF         R1, 0 
L__saliendoBP11800:
0x1942	0xA001      	BTFSS       R1, 0 
0x1944	0xD00A      	BRA         L_saliendoBP1377
;rutinasensores_v4(mstr-slv).h,1578 :: 		lcd_cmd(_LCD_CLEAR);
0x1946	0x0E01      	MOVLW       1
0x1948	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x194A	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1579 :: 		return debugEstadoB = TRANSICIONS;
0x194E	0x0E08      	MOVLW       8
0x1950	0x0101      	MOVLB       1
0x1952	0x6F3D      	MOVWF       _debugEstadoB, 1
0x1954	0x0E08      	MOVLW       8
0x1956	0x6E00      	MOVWF       R0 
0x1958	0xD011      	BRA         L_end_saliendoBP1
;rutinasensores_v4(mstr-slv).h,1580 :: 		}
L_saliendoBP1377:
;rutinasensores_v4(mstr-slv).h,1581 :: 		if((SENSOR4 & SENSOR6)){
0x195A	0xA681      	BTFSS       PORTB, 3 
0x195C	0xD004      	BRA         L__saliendoBP11801
0x195E	0xA281      	BTFSS       PORTB, 1 
0x1960	0xD002      	BRA         L__saliendoBP11801
0x1962	0x80D8      	BSF         STATUS, 0 
0x1964	0xD001      	BRA         L__saliendoBP11802
L__saliendoBP11801:
0x1966	0x90D8      	BCF         STATUS, 0 
L__saliendoBP11802:
0x1968	0xE309      	BNC         L_saliendoBP1378
;rutinasensores_v4(mstr-slv).h,1582 :: 		lcd_cmd(_LCD_CLEAR);
0x196A	0x0E01      	MOVLW       1
0x196C	0x0102      	MOVLB       2
0x196E	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x1970	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1583 :: 		return debugEstadoB = ESPERA;
0x1974	0x0101      	MOVLB       1
0x1976	0x6B3D      	CLRF        _debugEstadoB, 1
0x1978	0x6A00      	CLRF        R0 
0x197A	0xD000      	BRA         L_end_saliendoBP1
;rutinasensores_v4(mstr-slv).h,1584 :: 		}
L_saliendoBP1378:
;rutinasensores_v4(mstr-slv).h,1585 :: 		}
L_saliendoBP1376:
;rutinasensores_v4(mstr-slv).h,1586 :: 		}
L_end_saliendoBP1:
0x197C	0x0012      	RETURN      0
; end of _saliendoBP1
_entroBP3:
;rutinasensores_v4(mstr-slv).h,1845 :: 		short entroBP3(short estado){
;rutinasensores_v4(mstr-slv).h,1846 :: 		if(estado == ENTRO){
0x197E	0x0102      	MOVLB       2
0x1980	0x5114      	MOVF        FARG_entroBP3_estado, 0, 1
0x1982	0x0A03      	XORLW       3
0x1984	0xA4D8      	BTFSS       STATUS, 2 
0x1986	0xD114      	BRA         L_entroBP3425
;rutinasensores_v4(mstr-slv).h,1847 :: 		LCD_OUTCONST(3,1,"BIENVENIDO: $6.00");
0x1988	0x0E03      	MOVLW       3
0x198A	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x198C	0x0E01      	MOVLW       1
0x198E	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x1990	0x0E40      	MOVLW       ?lstr_83_MyProject
0x1992	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x1994	0x0ED7      	MOVLW       hi_addr(?lstr_83_MyProject)
0x1996	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x1998	0x0E00      	MOVLW       higher_addr(?lstr_83_MyProject)
0x199A	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x199C	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1848 :: 		delay_ms(350);
0x19A0	0x0E09      	MOVLW       9
0x19A2	0x6E0B      	MOVWF       R11, 0
0x19A4	0x0EE1      	MOVLW       225
0x19A6	0x6E0C      	MOVWF       R12, 0
0x19A8	0x0EB2      	MOVLW       178
0x19AA	0x6E0D      	MOVWF       R13, 0
L_entroBP3426:
0x19AC	0x2E0D      	DECFSZ      R13, 1, 0
0x19AE	0xD7FE      	BRA         L_entroBP3426
0x19B0	0x2E0C      	DECFSZ      R12, 1, 0
0x19B2	0xD7FC      	BRA         L_entroBP3426
0x19B4	0x2E0B      	DECFSZ      R11, 1, 0
0x19B6	0xD7FA      	BRA         L_entroBP3426
0x19B8	0x0000      	NOP
;rutinasensores_v4(mstr-slv).h,1849 :: 		pBajan = eepromLeeNumero(0x0003,2);
0x19BA	0x0E03      	MOVLW       3
0x19BC	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x19BE	0x0E00      	MOVLW       0
0x19C0	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x19C2	0x0E02      	MOVLW       2
0x19C4	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x19C6	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x19CA	0xF135C000  	MOVFF       R0, _pBajan
0x19CE	0xF136C001  	MOVFF       R1, _pBajan+1
;rutinasensores_v4(mstr-slv).h,1850 :: 		pSuben = eepromLeeNumero(0x0000,2) + 1;
0x19D2	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x19D4	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x19D6	0x0E02      	MOVLW       2
0x19D8	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x19DA	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x19DE	0x4A00      	INFSNZ      R0, 1 
0x19E0	0x2A01      	INCF        R1, 1 
0x19E2	0xF137C000  	MOVFF       R0, _pSuben
0x19E6	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,1851 :: 		eepromEscribeNumero(0x0000,pSuben,2);
0x19EA	0x6B1D      	CLRF        FARG_eepromEscribeNumero_Registro, 1
0x19EC	0x6B1E      	CLRF        FARG_eepromEscribeNumero_Registro+1, 1
0x19EE	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x19F2	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x19F6	0x0E00      	MOVLW       0
0x19F8	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x19FA	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x19FC	0x0E02      	MOVLW       2
0x19FE	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x1A00	0xDD19      	RCALL       _eepromEscribeNumero
;rutinasensores_v4(mstr-slv).h,1852 :: 		pSuben = eepromLeeNumero(0x0000,2);
0x1A02	0x0102      	MOVLB       2
0x1A04	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x1A06	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x1A08	0x0E02      	MOVLW       2
0x1A0A	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x1A0C	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x1A10	0xF137C000  	MOVFF       R0, _pSuben
0x1A14	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,1853 :: 		pasajerosVerdaderos = ((float)pSuben + (float)pBajan)/2;
0x1A18	0xF008EC65  	CALL        _Word2Double, 0
0x1A1C	0xF215C000  	MOVFF       R0, FLOC__entroBP3
0x1A20	0xF216C001  	MOVFF       R1, FLOC__entroBP3+1
0x1A24	0xF217C002  	MOVFF       R2, FLOC__entroBP3+2
0x1A28	0xF218C003  	MOVFF       R3, FLOC__entroBP3+3
0x1A2C	0xF000C135  	MOVFF       _pBajan, R0
0x1A30	0xF001C136  	MOVFF       _pBajan+1, R1
0x1A34	0xF008EC65  	CALL        _Word2Double, 0
0x1A38	0xF004C215  	MOVFF       FLOC__entroBP3, R4
0x1A3C	0xF005C216  	MOVFF       FLOC__entroBP3+1, R5
0x1A40	0xF006C217  	MOVFF       FLOC__entroBP3+2, R6
0x1A44	0xF007C218  	MOVFF       FLOC__entroBP3+3, R7
0x1A48	0xF004EC8D  	CALL        _Add_32x32_FP, 0
0x1A4C	0x0E00      	MOVLW       0
0x1A4E	0x6E04      	MOVWF       R4 
0x1A50	0x0E00      	MOVLW       0
0x1A52	0x6E05      	MOVWF       R5 
0x1A54	0x0E00      	MOVLW       0
0x1A56	0x6E06      	MOVWF       R6 
0x1A58	0x0E80      	MOVLW       128
0x1A5A	0x6E07      	MOVWF       R7 
0x1A5C	0xF007ECA7  	CALL        _Div_32x32_FP, 0
0x1A60	0xF139C000  	MOVFF       R0, _pasajerosVerdaderos
0x1A64	0xF13AC001  	MOVFF       R1, _pasajerosVerdaderos+1
0x1A68	0xF13BC002  	MOVFF       R2, _pasajerosVerdaderos+2
0x1A6C	0xF13CC003  	MOVFF       R3, _pasajerosVerdaderos+3
;rutinasensores_v4(mstr-slv).h,1854 :: 		eepromEscribeNumero(0x0009, (unsigned int)pasajerosVerdaderos, 2);
0x1A70	0x0E09      	MOVLW       9
0x1A72	0x0102      	MOVLB       2
0x1A74	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x1A76	0x0E00      	MOVLW       0
0x1A78	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x1A7A	0xF006ECA0  	CALL        _Double2Word, 0
0x1A7E	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x1A82	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x1A86	0x0E00      	MOVLW       0
0x1A88	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x1A8A	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x1A8C	0x0E02      	MOVLW       2
0x1A8E	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x1A90	0xDCD1      	RCALL       _eepromEscribeNumero
;rutinasensores_v4(mstr-slv).h,1855 :: 		if(MSTR){
0x1A92	0xA483      	BTFSS       PORTD, 2 
0x1A94	0xD084      	BRA         L_entroBP3427
;rutinasensores_v4(mstr-slv).h,1856 :: 		pVerdaderosMEntero = eepromLeeNumero(0x0009, 2);
0x1A96	0x0E09      	MOVLW       9
0x1A98	0x0102      	MOVLB       2
0x1A9A	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x1A9C	0x0E00      	MOVLW       0
0x1A9E	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x1AA0	0x0E02      	MOVLW       2
0x1AA2	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x1AA4	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x1AA8	0xF12FC000  	MOVFF       R0, _pVerdaderosMEntero
0x1AAC	0xF130C001  	MOVFF       R1, _pVerdaderosMEntero+1
;rutinasensores_v4(mstr-slv).h,1857 :: 		pVerdaderosEEntero = eepromLeeNumero(0x0007, 2);
0x1AB0	0x0E07      	MOVLW       7
0x1AB2	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x1AB4	0x0E00      	MOVLW       0
0x1AB6	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x1AB8	0x0E02      	MOVLW       2
0x1ABA	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x1ABC	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x1AC0	0xF12DC000  	MOVFF       R0, _pVerdaderosEEntero
0x1AC4	0xF12EC001  	MOVFF       R1, _pVerdaderosEEntero+1
;rutinasensores_v4(mstr-slv).h,1858 :: 		pasajerosTotalesL = pVerdaderosMEntero + pVerdaderosEEntero;
0x1AC8	0x5000      	MOVF        R0, 0 
0x1ACA	0x0101      	MOVLB       1
0x1ACC	0x252F      	ADDWF       _pVerdaderosMEntero, 0, 1
0x1ACE	0x6F33      	MOVWF       _pasajerosTotalesL, 1
0x1AD0	0x5001      	MOVF        R1, 0 
0x1AD2	0x2130      	ADDWFC      _pVerdaderosMEntero+1, 0, 1
0x1AD4	0x6F34      	MOVWF       _pasajerosTotalesL+1, 1
;rutinasensores_v4(mstr-slv).h,1859 :: 		totalCalculado = (eepromLeeNumero(0x0000, 2)+eepromLeeNumero(0x0003, 2)+eepromLeeNumero(0x0900, 2)+eepromLeeNumero(0x0700, 2))/2;
0x1AD6	0x0102      	MOVLB       2
0x1AD8	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x1ADA	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x1ADC	0x0E02      	MOVLW       2
0x1ADE	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x1AE0	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x1AE4	0xF215C000  	MOVFF       R0, FLOC__entroBP3
0x1AE8	0xF216C001  	MOVFF       R1, FLOC__entroBP3+1
0x1AEC	0xF217C002  	MOVFF       R2, FLOC__entroBP3+2
0x1AF0	0xF218C003  	MOVFF       R3, FLOC__entroBP3+3
0x1AF4	0x0E03      	MOVLW       3
0x1AF6	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x1AF8	0x0E00      	MOVLW       0
0x1AFA	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x1AFC	0x0E02      	MOVLW       2
0x1AFE	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x1B00	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x1B04	0x5000      	MOVF        R0, 0 
0x1B06	0x2715      	ADDWF       FLOC__entroBP3, 1, 1
0x1B08	0x5001      	MOVF        R1, 0 
0x1B0A	0x2316      	ADDWFC      FLOC__entroBP3+1, 1, 1
0x1B0C	0x5002      	MOVF        R2, 0 
0x1B0E	0x2317      	ADDWFC      FLOC__entroBP3+2, 1, 1
0x1B10	0x5003      	MOVF        R3, 0 
0x1B12	0x2318      	ADDWFC      FLOC__entroBP3+3, 1, 1
0x1B14	0x0E00      	MOVLW       0
0x1B16	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x1B18	0x0E09      	MOVLW       9
0x1B1A	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x1B1C	0x0E02      	MOVLW       2
0x1B1E	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x1B20	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x1B24	0x5000      	MOVF        R0, 0 
0x1B26	0x2715      	ADDWF       FLOC__entroBP3, 1, 1
0x1B28	0x5001      	MOVF        R1, 0 
0x1B2A	0x2316      	ADDWFC      FLOC__entroBP3+1, 1, 1
0x1B2C	0x5002      	MOVF        R2, 0 
0x1B2E	0x2317      	ADDWFC      FLOC__entroBP3+2, 1, 1
0x1B30	0x5003      	MOVF        R3, 0 
0x1B32	0x2318      	ADDWFC      FLOC__entroBP3+3, 1, 1
0x1B34	0x0E00      	MOVLW       0
0x1B36	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x1B38	0x0E07      	MOVLW       7
0x1B3A	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x1B3C	0x0E02      	MOVLW       2
0x1B3E	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x1B40	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x1B44	0x5000      	MOVF        R0, 0 
0x1B46	0x2515      	ADDWF       FLOC__entroBP3, 0, 1
0x1B48	0x6E05      	MOVWF       R5 
0x1B4A	0x5001      	MOVF        R1, 0 
0x1B4C	0x2116      	ADDWFC      FLOC__entroBP3+1, 0, 1
0x1B4E	0x6E06      	MOVWF       R6 
0x1B50	0x5002      	MOVF        R2, 0 
0x1B52	0x2117      	ADDWFC      FLOC__entroBP3+2, 0, 1
0x1B54	0x6E07      	MOVWF       R7 
0x1B56	0x5003      	MOVF        R3, 0 
0x1B58	0x2118      	ADDWFC      FLOC__entroBP3+3, 0, 1
0x1B5A	0x6E08      	MOVWF       R8 
0x1B5C	0xF000C005  	MOVFF       R5, R0
0x1B60	0xF001C006  	MOVFF       R6, R1
0x1B64	0xF002C007  	MOVFF       R7, R2
0x1B68	0xF003C008  	MOVFF       R8, R3
0x1B6C	0x3203      	RRCF        R3, 1 
0x1B6E	0x3202      	RRCF        R2, 1 
0x1B70	0x3201      	RRCF        R1, 1 
0x1B72	0x3200      	RRCF        R0, 1 
0x1B74	0x9E03      	BCF         R3, 7 
0x1B76	0xBC03      	BTFSC       R3, 6 
0x1B78	0x8E03      	BSF         R3, 7 
0x1B7A	0xF131C000  	MOVFF       R0, _totalCalculado
0x1B7E	0xF132C001  	MOVFF       R1, _totalCalculado+1
;rutinasensores_v4(mstr-slv).h,1860 :: 		eepromEscribeNumero(0x0005, totalCalculado, 2);
0x1B82	0x0E05      	MOVLW       5
0x1B84	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x1B86	0x0E00      	MOVLW       0
0x1B88	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x1B8A	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x1B8E	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x1B92	0x0E00      	MOVLW       0
0x1B94	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x1B96	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x1B98	0x0E02      	MOVLW       2
0x1B9A	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x1B9C	0xDC4B      	RCALL       _eepromEscribeNumero
;rutinasensores_v4(mstr-slv).h,1861 :: 		}
L_entroBP3427:
;rutinasensores_v4(mstr-slv).h,1862 :: 		lcd_cmd(_LCD_CLEAR);
0x1B9E	0x0E01      	MOVLW       1
0x1BA0	0x0102      	MOVLB       2
0x1BA2	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x1BA4	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1863 :: 		return debugEstadoB = ESPERA;
0x1BA8	0x0101      	MOVLB       1
0x1BAA	0x6B3D      	CLRF        _debugEstadoB, 1
0x1BAC	0x6A00      	CLRF        R0 
0x1BAE	0xD000      	BRA         L_end_entroBP3
;rutinasensores_v4(mstr-slv).h,1864 :: 		}
L_entroBP3425:
;rutinasensores_v4(mstr-slv).h,1865 :: 		}
L_end_entroBP3:
0x1BB0	0x0012      	RETURN      0
; end of _entroBP3
_transicionEntBP3:
;rutinasensores_v4(mstr-slv).h,1831 :: 		short transicionEntBP3(short estado){
;rutinasensores_v4(mstr-slv).h,1832 :: 		if(estado == TRANENT){
0x1BB2	0x0102      	MOVLB       2
0x1BB4	0x5114      	MOVF        FARG_transicionEntBP3_estado, 0, 1
0x1BB6	0x0A07      	XORLW       7
0x1BB8	0xE13B      	BNZ         L_transicionEntBP3422
;rutinasensores_v4(mstr-slv).h,1833 :: 		LCD_OUTCONST(3,1,"TRANSICION ENTRADA");
0x1BBA	0x0E03      	MOVLW       3
0x1BBC	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x1BBE	0x0E01      	MOVLW       1
0x1BC0	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x1BC2	0x0E61      	MOVLW       ?lstr_82_MyProject
0x1BC4	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x1BC6	0x0ED5      	MOVLW       hi_addr(?lstr_82_MyProject)
0x1BC8	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x1BCA	0x0E00      	MOVLW       higher_addr(?lstr_82_MyProject)
0x1BCC	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x1BCE	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1834 :: 		if((!SENSOR3 & !SENSOR1)/*(!SENSOR1 | !SENSOR3) | (!SENSOR3 | !SENSOR5) | (!SENSOR1 | !SENSOR5)*/){
0x1BD2	0xB481      	BTFSC       PORTB, 2 
0x1BD4	0xD002      	BRA         L__transicionEntBP31957
0x1BD6	0x8001      	BSF         R1, 0 
0x1BD8	0xD001      	BRA         L__transicionEntBP31958
L__transicionEntBP31957:
0x1BDA	0x9001      	BCF         R1, 0 
L__transicionEntBP31958:
0x1BDC	0xB881      	BTFSC       PORTB, 4 
0x1BDE	0xD002      	BRA         L__transicionEntBP31959
0x1BE0	0x80D8      	BSF         STATUS, 0 
0x1BE2	0xD001      	BRA         L__transicionEntBP31960
L__transicionEntBP31959:
0x1BE4	0x90D8      	BCF         STATUS, 0 
L__transicionEntBP31960:
0x1BE6	0xA001      	BTFSS       R1, 0 
0x1BE8	0xD003      	BRA         L__transicionEntBP31961
0x1BEA	0xE302      	BNC         L__transicionEntBP31961
0x1BEC	0x8001      	BSF         R1, 0 
0x1BEE	0xD001      	BRA         L__transicionEntBP31962
L__transicionEntBP31961:
0x1BF0	0x9001      	BCF         R1, 0 
L__transicionEntBP31962:
0x1BF2	0xA001      	BTFSS       R1, 0 
0x1BF4	0xD00A      	BRA         L_transicionEntBP3423
;rutinasensores_v4(mstr-slv).h,1835 :: 		lcd_cmd(_LCD_CLEAR);
0x1BF6	0x0E01      	MOVLW       1
0x1BF8	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x1BFA	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1836 :: 		return debugEstadoB = TRANSICION;
0x1BFE	0x0E02      	MOVLW       2
0x1C00	0x0101      	MOVLB       1
0x1C02	0x6F3D      	MOVWF       _debugEstadoB, 1
0x1C04	0x0E02      	MOVLW       2
0x1C06	0x6E00      	MOVWF       R0 
0x1C08	0xD013      	BRA         L_end_transicionEntBP3
;rutinasensores_v4(mstr-slv).h,1837 :: 		}
L_transicionEntBP3423:
;rutinasensores_v4(mstr-slv).h,1838 :: 		if(/*(SENSOR2 & SENSOR4) | (SENSOR4 & SENSOR6) | (SENSOR2 & SENSOR6) | */(SENSOR2 & SENSOR4)){
0x1C0A	0xA883      	BTFSS       PORTD, 4 
0x1C0C	0xD004      	BRA         L__transicionEntBP31963
0x1C0E	0xA681      	BTFSS       PORTB, 3 
0x1C10	0xD002      	BRA         L__transicionEntBP31963
0x1C12	0x80D8      	BSF         STATUS, 0 
0x1C14	0xD001      	BRA         L__transicionEntBP31964
L__transicionEntBP31963:
0x1C16	0x90D8      	BCF         STATUS, 0 
L__transicionEntBP31964:
0x1C18	0xE30B      	BNC         L_transicionEntBP3424
;rutinasensores_v4(mstr-slv).h,1839 :: 		lcd_cmd(_LCD_CLEAR);
0x1C1A	0x0E01      	MOVLW       1
0x1C1C	0x0102      	MOVLB       2
0x1C1E	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x1C20	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1840 :: 		return debugEstadoB = ENTRO;
0x1C24	0x0E03      	MOVLW       3
0x1C26	0x0101      	MOVLB       1
0x1C28	0x6F3D      	MOVWF       _debugEstadoB, 1
0x1C2A	0x0E03      	MOVLW       3
0x1C2C	0x6E00      	MOVWF       R0 
0x1C2E	0xD000      	BRA         L_end_transicionEntBP3
;rutinasensores_v4(mstr-slv).h,1841 :: 		}
L_transicionEntBP3424:
;rutinasensores_v4(mstr-slv).h,1842 :: 		}
L_transicionEntBP3422:
;rutinasensores_v4(mstr-slv).h,1843 :: 		}
L_end_transicionEntBP3:
0x1C30	0x0012      	RETURN      0
; end of _transicionEntBP3
_transicionEntBP2:
;rutinasensores_v4(mstr-slv).h,1685 :: 		short transicionEntBP2(short estado){
;rutinasensores_v4(mstr-slv).h,1686 :: 		if(estado == TRANENT){
0x1C32	0x0102      	MOVLB       2
0x1C34	0x5114      	MOVF        FARG_transicionEntBP2_estado, 0, 1
0x1C36	0x0A07      	XORLW       7
0x1C38	0xE13B      	BNZ         L_transicionEntBP2396
;rutinasensores_v4(mstr-slv).h,1687 :: 		LCD_OUTCONST(3,1,"TRANSICION ENTRADA");
0x1C3A	0x0E03      	MOVLW       3
0x1C3C	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x1C3E	0x0E01      	MOVLW       1
0x1C40	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x1C42	0x0E74      	MOVLW       ?lstr_74_MyProject
0x1C44	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x1C46	0x0ED5      	MOVLW       hi_addr(?lstr_74_MyProject)
0x1C48	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x1C4A	0x0E00      	MOVLW       higher_addr(?lstr_74_MyProject)
0x1C4C	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x1C4E	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1688 :: 		if((!SENSOR1 & !SENSOR5)/*(!SENSOR1 | !SENSOR3) | (!SENSOR3 | !SENSOR5) | (!SENSOR1 | !SENSOR5)*/){
0x1C52	0xB881      	BTFSC       PORTB, 4 
0x1C54	0xD002      	BRA         L__transicionEntBP21866
0x1C56	0x8001      	BSF         R1, 0 
0x1C58	0xD001      	BRA         L__transicionEntBP21867
L__transicionEntBP21866:
0x1C5A	0x9001      	BCF         R1, 0 
L__transicionEntBP21867:
0x1C5C	0xB081      	BTFSC       PORTB, 0 
0x1C5E	0xD002      	BRA         L__transicionEntBP21868
0x1C60	0x80D8      	BSF         STATUS, 0 
0x1C62	0xD001      	BRA         L__transicionEntBP21869
L__transicionEntBP21868:
0x1C64	0x90D8      	BCF         STATUS, 0 
L__transicionEntBP21869:
0x1C66	0xA001      	BTFSS       R1, 0 
0x1C68	0xD003      	BRA         L__transicionEntBP21870
0x1C6A	0xE302      	BNC         L__transicionEntBP21870
0x1C6C	0x8001      	BSF         R1, 0 
0x1C6E	0xD001      	BRA         L__transicionEntBP21871
L__transicionEntBP21870:
0x1C70	0x9001      	BCF         R1, 0 
L__transicionEntBP21871:
0x1C72	0xA001      	BTFSS       R1, 0 
0x1C74	0xD00A      	BRA         L_transicionEntBP2397
;rutinasensores_v4(mstr-slv).h,1689 :: 		lcd_cmd(_LCD_CLEAR);
0x1C76	0x0E01      	MOVLW       1
0x1C78	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x1C7A	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1690 :: 		return debugEstadoB = TRANSICION;
0x1C7E	0x0E02      	MOVLW       2
0x1C80	0x0101      	MOVLB       1
0x1C82	0x6F3D      	MOVWF       _debugEstadoB, 1
0x1C84	0x0E02      	MOVLW       2
0x1C86	0x6E00      	MOVWF       R0 
0x1C88	0xD013      	BRA         L_end_transicionEntBP2
;rutinasensores_v4(mstr-slv).h,1691 :: 		}
L_transicionEntBP2397:
;rutinasensores_v4(mstr-slv).h,1692 :: 		if(/*(SENSOR2 & SENSOR4) | (SENSOR4 & SENSOR6) | (SENSOR2 & SENSOR6) | */(SENSOR2 & SENSOR6)){
0x1C8A	0xA883      	BTFSS       PORTD, 4 
0x1C8C	0xD004      	BRA         L__transicionEntBP21872
0x1C8E	0xA281      	BTFSS       PORTB, 1 
0x1C90	0xD002      	BRA         L__transicionEntBP21872
0x1C92	0x80D8      	BSF         STATUS, 0 
0x1C94	0xD001      	BRA         L__transicionEntBP21873
L__transicionEntBP21872:
0x1C96	0x90D8      	BCF         STATUS, 0 
L__transicionEntBP21873:
0x1C98	0xE30B      	BNC         L_transicionEntBP2398
;rutinasensores_v4(mstr-slv).h,1693 :: 		lcd_cmd(_LCD_CLEAR);
0x1C9A	0x0E01      	MOVLW       1
0x1C9C	0x0102      	MOVLB       2
0x1C9E	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x1CA0	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1694 :: 		return debugEstadoB = ENTRO;
0x1CA4	0x0E03      	MOVLW       3
0x1CA6	0x0101      	MOVLB       1
0x1CA8	0x6F3D      	MOVWF       _debugEstadoB, 1
0x1CAA	0x0E03      	MOVLW       3
0x1CAC	0x6E00      	MOVWF       R0 
0x1CAE	0xD000      	BRA         L_end_transicionEntBP2
;rutinasensores_v4(mstr-slv).h,1695 :: 		}
L_transicionEntBP2398:
;rutinasensores_v4(mstr-slv).h,1696 :: 		}
L_transicionEntBP2396:
;rutinasensores_v4(mstr-slv).h,1697 :: 		}
L_end_transicionEntBP2:
0x1CB0	0x0012      	RETURN      0
; end of _transicionEntBP2
_transicionSalBP3:
;rutinasensores_v4(mstr-slv).h,1895 :: 		short transicionSalBP3(short estado){
;rutinasensores_v4(mstr-slv).h,1896 :: 		if(estado == TRANSAL){
0x1CB2	0x0102      	MOVLB       2
0x1CB4	0x5114      	MOVF        FARG_transicionSalBP3_estado, 0, 1
0x1CB6	0x0A05      	XORLW       5
0x1CB8	0xE13B      	BNZ         L_transicionSalBP3434
;rutinasensores_v4(mstr-slv).h,1897 :: 		LCD_OUTCONST(3,1,"TRANSICION SALIDA");
0x1CBA	0x0E03      	MOVLW       3
0x1CBC	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x1CBE	0x0E01      	MOVLW       1
0x1CC0	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x1CC2	0x0EF4      	MOVLW       ?lstr_86_MyProject
0x1CC4	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x1CC6	0x0ED7      	MOVLW       hi_addr(?lstr_86_MyProject)
0x1CC8	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x1CCA	0x0E00      	MOVLW       higher_addr(?lstr_86_MyProject)
0x1CCC	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x1CCE	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1898 :: 		if(!SENSOR2 & !SENSOR4 ){
0x1CD2	0xB883      	BTFSC       PORTD, 4 
0x1CD4	0xD002      	BRA         L__transicionSalBP31991
0x1CD6	0x8001      	BSF         R1, 0 
0x1CD8	0xD001      	BRA         L__transicionSalBP31992
L__transicionSalBP31991:
0x1CDA	0x9001      	BCF         R1, 0 
L__transicionSalBP31992:
0x1CDC	0xB681      	BTFSC       PORTB, 3 
0x1CDE	0xD002      	BRA         L__transicionSalBP31993
0x1CE0	0x80D8      	BSF         STATUS, 0 
0x1CE2	0xD001      	BRA         L__transicionSalBP31994
L__transicionSalBP31993:
0x1CE4	0x90D8      	BCF         STATUS, 0 
L__transicionSalBP31994:
0x1CE6	0xA001      	BTFSS       R1, 0 
0x1CE8	0xD003      	BRA         L__transicionSalBP31995
0x1CEA	0xE302      	BNC         L__transicionSalBP31995
0x1CEC	0x8001      	BSF         R1, 0 
0x1CEE	0xD001      	BRA         L__transicionSalBP31996
L__transicionSalBP31995:
0x1CF0	0x9001      	BCF         R1, 0 
L__transicionSalBP31996:
0x1CF2	0xA001      	BTFSS       R1, 0 
0x1CF4	0xD00A      	BRA         L_transicionSalBP3435
;rutinasensores_v4(mstr-slv).h,1899 :: 		lcd_cmd(_LCD_CLEAR);
0x1CF6	0x0E01      	MOVLW       1
0x1CF8	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x1CFA	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1900 :: 		return debugEstadoB = TRANSICIONS;
0x1CFE	0x0E08      	MOVLW       8
0x1D00	0x0101      	MOVLB       1
0x1D02	0x6F3D      	MOVWF       _debugEstadoB, 1
0x1D04	0x0E08      	MOVLW       8
0x1D06	0x6E00      	MOVWF       R0 
0x1D08	0xD013      	BRA         L_end_transicionSalBP3
;rutinasensores_v4(mstr-slv).h,1901 :: 		}
L_transicionSalBP3435:
;rutinasensores_v4(mstr-slv).h,1902 :: 		if((SENSOR1 & SENSOR3)){
0x1D0A	0xA881      	BTFSS       PORTB, 4 
0x1D0C	0xD004      	BRA         L__transicionSalBP31997
0x1D0E	0xA481      	BTFSS       PORTB, 2 
0x1D10	0xD002      	BRA         L__transicionSalBP31997
0x1D12	0x80D8      	BSF         STATUS, 0 
0x1D14	0xD001      	BRA         L__transicionSalBP31998
L__transicionSalBP31997:
0x1D16	0x90D8      	BCF         STATUS, 0 
L__transicionSalBP31998:
0x1D18	0xE30B      	BNC         L_transicionSalBP3436
;rutinasensores_v4(mstr-slv).h,1903 :: 		lcd_cmd(_LCD_CLEAR);
0x1D1A	0x0E01      	MOVLW       1
0x1D1C	0x0102      	MOVLB       2
0x1D1E	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x1D20	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1904 :: 		return debugEstadoB = SALIO;
0x1D24	0x0E06      	MOVLW       6
0x1D26	0x0101      	MOVLB       1
0x1D28	0x6F3D      	MOVWF       _debugEstadoB, 1
0x1D2A	0x0E06      	MOVLW       6
0x1D2C	0x6E00      	MOVWF       R0 
0x1D2E	0xD000      	BRA         L_end_transicionSalBP3
;rutinasensores_v4(mstr-slv).h,1905 :: 		}
L_transicionSalBP3436:
;rutinasensores_v4(mstr-slv).h,1906 :: 		}
L_transicionSalBP3434:
;rutinasensores_v4(mstr-slv).h,1907 :: 		}
L_end_transicionSalBP3:
0x1D30	0x0012      	RETURN      0
; end of _transicionSalBP3
_entroBP1:
;rutinasensores_v4(mstr-slv).h,1552 :: 		short entroBP1(short estado){
;rutinasensores_v4(mstr-slv).h,1553 :: 		if(estado == ENTRO){
0x1D32	0x0102      	MOVLB       2
0x1D34	0x5114      	MOVF        FARG_entroBP1_estado, 0, 1
0x1D36	0x0A03      	XORLW       3
0x1D38	0xA4D8      	BTFSS       STATUS, 2 
0x1D3A	0xD117      	BRA         L_entroBP1373
;rutinasensores_v4(mstr-slv).h,1554 :: 		LCD_OUTCONST(3,1,"BIENVENIDO: $6.00");
0x1D3C	0x0E03      	MOVLW       3
0x1D3E	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x1D40	0x0E01      	MOVLW       1
0x1D42	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x1D44	0x0EAC      	MOVLW       ?lstr_67_MyProject
0x1D46	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x1D48	0x0ED7      	MOVLW       hi_addr(?lstr_67_MyProject)
0x1D4A	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x1D4C	0x0E00      	MOVLW       higher_addr(?lstr_67_MyProject)
0x1D4E	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x1D50	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1555 :: 		delay_ms(350);
0x1D54	0x0E09      	MOVLW       9
0x1D56	0x6E0B      	MOVWF       R11, 0
0x1D58	0x0EE1      	MOVLW       225
0x1D5A	0x6E0C      	MOVWF       R12, 0
0x1D5C	0x0EB2      	MOVLW       178
0x1D5E	0x6E0D      	MOVWF       R13, 0
L_entroBP1374:
0x1D60	0x2E0D      	DECFSZ      R13, 1, 0
0x1D62	0xD7FE      	BRA         L_entroBP1374
0x1D64	0x2E0C      	DECFSZ      R12, 1, 0
0x1D66	0xD7FC      	BRA         L_entroBP1374
0x1D68	0x2E0B      	DECFSZ      R11, 1, 0
0x1D6A	0xD7FA      	BRA         L_entroBP1374
0x1D6C	0x0000      	NOP
;rutinasensores_v4(mstr-slv).h,1556 :: 		pBajan = eepromLeeNumero(0x0003,2);
0x1D6E	0x0E03      	MOVLW       3
0x1D70	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x1D72	0x0E00      	MOVLW       0
0x1D74	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x1D76	0x0E02      	MOVLW       2
0x1D78	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x1D7A	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x1D7E	0xF135C000  	MOVFF       R0, _pBajan
0x1D82	0xF136C001  	MOVFF       R1, _pBajan+1
;rutinasensores_v4(mstr-slv).h,1557 :: 		pSuben = eepromLeeNumero(0x0000,2) + 1;
0x1D86	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x1D88	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x1D8A	0x0E02      	MOVLW       2
0x1D8C	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x1D8E	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x1D92	0x4A00      	INFSNZ      R0, 1 
0x1D94	0x2A01      	INCF        R1, 1 
0x1D96	0xF137C000  	MOVFF       R0, _pSuben
0x1D9A	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,1558 :: 		eepromEscribeNumero(0x0000,pSuben,2);
0x1D9E	0x6B1D      	CLRF        FARG_eepromEscribeNumero_Registro, 1
0x1DA0	0x6B1E      	CLRF        FARG_eepromEscribeNumero_Registro+1, 1
0x1DA2	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x1DA6	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x1DAA	0x0E00      	MOVLW       0
0x1DAC	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x1DAE	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x1DB0	0x0E02      	MOVLW       2
0x1DB2	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x1DB4	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,1559 :: 		pSuben = eepromLeeNumero(0x0000,2);
0x1DB8	0x0102      	MOVLB       2
0x1DBA	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x1DBC	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x1DBE	0x0E02      	MOVLW       2
0x1DC0	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x1DC2	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x1DC6	0xF137C000  	MOVFF       R0, _pSuben
0x1DCA	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,1560 :: 		pasajerosVerdaderos = ((float)pSuben + (float)pBajan)/2;
0x1DCE	0xF008EC65  	CALL        _Word2Double, 0
0x1DD2	0xF215C000  	MOVFF       R0, FLOC__entroBP1
0x1DD6	0xF216C001  	MOVFF       R1, FLOC__entroBP1+1
0x1DDA	0xF217C002  	MOVFF       R2, FLOC__entroBP1+2
0x1DDE	0xF218C003  	MOVFF       R3, FLOC__entroBP1+3
0x1DE2	0xF000C135  	MOVFF       _pBajan, R0
0x1DE6	0xF001C136  	MOVFF       _pBajan+1, R1
0x1DEA	0xF008EC65  	CALL        _Word2Double, 0
0x1DEE	0xF004C215  	MOVFF       FLOC__entroBP1, R4
0x1DF2	0xF005C216  	MOVFF       FLOC__entroBP1+1, R5
0x1DF6	0xF006C217  	MOVFF       FLOC__entroBP1+2, R6
0x1DFA	0xF007C218  	MOVFF       FLOC__entroBP1+3, R7
0x1DFE	0xF004EC8D  	CALL        _Add_32x32_FP, 0
0x1E02	0x0E00      	MOVLW       0
0x1E04	0x6E04      	MOVWF       R4 
0x1E06	0x0E00      	MOVLW       0
0x1E08	0x6E05      	MOVWF       R5 
0x1E0A	0x0E00      	MOVLW       0
0x1E0C	0x6E06      	MOVWF       R6 
0x1E0E	0x0E80      	MOVLW       128
0x1E10	0x6E07      	MOVWF       R7 
0x1E12	0xF007ECA7  	CALL        _Div_32x32_FP, 0
0x1E16	0xF139C000  	MOVFF       R0, _pasajerosVerdaderos
0x1E1A	0xF13AC001  	MOVFF       R1, _pasajerosVerdaderos+1
0x1E1E	0xF13BC002  	MOVFF       R2, _pasajerosVerdaderos+2
0x1E22	0xF13CC003  	MOVFF       R3, _pasajerosVerdaderos+3
;rutinasensores_v4(mstr-slv).h,1561 :: 		eepromEscribeNumero(0x0009, (unsigned int)pasajerosVerdaderos, 2);
0x1E26	0x0E09      	MOVLW       9
0x1E28	0x0102      	MOVLB       2
0x1E2A	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x1E2C	0x0E00      	MOVLW       0
0x1E2E	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x1E30	0xF006ECA0  	CALL        _Double2Word, 0
0x1E34	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x1E38	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x1E3C	0x0E00      	MOVLW       0
0x1E3E	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x1E40	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x1E42	0x0E02      	MOVLW       2
0x1E44	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x1E46	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,1562 :: 		if(MSTR){
0x1E4A	0xA483      	BTFSS       PORTD, 2 
0x1E4C	0xD085      	BRA         L_entroBP1375
;rutinasensores_v4(mstr-slv).h,1563 :: 		pVerdaderosMEntero = eepromLeeNumero(0x0009, 2);
0x1E4E	0x0E09      	MOVLW       9
0x1E50	0x0102      	MOVLB       2
0x1E52	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x1E54	0x0E00      	MOVLW       0
0x1E56	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x1E58	0x0E02      	MOVLW       2
0x1E5A	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x1E5C	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x1E60	0xF12FC000  	MOVFF       R0, _pVerdaderosMEntero
0x1E64	0xF130C001  	MOVFF       R1, _pVerdaderosMEntero+1
;rutinasensores_v4(mstr-slv).h,1564 :: 		pVerdaderosEEntero = eepromLeeNumero(0x0007, 2);
0x1E68	0x0E07      	MOVLW       7
0x1E6A	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x1E6C	0x0E00      	MOVLW       0
0x1E6E	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x1E70	0x0E02      	MOVLW       2
0x1E72	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x1E74	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x1E78	0xF12DC000  	MOVFF       R0, _pVerdaderosEEntero
0x1E7C	0xF12EC001  	MOVFF       R1, _pVerdaderosEEntero+1
;rutinasensores_v4(mstr-slv).h,1565 :: 		pasajerosTotalesL = pVerdaderosMEntero + pVerdaderosEEntero;
0x1E80	0x5000      	MOVF        R0, 0 
0x1E82	0x0101      	MOVLB       1
0x1E84	0x252F      	ADDWF       _pVerdaderosMEntero, 0, 1
0x1E86	0x6F33      	MOVWF       _pasajerosTotalesL, 1
0x1E88	0x5001      	MOVF        R1, 0 
0x1E8A	0x2130      	ADDWFC      _pVerdaderosMEntero+1, 0, 1
0x1E8C	0x6F34      	MOVWF       _pasajerosTotalesL+1, 1
;rutinasensores_v4(mstr-slv).h,1566 :: 		totalCalculado = (eepromLeeNumero(0x0000, 2)+eepromLeeNumero(0x0003, 2)+eepromLeeNumero(0x0900, 2)+eepromLeeNumero(0x0700, 2))/2;
0x1E8E	0x0102      	MOVLB       2
0x1E90	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x1E92	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x1E94	0x0E02      	MOVLW       2
0x1E96	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x1E98	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x1E9C	0xF215C000  	MOVFF       R0, FLOC__entroBP1
0x1EA0	0xF216C001  	MOVFF       R1, FLOC__entroBP1+1
0x1EA4	0xF217C002  	MOVFF       R2, FLOC__entroBP1+2
0x1EA8	0xF218C003  	MOVFF       R3, FLOC__entroBP1+3
0x1EAC	0x0E03      	MOVLW       3
0x1EAE	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x1EB0	0x0E00      	MOVLW       0
0x1EB2	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x1EB4	0x0E02      	MOVLW       2
0x1EB6	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x1EB8	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x1EBC	0x5000      	MOVF        R0, 0 
0x1EBE	0x2715      	ADDWF       FLOC__entroBP1, 1, 1
0x1EC0	0x5001      	MOVF        R1, 0 
0x1EC2	0x2316      	ADDWFC      FLOC__entroBP1+1, 1, 1
0x1EC4	0x5002      	MOVF        R2, 0 
0x1EC6	0x2317      	ADDWFC      FLOC__entroBP1+2, 1, 1
0x1EC8	0x5003      	MOVF        R3, 0 
0x1ECA	0x2318      	ADDWFC      FLOC__entroBP1+3, 1, 1
0x1ECC	0x0E00      	MOVLW       0
0x1ECE	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x1ED0	0x0E09      	MOVLW       9
0x1ED2	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x1ED4	0x0E02      	MOVLW       2
0x1ED6	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x1ED8	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x1EDC	0x5000      	MOVF        R0, 0 
0x1EDE	0x2715      	ADDWF       FLOC__entroBP1, 1, 1
0x1EE0	0x5001      	MOVF        R1, 0 
0x1EE2	0x2316      	ADDWFC      FLOC__entroBP1+1, 1, 1
0x1EE4	0x5002      	MOVF        R2, 0 
0x1EE6	0x2317      	ADDWFC      FLOC__entroBP1+2, 1, 1
0x1EE8	0x5003      	MOVF        R3, 0 
0x1EEA	0x2318      	ADDWFC      FLOC__entroBP1+3, 1, 1
0x1EEC	0x0E00      	MOVLW       0
0x1EEE	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x1EF0	0x0E07      	MOVLW       7
0x1EF2	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x1EF4	0x0E02      	MOVLW       2
0x1EF6	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x1EF8	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x1EFC	0x5000      	MOVF        R0, 0 
0x1EFE	0x2515      	ADDWF       FLOC__entroBP1, 0, 1
0x1F00	0x6E05      	MOVWF       R5 
0x1F02	0x5001      	MOVF        R1, 0 
0x1F04	0x2116      	ADDWFC      FLOC__entroBP1+1, 0, 1
0x1F06	0x6E06      	MOVWF       R6 
0x1F08	0x5002      	MOVF        R2, 0 
0x1F0A	0x2117      	ADDWFC      FLOC__entroBP1+2, 0, 1
0x1F0C	0x6E07      	MOVWF       R7 
0x1F0E	0x5003      	MOVF        R3, 0 
0x1F10	0x2118      	ADDWFC      FLOC__entroBP1+3, 0, 1
0x1F12	0x6E08      	MOVWF       R8 
0x1F14	0xF000C005  	MOVFF       R5, R0
0x1F18	0xF001C006  	MOVFF       R6, R1
0x1F1C	0xF002C007  	MOVFF       R7, R2
0x1F20	0xF003C008  	MOVFF       R8, R3
0x1F24	0x3203      	RRCF        R3, 1 
0x1F26	0x3202      	RRCF        R2, 1 
0x1F28	0x3201      	RRCF        R1, 1 
0x1F2A	0x3200      	RRCF        R0, 1 
0x1F2C	0x9E03      	BCF         R3, 7 
0x1F2E	0xBC03      	BTFSC       R3, 6 
0x1F30	0x8E03      	BSF         R3, 7 
0x1F32	0xF131C000  	MOVFF       R0, _totalCalculado
0x1F36	0xF132C001  	MOVFF       R1, _totalCalculado+1
;rutinasensores_v4(mstr-slv).h,1567 :: 		eepromEscribeNumero(0x0005, totalCalculado, 2);
0x1F3A	0x0E05      	MOVLW       5
0x1F3C	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x1F3E	0x0E00      	MOVLW       0
0x1F40	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x1F42	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x1F46	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x1F4A	0x0E00      	MOVLW       0
0x1F4C	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x1F4E	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x1F50	0x0E02      	MOVLW       2
0x1F52	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x1F54	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,1568 :: 		}
L_entroBP1375:
;rutinasensores_v4(mstr-slv).h,1569 :: 		lcd_cmd(_LCD_CLEAR);
0x1F58	0x0E01      	MOVLW       1
0x1F5A	0x0102      	MOVLB       2
0x1F5C	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x1F5E	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1570 :: 		return debugEstadoB = ESPERA;
0x1F62	0x0101      	MOVLB       1
0x1F64	0x6B3D      	CLRF        _debugEstadoB, 1
0x1F66	0x6A00      	CLRF        R0 
0x1F68	0xD000      	BRA         L_end_entroBP1
;rutinasensores_v4(mstr-slv).h,1571 :: 		}
L_entroBP1373:
;rutinasensores_v4(mstr-slv).h,1572 :: 		}
L_end_entroBP1:
0x1F6A	0x0012      	RETURN      0
; end of _entroBP1
_transicionEBP2:
;rutinasensores_v4(mstr-slv).h,1671 :: 		short transicionEBP2(short estado){
;rutinasensores_v4(mstr-slv).h,1672 :: 		if(estado == TRANSICION){
0x1F6C	0x0102      	MOVLB       2
0x1F6E	0x5114      	MOVF        FARG_transicionEBP2_estado, 0, 1
0x1F70	0x0A02      	XORLW       2
0x1F72	0xE14E      	BNZ         L_transicionEBP2393
;rutinasensores_v4(mstr-slv).h,1673 :: 		LCD_OUTCONST(3,1,"TRANSICION");
0x1F74	0x0E03      	MOVLW       3
0x1F76	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x1F78	0x0E01      	MOVLW       1
0x1F7A	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x1F7C	0x0E55      	MOVLW       ?lstr_73_MyProject
0x1F7E	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x1F80	0x0ED9      	MOVLW       hi_addr(?lstr_73_MyProject)
0x1F82	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x1F84	0x0E00      	MOVLW       higher_addr(?lstr_73_MyProject)
0x1F86	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x1F88	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1674 :: 		if((SENSOR1 & SENSOR5)){
0x1F8C	0xA881      	BTFSS       PORTB, 4 
0x1F8E	0xD004      	BRA         L__transicionEBP21851
0x1F90	0xA081      	BTFSS       PORTB, 0 
0x1F92	0xD002      	BRA         L__transicionEBP21851
0x1F94	0x80D8      	BSF         STATUS, 0 
0x1F96	0xD001      	BRA         L__transicionEBP21852
L__transicionEBP21851:
0x1F98	0x90D8      	BCF         STATUS, 0 
L__transicionEBP21852:
0x1F9A	0xE30A      	BNC         L_transicionEBP2394
;rutinasensores_v4(mstr-slv).h,1675 :: 		lcd_cmd(_LCD_CLEAR);
0x1F9C	0x0E01      	MOVLW       1
0x1F9E	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x1FA0	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1676 :: 		return debugEstadoB = TRANENT;
0x1FA4	0x0E07      	MOVLW       7
0x1FA6	0x0101      	MOVLB       1
0x1FA8	0x6F3D      	MOVWF       _debugEstadoB, 1
0x1FAA	0x0E07      	MOVLW       7
0x1FAC	0x6E00      	MOVWF       R0 
0x1FAE	0xD030      	BRA         L_end_transicionEBP2
;rutinasensores_v4(mstr-slv).h,1677 :: 		}
L_transicionEBP2394:
;rutinasensores_v4(mstr-slv).h,1678 :: 		if((SENSOR2 & SENSOR6 & !SENSOR1) | (SENSOR2 & SENSOR6 & !SENSOR5)){
0x1FB0	0xA883      	BTFSS       PORTD, 4 
0x1FB2	0xD004      	BRA         L__transicionEBP21853
0x1FB4	0xA281      	BTFSS       PORTB, 1 
0x1FB6	0xD002      	BRA         L__transicionEBP21853
0x1FB8	0x8001      	BSF         R1, 0 
0x1FBA	0xD001      	BRA         L__transicionEBP21854
L__transicionEBP21853:
0x1FBC	0x9001      	BCF         R1, 0 
L__transicionEBP21854:
0x1FBE	0xB881      	BTFSC       PORTB, 4 
0x1FC0	0xD002      	BRA         L__transicionEBP21855
0x1FC2	0x80D8      	BSF         STATUS, 0 
0x1FC4	0xD001      	BRA         L__transicionEBP21856
L__transicionEBP21855:
0x1FC6	0x90D8      	BCF         STATUS, 0 
L__transicionEBP21856:
0x1FC8	0xA001      	BTFSS       R1, 0 
0x1FCA	0xD003      	BRA         L__transicionEBP21857
0x1FCC	0xE302      	BNC         L__transicionEBP21857
0x1FCE	0x8201      	BSF         R1, 1 
0x1FD0	0xD001      	BRA         L__transicionEBP21858
L__transicionEBP21857:
0x1FD2	0x9201      	BCF         R1, 1 
L__transicionEBP21858:
0x1FD4	0xB081      	BTFSC       PORTB, 0 
0x1FD6	0xD002      	BRA         L__transicionEBP21859
0x1FD8	0x80D8      	BSF         STATUS, 0 
0x1FDA	0xD001      	BRA         L__transicionEBP21860
L__transicionEBP21859:
0x1FDC	0x90D8      	BCF         STATUS, 0 
L__transicionEBP21860:
0x1FDE	0xA001      	BTFSS       R1, 0 
0x1FE0	0xD003      	BRA         L__transicionEBP21861
0x1FE2	0xE302      	BNC         L__transicionEBP21861
0x1FE4	0x8001      	BSF         R1, 0 
0x1FE6	0xD001      	BRA         L__transicionEBP21862
L__transicionEBP21861:
0x1FE8	0x9001      	BCF         R1, 0 
L__transicionEBP21862:
0x1FEA	0xB201      	BTFSC       R1, 1 
0x1FEC	0xD004      	BRA         L__transicionEBP21863
0x1FEE	0xB001      	BTFSC       R1, 0 
0x1FF0	0xD002      	BRA         L__transicionEBP21863
0x1FF2	0x90D8      	BCF         STATUS, 0 
0x1FF4	0xD001      	BRA         L__transicionEBP21864
L__transicionEBP21863:
0x1FF6	0x80D8      	BSF         STATUS, 0 
L__transicionEBP21864:
0x1FF8	0xE30B      	BNC         L_transicionEBP2395
;rutinasensores_v4(mstr-slv).h,1679 :: 		lcd_cmd(_LCD_CLEAR);
0x1FFA	0x0E01      	MOVLW       1
0x1FFC	0x0102      	MOVLB       2
0x1FFE	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x2000	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1680 :: 		return debugEstadoB = ENTRANDO;
0x2004	0x0E01      	MOVLW       1
0x2006	0x0101      	MOVLB       1
0x2008	0x6F3D      	MOVWF       _debugEstadoB, 1
0x200A	0x0E01      	MOVLW       1
0x200C	0x6E00      	MOVWF       R0 
0x200E	0xD000      	BRA         L_end_transicionEBP2
;rutinasensores_v4(mstr-slv).h,1681 :: 		}
L_transicionEBP2395:
;rutinasensores_v4(mstr-slv).h,1682 :: 		}
L_transicionEBP2393:
;rutinasensores_v4(mstr-slv).h,1683 :: 		}
L_end_transicionEBP2:
0x2010	0x0012      	RETURN      0
; end of _transicionEBP2
_transicionSBP1:
;rutinasensores_v4(mstr-slv).h,1588 :: 		short transicionSBP1(short estado){
;rutinasensores_v4(mstr-slv).h,1589 :: 		if(estado == TRANSICIONS){
0x2012	0x0102      	MOVLB       2
0x2014	0x5114      	MOVF        FARG_transicionSBP1_estado, 0, 1
0x2016	0x0A08      	XORLW       8
0x2018	0xE14E      	BNZ         L_transicionSBP1379
;rutinasensores_v4(mstr-slv).h,1590 :: 		lcd_outConst(3, 1, "TRANSICION");
0x201A	0x0E03      	MOVLW       3
0x201C	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x201E	0x0E01      	MOVLW       1
0x2020	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x2022	0x0E8C      	MOVLW       ?lstr_69_MyProject
0x2024	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x2026	0x0ED9      	MOVLW       hi_addr(?lstr_69_MyProject)
0x2028	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x202A	0x0E00      	MOVLW       higher_addr(?lstr_69_MyProject)
0x202C	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x202E	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1591 :: 		if((SENSOR4 & SENSOR6)){
0x2032	0xA681      	BTFSS       PORTB, 3 
0x2034	0xD004      	BRA         L__transicionSBP11804
0x2036	0xA281      	BTFSS       PORTB, 1 
0x2038	0xD002      	BRA         L__transicionSBP11804
0x203A	0x80D8      	BSF         STATUS, 0 
0x203C	0xD001      	BRA         L__transicionSBP11805
L__transicionSBP11804:
0x203E	0x90D8      	BCF         STATUS, 0 
L__transicionSBP11805:
0x2040	0xE30A      	BNC         L_transicionSBP1380
;rutinasensores_v4(mstr-slv).h,1592 :: 		lcd_cmd(_LCD_CLEAR);
0x2042	0x0E01      	MOVLW       1
0x2044	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x2046	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1593 :: 		return debugEstadoB = TRANSAL;
0x204A	0x0E05      	MOVLW       5
0x204C	0x0101      	MOVLB       1
0x204E	0x6F3D      	MOVWF       _debugEstadoB, 1
0x2050	0x0E05      	MOVLW       5
0x2052	0x6E00      	MOVWF       R0 
0x2054	0xD030      	BRA         L_end_transicionSBP1
;rutinasensores_v4(mstr-slv).h,1594 :: 		}
L_transicionSBP1380:
;rutinasensores_v4(mstr-slv).h,1595 :: 		if((SENSOR3 & SENSOR5 & !SENSOR4) | (SENSOR3 & SENSOR5 & !SENSOR6)){
0x2056	0xA481      	BTFSS       PORTB, 2 
0x2058	0xD004      	BRA         L__transicionSBP11806
0x205A	0xA081      	BTFSS       PORTB, 0 
0x205C	0xD002      	BRA         L__transicionSBP11806
0x205E	0x8001      	BSF         R1, 0 
0x2060	0xD001      	BRA         L__transicionSBP11807
L__transicionSBP11806:
0x2062	0x9001      	BCF         R1, 0 
L__transicionSBP11807:
0x2064	0xB681      	BTFSC       PORTB, 3 
0x2066	0xD002      	BRA         L__transicionSBP11808
0x2068	0x80D8      	BSF         STATUS, 0 
0x206A	0xD001      	BRA         L__transicionSBP11809
L__transicionSBP11808:
0x206C	0x90D8      	BCF         STATUS, 0 
L__transicionSBP11809:
0x206E	0xA001      	BTFSS       R1, 0 
0x2070	0xD003      	BRA         L__transicionSBP11810
0x2072	0xE302      	BNC         L__transicionSBP11810
0x2074	0x8201      	BSF         R1, 1 
0x2076	0xD001      	BRA         L__transicionSBP11811
L__transicionSBP11810:
0x2078	0x9201      	BCF         R1, 1 
L__transicionSBP11811:
0x207A	0xB281      	BTFSC       PORTB, 1 
0x207C	0xD002      	BRA         L__transicionSBP11812
0x207E	0x80D8      	BSF         STATUS, 0 
0x2080	0xD001      	BRA         L__transicionSBP11813
L__transicionSBP11812:
0x2082	0x90D8      	BCF         STATUS, 0 
L__transicionSBP11813:
0x2084	0xA001      	BTFSS       R1, 0 
0x2086	0xD003      	BRA         L__transicionSBP11814
0x2088	0xE302      	BNC         L__transicionSBP11814
0x208A	0x8001      	BSF         R1, 0 
0x208C	0xD001      	BRA         L__transicionSBP11815
L__transicionSBP11814:
0x208E	0x9001      	BCF         R1, 0 
L__transicionSBP11815:
0x2090	0xB201      	BTFSC       R1, 1 
0x2092	0xD004      	BRA         L__transicionSBP11816
0x2094	0xB001      	BTFSC       R1, 0 
0x2096	0xD002      	BRA         L__transicionSBP11816
0x2098	0x90D8      	BCF         STATUS, 0 
0x209A	0xD001      	BRA         L__transicionSBP11817
L__transicionSBP11816:
0x209C	0x80D8      	BSF         STATUS, 0 
L__transicionSBP11817:
0x209E	0xE30B      	BNC         L_transicionSBP1381
;rutinasensores_v4(mstr-slv).h,1596 :: 		lcd_cmd(_LCD_CLEAR);
0x20A0	0x0E01      	MOVLW       1
0x20A2	0x0102      	MOVLB       2
0x20A4	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x20A6	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1597 :: 		return debugEstadoB = SALIENDO;
0x20AA	0x0E04      	MOVLW       4
0x20AC	0x0101      	MOVLB       1
0x20AE	0x6F3D      	MOVWF       _debugEstadoB, 1
0x20B0	0x0E04      	MOVLW       4
0x20B2	0x6E00      	MOVWF       R0 
0x20B4	0xD000      	BRA         L_end_transicionSBP1
;rutinasensores_v4(mstr-slv).h,1598 :: 		}
L_transicionSBP1381:
;rutinasensores_v4(mstr-slv).h,1599 :: 		}
L_transicionSBP1379:
;rutinasensores_v4(mstr-slv).h,1600 :: 		}
L_end_transicionSBP1:
0x20B6	0x0012      	RETURN      0
; end of _transicionSBP1
_salio:
;rutinasensores_v4(mstr-slv).h,601 :: 		short salio(short estado){
;rutinasensores_v4(mstr-slv).h,602 :: 		if(estado == SALIO){
0x20B8	0x0102      	MOVLB       2
0x20BA	0x5114      	MOVF        FARG_salio_estado, 0, 1
0x20BC	0x0A06      	XORLW       6
0x20BE	0xA4D8      	BTFSS       STATUS, 2 
0x20C0	0xD11C      	BRA         L_salio209
;rutinasensores_v4(mstr-slv).h,603 :: 		LCD_OUTCONST(3,1,"GRACIAS!");
0x20C2	0x0E03      	MOVLW       3
0x20C4	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x20C6	0x0E01      	MOVLW       1
0x20C8	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x20CA	0x0EAD      	MOVLW       ?lstr_15_MyProject
0x20CC	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x20CE	0x0ED9      	MOVLW       hi_addr(?lstr_15_MyProject)
0x20D0	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x20D2	0x0E00      	MOVLW       higher_addr(?lstr_15_MyProject)
0x20D4	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x20D6	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,605 :: 		pSuben = eepromLeeNumero(0x0000, 2);
0x20DA	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x20DC	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x20DE	0x0E02      	MOVLW       2
0x20E0	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x20E2	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x20E6	0xF137C000  	MOVFF       R0, _pSuben
0x20EA	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,606 :: 		pBajan = eepromLeeNumero(0x0003, 2) + 1;
0x20EE	0x0E03      	MOVLW       3
0x20F0	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x20F2	0x0E00      	MOVLW       0
0x20F4	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x20F6	0x0E02      	MOVLW       2
0x20F8	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x20FA	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x20FE	0x4A00      	INFSNZ      R0, 1 
0x2100	0x2A01      	INCF        R1, 1 
0x2102	0xF135C000  	MOVFF       R0, _pBajan
0x2106	0xF136C001  	MOVFF       R1, _pBajan+1
;rutinasensores_v4(mstr-slv).h,607 :: 		eepromEscribeNumero(0x0003 ,pBajan, 2);
0x210A	0x0E03      	MOVLW       3
0x210C	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x210E	0x0E00      	MOVLW       0
0x2110	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x2112	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x2116	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x211A	0x0E00      	MOVLW       0
0x211C	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x211E	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x2120	0x0E02      	MOVLW       2
0x2122	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x2124	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,608 :: 		pBajan = eepromLeeNumero(0x0003, 2);
0x2128	0x0E03      	MOVLW       3
0x212A	0x0102      	MOVLB       2
0x212C	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x212E	0x0E00      	MOVLW       0
0x2130	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x2132	0x0E02      	MOVLW       2
0x2134	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x2136	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x213A	0xF219C000  	MOVFF       R0, FLOC__salio+4
0x213E	0xF21AC001  	MOVFF       R1, FLOC__salio+5
0x2142	0xF21BC002  	MOVFF       R2, FLOC__salio+6
0x2146	0xF21CC003  	MOVFF       R3, FLOC__salio+7
0x214A	0xF135C219  	MOVFF       FLOC__salio+4, _pBajan
0x214E	0xF136C21A  	MOVFF       FLOC__salio+5, _pBajan+1
;rutinasensores_v4(mstr-slv).h,609 :: 		pasajerosVerdaderos = ((float)pSuben + (float)pBajan)/2;
0x2152	0xF000C137  	MOVFF       _pSuben, R0
0x2156	0xF001C138  	MOVFF       _pSuben+1, R1
0x215A	0xF008EC65  	CALL        _Word2Double, 0
0x215E	0xF215C000  	MOVFF       R0, FLOC__salio
0x2162	0xF216C001  	MOVFF       R1, FLOC__salio+1
0x2166	0xF217C002  	MOVFF       R2, FLOC__salio+2
0x216A	0xF218C003  	MOVFF       R3, FLOC__salio+3
0x216E	0xF000C219  	MOVFF       FLOC__salio+4, R0
0x2172	0xF001C21A  	MOVFF       FLOC__salio+5, R1
0x2176	0xF008EC65  	CALL        _Word2Double, 0
0x217A	0xF004C215  	MOVFF       FLOC__salio, R4
0x217E	0xF005C216  	MOVFF       FLOC__salio+1, R5
0x2182	0xF006C217  	MOVFF       FLOC__salio+2, R6
0x2186	0xF007C218  	MOVFF       FLOC__salio+3, R7
0x218A	0xF004EC8D  	CALL        _Add_32x32_FP, 0
0x218E	0x0E00      	MOVLW       0
0x2190	0x6E04      	MOVWF       R4 
0x2192	0x0E00      	MOVLW       0
0x2194	0x6E05      	MOVWF       R5 
0x2196	0x0E00      	MOVLW       0
0x2198	0x6E06      	MOVWF       R6 
0x219A	0x0E80      	MOVLW       128
0x219C	0x6E07      	MOVWF       R7 
0x219E	0xF007ECA7  	CALL        _Div_32x32_FP, 0
0x21A2	0xF139C000  	MOVFF       R0, _pasajerosVerdaderos
0x21A6	0xF13AC001  	MOVFF       R1, _pasajerosVerdaderos+1
0x21AA	0xF13BC002  	MOVFF       R2, _pasajerosVerdaderos+2
0x21AE	0xF13CC003  	MOVFF       R3, _pasajerosVerdaderos+3
;rutinasensores_v4(mstr-slv).h,610 :: 		eepromEscribeNumero(0x0009, (unsigned int)pasajerosVerdaderos, 2);
0x21B2	0x0E09      	MOVLW       9
0x21B4	0x0102      	MOVLB       2
0x21B6	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x21B8	0x0E00      	MOVLW       0
0x21BA	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x21BC	0xF006ECA0  	CALL        _Double2Word, 0
0x21C0	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x21C4	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x21C8	0x0E00      	MOVLW       0
0x21CA	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x21CC	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x21CE	0x0E02      	MOVLW       2
0x21D0	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x21D2	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,611 :: 		if(MSTR){
0x21D6	0xA483      	BTFSS       PORTD, 2 
0x21D8	0xD085      	BRA         L_salio210
;rutinasensores_v4(mstr-slv).h,612 :: 		pVerdaderosMEntero = eepromLeeNumero(0x0009, 2);
0x21DA	0x0E09      	MOVLW       9
0x21DC	0x0102      	MOVLB       2
0x21DE	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x21E0	0x0E00      	MOVLW       0
0x21E2	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x21E4	0x0E02      	MOVLW       2
0x21E6	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x21E8	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x21EC	0xF12FC000  	MOVFF       R0, _pVerdaderosMEntero
0x21F0	0xF130C001  	MOVFF       R1, _pVerdaderosMEntero+1
;rutinasensores_v4(mstr-slv).h,613 :: 		pVerdaderosEEntero = eepromLeeNumero(0x0007, 2);
0x21F4	0x0E07      	MOVLW       7
0x21F6	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x21F8	0x0E00      	MOVLW       0
0x21FA	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x21FC	0x0E02      	MOVLW       2
0x21FE	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x2200	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x2204	0xF12DC000  	MOVFF       R0, _pVerdaderosEEntero
0x2208	0xF12EC001  	MOVFF       R1, _pVerdaderosEEntero+1
;rutinasensores_v4(mstr-slv).h,614 :: 		pasajerosTotalesL = pVerdaderosMEntero + pVerdaderosEEntero;
0x220C	0x5000      	MOVF        R0, 0 
0x220E	0x0101      	MOVLB       1
0x2210	0x252F      	ADDWF       _pVerdaderosMEntero, 0, 1
0x2212	0x6F33      	MOVWF       _pasajerosTotalesL, 1
0x2214	0x5001      	MOVF        R1, 0 
0x2216	0x2130      	ADDWFC      _pVerdaderosMEntero+1, 0, 1
0x2218	0x6F34      	MOVWF       _pasajerosTotalesL+1, 1
;rutinasensores_v4(mstr-slv).h,615 :: 		totalCalculado = (eepromLeeNumero(0x0000, 2)+eepromLeeNumero(0x0003, 2)+eepromLeeNumero(0x0900, 2)+eepromLeeNumero(0x0700, 2))/2;
0x221A	0x0102      	MOVLB       2
0x221C	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x221E	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x2220	0x0E02      	MOVLW       2
0x2222	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x2224	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x2228	0xF215C000  	MOVFF       R0, FLOC__salio
0x222C	0xF216C001  	MOVFF       R1, FLOC__salio+1
0x2230	0xF217C002  	MOVFF       R2, FLOC__salio+2
0x2234	0xF218C003  	MOVFF       R3, FLOC__salio+3
0x2238	0x0E03      	MOVLW       3
0x223A	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x223C	0x0E00      	MOVLW       0
0x223E	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x2240	0x0E02      	MOVLW       2
0x2242	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x2244	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x2248	0x5000      	MOVF        R0, 0 
0x224A	0x2715      	ADDWF       FLOC__salio, 1, 1
0x224C	0x5001      	MOVF        R1, 0 
0x224E	0x2316      	ADDWFC      FLOC__salio+1, 1, 1
0x2250	0x5002      	MOVF        R2, 0 
0x2252	0x2317      	ADDWFC      FLOC__salio+2, 1, 1
0x2254	0x5003      	MOVF        R3, 0 
0x2256	0x2318      	ADDWFC      FLOC__salio+3, 1, 1
0x2258	0x0E00      	MOVLW       0
0x225A	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x225C	0x0E09      	MOVLW       9
0x225E	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x2260	0x0E02      	MOVLW       2
0x2262	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x2264	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x2268	0x5000      	MOVF        R0, 0 
0x226A	0x2715      	ADDWF       FLOC__salio, 1, 1
0x226C	0x5001      	MOVF        R1, 0 
0x226E	0x2316      	ADDWFC      FLOC__salio+1, 1, 1
0x2270	0x5002      	MOVF        R2, 0 
0x2272	0x2317      	ADDWFC      FLOC__salio+2, 1, 1
0x2274	0x5003      	MOVF        R3, 0 
0x2276	0x2318      	ADDWFC      FLOC__salio+3, 1, 1
0x2278	0x0E00      	MOVLW       0
0x227A	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x227C	0x0E07      	MOVLW       7
0x227E	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x2280	0x0E02      	MOVLW       2
0x2282	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x2284	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x2288	0x5000      	MOVF        R0, 0 
0x228A	0x2515      	ADDWF       FLOC__salio, 0, 1
0x228C	0x6E05      	MOVWF       R5 
0x228E	0x5001      	MOVF        R1, 0 
0x2290	0x2116      	ADDWFC      FLOC__salio+1, 0, 1
0x2292	0x6E06      	MOVWF       R6 
0x2294	0x5002      	MOVF        R2, 0 
0x2296	0x2117      	ADDWFC      FLOC__salio+2, 0, 1
0x2298	0x6E07      	MOVWF       R7 
0x229A	0x5003      	MOVF        R3, 0 
0x229C	0x2118      	ADDWFC      FLOC__salio+3, 0, 1
0x229E	0x6E08      	MOVWF       R8 
0x22A0	0xF000C005  	MOVFF       R5, R0
0x22A4	0xF001C006  	MOVFF       R6, R1
0x22A8	0xF002C007  	MOVFF       R7, R2
0x22AC	0xF003C008  	MOVFF       R8, R3
0x22B0	0x3203      	RRCF        R3, 1 
0x22B2	0x3202      	RRCF        R2, 1 
0x22B4	0x3201      	RRCF        R1, 1 
0x22B6	0x3200      	RRCF        R0, 1 
0x22B8	0x9E03      	BCF         R3, 7 
0x22BA	0xBC03      	BTFSC       R3, 6 
0x22BC	0x8E03      	BSF         R3, 7 
0x22BE	0xF131C000  	MOVFF       R0, _totalCalculado
0x22C2	0xF132C001  	MOVFF       R1, _totalCalculado+1
;rutinasensores_v4(mstr-slv).h,616 :: 		eepromEscribeNumero(0x0005, totalCalculado, 2);
0x22C6	0x0E05      	MOVLW       5
0x22C8	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x22CA	0x0E00      	MOVLW       0
0x22CC	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x22CE	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x22D2	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x22D6	0x0E00      	MOVLW       0
0x22D8	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x22DA	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x22DC	0x0E02      	MOVLW       2
0x22DE	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x22E0	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,617 :: 		}
L_salio210:
;rutinasensores_v4(mstr-slv).h,618 :: 		lcd_cmd(_LCD_CLEAR);
0x22E4	0x0E01      	MOVLW       1
0x22E6	0x0102      	MOVLB       2
0x22E8	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x22EA	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,619 :: 		permanencia = false;
0x22EE	0x0100      	MOVLB       0
0x22F0	0x6BE3      	CLRF        _permanencia, 1
;rutinasensores_v4(mstr-slv).h,620 :: 		empiezaSalida = false;
0x22F2	0x6BE5      	CLRF        _empiezaSalida, 1
;rutinasensores_v4(mstr-slv).h,621 :: 		return debugEstado = ESPERA;
0x22F4	0x6BE4      	CLRF        _debugEstado, 1
0x22F6	0x6A00      	CLRF        R0 
0x22F8	0xD000      	BRA         L_end_salio
;rutinasensores_v4(mstr-slv).h,622 :: 		}
L_salio209:
;rutinasensores_v4(mstr-slv).h,623 :: 		}
L_end_salio:
0x22FA	0x0012      	RETURN      0
; end of _salio
_saliendoBP2:
;rutinasensores_v4(mstr-slv).h,1721 :: 		short saliendoBP2(short estado){
;rutinasensores_v4(mstr-slv).h,1722 :: 		if(estado == SALIENDO){
0x22FC	0x0102      	MOVLB       2
0x22FE	0x5114      	MOVF        FARG_saliendoBP2_estado, 0, 1
0x2300	0x0A04      	XORLW       4
0x2302	0xE139      	BNZ         L_saliendoBP2402
;rutinasensores_v4(mstr-slv).h,1723 :: 		lcd_outConst(3, 1, "SALIENDO");
0x2304	0x0E03      	MOVLW       3
0x2306	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x2308	0x0E01      	MOVLW       1
0x230A	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x230C	0x0E19      	MOVLW       ?lstr_76_MyProject
0x230E	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x2310	0x0EDA      	MOVLW       hi_addr(?lstr_76_MyProject)
0x2312	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x2314	0x0E00      	MOVLW       higher_addr(?lstr_76_MyProject)
0x2316	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x2318	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1724 :: 		if((!SENSOR1 & !SENSOR5)){
0x231C	0xB881      	BTFSC       PORTB, 4 
0x231E	0xD002      	BRA         L__saliendoBP21876
0x2320	0x8001      	BSF         R1, 0 
0x2322	0xD001      	BRA         L__saliendoBP21877
L__saliendoBP21876:
0x2324	0x9001      	BCF         R1, 0 
L__saliendoBP21877:
0x2326	0xB081      	BTFSC       PORTB, 0 
0x2328	0xD002      	BRA         L__saliendoBP21878
0x232A	0x80D8      	BSF         STATUS, 0 
0x232C	0xD001      	BRA         L__saliendoBP21879
L__saliendoBP21878:
0x232E	0x90D8      	BCF         STATUS, 0 
L__saliendoBP21879:
0x2330	0xA001      	BTFSS       R1, 0 
0x2332	0xD003      	BRA         L__saliendoBP21880
0x2334	0xE302      	BNC         L__saliendoBP21880
0x2336	0x8001      	BSF         R1, 0 
0x2338	0xD001      	BRA         L__saliendoBP21881
L__saliendoBP21880:
0x233A	0x9001      	BCF         R1, 0 
L__saliendoBP21881:
0x233C	0xA001      	BTFSS       R1, 0 
0x233E	0xD00A      	BRA         L_saliendoBP2403
;rutinasensores_v4(mstr-slv).h,1725 :: 		lcd_cmd(_LCD_CLEAR);
0x2340	0x0E01      	MOVLW       1
0x2342	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x2344	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1726 :: 		return debugEstadoB = TRANSICIONS;
0x2348	0x0E08      	MOVLW       8
0x234A	0x0101      	MOVLB       1
0x234C	0x6F3D      	MOVWF       _debugEstadoB, 1
0x234E	0x0E08      	MOVLW       8
0x2350	0x6E00      	MOVWF       R0 
0x2352	0xD011      	BRA         L_end_saliendoBP2
;rutinasensores_v4(mstr-slv).h,1727 :: 		}
L_saliendoBP2403:
;rutinasensores_v4(mstr-slv).h,1728 :: 		if((SENSOR2 & SENSOR6)){
0x2354	0xA883      	BTFSS       PORTD, 4 
0x2356	0xD004      	BRA         L__saliendoBP21882
0x2358	0xA281      	BTFSS       PORTB, 1 
0x235A	0xD002      	BRA         L__saliendoBP21882
0x235C	0x80D8      	BSF         STATUS, 0 
0x235E	0xD001      	BRA         L__saliendoBP21883
L__saliendoBP21882:
0x2360	0x90D8      	BCF         STATUS, 0 
L__saliendoBP21883:
0x2362	0xE309      	BNC         L_saliendoBP2404
;rutinasensores_v4(mstr-slv).h,1729 :: 		lcd_cmd(_LCD_CLEAR);
0x2364	0x0E01      	MOVLW       1
0x2366	0x0102      	MOVLB       2
0x2368	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x236A	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1730 :: 		return debugEstadoB = ESPERA;
0x236E	0x0101      	MOVLB       1
0x2370	0x6B3D      	CLRF        _debugEstadoB, 1
0x2372	0x6A00      	CLRF        R0 
0x2374	0xD000      	BRA         L_end_saliendoBP2
;rutinasensores_v4(mstr-slv).h,1731 :: 		}
L_saliendoBP2404:
;rutinasensores_v4(mstr-slv).h,1732 :: 		}
L_saliendoBP2402:
;rutinasensores_v4(mstr-slv).h,1733 :: 		}
L_end_saliendoBP2:
0x2376	0x0012      	RETURN      0
; end of _saliendoBP2
_entrandoBP1:
;rutinasensores_v4(mstr-slv).h,1510 :: 		short entrandoBP1(short estado){
;rutinasensores_v4(mstr-slv).h,1511 :: 		if(estado == ENTRANDO){
0x2378	0x0102      	MOVLB       2
0x237A	0x5114      	MOVF        FARG_entrandoBP1_estado, 0, 1
0x237C	0x0A01      	XORLW       1
0x237E	0xE139      	BNZ         L_entrandoBP1364
;rutinasensores_v4(mstr-slv).h,1512 :: 		LCD_OUTCONST(3,1,"ENTRANDO");
0x2380	0x0E03      	MOVLW       3
0x2382	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x2384	0x0E01      	MOVLW       1
0x2386	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x2388	0x0E58      	MOVLW       ?lstr_64_MyProject
0x238A	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x238C	0x0EDA      	MOVLW       hi_addr(?lstr_64_MyProject)
0x238E	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x2390	0x0E00      	MOVLW       higher_addr(?lstr_64_MyProject)
0x2392	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x2394	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1513 :: 		if((SENSOR3 & SENSOR5)){
0x2398	0xA481      	BTFSS       PORTB, 2 
0x239A	0xD004      	BRA         L__entrandoBP11761
0x239C	0xA081      	BTFSS       PORTB, 0 
0x239E	0xD002      	BRA         L__entrandoBP11761
0x23A0	0x80D8      	BSF         STATUS, 0 
0x23A2	0xD001      	BRA         L__entrandoBP11762
L__entrandoBP11761:
0x23A4	0x90D8      	BCF         STATUS, 0 
L__entrandoBP11762:
0x23A6	0xE308      	BNC         L_entrandoBP1365
;rutinasensores_v4(mstr-slv).h,1514 :: 		lcd_cmd(_LCD_CLEAR);
0x23A8	0x0E01      	MOVLW       1
0x23AA	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x23AC	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1515 :: 		return debugEstadoB = ESPERA;
0x23B0	0x0101      	MOVLB       1
0x23B2	0x6B3D      	CLRF        _debugEstadoB, 1
0x23B4	0x6A00      	CLRF        R0 
0x23B6	0xD01D      	BRA         L_end_entrandoBP1
;rutinasensores_v4(mstr-slv).h,1516 :: 		}
L_entrandoBP1365:
;rutinasensores_v4(mstr-slv).h,1517 :: 		if((!SENSOR4 & !SENSOR6)){
0x23B8	0xB681      	BTFSC       PORTB, 3 
0x23BA	0xD002      	BRA         L__entrandoBP11763
0x23BC	0x8001      	BSF         R1, 0 
0x23BE	0xD001      	BRA         L__entrandoBP11764
L__entrandoBP11763:
0x23C0	0x9001      	BCF         R1, 0 
L__entrandoBP11764:
0x23C2	0xB281      	BTFSC       PORTB, 1 
0x23C4	0xD002      	BRA         L__entrandoBP11765
0x23C6	0x80D8      	BSF         STATUS, 0 
0x23C8	0xD001      	BRA         L__entrandoBP11766
L__entrandoBP11765:
0x23CA	0x90D8      	BCF         STATUS, 0 
L__entrandoBP11766:
0x23CC	0xA001      	BTFSS       R1, 0 
0x23CE	0xD003      	BRA         L__entrandoBP11767
0x23D0	0xE302      	BNC         L__entrandoBP11767
0x23D2	0x8001      	BSF         R1, 0 
0x23D4	0xD001      	BRA         L__entrandoBP11768
L__entrandoBP11767:
0x23D6	0x9001      	BCF         R1, 0 
L__entrandoBP11768:
0x23D8	0xA001      	BTFSS       R1, 0 
0x23DA	0xD00B      	BRA         L_entrandoBP1366
;rutinasensores_v4(mstr-slv).h,1518 :: 		lcd_cmd(_LCD_CLEAR);
0x23DC	0x0E01      	MOVLW       1
0x23DE	0x0102      	MOVLB       2
0x23E0	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x23E2	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1519 :: 		return debugEstadoB = TRANSICION;
0x23E6	0x0E02      	MOVLW       2
0x23E8	0x0101      	MOVLB       1
0x23EA	0x6F3D      	MOVWF       _debugEstadoB, 1
0x23EC	0x0E02      	MOVLW       2
0x23EE	0x6E00      	MOVWF       R0 
0x23F0	0xD000      	BRA         L_end_entrandoBP1
;rutinasensores_v4(mstr-slv).h,1520 :: 		}
L_entrandoBP1366:
;rutinasensores_v4(mstr-slv).h,1521 :: 		}
L_entrandoBP1364:
;rutinasensores_v4(mstr-slv).h,1522 :: 		}
L_end_entrandoBP1:
0x23F2	0x0012      	RETURN      0
; end of _entrandoBP1
_esperaBP1:
;rutinasensores_v4(mstr-slv).h,1495 :: 		short esperaBP1(short estado){
;rutinasensores_v4(mstr-slv).h,1496 :: 		if(estado == ESPERA){
0x23F4	0x0102      	MOVLB       2
0x23F6	0x5114      	MOVF        FARG_esperaBP1_estado, 0, 1
0x23F8	0x0A00      	XORLW       0
0x23FA	0xE13B      	BNZ         L_esperaBP1361
;rutinasensores_v4(mstr-slv).h,1497 :: 		muestraEstatus();
0x23FC	0xF008EC8B  	CALL        _muestraEstatus, 0
;rutinasensores_v4(mstr-slv).h,1499 :: 		if((!SENSOR3 | !SENSOR5)){
0x2400	0xB481      	BTFSC       PORTB, 2 
0x2402	0xD002      	BRA         L__esperaBP11748
0x2404	0x8001      	BSF         R1, 0 
0x2406	0xD001      	BRA         L__esperaBP11749
L__esperaBP11748:
0x2408	0x9001      	BCF         R1, 0 
L__esperaBP11749:
0x240A	0xB081      	BTFSC       PORTB, 0 
0x240C	0xD002      	BRA         L__esperaBP11750
0x240E	0x80D8      	BSF         STATUS, 0 
0x2410	0xD001      	BRA         L__esperaBP11751
L__esperaBP11750:
0x2412	0x90D8      	BCF         STATUS, 0 
L__esperaBP11751:
0x2414	0xB001      	BTFSC       R1, 0 
0x2416	0xD003      	BRA         L__esperaBP11752
0x2418	0xE202      	BC          L__esperaBP11752
0x241A	0x9001      	BCF         R1, 0 
0x241C	0xD001      	BRA         L__esperaBP11753
L__esperaBP11752:
0x241E	0x8001      	BSF         R1, 0 
L__esperaBP11753:
0x2420	0xA001      	BTFSS       R1, 0 
0x2422	0xD00A      	BRA         L_esperaBP1362
;rutinasensores_v4(mstr-slv).h,1500 :: 		lcd_cmd(_LCD_CLEAR);
0x2424	0x0E01      	MOVLW       1
0x2426	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x2428	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1501 :: 		return debugEstadoB = ENTRANDO;
0x242C	0x0E01      	MOVLW       1
0x242E	0x0101      	MOVLB       1
0x2430	0x6F3D      	MOVWF       _debugEstadoB, 1
0x2432	0x0E01      	MOVLW       1
0x2434	0x6E00      	MOVWF       R0 
0x2436	0xD01D      	BRA         L_end_esperaBP1
;rutinasensores_v4(mstr-slv).h,1502 :: 		}
L_esperaBP1362:
;rutinasensores_v4(mstr-slv).h,1503 :: 		if((!SENSOR4 | !SENSOR6)){
0x2438	0xB681      	BTFSC       PORTB, 3 
0x243A	0xD002      	BRA         L__esperaBP11754
0x243C	0x8001      	BSF         R1, 0 
0x243E	0xD001      	BRA         L__esperaBP11755
L__esperaBP11754:
0x2440	0x9001      	BCF         R1, 0 
L__esperaBP11755:
0x2442	0xB281      	BTFSC       PORTB, 1 
0x2444	0xD002      	BRA         L__esperaBP11756
0x2446	0x80D8      	BSF         STATUS, 0 
0x2448	0xD001      	BRA         L__esperaBP11757
L__esperaBP11756:
0x244A	0x90D8      	BCF         STATUS, 0 
L__esperaBP11757:
0x244C	0xB001      	BTFSC       R1, 0 
0x244E	0xD003      	BRA         L__esperaBP11758
0x2450	0xE202      	BC          L__esperaBP11758
0x2452	0x9001      	BCF         R1, 0 
0x2454	0xD001      	BRA         L__esperaBP11759
L__esperaBP11758:
0x2456	0x8001      	BSF         R1, 0 
L__esperaBP11759:
0x2458	0xA001      	BTFSS       R1, 0 
0x245A	0xD00B      	BRA         L_esperaBP1363
;rutinasensores_v4(mstr-slv).h,1504 :: 		lcd_cmd(_LCD_CLEAR);
0x245C	0x0E01      	MOVLW       1
0x245E	0x0102      	MOVLB       2
0x2460	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x2462	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1505 :: 		return debugEstadoB = SALIENDO;
0x2466	0x0E04      	MOVLW       4
0x2468	0x0101      	MOVLB       1
0x246A	0x6F3D      	MOVWF       _debugEstadoB, 1
0x246C	0x0E04      	MOVLW       4
0x246E	0x6E00      	MOVWF       R0 
0x2470	0xD000      	BRA         L_end_esperaBP1
;rutinasensores_v4(mstr-slv).h,1506 :: 		}
L_esperaBP1363:
;rutinasensores_v4(mstr-slv).h,1507 :: 		}
L_esperaBP1361:
;rutinasensores_v4(mstr-slv).h,1508 :: 		}
L_end_esperaBP1:
0x2472	0x0012      	RETURN      0
; end of _esperaBP1
_entroBP2:
;rutinasensores_v4(mstr-slv).h,1699 :: 		short entroBP2(short estado){
;rutinasensores_v4(mstr-slv).h,1700 :: 		if(estado == ENTRO){
0x2474	0x0102      	MOVLB       2
0x2476	0x5114      	MOVF        FARG_entroBP2_estado, 0, 1
0x2478	0x0A03      	XORLW       3
0x247A	0xA4D8      	BTFSS       STATUS, 2 
0x247C	0xD117      	BRA         L_entroBP2399
;rutinasensores_v4(mstr-slv).h,1701 :: 		LCD_OUTCONST(3,1,"BIENVENIDO: $6.00");
0x247E	0x0E03      	MOVLW       3
0x2480	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x2482	0x0E01      	MOVLW       1
0x2484	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x2486	0x0E52      	MOVLW       ?lstr_75_MyProject
0x2488	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x248A	0x0ED7      	MOVLW       hi_addr(?lstr_75_MyProject)
0x248C	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x248E	0x0E00      	MOVLW       higher_addr(?lstr_75_MyProject)
0x2490	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x2492	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1702 :: 		delay_ms(350);
0x2496	0x0E09      	MOVLW       9
0x2498	0x6E0B      	MOVWF       R11, 0
0x249A	0x0EE1      	MOVLW       225
0x249C	0x6E0C      	MOVWF       R12, 0
0x249E	0x0EB2      	MOVLW       178
0x24A0	0x6E0D      	MOVWF       R13, 0
L_entroBP2400:
0x24A2	0x2E0D      	DECFSZ      R13, 1, 0
0x24A4	0xD7FE      	BRA         L_entroBP2400
0x24A6	0x2E0C      	DECFSZ      R12, 1, 0
0x24A8	0xD7FC      	BRA         L_entroBP2400
0x24AA	0x2E0B      	DECFSZ      R11, 1, 0
0x24AC	0xD7FA      	BRA         L_entroBP2400
0x24AE	0x0000      	NOP
;rutinasensores_v4(mstr-slv).h,1703 :: 		pBajan = eepromLeeNumero(0x0003,2);
0x24B0	0x0E03      	MOVLW       3
0x24B2	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x24B4	0x0E00      	MOVLW       0
0x24B6	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x24B8	0x0E02      	MOVLW       2
0x24BA	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x24BC	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x24C0	0xF135C000  	MOVFF       R0, _pBajan
0x24C4	0xF136C001  	MOVFF       R1, _pBajan+1
;rutinasensores_v4(mstr-slv).h,1704 :: 		pSuben = eepromLeeNumero(0x0000,2) + 1;
0x24C8	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x24CA	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x24CC	0x0E02      	MOVLW       2
0x24CE	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x24D0	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x24D4	0x4A00      	INFSNZ      R0, 1 
0x24D6	0x2A01      	INCF        R1, 1 
0x24D8	0xF137C000  	MOVFF       R0, _pSuben
0x24DC	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,1705 :: 		eepromEscribeNumero(0x0000,pSuben,2);
0x24E0	0x6B1D      	CLRF        FARG_eepromEscribeNumero_Registro, 1
0x24E2	0x6B1E      	CLRF        FARG_eepromEscribeNumero_Registro+1, 1
0x24E4	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x24E8	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x24EC	0x0E00      	MOVLW       0
0x24EE	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x24F0	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x24F2	0x0E02      	MOVLW       2
0x24F4	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x24F6	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,1706 :: 		pSuben = eepromLeeNumero(0x0000,2);
0x24FA	0x0102      	MOVLB       2
0x24FC	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x24FE	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x2500	0x0E02      	MOVLW       2
0x2502	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x2504	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x2508	0xF137C000  	MOVFF       R0, _pSuben
0x250C	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,1707 :: 		pasajerosVerdaderos = ((float)pSuben + (float)pBajan)/2;
0x2510	0xF008EC65  	CALL        _Word2Double, 0
0x2514	0xF215C000  	MOVFF       R0, FLOC__entroBP2
0x2518	0xF216C001  	MOVFF       R1, FLOC__entroBP2+1
0x251C	0xF217C002  	MOVFF       R2, FLOC__entroBP2+2
0x2520	0xF218C003  	MOVFF       R3, FLOC__entroBP2+3
0x2524	0xF000C135  	MOVFF       _pBajan, R0
0x2528	0xF001C136  	MOVFF       _pBajan+1, R1
0x252C	0xF008EC65  	CALL        _Word2Double, 0
0x2530	0xF004C215  	MOVFF       FLOC__entroBP2, R4
0x2534	0xF005C216  	MOVFF       FLOC__entroBP2+1, R5
0x2538	0xF006C217  	MOVFF       FLOC__entroBP2+2, R6
0x253C	0xF007C218  	MOVFF       FLOC__entroBP2+3, R7
0x2540	0xF004EC8D  	CALL        _Add_32x32_FP, 0
0x2544	0x0E00      	MOVLW       0
0x2546	0x6E04      	MOVWF       R4 
0x2548	0x0E00      	MOVLW       0
0x254A	0x6E05      	MOVWF       R5 
0x254C	0x0E00      	MOVLW       0
0x254E	0x6E06      	MOVWF       R6 
0x2550	0x0E80      	MOVLW       128
0x2552	0x6E07      	MOVWF       R7 
0x2554	0xF007ECA7  	CALL        _Div_32x32_FP, 0
0x2558	0xF139C000  	MOVFF       R0, _pasajerosVerdaderos
0x255C	0xF13AC001  	MOVFF       R1, _pasajerosVerdaderos+1
0x2560	0xF13BC002  	MOVFF       R2, _pasajerosVerdaderos+2
0x2564	0xF13CC003  	MOVFF       R3, _pasajerosVerdaderos+3
;rutinasensores_v4(mstr-slv).h,1708 :: 		eepromEscribeNumero(0x0009, (unsigned int)pasajerosVerdaderos, 2);
0x2568	0x0E09      	MOVLW       9
0x256A	0x0102      	MOVLB       2
0x256C	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x256E	0x0E00      	MOVLW       0
0x2570	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x2572	0xF006ECA0  	CALL        _Double2Word, 0
0x2576	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x257A	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x257E	0x0E00      	MOVLW       0
0x2580	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x2582	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x2584	0x0E02      	MOVLW       2
0x2586	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x2588	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,1709 :: 		if(MSTR){
0x258C	0xA483      	BTFSS       PORTD, 2 
0x258E	0xD085      	BRA         L_entroBP2401
;rutinasensores_v4(mstr-slv).h,1710 :: 		pVerdaderosMEntero = eepromLeeNumero(0x0009, 2);
0x2590	0x0E09      	MOVLW       9
0x2592	0x0102      	MOVLB       2
0x2594	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x2596	0x0E00      	MOVLW       0
0x2598	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x259A	0x0E02      	MOVLW       2
0x259C	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x259E	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x25A2	0xF12FC000  	MOVFF       R0, _pVerdaderosMEntero
0x25A6	0xF130C001  	MOVFF       R1, _pVerdaderosMEntero+1
;rutinasensores_v4(mstr-slv).h,1711 :: 		pVerdaderosEEntero = eepromLeeNumero(0x0007, 2);
0x25AA	0x0E07      	MOVLW       7
0x25AC	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x25AE	0x0E00      	MOVLW       0
0x25B0	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x25B2	0x0E02      	MOVLW       2
0x25B4	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x25B6	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x25BA	0xF12DC000  	MOVFF       R0, _pVerdaderosEEntero
0x25BE	0xF12EC001  	MOVFF       R1, _pVerdaderosEEntero+1
;rutinasensores_v4(mstr-slv).h,1712 :: 		pasajerosTotalesL = pVerdaderosMEntero + pVerdaderosEEntero;
0x25C2	0x5000      	MOVF        R0, 0 
0x25C4	0x0101      	MOVLB       1
0x25C6	0x252F      	ADDWF       _pVerdaderosMEntero, 0, 1
0x25C8	0x6F33      	MOVWF       _pasajerosTotalesL, 1
0x25CA	0x5001      	MOVF        R1, 0 
0x25CC	0x2130      	ADDWFC      _pVerdaderosMEntero+1, 0, 1
0x25CE	0x6F34      	MOVWF       _pasajerosTotalesL+1, 1
;rutinasensores_v4(mstr-slv).h,1713 :: 		totalCalculado = (eepromLeeNumero(0x0000, 2)+eepromLeeNumero(0x0003, 2)+eepromLeeNumero(0x0900, 2)+eepromLeeNumero(0x0700, 2))/2;
0x25D0	0x0102      	MOVLB       2
0x25D2	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x25D4	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x25D6	0x0E02      	MOVLW       2
0x25D8	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x25DA	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x25DE	0xF215C000  	MOVFF       R0, FLOC__entroBP2
0x25E2	0xF216C001  	MOVFF       R1, FLOC__entroBP2+1
0x25E6	0xF217C002  	MOVFF       R2, FLOC__entroBP2+2
0x25EA	0xF218C003  	MOVFF       R3, FLOC__entroBP2+3
0x25EE	0x0E03      	MOVLW       3
0x25F0	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x25F2	0x0E00      	MOVLW       0
0x25F4	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x25F6	0x0E02      	MOVLW       2
0x25F8	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x25FA	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x25FE	0x5000      	MOVF        R0, 0 
0x2600	0x2715      	ADDWF       FLOC__entroBP2, 1, 1
0x2602	0x5001      	MOVF        R1, 0 
0x2604	0x2316      	ADDWFC      FLOC__entroBP2+1, 1, 1
0x2606	0x5002      	MOVF        R2, 0 
0x2608	0x2317      	ADDWFC      FLOC__entroBP2+2, 1, 1
0x260A	0x5003      	MOVF        R3, 0 
0x260C	0x2318      	ADDWFC      FLOC__entroBP2+3, 1, 1
0x260E	0x0E00      	MOVLW       0
0x2610	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x2612	0x0E09      	MOVLW       9
0x2614	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x2616	0x0E02      	MOVLW       2
0x2618	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x261A	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x261E	0x5000      	MOVF        R0, 0 
0x2620	0x2715      	ADDWF       FLOC__entroBP2, 1, 1
0x2622	0x5001      	MOVF        R1, 0 
0x2624	0x2316      	ADDWFC      FLOC__entroBP2+1, 1, 1
0x2626	0x5002      	MOVF        R2, 0 
0x2628	0x2317      	ADDWFC      FLOC__entroBP2+2, 1, 1
0x262A	0x5003      	MOVF        R3, 0 
0x262C	0x2318      	ADDWFC      FLOC__entroBP2+3, 1, 1
0x262E	0x0E00      	MOVLW       0
0x2630	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x2632	0x0E07      	MOVLW       7
0x2634	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x2636	0x0E02      	MOVLW       2
0x2638	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x263A	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x263E	0x5000      	MOVF        R0, 0 
0x2640	0x2515      	ADDWF       FLOC__entroBP2, 0, 1
0x2642	0x6E05      	MOVWF       R5 
0x2644	0x5001      	MOVF        R1, 0 
0x2646	0x2116      	ADDWFC      FLOC__entroBP2+1, 0, 1
0x2648	0x6E06      	MOVWF       R6 
0x264A	0x5002      	MOVF        R2, 0 
0x264C	0x2117      	ADDWFC      FLOC__entroBP2+2, 0, 1
0x264E	0x6E07      	MOVWF       R7 
0x2650	0x5003      	MOVF        R3, 0 
0x2652	0x2118      	ADDWFC      FLOC__entroBP2+3, 0, 1
0x2654	0x6E08      	MOVWF       R8 
0x2656	0xF000C005  	MOVFF       R5, R0
0x265A	0xF001C006  	MOVFF       R6, R1
0x265E	0xF002C007  	MOVFF       R7, R2
0x2662	0xF003C008  	MOVFF       R8, R3
0x2666	0x3203      	RRCF        R3, 1 
0x2668	0x3202      	RRCF        R2, 1 
0x266A	0x3201      	RRCF        R1, 1 
0x266C	0x3200      	RRCF        R0, 1 
0x266E	0x9E03      	BCF         R3, 7 
0x2670	0xBC03      	BTFSC       R3, 6 
0x2672	0x8E03      	BSF         R3, 7 
0x2674	0xF131C000  	MOVFF       R0, _totalCalculado
0x2678	0xF132C001  	MOVFF       R1, _totalCalculado+1
;rutinasensores_v4(mstr-slv).h,1714 :: 		eepromEscribeNumero(0x0005, totalCalculado, 2);
0x267C	0x0E05      	MOVLW       5
0x267E	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x2680	0x0E00      	MOVLW       0
0x2682	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x2684	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x2688	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x268C	0x0E00      	MOVLW       0
0x268E	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x2690	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x2692	0x0E02      	MOVLW       2
0x2694	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x2696	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,1715 :: 		}
L_entroBP2401:
;rutinasensores_v4(mstr-slv).h,1716 :: 		lcd_cmd(_LCD_CLEAR);
0x269A	0x0E01      	MOVLW       1
0x269C	0x0102      	MOVLB       2
0x269E	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x26A0	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1717 :: 		return debugEstadoB = ESPERA;
0x26A4	0x0101      	MOVLB       1
0x26A6	0x6B3D      	CLRF        _debugEstadoB, 1
0x26A8	0x6A00      	CLRF        R0 
0x26AA	0xD000      	BRA         L_end_entroBP2
;rutinasensores_v4(mstr-slv).h,1718 :: 		}
L_entroBP2399:
;rutinasensores_v4(mstr-slv).h,1719 :: 		}
L_end_entroBP2:
0x26AC	0x0012      	RETURN      0
; end of _entroBP2
_transicionSBP3:
;rutinasensores_v4(mstr-slv).h,1881 :: 		short transicionSBP3(short estado){
;rutinasensores_v4(mstr-slv).h,1882 :: 		if(estado == TRANSICIONS){
0x26AE	0x0102      	MOVLB       2
0x26B0	0x5114      	MOVF        FARG_transicionSBP3_estado, 0, 1
0x26B2	0x0A08      	XORLW       8
0x26B4	0xE14E      	BNZ         L_transicionSBP3431
;rutinasensores_v4(mstr-slv).h,1883 :: 		lcd_outConst(3, 1, "TRANSICION DEBUG");
0x26B6	0x0E03      	MOVLW       3
0x26B8	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x26BA	0x0E01      	MOVLW       1
0x26BC	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x26BE	0x0E4D      	MOVLW       ?lstr_85_MyProject
0x26C0	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x26C2	0x0ED8      	MOVLW       hi_addr(?lstr_85_MyProject)
0x26C4	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x26C6	0x0E00      	MOVLW       higher_addr(?lstr_85_MyProject)
0x26C8	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x26CA	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1884 :: 		if((SENSOR2 & SENSOR4)){
0x26CE	0xA883      	BTFSS       PORTD, 4 
0x26D0	0xD004      	BRA         L__transicionSBP31976
0x26D2	0xA681      	BTFSS       PORTB, 3 
0x26D4	0xD002      	BRA         L__transicionSBP31976
0x26D6	0x80D8      	BSF         STATUS, 0 
0x26D8	0xD001      	BRA         L__transicionSBP31977
L__transicionSBP31976:
0x26DA	0x90D8      	BCF         STATUS, 0 
L__transicionSBP31977:
0x26DC	0xE30A      	BNC         L_transicionSBP3432
;rutinasensores_v4(mstr-slv).h,1885 :: 		lcd_cmd(_LCD_CLEAR);
0x26DE	0x0E01      	MOVLW       1
0x26E0	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x26E2	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1886 :: 		return debugEstadoB = TRANSAL;
0x26E6	0x0E05      	MOVLW       5
0x26E8	0x0101      	MOVLB       1
0x26EA	0x6F3D      	MOVWF       _debugEstadoB, 1
0x26EC	0x0E05      	MOVLW       5
0x26EE	0x6E00      	MOVWF       R0 
0x26F0	0xD030      	BRA         L_end_transicionSBP3
;rutinasensores_v4(mstr-slv).h,1887 :: 		}
L_transicionSBP3432:
;rutinasensores_v4(mstr-slv).h,1888 :: 		if((SENSOR1 & SENSOR3 & !SENSOR2) | (SENSOR1 & SENSOR3 & !SENSOR4)){
0x26F2	0xA881      	BTFSS       PORTB, 4 
0x26F4	0xD004      	BRA         L__transicionSBP31978
0x26F6	0xA481      	BTFSS       PORTB, 2 
0x26F8	0xD002      	BRA         L__transicionSBP31978
0x26FA	0x8001      	BSF         R1, 0 
0x26FC	0xD001      	BRA         L__transicionSBP31979
L__transicionSBP31978:
0x26FE	0x9001      	BCF         R1, 0 
L__transicionSBP31979:
0x2700	0xB883      	BTFSC       PORTD, 4 
0x2702	0xD002      	BRA         L__transicionSBP31980
0x2704	0x80D8      	BSF         STATUS, 0 
0x2706	0xD001      	BRA         L__transicionSBP31981
L__transicionSBP31980:
0x2708	0x90D8      	BCF         STATUS, 0 
L__transicionSBP31981:
0x270A	0xA001      	BTFSS       R1, 0 
0x270C	0xD003      	BRA         L__transicionSBP31982
0x270E	0xE302      	BNC         L__transicionSBP31982
0x2710	0x8201      	BSF         R1, 1 
0x2712	0xD001      	BRA         L__transicionSBP31983
L__transicionSBP31982:
0x2714	0x9201      	BCF         R1, 1 
L__transicionSBP31983:
0x2716	0xB681      	BTFSC       PORTB, 3 
0x2718	0xD002      	BRA         L__transicionSBP31984
0x271A	0x80D8      	BSF         STATUS, 0 
0x271C	0xD001      	BRA         L__transicionSBP31985
L__transicionSBP31984:
0x271E	0x90D8      	BCF         STATUS, 0 
L__transicionSBP31985:
0x2720	0xA001      	BTFSS       R1, 0 
0x2722	0xD003      	BRA         L__transicionSBP31986
0x2724	0xE302      	BNC         L__transicionSBP31986
0x2726	0x8001      	BSF         R1, 0 
0x2728	0xD001      	BRA         L__transicionSBP31987
L__transicionSBP31986:
0x272A	0x9001      	BCF         R1, 0 
L__transicionSBP31987:
0x272C	0xB201      	BTFSC       R1, 1 
0x272E	0xD004      	BRA         L__transicionSBP31988
0x2730	0xB001      	BTFSC       R1, 0 
0x2732	0xD002      	BRA         L__transicionSBP31988
0x2734	0x90D8      	BCF         STATUS, 0 
0x2736	0xD001      	BRA         L__transicionSBP31989
L__transicionSBP31988:
0x2738	0x80D8      	BSF         STATUS, 0 
L__transicionSBP31989:
0x273A	0xE30B      	BNC         L_transicionSBP3433
;rutinasensores_v4(mstr-slv).h,1889 :: 		lcd_cmd(_LCD_CLEAR);
0x273C	0x0E01      	MOVLW       1
0x273E	0x0102      	MOVLB       2
0x2740	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x2742	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1890 :: 		return debugEstadoB = SALIENDO;
0x2746	0x0E04      	MOVLW       4
0x2748	0x0101      	MOVLB       1
0x274A	0x6F3D      	MOVWF       _debugEstadoB, 1
0x274C	0x0E04      	MOVLW       4
0x274E	0x6E00      	MOVWF       R0 
0x2750	0xD000      	BRA         L_end_transicionSBP3
;rutinasensores_v4(mstr-slv).h,1891 :: 		}
L_transicionSBP3433:
;rutinasensores_v4(mstr-slv).h,1892 :: 		}
L_transicionSBP3431:
;rutinasensores_v4(mstr-slv).h,1893 :: 		}
L_end_transicionSBP3:
0x2752	0x0012      	RETURN      0
; end of _transicionSBP3
_saliendoBP3:
;rutinasensores_v4(mstr-slv).h,1867 :: 		short saliendoBP3(short estado){
;rutinasensores_v4(mstr-slv).h,1868 :: 		if(estado == SALIENDO){
0x2754	0x0102      	MOVLB       2
0x2756	0x5114      	MOVF        FARG_saliendoBP3_estado, 0, 1
0x2758	0x0A04      	XORLW       4
0x275A	0xE139      	BNZ         L_saliendoBP3428
;rutinasensores_v4(mstr-slv).h,1869 :: 		lcd_outConst(3, 1, "SALIENDO");
0x275C	0x0E03      	MOVLW       3
0x275E	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x2760	0x0E01      	MOVLW       1
0x2762	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x2764	0x0EE8      	MOVLW       ?lstr_84_MyProject
0x2766	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x2768	0x0EDA      	MOVLW       hi_addr(?lstr_84_MyProject)
0x276A	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x276C	0x0E00      	MOVLW       higher_addr(?lstr_84_MyProject)
0x276E	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x2770	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1870 :: 		if((!SENSOR1 & !SENSOR3)){
0x2774	0xB881      	BTFSC       PORTB, 4 
0x2776	0xD002      	BRA         L__saliendoBP31967
0x2778	0x8001      	BSF         R1, 0 
0x277A	0xD001      	BRA         L__saliendoBP31968
L__saliendoBP31967:
0x277C	0x9001      	BCF         R1, 0 
L__saliendoBP31968:
0x277E	0xB481      	BTFSC       PORTB, 2 
0x2780	0xD002      	BRA         L__saliendoBP31969
0x2782	0x80D8      	BSF         STATUS, 0 
0x2784	0xD001      	BRA         L__saliendoBP31970
L__saliendoBP31969:
0x2786	0x90D8      	BCF         STATUS, 0 
L__saliendoBP31970:
0x2788	0xA001      	BTFSS       R1, 0 
0x278A	0xD003      	BRA         L__saliendoBP31971
0x278C	0xE302      	BNC         L__saliendoBP31971
0x278E	0x8001      	BSF         R1, 0 
0x2790	0xD001      	BRA         L__saliendoBP31972
L__saliendoBP31971:
0x2792	0x9001      	BCF         R1, 0 
L__saliendoBP31972:
0x2794	0xA001      	BTFSS       R1, 0 
0x2796	0xD00A      	BRA         L_saliendoBP3429
;rutinasensores_v4(mstr-slv).h,1871 :: 		lcd_cmd(_LCD_CLEAR);
0x2798	0x0E01      	MOVLW       1
0x279A	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x279C	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1872 :: 		return debugEstadoB = TRANSICIONS;
0x27A0	0x0E08      	MOVLW       8
0x27A2	0x0101      	MOVLB       1
0x27A4	0x6F3D      	MOVWF       _debugEstadoB, 1
0x27A6	0x0E08      	MOVLW       8
0x27A8	0x6E00      	MOVWF       R0 
0x27AA	0xD011      	BRA         L_end_saliendoBP3
;rutinasensores_v4(mstr-slv).h,1873 :: 		}
L_saliendoBP3429:
;rutinasensores_v4(mstr-slv).h,1874 :: 		if((SENSOR2 & SENSOR4)){
0x27AC	0xA883      	BTFSS       PORTD, 4 
0x27AE	0xD004      	BRA         L__saliendoBP31973
0x27B0	0xA681      	BTFSS       PORTB, 3 
0x27B2	0xD002      	BRA         L__saliendoBP31973
0x27B4	0x80D8      	BSF         STATUS, 0 
0x27B6	0xD001      	BRA         L__saliendoBP31974
L__saliendoBP31973:
0x27B8	0x90D8      	BCF         STATUS, 0 
L__saliendoBP31974:
0x27BA	0xE309      	BNC         L_saliendoBP3430
;rutinasensores_v4(mstr-slv).h,1875 :: 		lcd_cmd(_LCD_CLEAR);
0x27BC	0x0E01      	MOVLW       1
0x27BE	0x0102      	MOVLB       2
0x27C0	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x27C2	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1876 :: 		return debugEstadoB = ESPERA;
0x27C6	0x0101      	MOVLB       1
0x27C8	0x6B3D      	CLRF        _debugEstadoB, 1
0x27CA	0x6A00      	CLRF        R0 
0x27CC	0xD000      	BRA         L_end_saliendoBP3
;rutinasensores_v4(mstr-slv).h,1877 :: 		}
L_saliendoBP3430:
;rutinasensores_v4(mstr-slv).h,1878 :: 		}
L_saliendoBP3428:
;rutinasensores_v4(mstr-slv).h,1879 :: 		}
L_end_saliendoBP3:
0x27CE	0x0012      	RETURN      0
; end of _saliendoBP3
_transicionSalBP2:
;rutinasensores_v4(mstr-slv).h,1749 :: 		short transicionSalBP2(short estado){
;rutinasensores_v4(mstr-slv).h,1750 :: 		if(estado == TRANSAL){
0x27D0	0x0102      	MOVLB       2
0x27D2	0x5114      	MOVF        FARG_transicionSalBP2_estado, 0, 1
0x27D4	0x0A05      	XORLW       5
0x27D6	0xE13B      	BNZ         L_transicionSalBP2408
;rutinasensores_v4(mstr-slv).h,1751 :: 		LCD_OUTCONST(3,1,"TRANSICION SALIDA");
0x27D8	0x0E03      	MOVLW       3
0x27DA	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x27DC	0x0E01      	MOVLW       1
0x27DE	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x27E0	0x0E2A      	MOVLW       ?lstr_78_MyProject
0x27E2	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x27E4	0x0ED8      	MOVLW       hi_addr(?lstr_78_MyProject)
0x27E6	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x27E8	0x0E00      	MOVLW       higher_addr(?lstr_78_MyProject)
0x27EA	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x27EC	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1752 :: 		if(!SENSOR2 & !SENSOR6){
0x27F0	0xB883      	BTFSC       PORTD, 4 
0x27F2	0xD002      	BRA         L__transicionSalBP21910
0x27F4	0x8001      	BSF         R1, 0 
0x27F6	0xD001      	BRA         L__transicionSalBP21911
L__transicionSalBP21910:
0x27F8	0x9001      	BCF         R1, 0 
L__transicionSalBP21911:
0x27FA	0xB281      	BTFSC       PORTB, 1 
0x27FC	0xD002      	BRA         L__transicionSalBP21912
0x27FE	0x80D8      	BSF         STATUS, 0 
0x2800	0xD001      	BRA         L__transicionSalBP21913
L__transicionSalBP21912:
0x2802	0x90D8      	BCF         STATUS, 0 
L__transicionSalBP21913:
0x2804	0xA001      	BTFSS       R1, 0 
0x2806	0xD003      	BRA         L__transicionSalBP21914
0x2808	0xE302      	BNC         L__transicionSalBP21914
0x280A	0x8001      	BSF         R1, 0 
0x280C	0xD001      	BRA         L__transicionSalBP21915
L__transicionSalBP21914:
0x280E	0x9001      	BCF         R1, 0 
L__transicionSalBP21915:
0x2810	0xA001      	BTFSS       R1, 0 
0x2812	0xD00A      	BRA         L_transicionSalBP2409
;rutinasensores_v4(mstr-slv).h,1753 :: 		lcd_cmd(_LCD_CLEAR);
0x2814	0x0E01      	MOVLW       1
0x2816	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x2818	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1754 :: 		return debugEstadoB = TRANSICIONS;
0x281C	0x0E08      	MOVLW       8
0x281E	0x0101      	MOVLB       1
0x2820	0x6F3D      	MOVWF       _debugEstadoB, 1
0x2822	0x0E08      	MOVLW       8
0x2824	0x6E00      	MOVWF       R0 
0x2826	0xD013      	BRA         L_end_transicionSalBP2
;rutinasensores_v4(mstr-slv).h,1755 :: 		}
L_transicionSalBP2409:
;rutinasensores_v4(mstr-slv).h,1756 :: 		if((SENSOR1 & SENSOR5)){
0x2828	0xA881      	BTFSS       PORTB, 4 
0x282A	0xD004      	BRA         L__transicionSalBP21916
0x282C	0xA081      	BTFSS       PORTB, 0 
0x282E	0xD002      	BRA         L__transicionSalBP21916
0x2830	0x80D8      	BSF         STATUS, 0 
0x2832	0xD001      	BRA         L__transicionSalBP21917
L__transicionSalBP21916:
0x2834	0x90D8      	BCF         STATUS, 0 
L__transicionSalBP21917:
0x2836	0xE30B      	BNC         L_transicionSalBP2410
;rutinasensores_v4(mstr-slv).h,1757 :: 		lcd_cmd(_LCD_CLEAR);
0x2838	0x0E01      	MOVLW       1
0x283A	0x0102      	MOVLB       2
0x283C	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x283E	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1758 :: 		return debugEstadoB = SALIO;
0x2842	0x0E06      	MOVLW       6
0x2844	0x0101      	MOVLB       1
0x2846	0x6F3D      	MOVWF       _debugEstadoB, 1
0x2848	0x0E06      	MOVLW       6
0x284A	0x6E00      	MOVWF       R0 
0x284C	0xD000      	BRA         L_end_transicionSalBP2
;rutinasensores_v4(mstr-slv).h,1759 :: 		}
L_transicionSalBP2410:
;rutinasensores_v4(mstr-slv).h,1760 :: 		}
L_transicionSalBP2408:
;rutinasensores_v4(mstr-slv).h,1761 :: 		}
L_end_transicionSalBP2:
0x284E	0x0012      	RETURN      0
; end of _transicionSalBP2
_transicionSBP2:
;rutinasensores_v4(mstr-slv).h,1735 :: 		short transicionSBP2(short estado){
;rutinasensores_v4(mstr-slv).h,1736 :: 		if(estado == TRANSICIONS){
0x2850	0x0102      	MOVLB       2
0x2852	0x5114      	MOVF        FARG_transicionSBP2_estado, 0, 1
0x2854	0x0A08      	XORLW       8
0x2856	0xA4D8      	BTFSS       STATUS, 2 
0x2858	0xD06A      	BRA         L_transicionSBP2405
;rutinasensores_v4(mstr-slv).h,1737 :: 		lcd_outConst(3, 1, "TRANSICION");
0x285A	0x0E03      	MOVLW       3
0x285C	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x285E	0x0E01      	MOVLW       1
0x2860	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x2862	0x0E6B      	MOVLW       ?lstr_77_MyProject
0x2864	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x2866	0x0ED9      	MOVLW       hi_addr(?lstr_77_MyProject)
0x2868	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x286A	0x0E00      	MOVLW       higher_addr(?lstr_77_MyProject)
0x286C	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x286E	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1738 :: 		if((SENSOR2 & SENSOR6)){
0x2872	0xA883      	BTFSS       PORTD, 4 
0x2874	0xD004      	BRA         L__transicionSBP21885
0x2876	0xA281      	BTFSS       PORTB, 1 
0x2878	0xD002      	BRA         L__transicionSBP21885
0x287A	0x80D8      	BSF         STATUS, 0 
0x287C	0xD001      	BRA         L__transicionSBP21886
L__transicionSBP21885:
0x287E	0x90D8      	BCF         STATUS, 0 
L__transicionSBP21886:
0x2880	0xE30A      	BNC         L_transicionSBP2406
;rutinasensores_v4(mstr-slv).h,1739 :: 		lcd_cmd(_LCD_CLEAR);
0x2882	0x0E01      	MOVLW       1
0x2884	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x2886	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1740 :: 		return debugEstadoB = TRANSAL;
0x288A	0x0E05      	MOVLW       5
0x288C	0x0101      	MOVLB       1
0x288E	0x6F3D      	MOVWF       _debugEstadoB, 1
0x2890	0x0E05      	MOVLW       5
0x2892	0x6E00      	MOVWF       R0 
0x2894	0xD04C      	BRA         L_end_transicionSBP2
;rutinasensores_v4(mstr-slv).h,1741 :: 		}
L_transicionSBP2406:
;rutinasensores_v4(mstr-slv).h,1742 :: 		if((SENSOR1 & SENSOR5 & !SENSOR2) | (SENSOR1 & SENSOR5 & !SENSOR4) | (SENSOR1 & SENSOR5 & !SENSOR6)){
0x2896	0xA881      	BTFSS       PORTB, 4 
0x2898	0xD004      	BRA         L__transicionSBP21887
0x289A	0xA081      	BTFSS       PORTB, 0 
0x289C	0xD002      	BRA         L__transicionSBP21887
0x289E	0x8401      	BSF         R1, 2 
0x28A0	0xD001      	BRA         L__transicionSBP21888
L__transicionSBP21887:
0x28A2	0x9401      	BCF         R1, 2 
L__transicionSBP21888:
0x28A4	0xB883      	BTFSC       PORTD, 4 
0x28A6	0xD002      	BRA         L__transicionSBP21889
0x28A8	0x80D8      	BSF         STATUS, 0 
0x28AA	0xD001      	BRA         L__transicionSBP21890
L__transicionSBP21889:
0x28AC	0x90D8      	BCF         STATUS, 0 
L__transicionSBP21890:
0x28AE	0xA401      	BTFSS       R1, 2 
0x28B0	0xD003      	BRA         L__transicionSBP21891
0x28B2	0xE302      	BNC         L__transicionSBP21891
0x28B4	0x8201      	BSF         R1, 1 
0x28B6	0xD001      	BRA         L__transicionSBP21892
L__transicionSBP21891:
0x28B8	0x9201      	BCF         R1, 1 
L__transicionSBP21892:
0x28BA	0xB401      	BTFSC       R1, 2 
0x28BC	0xD002      	BRA         L__transicionSBP21893
0x28BE	0x9001      	BCF         R1, 0 
0x28C0	0xD001      	BRA         L__transicionSBP21894
L__transicionSBP21893:
0x28C2	0x8001      	BSF         R1, 0 
L__transicionSBP21894:
0x28C4	0xB681      	BTFSC       PORTB, 3 
0x28C6	0xD002      	BRA         L__transicionSBP21895
0x28C8	0x80D8      	BSF         STATUS, 0 
0x28CA	0xD001      	BRA         L__transicionSBP21896
L__transicionSBP21895:
0x28CC	0x90D8      	BCF         STATUS, 0 
L__transicionSBP21896:
0x28CE	0xA001      	BTFSS       R1, 0 
0x28D0	0xD003      	BRA         L__transicionSBP21897
0x28D2	0xE302      	BNC         L__transicionSBP21897
0x28D4	0x8001      	BSF         R1, 0 
0x28D6	0xD001      	BRA         L__transicionSBP21898
L__transicionSBP21897:
0x28D8	0x9001      	BCF         R1, 0 
L__transicionSBP21898:
0x28DA	0xB201      	BTFSC       R1, 1 
0x28DC	0xD004      	BRA         L__transicionSBP21899
0x28DE	0xB001      	BTFSC       R1, 0 
0x28E0	0xD002      	BRA         L__transicionSBP21899
0x28E2	0x9201      	BCF         R1, 1 
0x28E4	0xD001      	BRA         L__transicionSBP21900
L__transicionSBP21899:
0x28E6	0x8201      	BSF         R1, 1 
L__transicionSBP21900:
0x28E8	0xB401      	BTFSC       R1, 2 
0x28EA	0xD002      	BRA         L__transicionSBP21901
0x28EC	0x9001      	BCF         R1, 0 
0x28EE	0xD001      	BRA         L__transicionSBP21902
L__transicionSBP21901:
0x28F0	0x8001      	BSF         R1, 0 
L__transicionSBP21902:
0x28F2	0xB281      	BTFSC       PORTB, 1 
0x28F4	0xD002      	BRA         L__transicionSBP21903
0x28F6	0x80D8      	BSF         STATUS, 0 
0x28F8	0xD001      	BRA         L__transicionSBP21904
L__transicionSBP21903:
0x28FA	0x90D8      	BCF         STATUS, 0 
L__transicionSBP21904:
0x28FC	0xA001      	BTFSS       R1, 0 
0x28FE	0xD003      	BRA         L__transicionSBP21905
0x2900	0xE302      	BNC         L__transicionSBP21905
0x2902	0x8001      	BSF         R1, 0 
0x2904	0xD001      	BRA         L__transicionSBP21906
L__transicionSBP21905:
0x2906	0x9001      	BCF         R1, 0 
L__transicionSBP21906:
0x2908	0xB201      	BTFSC       R1, 1 
0x290A	0xD004      	BRA         L__transicionSBP21907
0x290C	0xB001      	BTFSC       R1, 0 
0x290E	0xD002      	BRA         L__transicionSBP21907
0x2910	0x90D8      	BCF         STATUS, 0 
0x2912	0xD001      	BRA         L__transicionSBP21908
L__transicionSBP21907:
0x2914	0x80D8      	BSF         STATUS, 0 
L__transicionSBP21908:
0x2916	0xE30B      	BNC         L_transicionSBP2407
;rutinasensores_v4(mstr-slv).h,1743 :: 		lcd_cmd(_LCD_CLEAR);
0x2918	0x0E01      	MOVLW       1
0x291A	0x0102      	MOVLB       2
0x291C	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x291E	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1744 :: 		return debugEstadoB = SALIENDO;
0x2922	0x0E04      	MOVLW       4
0x2924	0x0101      	MOVLB       1
0x2926	0x6F3D      	MOVWF       _debugEstadoB, 1
0x2928	0x0E04      	MOVLW       4
0x292A	0x6E00      	MOVWF       R0 
0x292C	0xD000      	BRA         L_end_transicionSBP2
;rutinasensores_v4(mstr-slv).h,1745 :: 		}
L_transicionSBP2407:
;rutinasensores_v4(mstr-slv).h,1746 :: 		}
L_transicionSBP2405:
;rutinasensores_v4(mstr-slv).h,1747 :: 		}
L_end_transicionSBP2:
0x292E	0x0012      	RETURN      0
; end of _transicionSBP2
_transicionSalBP1:
;rutinasensores_v4(mstr-slv).h,1602 :: 		short transicionSalBP1(short estado){
;rutinasensores_v4(mstr-slv).h,1603 :: 		if(estado == TRANSAL){
0x2930	0x0102      	MOVLB       2
0x2932	0x5114      	MOVF        FARG_transicionSalBP1_estado, 0, 1
0x2934	0x0A05      	XORLW       5
0x2936	0xE13B      	BNZ         L_transicionSalBP1382
;rutinasensores_v4(mstr-slv).h,1604 :: 		LCD_OUTCONST(3,1,"TRANSICION SALIDA");
0x2938	0x0E03      	MOVLW       3
0x293A	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x293C	0x0E01      	MOVLW       1
0x293E	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x2940	0x0E88      	MOVLW       ?lstr_70_MyProject
0x2942	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x2944	0x0ED7      	MOVLW       hi_addr(?lstr_70_MyProject)
0x2946	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x2948	0x0E00      	MOVLW       higher_addr(?lstr_70_MyProject)
0x294A	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x294C	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1605 :: 		if(!SENSOR4 & !SENSOR6){
0x2950	0xB681      	BTFSC       PORTB, 3 
0x2952	0xD002      	BRA         L__transicionSalBP11819
0x2954	0x8001      	BSF         R1, 0 
0x2956	0xD001      	BRA         L__transicionSalBP11820
L__transicionSalBP11819:
0x2958	0x9001      	BCF         R1, 0 
L__transicionSalBP11820:
0x295A	0xB281      	BTFSC       PORTB, 1 
0x295C	0xD002      	BRA         L__transicionSalBP11821
0x295E	0x80D8      	BSF         STATUS, 0 
0x2960	0xD001      	BRA         L__transicionSalBP11822
L__transicionSalBP11821:
0x2962	0x90D8      	BCF         STATUS, 0 
L__transicionSalBP11822:
0x2964	0xA001      	BTFSS       R1, 0 
0x2966	0xD003      	BRA         L__transicionSalBP11823
0x2968	0xE302      	BNC         L__transicionSalBP11823
0x296A	0x8001      	BSF         R1, 0 
0x296C	0xD001      	BRA         L__transicionSalBP11824
L__transicionSalBP11823:
0x296E	0x9001      	BCF         R1, 0 
L__transicionSalBP11824:
0x2970	0xA001      	BTFSS       R1, 0 
0x2972	0xD00A      	BRA         L_transicionSalBP1383
;rutinasensores_v4(mstr-slv).h,1606 :: 		lcd_cmd(_LCD_CLEAR);
0x2974	0x0E01      	MOVLW       1
0x2976	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x2978	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1607 :: 		return debugEstadoB = TRANSICIONS;
0x297C	0x0E08      	MOVLW       8
0x297E	0x0101      	MOVLB       1
0x2980	0x6F3D      	MOVWF       _debugEstadoB, 1
0x2982	0x0E08      	MOVLW       8
0x2984	0x6E00      	MOVWF       R0 
0x2986	0xD013      	BRA         L_end_transicionSalBP1
;rutinasensores_v4(mstr-slv).h,1608 :: 		}
L_transicionSalBP1383:
;rutinasensores_v4(mstr-slv).h,1609 :: 		if((SENSOR3 & SENSOR5)){
0x2988	0xA481      	BTFSS       PORTB, 2 
0x298A	0xD004      	BRA         L__transicionSalBP11825
0x298C	0xA081      	BTFSS       PORTB, 0 
0x298E	0xD002      	BRA         L__transicionSalBP11825
0x2990	0x80D8      	BSF         STATUS, 0 
0x2992	0xD001      	BRA         L__transicionSalBP11826
L__transicionSalBP11825:
0x2994	0x90D8      	BCF         STATUS, 0 
L__transicionSalBP11826:
0x2996	0xE30B      	BNC         L_transicionSalBP1384
;rutinasensores_v4(mstr-slv).h,1610 :: 		lcd_cmd(_LCD_CLEAR);
0x2998	0x0E01      	MOVLW       1
0x299A	0x0102      	MOVLB       2
0x299C	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x299E	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1611 :: 		return debugEstadoB = SALIO;
0x29A2	0x0E06      	MOVLW       6
0x29A4	0x0101      	MOVLB       1
0x29A6	0x6F3D      	MOVWF       _debugEstadoB, 1
0x29A8	0x0E06      	MOVLW       6
0x29AA	0x6E00      	MOVWF       R0 
0x29AC	0xD000      	BRA         L_end_transicionSalBP1
;rutinasensores_v4(mstr-slv).h,1612 :: 		}
L_transicionSalBP1384:
;rutinasensores_v4(mstr-slv).h,1613 :: 		}
L_transicionSalBP1382:
;rutinasensores_v4(mstr-slv).h,1614 :: 		}
L_end_transicionSalBP1:
0x29AE	0x0012      	RETURN      0
; end of _transicionSalBP1
_salioBO:
;rutinasensores_v4(mstr-slv).h,1326 :: 		short salioBO(short estado){
;rutinasensores_v4(mstr-slv).h,1327 :: 		if(estado == SALIO){
0x29B0	0x0102      	MOVLB       2
0x29B2	0x5114      	MOVF        FARG_salioBO_estado, 0, 1
0x29B4	0x0A06      	XORLW       6
0x29B6	0xA4D8      	BTFSS       STATUS, 2 
0x29B8	0xD11A      	BRA         L_salioBO334
;rutinasensores_v4(mstr-slv).h,1328 :: 		LCD_OUTCONST(3,1,"GRACIAS!");
0x29BA	0x0E03      	MOVLW       3
0x29BC	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x29BE	0x0E01      	MOVLW       1
0x29C0	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x29C2	0x0E34      	MOVLW       ?lstr_55_MyProject
0x29C4	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x29C6	0x0EDA      	MOVLW       hi_addr(?lstr_55_MyProject)
0x29C8	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x29CA	0x0E00      	MOVLW       higher_addr(?lstr_55_MyProject)
0x29CC	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x29CE	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1329 :: 		pSuben = eepromLeeNumero(0x0000, 2);
0x29D2	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x29D4	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x29D6	0x0E02      	MOVLW       2
0x29D8	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x29DA	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x29DE	0xF137C000  	MOVFF       R0, _pSuben
0x29E2	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,1330 :: 		pBajan = eepromLeeNumero(0x0003, 2) + 1;
0x29E6	0x0E03      	MOVLW       3
0x29E8	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x29EA	0x0E00      	MOVLW       0
0x29EC	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x29EE	0x0E02      	MOVLW       2
0x29F0	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x29F2	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x29F6	0x4A00      	INFSNZ      R0, 1 
0x29F8	0x2A01      	INCF        R1, 1 
0x29FA	0xF135C000  	MOVFF       R0, _pBajan
0x29FE	0xF136C001  	MOVFF       R1, _pBajan+1
;rutinasensores_v4(mstr-slv).h,1331 :: 		eepromEscribeNumero(0x0003 ,pBajan, 2);
0x2A02	0x0E03      	MOVLW       3
0x2A04	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x2A06	0x0E00      	MOVLW       0
0x2A08	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x2A0A	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x2A0E	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x2A12	0x0E00      	MOVLW       0
0x2A14	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x2A16	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x2A18	0x0E02      	MOVLW       2
0x2A1A	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x2A1C	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,1332 :: 		pBajan = eepromLeeNumero(0x0003, 2);
0x2A20	0x0E03      	MOVLW       3
0x2A22	0x0102      	MOVLB       2
0x2A24	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x2A26	0x0E00      	MOVLW       0
0x2A28	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x2A2A	0x0E02      	MOVLW       2
0x2A2C	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x2A2E	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x2A32	0xF219C000  	MOVFF       R0, FLOC__salioBO+4
0x2A36	0xF21AC001  	MOVFF       R1, FLOC__salioBO+5
0x2A3A	0xF21BC002  	MOVFF       R2, FLOC__salioBO+6
0x2A3E	0xF21CC003  	MOVFF       R3, FLOC__salioBO+7
0x2A42	0xF135C219  	MOVFF       FLOC__salioBO+4, _pBajan
0x2A46	0xF136C21A  	MOVFF       FLOC__salioBO+5, _pBajan+1
;rutinasensores_v4(mstr-slv).h,1333 :: 		pasajerosVerdaderos = ((float)pSuben + (float)pBajan)/2;
0x2A4A	0xF000C137  	MOVFF       _pSuben, R0
0x2A4E	0xF001C138  	MOVFF       _pSuben+1, R1
0x2A52	0xF008EC65  	CALL        _Word2Double, 0
0x2A56	0xF215C000  	MOVFF       R0, FLOC__salioBO
0x2A5A	0xF216C001  	MOVFF       R1, FLOC__salioBO+1
0x2A5E	0xF217C002  	MOVFF       R2, FLOC__salioBO+2
0x2A62	0xF218C003  	MOVFF       R3, FLOC__salioBO+3
0x2A66	0xF000C219  	MOVFF       FLOC__salioBO+4, R0
0x2A6A	0xF001C21A  	MOVFF       FLOC__salioBO+5, R1
0x2A6E	0xF008EC65  	CALL        _Word2Double, 0
0x2A72	0xF004C215  	MOVFF       FLOC__salioBO, R4
0x2A76	0xF005C216  	MOVFF       FLOC__salioBO+1, R5
0x2A7A	0xF006C217  	MOVFF       FLOC__salioBO+2, R6
0x2A7E	0xF007C218  	MOVFF       FLOC__salioBO+3, R7
0x2A82	0xF004EC8D  	CALL        _Add_32x32_FP, 0
0x2A86	0x0E00      	MOVLW       0
0x2A88	0x6E04      	MOVWF       R4 
0x2A8A	0x0E00      	MOVLW       0
0x2A8C	0x6E05      	MOVWF       R5 
0x2A8E	0x0E00      	MOVLW       0
0x2A90	0x6E06      	MOVWF       R6 
0x2A92	0x0E80      	MOVLW       128
0x2A94	0x6E07      	MOVWF       R7 
0x2A96	0xF007ECA7  	CALL        _Div_32x32_FP, 0
0x2A9A	0xF139C000  	MOVFF       R0, _pasajerosVerdaderos
0x2A9E	0xF13AC001  	MOVFF       R1, _pasajerosVerdaderos+1
0x2AA2	0xF13BC002  	MOVFF       R2, _pasajerosVerdaderos+2
0x2AA6	0xF13CC003  	MOVFF       R3, _pasajerosVerdaderos+3
;rutinasensores_v4(mstr-slv).h,1334 :: 		eepromEscribeNumero(0x0009, (unsigned int)pasajerosVerdaderos, 2);
0x2AAA	0x0E09      	MOVLW       9
0x2AAC	0x0102      	MOVLB       2
0x2AAE	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x2AB0	0x0E00      	MOVLW       0
0x2AB2	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x2AB4	0xF006ECA0  	CALL        _Double2Word, 0
0x2AB8	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x2ABC	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x2AC0	0x0E00      	MOVLW       0
0x2AC2	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x2AC4	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x2AC6	0x0E02      	MOVLW       2
0x2AC8	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x2ACA	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,1335 :: 		if(MSTR){
0x2ACE	0xA483      	BTFSS       PORTD, 2 
0x2AD0	0xD085      	BRA         L_salioBO335
;rutinasensores_v4(mstr-slv).h,1336 :: 		pVerdaderosMEntero = eepromLeeNumero(0x0009, 2);
0x2AD2	0x0E09      	MOVLW       9
0x2AD4	0x0102      	MOVLB       2
0x2AD6	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x2AD8	0x0E00      	MOVLW       0
0x2ADA	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x2ADC	0x0E02      	MOVLW       2
0x2ADE	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x2AE0	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x2AE4	0xF12FC000  	MOVFF       R0, _pVerdaderosMEntero
0x2AE8	0xF130C001  	MOVFF       R1, _pVerdaderosMEntero+1
;rutinasensores_v4(mstr-slv).h,1337 :: 		pVerdaderosEEntero = eepromLeeNumero(0x0007, 2);
0x2AEC	0x0E07      	MOVLW       7
0x2AEE	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x2AF0	0x0E00      	MOVLW       0
0x2AF2	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x2AF4	0x0E02      	MOVLW       2
0x2AF6	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x2AF8	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x2AFC	0xF12DC000  	MOVFF       R0, _pVerdaderosEEntero
0x2B00	0xF12EC001  	MOVFF       R1, _pVerdaderosEEntero+1
;rutinasensores_v4(mstr-slv).h,1338 :: 		pasajerosTotalesL = pVerdaderosMEntero + pVerdaderosEEntero;
0x2B04	0x5000      	MOVF        R0, 0 
0x2B06	0x0101      	MOVLB       1
0x2B08	0x252F      	ADDWF       _pVerdaderosMEntero, 0, 1
0x2B0A	0x6F33      	MOVWF       _pasajerosTotalesL, 1
0x2B0C	0x5001      	MOVF        R1, 0 
0x2B0E	0x2130      	ADDWFC      _pVerdaderosMEntero+1, 0, 1
0x2B10	0x6F34      	MOVWF       _pasajerosTotalesL+1, 1
;rutinasensores_v4(mstr-slv).h,1339 :: 		totalCalculado = (eepromLeeNumero(0x0000, 2)+eepromLeeNumero(0x0003, 2)+eepromLeeNumero(0x0900, 2)+eepromLeeNumero(0x0700, 2))/2;
0x2B12	0x0102      	MOVLB       2
0x2B14	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x2B16	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x2B18	0x0E02      	MOVLW       2
0x2B1A	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x2B1C	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x2B20	0xF215C000  	MOVFF       R0, FLOC__salioBO
0x2B24	0xF216C001  	MOVFF       R1, FLOC__salioBO+1
0x2B28	0xF217C002  	MOVFF       R2, FLOC__salioBO+2
0x2B2C	0xF218C003  	MOVFF       R3, FLOC__salioBO+3
0x2B30	0x0E03      	MOVLW       3
0x2B32	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x2B34	0x0E00      	MOVLW       0
0x2B36	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x2B38	0x0E02      	MOVLW       2
0x2B3A	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x2B3C	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x2B40	0x5000      	MOVF        R0, 0 
0x2B42	0x2715      	ADDWF       FLOC__salioBO, 1, 1
0x2B44	0x5001      	MOVF        R1, 0 
0x2B46	0x2316      	ADDWFC      FLOC__salioBO+1, 1, 1
0x2B48	0x5002      	MOVF        R2, 0 
0x2B4A	0x2317      	ADDWFC      FLOC__salioBO+2, 1, 1
0x2B4C	0x5003      	MOVF        R3, 0 
0x2B4E	0x2318      	ADDWFC      FLOC__salioBO+3, 1, 1
0x2B50	0x0E00      	MOVLW       0
0x2B52	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x2B54	0x0E09      	MOVLW       9
0x2B56	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x2B58	0x0E02      	MOVLW       2
0x2B5A	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x2B5C	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x2B60	0x5000      	MOVF        R0, 0 
0x2B62	0x2715      	ADDWF       FLOC__salioBO, 1, 1
0x2B64	0x5001      	MOVF        R1, 0 
0x2B66	0x2316      	ADDWFC      FLOC__salioBO+1, 1, 1
0x2B68	0x5002      	MOVF        R2, 0 
0x2B6A	0x2317      	ADDWFC      FLOC__salioBO+2, 1, 1
0x2B6C	0x5003      	MOVF        R3, 0 
0x2B6E	0x2318      	ADDWFC      FLOC__salioBO+3, 1, 1
0x2B70	0x0E00      	MOVLW       0
0x2B72	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x2B74	0x0E07      	MOVLW       7
0x2B76	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x2B78	0x0E02      	MOVLW       2
0x2B7A	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x2B7C	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x2B80	0x5000      	MOVF        R0, 0 
0x2B82	0x2515      	ADDWF       FLOC__salioBO, 0, 1
0x2B84	0x6E05      	MOVWF       R5 
0x2B86	0x5001      	MOVF        R1, 0 
0x2B88	0x2116      	ADDWFC      FLOC__salioBO+1, 0, 1
0x2B8A	0x6E06      	MOVWF       R6 
0x2B8C	0x5002      	MOVF        R2, 0 
0x2B8E	0x2117      	ADDWFC      FLOC__salioBO+2, 0, 1
0x2B90	0x6E07      	MOVWF       R7 
0x2B92	0x5003      	MOVF        R3, 0 
0x2B94	0x2118      	ADDWFC      FLOC__salioBO+3, 0, 1
0x2B96	0x6E08      	MOVWF       R8 
0x2B98	0xF000C005  	MOVFF       R5, R0
0x2B9C	0xF001C006  	MOVFF       R6, R1
0x2BA0	0xF002C007  	MOVFF       R7, R2
0x2BA4	0xF003C008  	MOVFF       R8, R3
0x2BA8	0x3203      	RRCF        R3, 1 
0x2BAA	0x3202      	RRCF        R2, 1 
0x2BAC	0x3201      	RRCF        R1, 1 
0x2BAE	0x3200      	RRCF        R0, 1 
0x2BB0	0x9E03      	BCF         R3, 7 
0x2BB2	0xBC03      	BTFSC       R3, 6 
0x2BB4	0x8E03      	BSF         R3, 7 
0x2BB6	0xF131C000  	MOVFF       R0, _totalCalculado
0x2BBA	0xF132C001  	MOVFF       R1, _totalCalculado+1
;rutinasensores_v4(mstr-slv).h,1340 :: 		eepromEscribeNumero(0x0005, totalCalculado, 2);
0x2BBE	0x0E05      	MOVLW       5
0x2BC0	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x2BC2	0x0E00      	MOVLW       0
0x2BC4	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x2BC6	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x2BCA	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x2BCE	0x0E00      	MOVLW       0
0x2BD0	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x2BD2	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x2BD4	0x0E02      	MOVLW       2
0x2BD6	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x2BD8	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,1341 :: 		}
L_salioBO335:
;rutinasensores_v4(mstr-slv).h,1342 :: 		lcd_cmd(_LCD_CLEAR);
0x2BDC	0x0E01      	MOVLW       1
0x2BDE	0x0102      	MOVLB       2
0x2BE0	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x2BE2	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1343 :: 		return debugEstadoB = ESPERA;
0x2BE6	0x0101      	MOVLB       1
0x2BE8	0x6B3D      	CLRF        _debugEstadoB, 1
0x2BEA	0x6A00      	CLRF        R0 
0x2BEC	0xD000      	BRA         L_end_salioBO
;rutinasensores_v4(mstr-slv).h,1344 :: 		}
L_salioBO334:
;rutinasensores_v4(mstr-slv).h,1345 :: 		}
L_end_salioBO:
0x2BEE	0x0012      	RETURN      0
; end of _salioBO
_transicionSBS:
;rutinasensores_v4(mstr-slv).h,1442 :: 		short transicionSBS(short estado){
;rutinasensores_v4(mstr-slv).h,1443 :: 		if(estado == TRANSICIONS){
0x2BF0	0x0102      	MOVLB       2
0x2BF2	0x5114      	MOVF        FARG_transicionSBS_estado, 0, 1
0x2BF4	0x0A08      	XORLW       8
0x2BF6	0xA4D8      	BTFSS       STATUS, 2 
0x2BF8	0xD060      	BRA         L_transicionSBS353
;rutinasensores_v4(mstr-slv).h,1444 :: 		lcd_outConst(3, 1, "TRANSICION DEBUG");
0x2BFA	0x0E03      	MOVLW       3
0x2BFC	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x2BFE	0x0E01      	MOVLW       1
0x2C00	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x2C02	0x0E3C      	MOVLW       ?lstr_61_MyProject
0x2C04	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x2C06	0x0ED8      	MOVLW       hi_addr(?lstr_61_MyProject)
0x2C08	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x2C0A	0x0E00      	MOVLW       higher_addr(?lstr_61_MyProject)
0x2C0C	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x2C0E	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1445 :: 		if((SENSOR2 & SENSOR4)){
0x2C12	0xA883      	BTFSS       PORTD, 4 
0x2C14	0xD004      	BRA         L__transicionSBS1715
0x2C16	0xA681      	BTFSS       PORTB, 3 
0x2C18	0xD002      	BRA         L__transicionSBS1715
0x2C1A	0x80D8      	BSF         STATUS, 0 
0x2C1C	0xD001      	BRA         L__transicionSBS1716
L__transicionSBS1715:
0x2C1E	0x90D8      	BCF         STATUS, 0 
L__transicionSBS1716:
0x2C20	0xE30A      	BNC         L_transicionSBS354
;rutinasensores_v4(mstr-slv).h,1446 :: 		lcd_cmd(_LCD_CLEAR);
0x2C22	0x0E01      	MOVLW       1
0x2C24	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x2C26	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1447 :: 		return debugEstadoB = TRANSAL;
0x2C2A	0x0E05      	MOVLW       5
0x2C2C	0x0101      	MOVLB       1
0x2C2E	0x6F3D      	MOVWF       _debugEstadoB, 1
0x2C30	0x0E05      	MOVLW       5
0x2C32	0x6E00      	MOVWF       R0 
0x2C34	0xD042      	BRA         L_end_transicionSBS
;rutinasensores_v4(mstr-slv).h,1448 :: 		}
L_transicionSBS354:
;rutinasensores_v4(mstr-slv).h,1449 :: 		if((SENSOR1 & SENSOR3 & SENSOR5 & !SENSOR2) | (SENSOR1 & SENSOR3 & SENSOR5 & !SENSOR4)){
0x2C36	0xA881      	BTFSS       PORTB, 4 
0x2C38	0xD004      	BRA         L__transicionSBS1717
0x2C3A	0xA481      	BTFSS       PORTB, 2 
0x2C3C	0xD002      	BRA         L__transicionSBS1717
0x2C3E	0x8401      	BSF         R1, 2 
0x2C40	0xD001      	BRA         L__transicionSBS1718
L__transicionSBS1717:
0x2C42	0x9401      	BCF         R1, 2 
L__transicionSBS1718:
0x2C44	0xA401      	BTFSS       R1, 2 
0x2C46	0xD004      	BRA         L__transicionSBS1719
0x2C48	0xA081      	BTFSS       PORTB, 0 
0x2C4A	0xD002      	BRA         L__transicionSBS1719
0x2C4C	0x8001      	BSF         R1, 0 
0x2C4E	0xD001      	BRA         L__transicionSBS1720
L__transicionSBS1719:
0x2C50	0x9001      	BCF         R1, 0 
L__transicionSBS1720:
0x2C52	0xB883      	BTFSC       PORTD, 4 
0x2C54	0xD002      	BRA         L__transicionSBS1721
0x2C56	0x80D8      	BSF         STATUS, 0 
0x2C58	0xD001      	BRA         L__transicionSBS1722
L__transicionSBS1721:
0x2C5A	0x90D8      	BCF         STATUS, 0 
L__transicionSBS1722:
0x2C5C	0xA001      	BTFSS       R1, 0 
0x2C5E	0xD003      	BRA         L__transicionSBS1723
0x2C60	0xE302      	BNC         L__transicionSBS1723
0x2C62	0x8201      	BSF         R1, 1 
0x2C64	0xD001      	BRA         L__transicionSBS1724
L__transicionSBS1723:
0x2C66	0x9201      	BCF         R1, 1 
L__transicionSBS1724:
0x2C68	0xB401      	BTFSC       R1, 2 
0x2C6A	0xD002      	BRA         L__transicionSBS1725
0x2C6C	0x90D8      	BCF         STATUS, 0 
0x2C6E	0xD001      	BRA         L__transicionSBS1726
L__transicionSBS1725:
0x2C70	0x80D8      	BSF         STATUS, 0 
L__transicionSBS1726:
0x2C72	0xE304      	BNC         L__transicionSBS1727
0x2C74	0xA081      	BTFSS       PORTB, 0 
0x2C76	0xD002      	BRA         L__transicionSBS1727
0x2C78	0x8001      	BSF         R1, 0 
0x2C7A	0xD001      	BRA         L__transicionSBS1728
L__transicionSBS1727:
0x2C7C	0x9001      	BCF         R1, 0 
L__transicionSBS1728:
0x2C7E	0xB681      	BTFSC       PORTB, 3 
0x2C80	0xD002      	BRA         L__transicionSBS1729
0x2C82	0x80D8      	BSF         STATUS, 0 
0x2C84	0xD001      	BRA         L__transicionSBS1730
L__transicionSBS1729:
0x2C86	0x90D8      	BCF         STATUS, 0 
L__transicionSBS1730:
0x2C88	0xA001      	BTFSS       R1, 0 
0x2C8A	0xD003      	BRA         L__transicionSBS1731
0x2C8C	0xE302      	BNC         L__transicionSBS1731
0x2C8E	0x8001      	BSF         R1, 0 
0x2C90	0xD001      	BRA         L__transicionSBS1732
L__transicionSBS1731:
0x2C92	0x9001      	BCF         R1, 0 
L__transicionSBS1732:
0x2C94	0xB201      	BTFSC       R1, 1 
0x2C96	0xD004      	BRA         L__transicionSBS1733
0x2C98	0xB001      	BTFSC       R1, 0 
0x2C9A	0xD002      	BRA         L__transicionSBS1733
0x2C9C	0x90D8      	BCF         STATUS, 0 
0x2C9E	0xD001      	BRA         L__transicionSBS1734
L__transicionSBS1733:
0x2CA0	0x80D8      	BSF         STATUS, 0 
L__transicionSBS1734:
0x2CA2	0xE30B      	BNC         L_transicionSBS355
;rutinasensores_v4(mstr-slv).h,1450 :: 		lcd_cmd(_LCD_CLEAR);
0x2CA4	0x0E01      	MOVLW       1
0x2CA6	0x0102      	MOVLB       2
0x2CA8	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x2CAA	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1451 :: 		return debugEstadoB = SALIENDO;
0x2CAE	0x0E04      	MOVLW       4
0x2CB0	0x0101      	MOVLB       1
0x2CB2	0x6F3D      	MOVWF       _debugEstadoB, 1
0x2CB4	0x0E04      	MOVLW       4
0x2CB6	0x6E00      	MOVWF       R0 
0x2CB8	0xD000      	BRA         L_end_transicionSBS
;rutinasensores_v4(mstr-slv).h,1452 :: 		}
L_transicionSBS355:
;rutinasensores_v4(mstr-slv).h,1453 :: 		}
L_transicionSBS353:
;rutinasensores_v4(mstr-slv).h,1454 :: 		}
L_end_transicionSBS:
0x2CBA	0x0012      	RETURN      0
; end of _transicionSBS
_entrando:
;rutinasensores_v4(mstr-slv).h,485 :: 		short entrando(short estado){
;rutinasensores_v4(mstr-slv).h,486 :: 		if(estado == ENTRANDO){
0x2CBC	0x0102      	MOVLB       2
0x2CBE	0x5114      	MOVF        FARG_entrando_estado, 0, 1
0x2CC0	0x0A01      	XORLW       1
0x2CC2	0xA4D8      	BTFSS       STATUS, 2 
0x2CC4	0xD096      	BRA         L_entrando189
;rutinasensores_v4(mstr-slv).h,487 :: 		LCD_OUTCONST(3,1,"ENTRANDO");
0x2CC6	0x0E03      	MOVLW       3
0x2CC8	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x2CCA	0x0E01      	MOVLW       1
0x2CCC	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x2CCE	0x0EF5      	MOVLW       ?lstr_8_MyProject
0x2CD0	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x2CD2	0x0ED9      	MOVLW       hi_addr(?lstr_8_MyProject)
0x2CD4	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x2CD6	0x0E00      	MOVLW       higher_addr(?lstr_8_MyProject)
0x2CD8	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x2CDA	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,489 :: 		if((!SENSOR2 | !SENSOR4 | !SENSOR6)&((!SENSOR1 & !SENSOR3)|(!SENSOR3&!SENSOR5)|(!SENSOR1&!SENSOR5))){
0x2CDE	0xB883      	BTFSC       PORTD, 4 
0x2CE0	0xD002      	BRA         L__entrando780
0x2CE2	0x8001      	BSF         R1, 0 
0x2CE4	0xD001      	BRA         L__entrando781
L__entrando780:
0x2CE6	0x9001      	BCF         R1, 0 
L__entrando781:
0x2CE8	0xB681      	BTFSC       PORTB, 3 
0x2CEA	0xD002      	BRA         L__entrando782
0x2CEC	0x80D8      	BSF         STATUS, 0 
0x2CEE	0xD001      	BRA         L__entrando783
L__entrando782:
0x2CF0	0x90D8      	BCF         STATUS, 0 
L__entrando783:
0x2CF2	0xB001      	BTFSC       R1, 0 
0x2CF4	0xD003      	BRA         L__entrando784
0x2CF6	0xE202      	BC          L__entrando784
0x2CF8	0x9001      	BCF         R1, 0 
0x2CFA	0xD001      	BRA         L__entrando785
L__entrando784:
0x2CFC	0x8001      	BSF         R1, 0 
L__entrando785:
0x2CFE	0xB281      	BTFSC       PORTB, 1 
0x2D00	0xD002      	BRA         L__entrando786
0x2D02	0x80D8      	BSF         STATUS, 0 
0x2D04	0xD001      	BRA         L__entrando787
L__entrando786:
0x2D06	0x90D8      	BCF         STATUS, 0 
L__entrando787:
0x2D08	0xB001      	BTFSC       R1, 0 
0x2D0A	0xD003      	BRA         L__entrando788
0x2D0C	0xE202      	BC          L__entrando788
0x2D0E	0x9801      	BCF         R1, 4 
0x2D10	0xD001      	BRA         L__entrando789
L__entrando788:
0x2D12	0x8801      	BSF         R1, 4 
L__entrando789:
0x2D14	0xB881      	BTFSC       PORTB, 4 
0x2D16	0xD002      	BRA         L__entrando790
0x2D18	0x8601      	BSF         R1, 3 
0x2D1A	0xD001      	BRA         L__entrando791
L__entrando790:
0x2D1C	0x9601      	BCF         R1, 3 
L__entrando791:
0x2D1E	0xB481      	BTFSC       PORTB, 2 
0x2D20	0xD002      	BRA         L__entrando792
0x2D22	0x8001      	BSF         R1, 0 
0x2D24	0xD001      	BRA         L__entrando793
L__entrando792:
0x2D26	0x9001      	BCF         R1, 0 
L__entrando793:
0x2D28	0xA601      	BTFSS       R1, 3 
0x2D2A	0xD004      	BRA         L__entrando794
0x2D2C	0xA001      	BTFSS       R1, 0 
0x2D2E	0xD002      	BRA         L__entrando794
0x2D30	0x8201      	BSF         R1, 1 
0x2D32	0xD001      	BRA         L__entrando795
L__entrando794:
0x2D34	0x9201      	BCF         R1, 1 
L__entrando795:
0x2D36	0xB081      	BTFSC       PORTB, 0 
0x2D38	0xD002      	BRA         L__entrando796
0x2D3A	0x8401      	BSF         R1, 2 
0x2D3C	0xD001      	BRA         L__entrando797
L__entrando796:
0x2D3E	0x9401      	BCF         R1, 2 
L__entrando797:
0x2D40	0xA001      	BTFSS       R1, 0 
0x2D42	0xD004      	BRA         L__entrando798
0x2D44	0xA401      	BTFSS       R1, 2 
0x2D46	0xD002      	BRA         L__entrando798
0x2D48	0x80D8      	BSF         STATUS, 0 
0x2D4A	0xD001      	BRA         L__entrando799
L__entrando798:
0x2D4C	0x90D8      	BCF         STATUS, 0 
L__entrando799:
0x2D4E	0xB201      	BTFSC       R1, 1 
0x2D50	0xD003      	BRA         L__entrando800
0x2D52	0xE202      	BC          L__entrando800
0x2D54	0x9201      	BCF         R1, 1 
0x2D56	0xD001      	BRA         L__entrando801
L__entrando800:
0x2D58	0x8201      	BSF         R1, 1 
L__entrando801:
0x2D5A	0xB601      	BTFSC       R1, 3 
0x2D5C	0xD002      	BRA         L__entrando802
0x2D5E	0x9001      	BCF         R1, 0 
0x2D60	0xD001      	BRA         L__entrando803
L__entrando802:
0x2D62	0x8001      	BSF         R1, 0 
L__entrando803:
0x2D64	0xB401      	BTFSC       R1, 2 
0x2D66	0xD002      	BRA         L__entrando804
0x2D68	0x90D8      	BCF         STATUS, 0 
0x2D6A	0xD001      	BRA         L__entrando805
L__entrando804:
0x2D6C	0x80D8      	BSF         STATUS, 0 
L__entrando805:
0x2D6E	0xA001      	BTFSS       R1, 0 
0x2D70	0xD003      	BRA         L__entrando806
0x2D72	0xE302      	BNC         L__entrando806
0x2D74	0x8001      	BSF         R1, 0 
0x2D76	0xD001      	BRA         L__entrando807
L__entrando806:
0x2D78	0x9001      	BCF         R1, 0 
L__entrando807:
0x2D7A	0xB201      	BTFSC       R1, 1 
0x2D7C	0xD004      	BRA         L__entrando808
0x2D7E	0xB001      	BTFSC       R1, 0 
0x2D80	0xD002      	BRA         L__entrando808
0x2D82	0x90D8      	BCF         STATUS, 0 
0x2D84	0xD001      	BRA         L__entrando809
L__entrando808:
0x2D86	0x80D8      	BSF         STATUS, 0 
L__entrando809:
0x2D88	0xA801      	BTFSS       R1, 4 
0x2D8A	0xD003      	BRA         L__entrando810
0x2D8C	0xE302      	BNC         L__entrando810
0x2D8E	0x8001      	BSF         R1, 0 
0x2D90	0xD001      	BRA         L__entrando811
L__entrando810:
0x2D92	0x9001      	BCF         R1, 0 
L__entrando811:
0x2D94	0xA001      	BTFSS       R1, 0 
0x2D96	0xD006      	BRA         L_entrando190
;rutinasensores_v4(mstr-slv).h,491 :: 		return debugEstado = TRANSICION;
0x2D98	0x0E02      	MOVLW       2
0x2D9A	0x0100      	MOVLB       0
0x2D9C	0x6FE4      	MOVWF       _debugEstado, 1
0x2D9E	0x0E02      	MOVLW       2
0x2DA0	0x6E00      	MOVWF       R0 
0x2DA2	0xD027      	BRA         L_end_entrando
;rutinasensores_v4(mstr-slv).h,492 :: 		}
L_entrando190:
;rutinasensores_v4(mstr-slv).h,493 :: 		if((SENSOR1&SENSOR3) | (SENSOR3&SENSOR5) | (SENSOR1&SENSOR5)){
0x2DA4	0xA881      	BTFSS       PORTB, 4 
0x2DA6	0xD004      	BRA         L__entrando812
0x2DA8	0xA481      	BTFSS       PORTB, 2 
0x2DAA	0xD002      	BRA         L__entrando812
0x2DAC	0x8001      	BSF         R1, 0 
0x2DAE	0xD001      	BRA         L__entrando813
L__entrando812:
0x2DB0	0x9001      	BCF         R1, 0 
L__entrando813:
0x2DB2	0xA481      	BTFSS       PORTB, 2 
0x2DB4	0xD004      	BRA         L__entrando814
0x2DB6	0xA081      	BTFSS       PORTB, 0 
0x2DB8	0xD002      	BRA         L__entrando814
0x2DBA	0x80D8      	BSF         STATUS, 0 
0x2DBC	0xD001      	BRA         L__entrando815
L__entrando814:
0x2DBE	0x90D8      	BCF         STATUS, 0 
L__entrando815:
0x2DC0	0xB001      	BTFSC       R1, 0 
0x2DC2	0xD003      	BRA         L__entrando816
0x2DC4	0xE202      	BC          L__entrando816
0x2DC6	0x9001      	BCF         R1, 0 
0x2DC8	0xD001      	BRA         L__entrando817
L__entrando816:
0x2DCA	0x8001      	BSF         R1, 0 
L__entrando817:
0x2DCC	0xA881      	BTFSS       PORTB, 4 
0x2DCE	0xD004      	BRA         L__entrando818
0x2DD0	0xA081      	BTFSS       PORTB, 0 
0x2DD2	0xD002      	BRA         L__entrando818
0x2DD4	0x80D8      	BSF         STATUS, 0 
0x2DD6	0xD001      	BRA         L__entrando819
L__entrando818:
0x2DD8	0x90D8      	BCF         STATUS, 0 
L__entrando819:
0x2DDA	0xB001      	BTFSC       R1, 0 
0x2DDC	0xD003      	BRA         L__entrando820
0x2DDE	0xE202      	BC          L__entrando820
0x2DE0	0x9001      	BCF         R1, 0 
0x2DE2	0xD001      	BRA         L__entrando821
L__entrando820:
0x2DE4	0x8001      	BSF         R1, 0 
L__entrando821:
0x2DE6	0xA001      	BTFSS       R1, 0 
0x2DE8	0xD004      	BRA         L_entrando191
;rutinasensores_v4(mstr-slv).h,495 :: 		return debugEstado = ESPERA;
0x2DEA	0x0100      	MOVLB       0
0x2DEC	0x6BE4      	CLRF        _debugEstado, 1
0x2DEE	0x6A00      	CLRF        R0 
0x2DF0	0xD000      	BRA         L_end_entrando
;rutinasensores_v4(mstr-slv).h,496 :: 		}
L_entrando191:
;rutinasensores_v4(mstr-slv).h,497 :: 		}
L_entrando189:
;rutinasensores_v4(mstr-slv).h,498 :: 		}
L_end_entrando:
0x2DF2	0x0012      	RETURN      0
; end of _entrando
_espera:
;rutinasensores_v4(mstr-slv).h,460 :: 		short espera(short estado){
;rutinasensores_v4(mstr-slv).h,461 :: 		if(estado == ESPERA){
0x2DF4	0x0102      	MOVLB       2
0x2DF6	0x5114      	MOVF        FARG_espera_estado, 0, 1
0x2DF8	0x0A00      	XORLW       0
0x2DFA	0xA4D8      	BTFSS       STATUS, 2 
0x2DFC	0xD0A4      	BRA         L_espera186
;rutinasensores_v4(mstr-slv).h,463 :: 		muestraEstatus();
0x2DFE	0xF008EC8B  	CALL        _muestraEstatus, 0
;rutinasensores_v4(mstr-slv).h,465 :: 		if( (!SENSOR1 | !SENSOR3 | !SENSOR5) & ((SENSOR2 & SENSOR4) | (SENSOR4&SENSOR6) | (SENSOR2&SENSOR6))){
0x2E02	0xB881      	BTFSC       PORTB, 4 
0x2E04	0xD002      	BRA         L__espera735
0x2E06	0x8001      	BSF         R1, 0 
0x2E08	0xD001      	BRA         L__espera736
L__espera735:
0x2E0A	0x9001      	BCF         R1, 0 
L__espera736:
0x2E0C	0xB481      	BTFSC       PORTB, 2 
0x2E0E	0xD002      	BRA         L__espera737
0x2E10	0x80D8      	BSF         STATUS, 0 
0x2E12	0xD001      	BRA         L__espera738
L__espera737:
0x2E14	0x90D8      	BCF         STATUS, 0 
L__espera738:
0x2E16	0xB001      	BTFSC       R1, 0 
0x2E18	0xD003      	BRA         L__espera739
0x2E1A	0xE202      	BC          L__espera739
0x2E1C	0x9001      	BCF         R1, 0 
0x2E1E	0xD001      	BRA         L__espera740
L__espera739:
0x2E20	0x8001      	BSF         R1, 0 
L__espera740:
0x2E22	0xB081      	BTFSC       PORTB, 0 
0x2E24	0xD002      	BRA         L__espera741
0x2E26	0x80D8      	BSF         STATUS, 0 
0x2E28	0xD001      	BRA         L__espera742
L__espera741:
0x2E2A	0x90D8      	BCF         STATUS, 0 
L__espera742:
0x2E2C	0xB001      	BTFSC       R1, 0 
0x2E2E	0xD003      	BRA         L__espera743
0x2E30	0xE202      	BC          L__espera743
0x2E32	0x9201      	BCF         R1, 1 
0x2E34	0xD001      	BRA         L__espera744
L__espera743:
0x2E36	0x8201      	BSF         R1, 1 
L__espera744:
0x2E38	0xA883      	BTFSS       PORTD, 4 
0x2E3A	0xD004      	BRA         L__espera745
0x2E3C	0xA681      	BTFSS       PORTB, 3 
0x2E3E	0xD002      	BRA         L__espera745
0x2E40	0x8001      	BSF         R1, 0 
0x2E42	0xD001      	BRA         L__espera746
L__espera745:
0x2E44	0x9001      	BCF         R1, 0 
L__espera746:
0x2E46	0xA681      	BTFSS       PORTB, 3 
0x2E48	0xD004      	BRA         L__espera747
0x2E4A	0xA281      	BTFSS       PORTB, 1 
0x2E4C	0xD002      	BRA         L__espera747
0x2E4E	0x80D8      	BSF         STATUS, 0 
0x2E50	0xD001      	BRA         L__espera748
L__espera747:
0x2E52	0x90D8      	BCF         STATUS, 0 
L__espera748:
0x2E54	0xB001      	BTFSC       R1, 0 
0x2E56	0xD003      	BRA         L__espera749
0x2E58	0xE202      	BC          L__espera749
0x2E5A	0x9001      	BCF         R1, 0 
0x2E5C	0xD001      	BRA         L__espera750
L__espera749:
0x2E5E	0x8001      	BSF         R1, 0 
L__espera750:
0x2E60	0xA883      	BTFSS       PORTD, 4 
0x2E62	0xD004      	BRA         L__espera751
0x2E64	0xA281      	BTFSS       PORTB, 1 
0x2E66	0xD002      	BRA         L__espera751
0x2E68	0x80D8      	BSF         STATUS, 0 
0x2E6A	0xD001      	BRA         L__espera752
L__espera751:
0x2E6C	0x90D8      	BCF         STATUS, 0 
L__espera752:
0x2E6E	0xB001      	BTFSC       R1, 0 
0x2E70	0xD003      	BRA         L__espera753
0x2E72	0xE202      	BC          L__espera753
0x2E74	0x9001      	BCF         R1, 0 
0x2E76	0xD001      	BRA         L__espera754
L__espera753:
0x2E78	0x8001      	BSF         R1, 0 
L__espera754:
0x2E7A	0xA201      	BTFSS       R1, 1 
0x2E7C	0xD004      	BRA         L__espera755
0x2E7E	0xA001      	BTFSS       R1, 0 
0x2E80	0xD002      	BRA         L__espera755
0x2E82	0x80D8      	BSF         STATUS, 0 
0x2E84	0xD001      	BRA         L__espera756
L__espera755:
0x2E86	0x90D8      	BCF         STATUS, 0 
L__espera756:
0x2E88	0xE30C      	BNC         L_espera187
;rutinasensores_v4(mstr-slv).h,467 :: 		cuentaUSART = 0;
0x2E8A	0x0100      	MOVLB       0
0x2E8C	0x6BDE      	CLRF        _cuentaUSART, 1
;rutinasensores_v4(mstr-slv).h,468 :: 		permanencia = true;
0x2E8E	0x0E01      	MOVLW       1
0x2E90	0x6FE3      	MOVWF       _permanencia, 1
;rutinasensores_v4(mstr-slv).h,469 :: 		empiezaEntrada = true;
0x2E92	0x0E01      	MOVLW       1
0x2E94	0x6FE6      	MOVWF       _empiezaEntrada, 1
;rutinasensores_v4(mstr-slv).h,470 :: 		empiezaSalida = false;
0x2E96	0x6BE5      	CLRF        _empiezaSalida, 1
;rutinasensores_v4(mstr-slv).h,471 :: 		return debugEstado = ENTRANDO;
0x2E98	0x0E01      	MOVLW       1
0x2E9A	0x6FE4      	MOVWF       _debugEstado, 1
0x2E9C	0x0E01      	MOVLW       1
0x2E9E	0x6E00      	MOVWF       R0 
0x2EA0	0xD052      	BRA         L_end_espera
;rutinasensores_v4(mstr-slv).h,472 :: 		}
L_espera187:
;rutinasensores_v4(mstr-slv).h,473 :: 		if( (!SENSOR2 | !SENSOR4 | !SENSOR6) &((SENSOR1 & SENSOR3) | (SENSOR3&SENSOR5) | (SENSOR1&SENSOR5)) ){
0x2EA2	0xB883      	BTFSC       PORTD, 4 
0x2EA4	0xD002      	BRA         L__espera757
0x2EA6	0x8001      	BSF         R1, 0 
0x2EA8	0xD001      	BRA         L__espera758
L__espera757:
0x2EAA	0x9001      	BCF         R1, 0 
L__espera758:
0x2EAC	0xB681      	BTFSC       PORTB, 3 
0x2EAE	0xD002      	BRA         L__espera759
0x2EB0	0x80D8      	BSF         STATUS, 0 
0x2EB2	0xD001      	BRA         L__espera760
L__espera759:
0x2EB4	0x90D8      	BCF         STATUS, 0 
L__espera760:
0x2EB6	0xB001      	BTFSC       R1, 0 
0x2EB8	0xD003      	BRA         L__espera761
0x2EBA	0xE202      	BC          L__espera761
0x2EBC	0x9001      	BCF         R1, 0 
0x2EBE	0xD001      	BRA         L__espera762
L__espera761:
0x2EC0	0x8001      	BSF         R1, 0 
L__espera762:
0x2EC2	0xB281      	BTFSC       PORTB, 1 
0x2EC4	0xD002      	BRA         L__espera763
0x2EC6	0x80D8      	BSF         STATUS, 0 
0x2EC8	0xD001      	BRA         L__espera764
L__espera763:
0x2ECA	0x90D8      	BCF         STATUS, 0 
L__espera764:
0x2ECC	0xB001      	BTFSC       R1, 0 
0x2ECE	0xD003      	BRA         L__espera765
0x2ED0	0xE202      	BC          L__espera765
0x2ED2	0x9201      	BCF         R1, 1 
0x2ED4	0xD001      	BRA         L__espera766
L__espera765:
0x2ED6	0x8201      	BSF         R1, 1 
L__espera766:
0x2ED8	0xA881      	BTFSS       PORTB, 4 
0x2EDA	0xD004      	BRA         L__espera767
0x2EDC	0xA481      	BTFSS       PORTB, 2 
0x2EDE	0xD002      	BRA         L__espera767
0x2EE0	0x8001      	BSF         R1, 0 
0x2EE2	0xD001      	BRA         L__espera768
L__espera767:
0x2EE4	0x9001      	BCF         R1, 0 
L__espera768:
0x2EE6	0xA481      	BTFSS       PORTB, 2 
0x2EE8	0xD004      	BRA         L__espera769
0x2EEA	0xA081      	BTFSS       PORTB, 0 
0x2EEC	0xD002      	BRA         L__espera769
0x2EEE	0x80D8      	BSF         STATUS, 0 
0x2EF0	0xD001      	BRA         L__espera770
L__espera769:
0x2EF2	0x90D8      	BCF         STATUS, 0 
L__espera770:
0x2EF4	0xB001      	BTFSC       R1, 0 
0x2EF6	0xD003      	BRA         L__espera771
0x2EF8	0xE202      	BC          L__espera771
0x2EFA	0x9001      	BCF         R1, 0 
0x2EFC	0xD001      	BRA         L__espera772
L__espera771:
0x2EFE	0x8001      	BSF         R1, 0 
L__espera772:
0x2F00	0xA881      	BTFSS       PORTB, 4 
0x2F02	0xD004      	BRA         L__espera773
0x2F04	0xA081      	BTFSS       PORTB, 0 
0x2F06	0xD002      	BRA         L__espera773
0x2F08	0x80D8      	BSF         STATUS, 0 
0x2F0A	0xD001      	BRA         L__espera774
L__espera773:
0x2F0C	0x90D8      	BCF         STATUS, 0 
L__espera774:
0x2F0E	0xB001      	BTFSC       R1, 0 
0x2F10	0xD003      	BRA         L__espera775
0x2F12	0xE202      	BC          L__espera775
0x2F14	0x9001      	BCF         R1, 0 
0x2F16	0xD001      	BRA         L__espera776
L__espera775:
0x2F18	0x8001      	BSF         R1, 0 
L__espera776:
0x2F1A	0xA201      	BTFSS       R1, 1 
0x2F1C	0xD004      	BRA         L__espera777
0x2F1E	0xA001      	BTFSS       R1, 0 
0x2F20	0xD002      	BRA         L__espera777
0x2F22	0x80D8      	BSF         STATUS, 0 
0x2F24	0xD001      	BRA         L__espera778
L__espera777:
0x2F26	0x90D8      	BCF         STATUS, 0 
L__espera778:
0x2F28	0xE30C      	BNC         L_espera188
;rutinasensores_v4(mstr-slv).h,475 :: 		cuentaUSART = 0;
0x2F2A	0x0100      	MOVLB       0
0x2F2C	0x6BDE      	CLRF        _cuentaUSART, 1
;rutinasensores_v4(mstr-slv).h,476 :: 		permanencia = true;
0x2F2E	0x0E01      	MOVLW       1
0x2F30	0x6FE3      	MOVWF       _permanencia, 1
;rutinasensores_v4(mstr-slv).h,477 :: 		empiezaSalida = true;
0x2F32	0x0E01      	MOVLW       1
0x2F34	0x6FE5      	MOVWF       _empiezaSalida, 1
;rutinasensores_v4(mstr-slv).h,478 :: 		empiezaEntrada = false;
0x2F36	0x6BE6      	CLRF        _empiezaEntrada, 1
;rutinasensores_v4(mstr-slv).h,479 :: 		return debugEstado = SALIENDO;
0x2F38	0x0E04      	MOVLW       4
0x2F3A	0x6FE4      	MOVWF       _debugEstado, 1
0x2F3C	0x0E04      	MOVLW       4
0x2F3E	0x6E00      	MOVWF       R0 
0x2F40	0xD002      	BRA         L_end_espera
;rutinasensores_v4(mstr-slv).h,480 :: 		}
L_espera188:
;rutinasensores_v4(mstr-slv).h,481 :: 		return ESPERA;
0x2F42	0x6A00      	CLRF        R0 
0x2F44	0xD000      	BRA         L_end_espera
;rutinasensores_v4(mstr-slv).h,482 :: 		}
L_espera186:
;rutinasensores_v4(mstr-slv).h,483 :: 		}
L_end_espera:
0x2F46	0x0012      	RETURN      0
; end of _espera
_saliendoBS:
;rutinasensores_v4(mstr-slv).h,1428 :: 		short saliendoBS(short estado){
;rutinasensores_v4(mstr-slv).h,1429 :: 		if(estado == SALIENDO){
0x2F48	0x0102      	MOVLB       2
0x2F4A	0x5114      	MOVF        FARG_saliendoBS_estado, 0, 1
0x2F4C	0x0A04      	XORLW       4
0x2F4E	0xA4D8      	BTFSS       STATUS, 2 
0x2F50	0xD062      	BRA         L_saliendoBS350
;rutinasensores_v4(mstr-slv).h,1430 :: 		lcd_outConst(3, 1, "SALIENDO");
0x2F52	0x0E03      	MOVLW       3
0x2F54	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x2F56	0x0E01      	MOVLW       1
0x2F58	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x2F5A	0x0E46      	MOVLW       ?lstr_60_MyProject
0x2F5C	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x2F5E	0x0EDA      	MOVLW       hi_addr(?lstr_60_MyProject)
0x2F60	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x2F62	0x0E00      	MOVLW       higher_addr(?lstr_60_MyProject)
0x2F64	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x2F66	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1431 :: 		if((!SENSOR1 & !SENSOR3) | (!SENSOR3 & !SENSOR5) | (!SENSOR1 & !SENSOR5)){
0x2F6A	0xB881      	BTFSC       PORTB, 4 
0x2F6C	0xD002      	BRA         L__saliendoBS1692
0x2F6E	0x8601      	BSF         R1, 3 
0x2F70	0xD001      	BRA         L__saliendoBS1693
L__saliendoBS1692:
0x2F72	0x9601      	BCF         R1, 3 
L__saliendoBS1693:
0x2F74	0xB481      	BTFSC       PORTB, 2 
0x2F76	0xD002      	BRA         L__saliendoBS1694
0x2F78	0x8001      	BSF         R1, 0 
0x2F7A	0xD001      	BRA         L__saliendoBS1695
L__saliendoBS1694:
0x2F7C	0x9001      	BCF         R1, 0 
L__saliendoBS1695:
0x2F7E	0xA601      	BTFSS       R1, 3 
0x2F80	0xD004      	BRA         L__saliendoBS1696
0x2F82	0xA001      	BTFSS       R1, 0 
0x2F84	0xD002      	BRA         L__saliendoBS1696
0x2F86	0x8201      	BSF         R1, 1 
0x2F88	0xD001      	BRA         L__saliendoBS1697
L__saliendoBS1696:
0x2F8A	0x9201      	BCF         R1, 1 
L__saliendoBS1697:
0x2F8C	0xB081      	BTFSC       PORTB, 0 
0x2F8E	0xD002      	BRA         L__saliendoBS1698
0x2F90	0x8401      	BSF         R1, 2 
0x2F92	0xD001      	BRA         L__saliendoBS1699
L__saliendoBS1698:
0x2F94	0x9401      	BCF         R1, 2 
L__saliendoBS1699:
0x2F96	0xA001      	BTFSS       R1, 0 
0x2F98	0xD004      	BRA         L__saliendoBS1700
0x2F9A	0xA401      	BTFSS       R1, 2 
0x2F9C	0xD002      	BRA         L__saliendoBS1700
0x2F9E	0x80D8      	BSF         STATUS, 0 
0x2FA0	0xD001      	BRA         L__saliendoBS1701
L__saliendoBS1700:
0x2FA2	0x90D8      	BCF         STATUS, 0 
L__saliendoBS1701:
0x2FA4	0xB201      	BTFSC       R1, 1 
0x2FA6	0xD003      	BRA         L__saliendoBS1702
0x2FA8	0xE202      	BC          L__saliendoBS1702
0x2FAA	0x9201      	BCF         R1, 1 
0x2FAC	0xD001      	BRA         L__saliendoBS1703
L__saliendoBS1702:
0x2FAE	0x8201      	BSF         R1, 1 
L__saliendoBS1703:
0x2FB0	0xB601      	BTFSC       R1, 3 
0x2FB2	0xD002      	BRA         L__saliendoBS1704
0x2FB4	0x9001      	BCF         R1, 0 
0x2FB6	0xD001      	BRA         L__saliendoBS1705
L__saliendoBS1704:
0x2FB8	0x8001      	BSF         R1, 0 
L__saliendoBS1705:
0x2FBA	0xB401      	BTFSC       R1, 2 
0x2FBC	0xD002      	BRA         L__saliendoBS1706
0x2FBE	0x90D8      	BCF         STATUS, 0 
0x2FC0	0xD001      	BRA         L__saliendoBS1707
L__saliendoBS1706:
0x2FC2	0x80D8      	BSF         STATUS, 0 
L__saliendoBS1707:
0x2FC4	0xA001      	BTFSS       R1, 0 
0x2FC6	0xD003      	BRA         L__saliendoBS1708
0x2FC8	0xE302      	BNC         L__saliendoBS1708
0x2FCA	0x8001      	BSF         R1, 0 
0x2FCC	0xD001      	BRA         L__saliendoBS1709
L__saliendoBS1708:
0x2FCE	0x9001      	BCF         R1, 0 
L__saliendoBS1709:
0x2FD0	0xB201      	BTFSC       R1, 1 
0x2FD2	0xD004      	BRA         L__saliendoBS1710
0x2FD4	0xB001      	BTFSC       R1, 0 
0x2FD6	0xD002      	BRA         L__saliendoBS1710
0x2FD8	0x90D8      	BCF         STATUS, 0 
0x2FDA	0xD001      	BRA         L__saliendoBS1711
L__saliendoBS1710:
0x2FDC	0x80D8      	BSF         STATUS, 0 
L__saliendoBS1711:
0x2FDE	0xE30A      	BNC         L_saliendoBS351
;rutinasensores_v4(mstr-slv).h,1432 :: 		lcd_cmd(_LCD_CLEAR);
0x2FE0	0x0E01      	MOVLW       1
0x2FE2	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x2FE4	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1433 :: 		return debugEstadoB = TRANSICIONS;
0x2FE8	0x0E08      	MOVLW       8
0x2FEA	0x0101      	MOVLB       1
0x2FEC	0x6F3D      	MOVWF       _debugEstadoB, 1
0x2FEE	0x0E08      	MOVLW       8
0x2FF0	0x6E00      	MOVWF       R0 
0x2FF2	0xD011      	BRA         L_end_saliendoBS
;rutinasensores_v4(mstr-slv).h,1434 :: 		}
L_saliendoBS351:
;rutinasensores_v4(mstr-slv).h,1435 :: 		if((SENSOR2 & SENSOR4)){
0x2FF4	0xA883      	BTFSS       PORTD, 4 
0x2FF6	0xD004      	BRA         L__saliendoBS1712
0x2FF8	0xA681      	BTFSS       PORTB, 3 
0x2FFA	0xD002      	BRA         L__saliendoBS1712
0x2FFC	0x80D8      	BSF         STATUS, 0 
0x2FFE	0xD001      	BRA         L__saliendoBS1713
L__saliendoBS1712:
0x3000	0x90D8      	BCF         STATUS, 0 
L__saliendoBS1713:
0x3002	0xE309      	BNC         L_saliendoBS352
;rutinasensores_v4(mstr-slv).h,1436 :: 		lcd_cmd(_LCD_CLEAR);
0x3004	0x0E01      	MOVLW       1
0x3006	0x0102      	MOVLB       2
0x3008	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x300A	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1437 :: 		return debugEstadoB = ESPERA;
0x300E	0x0101      	MOVLB       1
0x3010	0x6B3D      	CLRF        _debugEstadoB, 1
0x3012	0x6A00      	CLRF        R0 
0x3014	0xD000      	BRA         L_end_saliendoBS
;rutinasensores_v4(mstr-slv).h,1438 :: 		}
L_saliendoBS352:
;rutinasensores_v4(mstr-slv).h,1439 :: 		}
L_saliendoBS350:
;rutinasensores_v4(mstr-slv).h,1440 :: 		}
L_end_saliendoBS:
0x3016	0x0012      	RETURN      0
; end of _saliendoBS
_transicionEntBS:
;rutinasensores_v4(mstr-slv).h,1393 :: 		short transicionEntBS(short estado){
;rutinasensores_v4(mstr-slv).h,1394 :: 		if(estado == TRANENT){
0x3018	0x0102      	MOVLB       2
0x301A	0x5114      	MOVF        FARG_transicionEntBS_estado, 0, 1
0x301C	0x0A07      	XORLW       7
0x301E	0xE146      	BNZ         L_transicionEntBS345
;rutinasensores_v4(mstr-slv).h,1395 :: 		LCD_OUTCONST(3,1,"TRANSICION ENTRADA");
0x3020	0x0E03      	MOVLW       3
0x3022	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x3024	0x0E01      	MOVLW       1
0x3026	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x3028	0x0E3B      	MOVLW       ?lstr_58_MyProject
0x302A	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x302C	0x0ED5      	MOVLW       hi_addr(?lstr_58_MyProject)
0x302E	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x3030	0x0E00      	MOVLW       higher_addr(?lstr_58_MyProject)
0x3032	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x3034	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1396 :: 		if((!SENSOR3 & !SENSOR1 & !SENSOR5)/*(!SENSOR1 | !SENSOR3) | (!SENSOR3 | !SENSOR5) | (!SENSOR1 | !SENSOR5)*/){
0x3038	0xB481      	BTFSC       PORTB, 2 
0x303A	0xD002      	BRA         L__transicionEntBS1678
0x303C	0x8001      	BSF         R1, 0 
0x303E	0xD001      	BRA         L__transicionEntBS1679
L__transicionEntBS1678:
0x3040	0x9001      	BCF         R1, 0 
L__transicionEntBS1679:
0x3042	0xB881      	BTFSC       PORTB, 4 
0x3044	0xD002      	BRA         L__transicionEntBS1680
0x3046	0x80D8      	BSF         STATUS, 0 
0x3048	0xD001      	BRA         L__transicionEntBS1681
L__transicionEntBS1680:
0x304A	0x90D8      	BCF         STATUS, 0 
L__transicionEntBS1681:
0x304C	0xA001      	BTFSS       R1, 0 
0x304E	0xD003      	BRA         L__transicionEntBS1682
0x3050	0xE302      	BNC         L__transicionEntBS1682
0x3052	0x8001      	BSF         R1, 0 
0x3054	0xD001      	BRA         L__transicionEntBS1683
L__transicionEntBS1682:
0x3056	0x9001      	BCF         R1, 0 
L__transicionEntBS1683:
0x3058	0xB081      	BTFSC       PORTB, 0 
0x305A	0xD002      	BRA         L__transicionEntBS1684
0x305C	0x80D8      	BSF         STATUS, 0 
0x305E	0xD001      	BRA         L__transicionEntBS1685
L__transicionEntBS1684:
0x3060	0x90D8      	BCF         STATUS, 0 
L__transicionEntBS1685:
0x3062	0xA001      	BTFSS       R1, 0 
0x3064	0xD003      	BRA         L__transicionEntBS1686
0x3066	0xE302      	BNC         L__transicionEntBS1686
0x3068	0x8001      	BSF         R1, 0 
0x306A	0xD001      	BRA         L__transicionEntBS1687
L__transicionEntBS1686:
0x306C	0x9001      	BCF         R1, 0 
L__transicionEntBS1687:
0x306E	0xA001      	BTFSS       R1, 0 
0x3070	0xD00A      	BRA         L_transicionEntBS346
;rutinasensores_v4(mstr-slv).h,1397 :: 		lcd_cmd(_LCD_CLEAR);
0x3072	0x0E01      	MOVLW       1
0x3074	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x3076	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1398 :: 		return debugEstadoB = TRANSICION;
0x307A	0x0E02      	MOVLW       2
0x307C	0x0101      	MOVLB       1
0x307E	0x6F3D      	MOVWF       _debugEstadoB, 1
0x3080	0x0E02      	MOVLW       2
0x3082	0x6E00      	MOVWF       R0 
0x3084	0xD013      	BRA         L_end_transicionEntBS
;rutinasensores_v4(mstr-slv).h,1399 :: 		}
L_transicionEntBS346:
;rutinasensores_v4(mstr-slv).h,1400 :: 		if(/*(SENSOR2 & SENSOR4) | (SENSOR4 & SENSOR6) | (SENSOR2 & SENSOR6) | */(SENSOR2 & SENSOR4)){
0x3086	0xA883      	BTFSS       PORTD, 4 
0x3088	0xD004      	BRA         L__transicionEntBS1688
0x308A	0xA681      	BTFSS       PORTB, 3 
0x308C	0xD002      	BRA         L__transicionEntBS1688
0x308E	0x80D8      	BSF         STATUS, 0 
0x3090	0xD001      	BRA         L__transicionEntBS1689
L__transicionEntBS1688:
0x3092	0x90D8      	BCF         STATUS, 0 
L__transicionEntBS1689:
0x3094	0xE30B      	BNC         L_transicionEntBS347
;rutinasensores_v4(mstr-slv).h,1401 :: 		lcd_cmd(_LCD_CLEAR);
0x3096	0x0E01      	MOVLW       1
0x3098	0x0102      	MOVLB       2
0x309A	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x309C	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1402 :: 		return debugEstadoB = ENTRO;
0x30A0	0x0E03      	MOVLW       3
0x30A2	0x0101      	MOVLB       1
0x30A4	0x6F3D      	MOVWF       _debugEstadoB, 1
0x30A6	0x0E03      	MOVLW       3
0x30A8	0x6E00      	MOVWF       R0 
0x30AA	0xD000      	BRA         L_end_transicionEntBS
;rutinasensores_v4(mstr-slv).h,1403 :: 		}
L_transicionEntBS347:
;rutinasensores_v4(mstr-slv).h,1404 :: 		}
L_transicionEntBS345:
;rutinasensores_v4(mstr-slv).h,1405 :: 		}
L_end_transicionEntBS:
0x30AC	0x0012      	RETURN      0
; end of _transicionEntBS
_entrandoBS:
;rutinasensores_v4(mstr-slv).h,1365 :: 		short entrandoBS(short estado){
;rutinasensores_v4(mstr-slv).h,1366 :: 		if(estado == ENTRANDO){
0x30AE	0x0102      	MOVLB       2
0x30B0	0x5114      	MOVF        FARG_entrandoBS_estado, 0, 1
0x30B2	0x0A01      	XORLW       1
0x30B4	0xE140      	BNZ         L_entrandoBS339
;rutinasensores_v4(mstr-slv).h,1367 :: 		LCD_OUTCONST(3,1,"ENTRANDO DEBUG");
0x30B6	0x0E03      	MOVLW       3
0x30B8	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x30BA	0x0E01      	MOVLW       1
0x30BC	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x30BE	0x0E6E      	MOVLW       ?lstr_56_MyProject
0x30C0	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x30C2	0x0ED8      	MOVLW       hi_addr(?lstr_56_MyProject)
0x30C4	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x30C6	0x0E00      	MOVLW       higher_addr(?lstr_56_MyProject)
0x30C8	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x30CA	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1368 :: 		if((SENSOR1 & SENSOR3 & SENSOR5)){
0x30CE	0xA881      	BTFSS       PORTB, 4 
0x30D0	0xD004      	BRA         L__entrandoBS1632
0x30D2	0xA481      	BTFSS       PORTB, 2 
0x30D4	0xD002      	BRA         L__entrandoBS1632
0x30D6	0x80D8      	BSF         STATUS, 0 
0x30D8	0xD001      	BRA         L__entrandoBS1633
L__entrandoBS1632:
0x30DA	0x90D8      	BCF         STATUS, 0 
L__entrandoBS1633:
0x30DC	0xE304      	BNC         L__entrandoBS1634
0x30DE	0xA081      	BTFSS       PORTB, 0 
0x30E0	0xD002      	BRA         L__entrandoBS1634
0x30E2	0x8001      	BSF         R1, 0 
0x30E4	0xD001      	BRA         L__entrandoBS1635
L__entrandoBS1634:
0x30E6	0x9001      	BCF         R1, 0 
L__entrandoBS1635:
0x30E8	0xA001      	BTFSS       R1, 0 
0x30EA	0xD008      	BRA         L_entrandoBS340
;rutinasensores_v4(mstr-slv).h,1369 :: 		lcd_cmd(_LCD_CLEAR);
0x30EC	0x0E01      	MOVLW       1
0x30EE	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x30F0	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1370 :: 		return debugEstadoB = ESPERA;
0x30F4	0x0101      	MOVLB       1
0x30F6	0x6B3D      	CLRF        _debugEstadoB, 1
0x30F8	0x6A00      	CLRF        R0 
0x30FA	0xD01D      	BRA         L_end_entrandoBS
;rutinasensores_v4(mstr-slv).h,1371 :: 		}
L_entrandoBS340:
;rutinasensores_v4(mstr-slv).h,1372 :: 		if((!SENSOR2 & !SENSOR4)){
0x30FC	0xB883      	BTFSC       PORTD, 4 
0x30FE	0xD002      	BRA         L__entrandoBS1636
0x3100	0x8001      	BSF         R1, 0 
0x3102	0xD001      	BRA         L__entrandoBS1637
L__entrandoBS1636:
0x3104	0x9001      	BCF         R1, 0 
L__entrandoBS1637:
0x3106	0xB681      	BTFSC       PORTB, 3 
0x3108	0xD002      	BRA         L__entrandoBS1638
0x310A	0x80D8      	BSF         STATUS, 0 
0x310C	0xD001      	BRA         L__entrandoBS1639
L__entrandoBS1638:
0x310E	0x90D8      	BCF         STATUS, 0 
L__entrandoBS1639:
0x3110	0xA001      	BTFSS       R1, 0 
0x3112	0xD003      	BRA         L__entrandoBS1640
0x3114	0xE302      	BNC         L__entrandoBS1640
0x3116	0x8001      	BSF         R1, 0 
0x3118	0xD001      	BRA         L__entrandoBS1641
L__entrandoBS1640:
0x311A	0x9001      	BCF         R1, 0 
L__entrandoBS1641:
0x311C	0xA001      	BTFSS       R1, 0 
0x311E	0xD00B      	BRA         L_entrandoBS341
;rutinasensores_v4(mstr-slv).h,1373 :: 		lcd_cmd(_LCD_CLEAR);
0x3120	0x0E01      	MOVLW       1
0x3122	0x0102      	MOVLB       2
0x3124	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x3126	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1374 :: 		return debugEstadoB = TRANSICION;
0x312A	0x0E02      	MOVLW       2
0x312C	0x0101      	MOVLB       1
0x312E	0x6F3D      	MOVWF       _debugEstadoB, 1
0x3130	0x0E02      	MOVLW       2
0x3132	0x6E00      	MOVWF       R0 
0x3134	0xD000      	BRA         L_end_entrandoBS
;rutinasensores_v4(mstr-slv).h,1375 :: 		}
L_entrandoBS341:
;rutinasensores_v4(mstr-slv).h,1376 :: 		}
L_entrandoBS339:
;rutinasensores_v4(mstr-slv).h,1377 :: 		}
L_end_entrandoBS:
0x3136	0x0012      	RETURN      0
; end of _entrandoBS
_transicionE:
;rutinasensores_v4(mstr-slv).h,500 :: 		short transicionE(short estado){
;rutinasensores_v4(mstr-slv).h,501 :: 		if(estado == TRANSICION){
0x3138	0x0102      	MOVLB       2
0x313A	0x5114      	MOVF        FARG_transicionE_estado, 0, 1
0x313C	0x0A02      	XORLW       2
0x313E	0xA4D8      	BTFSS       STATUS, 2 
0x3140	0xD05E      	BRA         L_transicionE192
;rutinasensores_v4(mstr-slv).h,502 :: 		LCD_OUTCONST(3,1,"TRANSICIONE");
0x3142	0x0E03      	MOVLW       3
0x3144	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x3146	0x0E01      	MOVLW       1
0x3148	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x314A	0x0E99      	MOVLW       ?lstr_9_MyProject
0x314C	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x314E	0x0ED8      	MOVLW       hi_addr(?lstr_9_MyProject)
0x3150	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x3152	0x0E00      	MOVLW       higher_addr(?lstr_9_MyProject)
0x3154	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x3156	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,503 :: 		if((SENSOR1&SENSOR3) | (SENSOR3&SENSOR5) | (SENSOR1& SENSOR5)){
0x315A	0xA881      	BTFSS       PORTB, 4 
0x315C	0xD004      	BRA         L__transicionE823
0x315E	0xA481      	BTFSS       PORTB, 2 
0x3160	0xD002      	BRA         L__transicionE823
0x3162	0x8001      	BSF         R1, 0 
0x3164	0xD001      	BRA         L__transicionE824
L__transicionE823:
0x3166	0x9001      	BCF         R1, 0 
L__transicionE824:
0x3168	0xA481      	BTFSS       PORTB, 2 
0x316A	0xD004      	BRA         L__transicionE825
0x316C	0xA081      	BTFSS       PORTB, 0 
0x316E	0xD002      	BRA         L__transicionE825
0x3170	0x80D8      	BSF         STATUS, 0 
0x3172	0xD001      	BRA         L__transicionE826
L__transicionE825:
0x3174	0x90D8      	BCF         STATUS, 0 
L__transicionE826:
0x3176	0xB001      	BTFSC       R1, 0 
0x3178	0xD003      	BRA         L__transicionE827
0x317A	0xE202      	BC          L__transicionE827
0x317C	0x9001      	BCF         R1, 0 
0x317E	0xD001      	BRA         L__transicionE828
L__transicionE827:
0x3180	0x8001      	BSF         R1, 0 
L__transicionE828:
0x3182	0xA881      	BTFSS       PORTB, 4 
0x3184	0xD004      	BRA         L__transicionE829
0x3186	0xA081      	BTFSS       PORTB, 0 
0x3188	0xD002      	BRA         L__transicionE829
0x318A	0x80D8      	BSF         STATUS, 0 
0x318C	0xD001      	BRA         L__transicionE830
L__transicionE829:
0x318E	0x90D8      	BCF         STATUS, 0 
L__transicionE830:
0x3190	0xB001      	BTFSC       R1, 0 
0x3192	0xD003      	BRA         L__transicionE831
0x3194	0xE202      	BC          L__transicionE831
0x3196	0x9001      	BCF         R1, 0 
0x3198	0xD001      	BRA         L__transicionE832
L__transicionE831:
0x319A	0x8001      	BSF         R1, 0 
L__transicionE832:
0x319C	0xA001      	BTFSS       R1, 0 
0x319E	0xD006      	BRA         L_transicionE193
;rutinasensores_v4(mstr-slv).h,504 :: 		return debugEstado = TRANENT;
0x31A0	0x0E07      	MOVLW       7
0x31A2	0x0100      	MOVLB       0
0x31A4	0x6FE4      	MOVWF       _debugEstado, 1
0x31A6	0x0E07      	MOVLW       7
0x31A8	0x6E00      	MOVWF       R0 
0x31AA	0xD029      	BRA         L_end_transicionE
;rutinasensores_v4(mstr-slv).h,505 :: 		}
L_transicionE193:
;rutinasensores_v4(mstr-slv).h,506 :: 		if((SENSOR2&SENSOR4) | (SENSOR4&SENSOR6) | (SENSOR2& SENSOR6)){
0x31AC	0xA883      	BTFSS       PORTD, 4 
0x31AE	0xD004      	BRA         L__transicionE833
0x31B0	0xA681      	BTFSS       PORTB, 3 
0x31B2	0xD002      	BRA         L__transicionE833
0x31B4	0x8001      	BSF         R1, 0 
0x31B6	0xD001      	BRA         L__transicionE834
L__transicionE833:
0x31B8	0x9001      	BCF         R1, 0 
L__transicionE834:
0x31BA	0xA681      	BTFSS       PORTB, 3 
0x31BC	0xD004      	BRA         L__transicionE835
0x31BE	0xA281      	BTFSS       PORTB, 1 
0x31C0	0xD002      	BRA         L__transicionE835
0x31C2	0x80D8      	BSF         STATUS, 0 
0x31C4	0xD001      	BRA         L__transicionE836
L__transicionE835:
0x31C6	0x90D8      	BCF         STATUS, 0 
L__transicionE836:
0x31C8	0xB001      	BTFSC       R1, 0 
0x31CA	0xD003      	BRA         L__transicionE837
0x31CC	0xE202      	BC          L__transicionE837
0x31CE	0x9001      	BCF         R1, 0 
0x31D0	0xD001      	BRA         L__transicionE838
L__transicionE837:
0x31D2	0x8001      	BSF         R1, 0 
L__transicionE838:
0x31D4	0xA883      	BTFSS       PORTD, 4 
0x31D6	0xD004      	BRA         L__transicionE839
0x31D8	0xA281      	BTFSS       PORTB, 1 
0x31DA	0xD002      	BRA         L__transicionE839
0x31DC	0x80D8      	BSF         STATUS, 0 
0x31DE	0xD001      	BRA         L__transicionE840
L__transicionE839:
0x31E0	0x90D8      	BCF         STATUS, 0 
L__transicionE840:
0x31E2	0xB001      	BTFSC       R1, 0 
0x31E4	0xD003      	BRA         L__transicionE841
0x31E6	0xE202      	BC          L__transicionE841
0x31E8	0x9001      	BCF         R1, 0 
0x31EA	0xD001      	BRA         L__transicionE842
L__transicionE841:
0x31EC	0x8001      	BSF         R1, 0 
L__transicionE842:
0x31EE	0xA001      	BTFSS       R1, 0 
0x31F0	0xD006      	BRA         L_transicionE194
;rutinasensores_v4(mstr-slv).h,507 :: 		return debugEstado = ENTRANDO;
0x31F2	0x0100      	MOVLB       0
0x31F4	0x0E01      	MOVLW       1
0x31F6	0x6FE4      	MOVWF       _debugEstado, 1
0x31F8	0x0E01      	MOVLW       1
0x31FA	0x6E00      	MOVWF       R0 
0x31FC	0xD000      	BRA         L_end_transicionE
;rutinasensores_v4(mstr-slv).h,508 :: 		}
L_transicionE194:
;rutinasensores_v4(mstr-slv).h,509 :: 		}
L_transicionE192:
;rutinasensores_v4(mstr-slv).h,510 :: 		}
L_end_transicionE:
0x31FE	0x0012      	RETURN      0
; end of _transicionE
_salioBS:
;rutinasensores_v4(mstr-slv).h,1470 :: 		short salioBS(short estado){
;rutinasensores_v4(mstr-slv).h,1471 :: 		if(estado == SALIO){
0x3200	0x0102      	MOVLB       2
0x3202	0x5114      	MOVF        FARG_salioBS_estado, 0, 1
0x3204	0x0A06      	XORLW       6
0x3206	0xA4D8      	BTFSS       STATUS, 2 
0x3208	0xD11A      	BRA         L_salioBS359
;rutinasensores_v4(mstr-slv).h,1472 :: 		LCD_OUTCONST(3,1,"GRACIAS!");
0x320A	0x0E03      	MOVLW       3
0x320C	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x320E	0x0E01      	MOVLW       1
0x3210	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x3212	0x0ED1      	MOVLW       ?lstr_63_MyProject
0x3214	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x3216	0x0ED9      	MOVLW       hi_addr(?lstr_63_MyProject)
0x3218	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x321A	0x0E00      	MOVLW       higher_addr(?lstr_63_MyProject)
0x321C	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x321E	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1473 :: 		pSuben = eepromLeeNumero(0x0000, 2);
0x3222	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x3224	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x3226	0x0E02      	MOVLW       2
0x3228	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x322A	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x322E	0xF137C000  	MOVFF       R0, _pSuben
0x3232	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,1474 :: 		pBajan = eepromLeeNumero(0x0003, 2) + 1;
0x3236	0x0E03      	MOVLW       3
0x3238	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x323A	0x0E00      	MOVLW       0
0x323C	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x323E	0x0E02      	MOVLW       2
0x3240	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x3242	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x3246	0x4A00      	INFSNZ      R0, 1 
0x3248	0x2A01      	INCF        R1, 1 
0x324A	0xF135C000  	MOVFF       R0, _pBajan
0x324E	0xF136C001  	MOVFF       R1, _pBajan+1
;rutinasensores_v4(mstr-slv).h,1475 :: 		eepromEscribeNumero(0x0003 ,pBajan, 2);
0x3252	0x0E03      	MOVLW       3
0x3254	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x3256	0x0E00      	MOVLW       0
0x3258	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x325A	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x325E	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x3262	0x0E00      	MOVLW       0
0x3264	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x3266	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x3268	0x0E02      	MOVLW       2
0x326A	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x326C	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,1476 :: 		pBajan = eepromLeeNumero(0x0003, 2);
0x3270	0x0E03      	MOVLW       3
0x3272	0x0102      	MOVLB       2
0x3274	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x3276	0x0E00      	MOVLW       0
0x3278	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x327A	0x0E02      	MOVLW       2
0x327C	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x327E	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x3282	0xF219C000  	MOVFF       R0, FLOC__salioBS+4
0x3286	0xF21AC001  	MOVFF       R1, FLOC__salioBS+5
0x328A	0xF21BC002  	MOVFF       R2, FLOC__salioBS+6
0x328E	0xF21CC003  	MOVFF       R3, FLOC__salioBS+7
0x3292	0xF135C219  	MOVFF       FLOC__salioBS+4, _pBajan
0x3296	0xF136C21A  	MOVFF       FLOC__salioBS+5, _pBajan+1
;rutinasensores_v4(mstr-slv).h,1477 :: 		pasajerosVerdaderos = ((float)pSuben + (float)pBajan)/2;
0x329A	0xF000C137  	MOVFF       _pSuben, R0
0x329E	0xF001C138  	MOVFF       _pSuben+1, R1
0x32A2	0xF008EC65  	CALL        _Word2Double, 0
0x32A6	0xF215C000  	MOVFF       R0, FLOC__salioBS
0x32AA	0xF216C001  	MOVFF       R1, FLOC__salioBS+1
0x32AE	0xF217C002  	MOVFF       R2, FLOC__salioBS+2
0x32B2	0xF218C003  	MOVFF       R3, FLOC__salioBS+3
0x32B6	0xF000C219  	MOVFF       FLOC__salioBS+4, R0
0x32BA	0xF001C21A  	MOVFF       FLOC__salioBS+5, R1
0x32BE	0xF008EC65  	CALL        _Word2Double, 0
0x32C2	0xF004C215  	MOVFF       FLOC__salioBS, R4
0x32C6	0xF005C216  	MOVFF       FLOC__salioBS+1, R5
0x32CA	0xF006C217  	MOVFF       FLOC__salioBS+2, R6
0x32CE	0xF007C218  	MOVFF       FLOC__salioBS+3, R7
0x32D2	0xF004EC8D  	CALL        _Add_32x32_FP, 0
0x32D6	0x0E00      	MOVLW       0
0x32D8	0x6E04      	MOVWF       R4 
0x32DA	0x0E00      	MOVLW       0
0x32DC	0x6E05      	MOVWF       R5 
0x32DE	0x0E00      	MOVLW       0
0x32E0	0x6E06      	MOVWF       R6 
0x32E2	0x0E80      	MOVLW       128
0x32E4	0x6E07      	MOVWF       R7 
0x32E6	0xF007ECA7  	CALL        _Div_32x32_FP, 0
0x32EA	0xF139C000  	MOVFF       R0, _pasajerosVerdaderos
0x32EE	0xF13AC001  	MOVFF       R1, _pasajerosVerdaderos+1
0x32F2	0xF13BC002  	MOVFF       R2, _pasajerosVerdaderos+2
0x32F6	0xF13CC003  	MOVFF       R3, _pasajerosVerdaderos+3
;rutinasensores_v4(mstr-slv).h,1478 :: 		eepromEscribeNumero(0x0009, (unsigned int)pasajerosVerdaderos, 2);
0x32FA	0x0E09      	MOVLW       9
0x32FC	0x0102      	MOVLB       2
0x32FE	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x3300	0x0E00      	MOVLW       0
0x3302	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x3304	0xF006ECA0  	CALL        _Double2Word, 0
0x3308	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x330C	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x3310	0x0E00      	MOVLW       0
0x3312	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x3314	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x3316	0x0E02      	MOVLW       2
0x3318	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x331A	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,1479 :: 		if(MSTR){
0x331E	0xA483      	BTFSS       PORTD, 2 
0x3320	0xD085      	BRA         L_salioBS360
;rutinasensores_v4(mstr-slv).h,1480 :: 		pVerdaderosMEntero = eepromLeeNumero(0x0009, 2);
0x3322	0x0E09      	MOVLW       9
0x3324	0x0102      	MOVLB       2
0x3326	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x3328	0x0E00      	MOVLW       0
0x332A	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x332C	0x0E02      	MOVLW       2
0x332E	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x3330	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x3334	0xF12FC000  	MOVFF       R0, _pVerdaderosMEntero
0x3338	0xF130C001  	MOVFF       R1, _pVerdaderosMEntero+1
;rutinasensores_v4(mstr-slv).h,1481 :: 		pVerdaderosEEntero = eepromLeeNumero(0x0007, 2);
0x333C	0x0E07      	MOVLW       7
0x333E	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x3340	0x0E00      	MOVLW       0
0x3342	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x3344	0x0E02      	MOVLW       2
0x3346	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x3348	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x334C	0xF12DC000  	MOVFF       R0, _pVerdaderosEEntero
0x3350	0xF12EC001  	MOVFF       R1, _pVerdaderosEEntero+1
;rutinasensores_v4(mstr-slv).h,1482 :: 		pasajerosTotalesL = pVerdaderosMEntero + pVerdaderosEEntero;
0x3354	0x5000      	MOVF        R0, 0 
0x3356	0x0101      	MOVLB       1
0x3358	0x252F      	ADDWF       _pVerdaderosMEntero, 0, 1
0x335A	0x6F33      	MOVWF       _pasajerosTotalesL, 1
0x335C	0x5001      	MOVF        R1, 0 
0x335E	0x2130      	ADDWFC      _pVerdaderosMEntero+1, 0, 1
0x3360	0x6F34      	MOVWF       _pasajerosTotalesL+1, 1
;rutinasensores_v4(mstr-slv).h,1483 :: 		totalCalculado = (eepromLeeNumero(0x0000, 2)+eepromLeeNumero(0x0003, 2)+eepromLeeNumero(0x0900, 2)+eepromLeeNumero(0x0700, 2))/2;
0x3362	0x0102      	MOVLB       2
0x3364	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x3366	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x3368	0x0E02      	MOVLW       2
0x336A	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x336C	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x3370	0xF215C000  	MOVFF       R0, FLOC__salioBS
0x3374	0xF216C001  	MOVFF       R1, FLOC__salioBS+1
0x3378	0xF217C002  	MOVFF       R2, FLOC__salioBS+2
0x337C	0xF218C003  	MOVFF       R3, FLOC__salioBS+3
0x3380	0x0E03      	MOVLW       3
0x3382	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x3384	0x0E00      	MOVLW       0
0x3386	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x3388	0x0E02      	MOVLW       2
0x338A	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x338C	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x3390	0x5000      	MOVF        R0, 0 
0x3392	0x2715      	ADDWF       FLOC__salioBS, 1, 1
0x3394	0x5001      	MOVF        R1, 0 
0x3396	0x2316      	ADDWFC      FLOC__salioBS+1, 1, 1
0x3398	0x5002      	MOVF        R2, 0 
0x339A	0x2317      	ADDWFC      FLOC__salioBS+2, 1, 1
0x339C	0x5003      	MOVF        R3, 0 
0x339E	0x2318      	ADDWFC      FLOC__salioBS+3, 1, 1
0x33A0	0x0E00      	MOVLW       0
0x33A2	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x33A4	0x0E09      	MOVLW       9
0x33A6	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x33A8	0x0E02      	MOVLW       2
0x33AA	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x33AC	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x33B0	0x5000      	MOVF        R0, 0 
0x33B2	0x2715      	ADDWF       FLOC__salioBS, 1, 1
0x33B4	0x5001      	MOVF        R1, 0 
0x33B6	0x2316      	ADDWFC      FLOC__salioBS+1, 1, 1
0x33B8	0x5002      	MOVF        R2, 0 
0x33BA	0x2317      	ADDWFC      FLOC__salioBS+2, 1, 1
0x33BC	0x5003      	MOVF        R3, 0 
0x33BE	0x2318      	ADDWFC      FLOC__salioBS+3, 1, 1
0x33C0	0x0E00      	MOVLW       0
0x33C2	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x33C4	0x0E07      	MOVLW       7
0x33C6	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x33C8	0x0E02      	MOVLW       2
0x33CA	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x33CC	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x33D0	0x5000      	MOVF        R0, 0 
0x33D2	0x2515      	ADDWF       FLOC__salioBS, 0, 1
0x33D4	0x6E05      	MOVWF       R5 
0x33D6	0x5001      	MOVF        R1, 0 
0x33D8	0x2116      	ADDWFC      FLOC__salioBS+1, 0, 1
0x33DA	0x6E06      	MOVWF       R6 
0x33DC	0x5002      	MOVF        R2, 0 
0x33DE	0x2117      	ADDWFC      FLOC__salioBS+2, 0, 1
0x33E0	0x6E07      	MOVWF       R7 
0x33E2	0x5003      	MOVF        R3, 0 
0x33E4	0x2118      	ADDWFC      FLOC__salioBS+3, 0, 1
0x33E6	0x6E08      	MOVWF       R8 
0x33E8	0xF000C005  	MOVFF       R5, R0
0x33EC	0xF001C006  	MOVFF       R6, R1
0x33F0	0xF002C007  	MOVFF       R7, R2
0x33F4	0xF003C008  	MOVFF       R8, R3
0x33F8	0x3203      	RRCF        R3, 1 
0x33FA	0x3202      	RRCF        R2, 1 
0x33FC	0x3201      	RRCF        R1, 1 
0x33FE	0x3200      	RRCF        R0, 1 
0x3400	0x9E03      	BCF         R3, 7 
0x3402	0xBC03      	BTFSC       R3, 6 
0x3404	0x8E03      	BSF         R3, 7 
0x3406	0xF131C000  	MOVFF       R0, _totalCalculado
0x340A	0xF132C001  	MOVFF       R1, _totalCalculado+1
;rutinasensores_v4(mstr-slv).h,1484 :: 		eepromEscribeNumero(0x0005, totalCalculado, 2);
0x340E	0x0E05      	MOVLW       5
0x3410	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x3412	0x0E00      	MOVLW       0
0x3414	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x3416	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x341A	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x341E	0x0E00      	MOVLW       0
0x3420	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x3422	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x3424	0x0E02      	MOVLW       2
0x3426	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x3428	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,1485 :: 		}
L_salioBS360:
;rutinasensores_v4(mstr-slv).h,1486 :: 		lcd_cmd(_LCD_CLEAR);
0x342C	0x0E01      	MOVLW       1
0x342E	0x0102      	MOVLB       2
0x3430	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x3432	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1487 :: 		return debugEstadoB = ESPERA;
0x3436	0x0101      	MOVLB       1
0x3438	0x6B3D      	CLRF        _debugEstadoB, 1
0x343A	0x6A00      	CLRF        R0 
0x343C	0xD000      	BRA         L_end_salioBS
;rutinasensores_v4(mstr-slv).h,1488 :: 		}
L_salioBS359:
;rutinasensores_v4(mstr-slv).h,1489 :: 		}
L_end_salioBS:
0x343E	0x0012      	RETURN      0
; end of _salioBS
_transicionSal:
;rutinasensores_v4(mstr-slv).h,585 :: 		short transicionSal(short estado){
;rutinasensores_v4(mstr-slv).h,586 :: 		if(estado == TRANSAL){
0x3440	0x0102      	MOVLB       2
0x3442	0x5114      	MOVF        FARG_transicionSal_estado, 0, 1
0x3444	0x0A05      	XORLW       5
0x3446	0xA4D8      	BTFSS       STATUS, 2 
0x3448	0xD065      	BRA         L_transicionSal206
;rutinasensores_v4(mstr-slv).h,587 :: 		LCD_OUTCONST(3,1,"TRANSICION SALIDA");
0x344A	0x0E03      	MOVLW       3
0x344C	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x344E	0x0E01      	MOVLW       1
0x3450	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x3452	0x0E68      	MOVLW       ?lstr_14_MyProject
0x3454	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x3456	0x0ED6      	MOVLW       hi_addr(?lstr_14_MyProject)
0x3458	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x345A	0x0E00      	MOVLW       higher_addr(?lstr_14_MyProject)
0x345C	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x345E	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,588 :: 		comienzaContarAtasco = true;
0x3462	0x0E01      	MOVLW       1
0x3464	0x0100      	MOVLB       0
0x3466	0x6FDF      	MOVWF       _comienzaContarAtasco, 1
;rutinasensores_v4(mstr-slv).h,589 :: 		if( (!SENSOR2&!SENSOR4) | (!SENSOR4&!SENSOR6) | (!SENSOR2& !SENSOR6)
0x3468	0xB883      	BTFSC       PORTD, 4 
0x346A	0xD002      	BRA         L__transicionSal934
0x346C	0x8601      	BSF         R1, 3 
0x346E	0xD001      	BRA         L__transicionSal935
L__transicionSal934:
0x3470	0x9601      	BCF         R1, 3 
L__transicionSal935:
0x3472	0xB681      	BTFSC       PORTB, 3 
0x3474	0xD002      	BRA         L__transicionSal936
0x3476	0x8001      	BSF         R1, 0 
0x3478	0xD001      	BRA         L__transicionSal937
L__transicionSal936:
0x347A	0x9001      	BCF         R1, 0 
L__transicionSal937:
0x347C	0xA601      	BTFSS       R1, 3 
0x347E	0xD004      	BRA         L__transicionSal938
0x3480	0xA001      	BTFSS       R1, 0 
0x3482	0xD002      	BRA         L__transicionSal938
0x3484	0x8201      	BSF         R1, 1 
0x3486	0xD001      	BRA         L__transicionSal939
L__transicionSal938:
0x3488	0x9201      	BCF         R1, 1 
L__transicionSal939:
0x348A	0xB281      	BTFSC       PORTB, 1 
0x348C	0xD002      	BRA         L__transicionSal940
0x348E	0x8401      	BSF         R1, 2 
0x3490	0xD001      	BRA         L__transicionSal941
L__transicionSal940:
0x3492	0x9401      	BCF         R1, 2 
L__transicionSal941:
0x3494	0xA001      	BTFSS       R1, 0 
0x3496	0xD004      	BRA         L__transicionSal942
0x3498	0xA401      	BTFSS       R1, 2 
0x349A	0xD002      	BRA         L__transicionSal942
0x349C	0x80D8      	BSF         STATUS, 0 
0x349E	0xD001      	BRA         L__transicionSal943
L__transicionSal942:
0x34A0	0x90D8      	BCF         STATUS, 0 
L__transicionSal943:
0x34A2	0xB201      	BTFSC       R1, 1 
0x34A4	0xD003      	BRA         L__transicionSal944
0x34A6	0xE202      	BC          L__transicionSal944
0x34A8	0x9201      	BCF         R1, 1 
0x34AA	0xD001      	BRA         L__transicionSal945
L__transicionSal944:
0x34AC	0x8201      	BSF         R1, 1 
L__transicionSal945:
0x34AE	0xB601      	BTFSC       R1, 3 
0x34B0	0xD002      	BRA         L__transicionSal946
0x34B2	0x9001      	BCF         R1, 0 
0x34B4	0xD001      	BRA         L__transicionSal947
L__transicionSal946:
0x34B6	0x8001      	BSF         R1, 0 
L__transicionSal947:
0x34B8	0xB401      	BTFSC       R1, 2 
0x34BA	0xD002      	BRA         L__transicionSal948
0x34BC	0x90D8      	BCF         STATUS, 0 
0x34BE	0xD001      	BRA         L__transicionSal949
L__transicionSal948:
0x34C0	0x80D8      	BSF         STATUS, 0 
L__transicionSal949:
0x34C2	0xA001      	BTFSS       R1, 0 
0x34C4	0xD003      	BRA         L__transicionSal950
0x34C6	0xE302      	BNC         L__transicionSal950
0x34C8	0x8001      	BSF         R1, 0 
0x34CA	0xD001      	BRA         L__transicionSal951
L__transicionSal950:
0x34CC	0x9001      	BCF         R1, 0 
L__transicionSal951:
0x34CE	0xB201      	BTFSC       R1, 1 
0x34D0	0xD004      	BRA         L__transicionSal952
0x34D2	0xB001      	BTFSC       R1, 0 
0x34D4	0xD002      	BRA         L__transicionSal952
0x34D6	0x90D8      	BCF         STATUS, 0 
0x34D8	0xD001      	BRA         L__transicionSal953
L__transicionSal952:
0x34DA	0x80D8      	BSF         STATUS, 0 
L__transicionSal953:
;rutinasensores_v4(mstr-slv).h,591 :: 		){
0x34DC	0xE306      	BNC         L_transicionSal207
;rutinasensores_v4(mstr-slv).h,592 :: 		return debugEstado =TRANSICIONS;
0x34DE	0x0100      	MOVLB       0
0x34E0	0x0E08      	MOVLW       8
0x34E2	0x6FE4      	MOVWF       _debugEstado, 1
0x34E4	0x0E08      	MOVLW       8
0x34E6	0x6E00      	MOVWF       R0 
0x34E8	0xD015      	BRA         L_end_transicionSal
;rutinasensores_v4(mstr-slv).h,593 :: 		}
L_transicionSal207:
;rutinasensores_v4(mstr-slv).h,594 :: 		if(SENSOR1 & SENSOR3 & SENSOR5 ){
0x34EA	0xA881      	BTFSS       PORTB, 4 
0x34EC	0xD004      	BRA         L__transicionSal954
0x34EE	0xA481      	BTFSS       PORTB, 2 
0x34F0	0xD002      	BRA         L__transicionSal954
0x34F2	0x80D8      	BSF         STATUS, 0 
0x34F4	0xD001      	BRA         L__transicionSal955
L__transicionSal954:
0x34F6	0x90D8      	BCF         STATUS, 0 
L__transicionSal955:
0x34F8	0xE304      	BNC         L__transicionSal956
0x34FA	0xA081      	BTFSS       PORTB, 0 
0x34FC	0xD002      	BRA         L__transicionSal956
0x34FE	0x8001      	BSF         R1, 0 
0x3500	0xD001      	BRA         L__transicionSal957
L__transicionSal956:
0x3502	0x9001      	BCF         R1, 0 
L__transicionSal957:
0x3504	0xA001      	BTFSS       R1, 0 
0x3506	0xD006      	BRA         L_transicionSal208
;rutinasensores_v4(mstr-slv).h,596 :: 		return debugEstado = SALIO;
0x3508	0x0100      	MOVLB       0
0x350A	0x0E06      	MOVLW       6
0x350C	0x6FE4      	MOVWF       _debugEstado, 1
0x350E	0x0E06      	MOVLW       6
0x3510	0x6E00      	MOVWF       R0 
0x3512	0xD000      	BRA         L_end_transicionSal
;rutinasensores_v4(mstr-slv).h,597 :: 		}
L_transicionSal208:
;rutinasensores_v4(mstr-slv).h,598 :: 		}
L_transicionSal206:
;rutinasensores_v4(mstr-slv).h,599 :: 		}
L_end_transicionSal:
0x3514	0x0012      	RETURN      0
; end of _transicionSal
_saliendo:
;rutinasensores_v4(mstr-slv).h,552 :: 		short saliendo(short estado){
;rutinasensores_v4(mstr-slv).h,553 :: 		if(estado == SALIENDO){
0x3516	0x0102      	MOVLB       2
0x3518	0x5114      	MOVF        FARG_saliendo_estado, 0, 1
0x351A	0x0A04      	XORLW       4
0x351C	0xA4D8      	BTFSS       STATUS, 2 
0x351E	0xD096      	BRA         L_saliendo200
;rutinasensores_v4(mstr-slv).h,554 :: 		lcd_outConst(3, 1, "SALIENDO");
0x3520	0x0E03      	MOVLW       3
0x3522	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x3524	0x0E01      	MOVLW       1
0x3526	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x3528	0x0EC8      	MOVLW       ?lstr_12_MyProject
0x352A	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x352C	0x0ED9      	MOVLW       hi_addr(?lstr_12_MyProject)
0x352E	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x3530	0x0E00      	MOVLW       higher_addr(?lstr_12_MyProject)
0x3532	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x3534	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,555 :: 		if( (!SENSOR1 | !SENSOR3 | !SENSOR5)&((!SENSOR2 & !SENSOR4)|(!SENSOR4&!SENSOR6)|(!SENSOR2&!SENSOR6))
0x3538	0xB881      	BTFSC       PORTB, 4 
0x353A	0xD002      	BRA         L__saliendo870
0x353C	0x8001      	BSF         R1, 0 
0x353E	0xD001      	BRA         L__saliendo871
L__saliendo870:
0x3540	0x9001      	BCF         R1, 0 
L__saliendo871:
0x3542	0xB481      	BTFSC       PORTB, 2 
0x3544	0xD002      	BRA         L__saliendo872
0x3546	0x80D8      	BSF         STATUS, 0 
0x3548	0xD001      	BRA         L__saliendo873
L__saliendo872:
0x354A	0x90D8      	BCF         STATUS, 0 
L__saliendo873:
0x354C	0xB001      	BTFSC       R1, 0 
0x354E	0xD003      	BRA         L__saliendo874
0x3550	0xE202      	BC          L__saliendo874
0x3552	0x9001      	BCF         R1, 0 
0x3554	0xD001      	BRA         L__saliendo875
L__saliendo874:
0x3556	0x8001      	BSF         R1, 0 
L__saliendo875:
0x3558	0xB081      	BTFSC       PORTB, 0 
0x355A	0xD002      	BRA         L__saliendo876
0x355C	0x80D8      	BSF         STATUS, 0 
0x355E	0xD001      	BRA         L__saliendo877
L__saliendo876:
0x3560	0x90D8      	BCF         STATUS, 0 
L__saliendo877:
0x3562	0xB001      	BTFSC       R1, 0 
0x3564	0xD003      	BRA         L__saliendo878
0x3566	0xE202      	BC          L__saliendo878
0x3568	0x9801      	BCF         R1, 4 
0x356A	0xD001      	BRA         L__saliendo879
L__saliendo878:
0x356C	0x8801      	BSF         R1, 4 
L__saliendo879:
0x356E	0xB883      	BTFSC       PORTD, 4 
0x3570	0xD002      	BRA         L__saliendo880
0x3572	0x8601      	BSF         R1, 3 
0x3574	0xD001      	BRA         L__saliendo881
L__saliendo880:
0x3576	0x9601      	BCF         R1, 3 
L__saliendo881:
0x3578	0xB681      	BTFSC       PORTB, 3 
0x357A	0xD002      	BRA         L__saliendo882
0x357C	0x8001      	BSF         R1, 0 
0x357E	0xD001      	BRA         L__saliendo883
L__saliendo882:
0x3580	0x9001      	BCF         R1, 0 
L__saliendo883:
0x3582	0xA601      	BTFSS       R1, 3 
0x3584	0xD004      	BRA         L__saliendo884
0x3586	0xA001      	BTFSS       R1, 0 
0x3588	0xD002      	BRA         L__saliendo884
0x358A	0x8201      	BSF         R1, 1 
0x358C	0xD001      	BRA         L__saliendo885
L__saliendo884:
0x358E	0x9201      	BCF         R1, 1 
L__saliendo885:
0x3590	0xB281      	BTFSC       PORTB, 1 
0x3592	0xD002      	BRA         L__saliendo886
0x3594	0x8401      	BSF         R1, 2 
0x3596	0xD001      	BRA         L__saliendo887
L__saliendo886:
0x3598	0x9401      	BCF         R1, 2 
L__saliendo887:
0x359A	0xA001      	BTFSS       R1, 0 
0x359C	0xD004      	BRA         L__saliendo888
0x359E	0xA401      	BTFSS       R1, 2 
0x35A0	0xD002      	BRA         L__saliendo888
0x35A2	0x80D8      	BSF         STATUS, 0 
0x35A4	0xD001      	BRA         L__saliendo889
L__saliendo888:
0x35A6	0x90D8      	BCF         STATUS, 0 
L__saliendo889:
0x35A8	0xB201      	BTFSC       R1, 1 
0x35AA	0xD003      	BRA         L__saliendo890
0x35AC	0xE202      	BC          L__saliendo890
0x35AE	0x9201      	BCF         R1, 1 
0x35B0	0xD001      	BRA         L__saliendo891
L__saliendo890:
0x35B2	0x8201      	BSF         R1, 1 
L__saliendo891:
0x35B4	0xB601      	BTFSC       R1, 3 
0x35B6	0xD002      	BRA         L__saliendo892
0x35B8	0x9001      	BCF         R1, 0 
0x35BA	0xD001      	BRA         L__saliendo893
L__saliendo892:
0x35BC	0x8001      	BSF         R1, 0 
L__saliendo893:
0x35BE	0xB401      	BTFSC       R1, 2 
0x35C0	0xD002      	BRA         L__saliendo894
0x35C2	0x90D8      	BCF         STATUS, 0 
0x35C4	0xD001      	BRA         L__saliendo895
L__saliendo894:
0x35C6	0x80D8      	BSF         STATUS, 0 
L__saliendo895:
0x35C8	0xA001      	BTFSS       R1, 0 
0x35CA	0xD003      	BRA         L__saliendo896
0x35CC	0xE302      	BNC         L__saliendo896
0x35CE	0x8001      	BSF         R1, 0 
0x35D0	0xD001      	BRA         L__saliendo897
L__saliendo896:
0x35D2	0x9001      	BCF         R1, 0 
L__saliendo897:
0x35D4	0xB201      	BTFSC       R1, 1 
0x35D6	0xD004      	BRA         L__saliendo898
0x35D8	0xB001      	BTFSC       R1, 0 
0x35DA	0xD002      	BRA         L__saliendo898
0x35DC	0x90D8      	BCF         STATUS, 0 
0x35DE	0xD001      	BRA         L__saliendo899
L__saliendo898:
0x35E0	0x80D8      	BSF         STATUS, 0 
L__saliendo899:
0x35E2	0xA801      	BTFSS       R1, 4 
0x35E4	0xD003      	BRA         L__saliendo900
0x35E6	0xE302      	BNC         L__saliendo900
0x35E8	0x8001      	BSF         R1, 0 
0x35EA	0xD001      	BRA         L__saliendo901
L__saliendo900:
0x35EC	0x9001      	BCF         R1, 0 
L__saliendo901:
;rutinasensores_v4(mstr-slv).h,556 :: 		){
0x35EE	0xA001      	BTFSS       R1, 0 
0x35F0	0xD006      	BRA         L_saliendo201
;rutinasensores_v4(mstr-slv).h,557 :: 		return debugEstado = TRANSICIONS;
0x35F2	0x0E08      	MOVLW       8
0x35F4	0x0100      	MOVLB       0
0x35F6	0x6FE4      	MOVWF       _debugEstado, 1
0x35F8	0x0E08      	MOVLW       8
0x35FA	0x6E00      	MOVWF       R0 
0x35FC	0xD027      	BRA         L_end_saliendo
;rutinasensores_v4(mstr-slv).h,558 :: 		}
L_saliendo201:
;rutinasensores_v4(mstr-slv).h,559 :: 		if((SENSOR2&SENSOR4) | (SENSOR4&SENSOR6) | (SENSOR2&SENSOR6)){
0x35FE	0xA883      	BTFSS       PORTD, 4 
0x3600	0xD004      	BRA         L__saliendo902
0x3602	0xA681      	BTFSS       PORTB, 3 
0x3604	0xD002      	BRA         L__saliendo902
0x3606	0x8001      	BSF         R1, 0 
0x3608	0xD001      	BRA         L__saliendo903
L__saliendo902:
0x360A	0x9001      	BCF         R1, 0 
L__saliendo903:
0x360C	0xA681      	BTFSS       PORTB, 3 
0x360E	0xD004      	BRA         L__saliendo904
0x3610	0xA281      	BTFSS       PORTB, 1 
0x3612	0xD002      	BRA         L__saliendo904
0x3614	0x80D8      	BSF         STATUS, 0 
0x3616	0xD001      	BRA         L__saliendo905
L__saliendo904:
0x3618	0x90D8      	BCF         STATUS, 0 
L__saliendo905:
0x361A	0xB001      	BTFSC       R1, 0 
0x361C	0xD003      	BRA         L__saliendo906
0x361E	0xE202      	BC          L__saliendo906
0x3620	0x9001      	BCF         R1, 0 
0x3622	0xD001      	BRA         L__saliendo907
L__saliendo906:
0x3624	0x8001      	BSF         R1, 0 
L__saliendo907:
0x3626	0xA883      	BTFSS       PORTD, 4 
0x3628	0xD004      	BRA         L__saliendo908
0x362A	0xA281      	BTFSS       PORTB, 1 
0x362C	0xD002      	BRA         L__saliendo908
0x362E	0x80D8      	BSF         STATUS, 0 
0x3630	0xD001      	BRA         L__saliendo909
L__saliendo908:
0x3632	0x90D8      	BCF         STATUS, 0 
L__saliendo909:
0x3634	0xB001      	BTFSC       R1, 0 
0x3636	0xD003      	BRA         L__saliendo910
0x3638	0xE202      	BC          L__saliendo910
0x363A	0x9001      	BCF         R1, 0 
0x363C	0xD001      	BRA         L__saliendo911
L__saliendo910:
0x363E	0x8001      	BSF         R1, 0 
L__saliendo911:
0x3640	0xA001      	BTFSS       R1, 0 
0x3642	0xD004      	BRA         L_saliendo202
;rutinasensores_v4(mstr-slv).h,561 :: 		return debugEstado = ESPERA;
0x3644	0x0100      	MOVLB       0
0x3646	0x6BE4      	CLRF        _debugEstado, 1
0x3648	0x6A00      	CLRF        R0 
0x364A	0xD000      	BRA         L_end_saliendo
;rutinasensores_v4(mstr-slv).h,562 :: 		}
L_saliendo202:
;rutinasensores_v4(mstr-slv).h,563 :: 		}
L_saliendo200:
;rutinasensores_v4(mstr-slv).h,564 :: 		}
L_end_saliendo:
0x364C	0x0012      	RETURN      0
; end of _saliendo
_entro:
;rutinasensores_v4(mstr-slv).h,526 :: 		short entro(short estado){
;rutinasensores_v4(mstr-slv).h,527 :: 		if(estado == ENTRO){
0x364E	0x0102      	MOVLB       2
0x3650	0x5114      	MOVF        FARG_entro_estado, 0, 1
0x3652	0x0A03      	XORLW       3
0x3654	0xA4D8      	BTFSS       STATUS, 2 
0x3656	0xD10C      	BRA         L_entro198
;rutinasensores_v4(mstr-slv).h,528 :: 		LCD_OUTCONST(3,1,"BIENVENIDO: $6.00");
0x3658	0x0E03      	MOVLW       3
0x365A	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x365C	0x0E01      	MOVLW       1
0x365E	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x3660	0x0E7A      	MOVLW       ?lstr_11_MyProject
0x3662	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x3664	0x0ED6      	MOVLW       hi_addr(?lstr_11_MyProject)
0x3666	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x3668	0x0E00      	MOVLW       higher_addr(?lstr_11_MyProject)
0x366A	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x366C	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,530 :: 		pBajan = eepromLeeNumero(0x0003,2);
0x3670	0x0E03      	MOVLW       3
0x3672	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x3674	0x0E00      	MOVLW       0
0x3676	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x3678	0x0E02      	MOVLW       2
0x367A	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x367C	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x3680	0xF135C000  	MOVFF       R0, _pBajan
0x3684	0xF136C001  	MOVFF       R1, _pBajan+1
;rutinasensores_v4(mstr-slv).h,531 :: 		pSuben = eepromLeeNumero(0x0000,2) + 1;
0x3688	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x368A	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x368C	0x0E02      	MOVLW       2
0x368E	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x3690	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x3694	0x4A00      	INFSNZ      R0, 1 
0x3696	0x2A01      	INCF        R1, 1 
0x3698	0xF137C000  	MOVFF       R0, _pSuben
0x369C	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,532 :: 		eepromEscribeNumero(0x0000,pSuben,2);
0x36A0	0x6B1D      	CLRF        FARG_eepromEscribeNumero_Registro, 1
0x36A2	0x6B1E      	CLRF        FARG_eepromEscribeNumero_Registro+1, 1
0x36A4	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x36A8	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x36AC	0x0E00      	MOVLW       0
0x36AE	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x36B0	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x36B2	0x0E02      	MOVLW       2
0x36B4	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x36B6	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,533 :: 		pSuben = eepromLeeNumero(0x0000, 2);
0x36BA	0x0102      	MOVLB       2
0x36BC	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x36BE	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x36C0	0x0E02      	MOVLW       2
0x36C2	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x36C4	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x36C8	0xF137C000  	MOVFF       R0, _pSuben
0x36CC	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,534 :: 		pasajerosVerdaderos = ((float)pSuben + (float)pBajan)/2;
0x36D0	0xF008EC65  	CALL        _Word2Double, 0
0x36D4	0xF215C000  	MOVFF       R0, FLOC__entro
0x36D8	0xF216C001  	MOVFF       R1, FLOC__entro+1
0x36DC	0xF217C002  	MOVFF       R2, FLOC__entro+2
0x36E0	0xF218C003  	MOVFF       R3, FLOC__entro+3
0x36E4	0xF000C135  	MOVFF       _pBajan, R0
0x36E8	0xF001C136  	MOVFF       _pBajan+1, R1
0x36EC	0xF008EC65  	CALL        _Word2Double, 0
0x36F0	0xF004C215  	MOVFF       FLOC__entro, R4
0x36F4	0xF005C216  	MOVFF       FLOC__entro+1, R5
0x36F8	0xF006C217  	MOVFF       FLOC__entro+2, R6
0x36FC	0xF007C218  	MOVFF       FLOC__entro+3, R7
0x3700	0xF004EC8D  	CALL        _Add_32x32_FP, 0
0x3704	0x0E00      	MOVLW       0
0x3706	0x6E04      	MOVWF       R4 
0x3708	0x0E00      	MOVLW       0
0x370A	0x6E05      	MOVWF       R5 
0x370C	0x0E00      	MOVLW       0
0x370E	0x6E06      	MOVWF       R6 
0x3710	0x0E80      	MOVLW       128
0x3712	0x6E07      	MOVWF       R7 
0x3714	0xF007ECA7  	CALL        _Div_32x32_FP, 0
0x3718	0xF139C000  	MOVFF       R0, _pasajerosVerdaderos
0x371C	0xF13AC001  	MOVFF       R1, _pasajerosVerdaderos+1
0x3720	0xF13BC002  	MOVFF       R2, _pasajerosVerdaderos+2
0x3724	0xF13CC003  	MOVFF       R3, _pasajerosVerdaderos+3
;rutinasensores_v4(mstr-slv).h,535 :: 		eepromEscribeNumero(0x0009, (unsigned int)pasajerosVerdaderos, 2);
0x3728	0x0E09      	MOVLW       9
0x372A	0x0102      	MOVLB       2
0x372C	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x372E	0x0E00      	MOVLW       0
0x3730	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x3732	0xF006ECA0  	CALL        _Double2Word, 0
0x3736	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x373A	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x373E	0x0E00      	MOVLW       0
0x3740	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x3742	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x3744	0x0E02      	MOVLW       2
0x3746	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x3748	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,536 :: 		if(MSTR){
0x374C	0xA483      	BTFSS       PORTD, 2 
0x374E	0xD085      	BRA         L_entro199
;rutinasensores_v4(mstr-slv).h,537 :: 		pVerdaderosMEntero = eepromLeeNumero(0x0009, 2);
0x3750	0x0E09      	MOVLW       9
0x3752	0x0102      	MOVLB       2
0x3754	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x3756	0x0E00      	MOVLW       0
0x3758	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x375A	0x0E02      	MOVLW       2
0x375C	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x375E	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x3762	0xF12FC000  	MOVFF       R0, _pVerdaderosMEntero
0x3766	0xF130C001  	MOVFF       R1, _pVerdaderosMEntero+1
;rutinasensores_v4(mstr-slv).h,538 :: 		pVerdaderosEEntero = eepromLeeNumero(0x0007, 2);
0x376A	0x0E07      	MOVLW       7
0x376C	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x376E	0x0E00      	MOVLW       0
0x3770	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x3772	0x0E02      	MOVLW       2
0x3774	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x3776	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x377A	0xF12DC000  	MOVFF       R0, _pVerdaderosEEntero
0x377E	0xF12EC001  	MOVFF       R1, _pVerdaderosEEntero+1
;rutinasensores_v4(mstr-slv).h,539 :: 		pasajerosTotalesL = pVerdaderosMEntero + pVerdaderosEEntero;
0x3782	0x5000      	MOVF        R0, 0 
0x3784	0x0101      	MOVLB       1
0x3786	0x252F      	ADDWF       _pVerdaderosMEntero, 0, 1
0x3788	0x6F33      	MOVWF       _pasajerosTotalesL, 1
0x378A	0x5001      	MOVF        R1, 0 
0x378C	0x2130      	ADDWFC      _pVerdaderosMEntero+1, 0, 1
0x378E	0x6F34      	MOVWF       _pasajerosTotalesL+1, 1
;rutinasensores_v4(mstr-slv).h,540 :: 		totalCalculado = (eepromLeeNumero(0x0000, 2)+eepromLeeNumero(0x0003, 2)+eepromLeeNumero(0x0900, 2)+eepromLeeNumero(0x0700, 2))/2;
0x3790	0x0102      	MOVLB       2
0x3792	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x3794	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x3796	0x0E02      	MOVLW       2
0x3798	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x379A	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x379E	0xF215C000  	MOVFF       R0, FLOC__entro
0x37A2	0xF216C001  	MOVFF       R1, FLOC__entro+1
0x37A6	0xF217C002  	MOVFF       R2, FLOC__entro+2
0x37AA	0xF218C003  	MOVFF       R3, FLOC__entro+3
0x37AE	0x0E03      	MOVLW       3
0x37B0	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x37B2	0x0E00      	MOVLW       0
0x37B4	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x37B6	0x0E02      	MOVLW       2
0x37B8	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x37BA	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x37BE	0x5000      	MOVF        R0, 0 
0x37C0	0x2715      	ADDWF       FLOC__entro, 1, 1
0x37C2	0x5001      	MOVF        R1, 0 
0x37C4	0x2316      	ADDWFC      FLOC__entro+1, 1, 1
0x37C6	0x5002      	MOVF        R2, 0 
0x37C8	0x2317      	ADDWFC      FLOC__entro+2, 1, 1
0x37CA	0x5003      	MOVF        R3, 0 
0x37CC	0x2318      	ADDWFC      FLOC__entro+3, 1, 1
0x37CE	0x0E00      	MOVLW       0
0x37D0	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x37D2	0x0E09      	MOVLW       9
0x37D4	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x37D6	0x0E02      	MOVLW       2
0x37D8	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x37DA	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x37DE	0x5000      	MOVF        R0, 0 
0x37E0	0x2715      	ADDWF       FLOC__entro, 1, 1
0x37E2	0x5001      	MOVF        R1, 0 
0x37E4	0x2316      	ADDWFC      FLOC__entro+1, 1, 1
0x37E6	0x5002      	MOVF        R2, 0 
0x37E8	0x2317      	ADDWFC      FLOC__entro+2, 1, 1
0x37EA	0x5003      	MOVF        R3, 0 
0x37EC	0x2318      	ADDWFC      FLOC__entro+3, 1, 1
0x37EE	0x0E00      	MOVLW       0
0x37F0	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x37F2	0x0E07      	MOVLW       7
0x37F4	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x37F6	0x0E02      	MOVLW       2
0x37F8	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x37FA	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x37FE	0x5000      	MOVF        R0, 0 
0x3800	0x2515      	ADDWF       FLOC__entro, 0, 1
0x3802	0x6E05      	MOVWF       R5 
0x3804	0x5001      	MOVF        R1, 0 
0x3806	0x2116      	ADDWFC      FLOC__entro+1, 0, 1
0x3808	0x6E06      	MOVWF       R6 
0x380A	0x5002      	MOVF        R2, 0 
0x380C	0x2117      	ADDWFC      FLOC__entro+2, 0, 1
0x380E	0x6E07      	MOVWF       R7 
0x3810	0x5003      	MOVF        R3, 0 
0x3812	0x2118      	ADDWFC      FLOC__entro+3, 0, 1
0x3814	0x6E08      	MOVWF       R8 
0x3816	0xF000C005  	MOVFF       R5, R0
0x381A	0xF001C006  	MOVFF       R6, R1
0x381E	0xF002C007  	MOVFF       R7, R2
0x3822	0xF003C008  	MOVFF       R8, R3
0x3826	0x3203      	RRCF        R3, 1 
0x3828	0x3202      	RRCF        R2, 1 
0x382A	0x3201      	RRCF        R1, 1 
0x382C	0x3200      	RRCF        R0, 1 
0x382E	0x9E03      	BCF         R3, 7 
0x3830	0xBC03      	BTFSC       R3, 6 
0x3832	0x8E03      	BSF         R3, 7 
0x3834	0xF131C000  	MOVFF       R0, _totalCalculado
0x3838	0xF132C001  	MOVFF       R1, _totalCalculado+1
;rutinasensores_v4(mstr-slv).h,541 :: 		eepromEscribeNumero(0x0005, totalCalculado, 2);
0x383C	0x0E05      	MOVLW       5
0x383E	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x3840	0x0E00      	MOVLW       0
0x3842	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x3844	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x3848	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x384C	0x0E00      	MOVLW       0
0x384E	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x3850	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x3852	0x0E02      	MOVLW       2
0x3854	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x3856	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,542 :: 		}
L_entro199:
;rutinasensores_v4(mstr-slv).h,544 :: 		lcd_cmd(_LCD_CLEAR);
0x385A	0x0E01      	MOVLW       1
0x385C	0x0102      	MOVLB       2
0x385E	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x3860	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,546 :: 		permanencia = false;
0x3864	0x0100      	MOVLB       0
0x3866	0x6BE3      	CLRF        _permanencia, 1
;rutinasensores_v4(mstr-slv).h,547 :: 		empiezaEntrada = false;
0x3868	0x6BE6      	CLRF        _empiezaEntrada, 1
;rutinasensores_v4(mstr-slv).h,548 :: 		return debugEstado = ESPERA;
0x386A	0x6BE4      	CLRF        _debugEstado, 1
0x386C	0x6A00      	CLRF        R0 
0x386E	0xD000      	BRA         L_end_entro
;rutinasensores_v4(mstr-slv).h,549 :: 		}
L_entro198:
;rutinasensores_v4(mstr-slv).h,550 :: 		}
L_end_entro:
0x3870	0x0012      	RETURN      0
; end of _entro
_transicionS:
;rutinasensores_v4(mstr-slv).h,566 :: 		short transicionS(short estado){
;rutinasensores_v4(mstr-slv).h,567 :: 		if(estado == TRANSICIONS){
0x3872	0x0102      	MOVLB       2
0x3874	0x5114      	MOVF        FARG_transicionS_estado, 0, 1
0x3876	0x0A08      	XORLW       8
0x3878	0xA4D8      	BTFSS       STATUS, 2 
0x387A	0xD05E      	BRA         L_transicionS203
;rutinasensores_v4(mstr-slv).h,568 :: 		lcd_outConst(3, 1, "TRANSICION S");
0x387C	0x0E03      	MOVLW       3
0x387E	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x3880	0x0E01      	MOVLW       1
0x3882	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x3884	0x0E8C      	MOVLW       ?lstr_13_MyProject
0x3886	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x3888	0x0ED8      	MOVLW       hi_addr(?lstr_13_MyProject)
0x388A	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x388C	0x0E00      	MOVLW       higher_addr(?lstr_13_MyProject)
0x388E	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x3890	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,571 :: 		(SENSOR2&SENSOR4) | (SENSOR4&SENSOR6) | (SENSOR2& SENSOR6)
0x3894	0xA883      	BTFSS       PORTD, 4 
0x3896	0xD004      	BRA         L__transicionS913
0x3898	0xA681      	BTFSS       PORTB, 3 
0x389A	0xD002      	BRA         L__transicionS913
0x389C	0x8001      	BSF         R1, 0 
0x389E	0xD001      	BRA         L__transicionS914
L__transicionS913:
0x38A0	0x9001      	BCF         R1, 0 
L__transicionS914:
0x38A2	0xA681      	BTFSS       PORTB, 3 
0x38A4	0xD004      	BRA         L__transicionS915
0x38A6	0xA281      	BTFSS       PORTB, 1 
0x38A8	0xD002      	BRA         L__transicionS915
0x38AA	0x80D8      	BSF         STATUS, 0 
0x38AC	0xD001      	BRA         L__transicionS916
L__transicionS915:
0x38AE	0x90D8      	BCF         STATUS, 0 
L__transicionS916:
0x38B0	0xB001      	BTFSC       R1, 0 
0x38B2	0xD003      	BRA         L__transicionS917
0x38B4	0xE202      	BC          L__transicionS917
0x38B6	0x9001      	BCF         R1, 0 
0x38B8	0xD001      	BRA         L__transicionS918
L__transicionS917:
0x38BA	0x8001      	BSF         R1, 0 
L__transicionS918:
0x38BC	0xA883      	BTFSS       PORTD, 4 
0x38BE	0xD004      	BRA         L__transicionS919
0x38C0	0xA281      	BTFSS       PORTB, 1 
0x38C2	0xD002      	BRA         L__transicionS919
0x38C4	0x80D8      	BSF         STATUS, 0 
0x38C6	0xD001      	BRA         L__transicionS920
L__transicionS919:
0x38C8	0x90D8      	BCF         STATUS, 0 
L__transicionS920:
0x38CA	0xB001      	BTFSC       R1, 0 
0x38CC	0xD003      	BRA         L__transicionS921
0x38CE	0xE202      	BC          L__transicionS921
0x38D0	0x9001      	BCF         R1, 0 
0x38D2	0xD001      	BRA         L__transicionS922
L__transicionS921:
0x38D4	0x8001      	BSF         R1, 0 
L__transicionS922:
;rutinasensores_v4(mstr-slv).h,572 :: 		){
0x38D6	0xA001      	BTFSS       R1, 0 
0x38D8	0xD006      	BRA         L_transicionS204
;rutinasensores_v4(mstr-slv).h,574 :: 		return debugEstado = TRANSAL;
0x38DA	0x0E05      	MOVLW       5
0x38DC	0x0100      	MOVLB       0
0x38DE	0x6FE4      	MOVWF       _debugEstado, 1
0x38E0	0x0E05      	MOVLW       5
0x38E2	0x6E00      	MOVWF       R0 
0x38E4	0xD029      	BRA         L_end_transicionS
;rutinasensores_v4(mstr-slv).h,575 :: 		}
L_transicionS204:
;rutinasensores_v4(mstr-slv).h,577 :: 		(SENSOR1&SENSOR3) | (SENSOR3&SENSOR5) | (SENSOR1& SENSOR5)
0x38E6	0xA881      	BTFSS       PORTB, 4 
0x38E8	0xD004      	BRA         L__transicionS923
0x38EA	0xA481      	BTFSS       PORTB, 2 
0x38EC	0xD002      	BRA         L__transicionS923
0x38EE	0x8001      	BSF         R1, 0 
0x38F0	0xD001      	BRA         L__transicionS924
L__transicionS923:
0x38F2	0x9001      	BCF         R1, 0 
L__transicionS924:
0x38F4	0xA481      	BTFSS       PORTB, 2 
0x38F6	0xD004      	BRA         L__transicionS925
0x38F8	0xA081      	BTFSS       PORTB, 0 
0x38FA	0xD002      	BRA         L__transicionS925
0x38FC	0x80D8      	BSF         STATUS, 0 
0x38FE	0xD001      	BRA         L__transicionS926
L__transicionS925:
0x3900	0x90D8      	BCF         STATUS, 0 
L__transicionS926:
0x3902	0xB001      	BTFSC       R1, 0 
0x3904	0xD003      	BRA         L__transicionS927
0x3906	0xE202      	BC          L__transicionS927
0x3908	0x9001      	BCF         R1, 0 
0x390A	0xD001      	BRA         L__transicionS928
L__transicionS927:
0x390C	0x8001      	BSF         R1, 0 
L__transicionS928:
0x390E	0xA881      	BTFSS       PORTB, 4 
0x3910	0xD004      	BRA         L__transicionS929
0x3912	0xA081      	BTFSS       PORTB, 0 
0x3914	0xD002      	BRA         L__transicionS929
0x3916	0x80D8      	BSF         STATUS, 0 
0x3918	0xD001      	BRA         L__transicionS930
L__transicionS929:
0x391A	0x90D8      	BCF         STATUS, 0 
L__transicionS930:
0x391C	0xB001      	BTFSC       R1, 0 
0x391E	0xD003      	BRA         L__transicionS931
0x3920	0xE202      	BC          L__transicionS931
0x3922	0x9001      	BCF         R1, 0 
0x3924	0xD001      	BRA         L__transicionS932
L__transicionS931:
0x3926	0x8001      	BSF         R1, 0 
L__transicionS932:
;rutinasensores_v4(mstr-slv).h,578 :: 		){
0x3928	0xA001      	BTFSS       R1, 0 
0x392A	0xD006      	BRA         L_transicionS205
;rutinasensores_v4(mstr-slv).h,580 :: 		return debugEstado = SALIENDO;
0x392C	0x0100      	MOVLB       0
0x392E	0x0E04      	MOVLW       4
0x3930	0x6FE4      	MOVWF       _debugEstado, 1
0x3932	0x0E04      	MOVLW       4
0x3934	0x6E00      	MOVWF       R0 
0x3936	0xD000      	BRA         L_end_transicionS
;rutinasensores_v4(mstr-slv).h,581 :: 		}
L_transicionS205:
;rutinasensores_v4(mstr-slv).h,582 :: 		}
L_transicionS203:
;rutinasensores_v4(mstr-slv).h,583 :: 		}
L_end_transicionS:
0x3938	0x0012      	RETURN      0
; end of _transicionS
_entrandoBP2:
;rutinasensores_v4(mstr-slv).h,1657 :: 		short entrandoBP2(short estado){
;rutinasensores_v4(mstr-slv).h,1658 :: 		if(estado == ENTRANDO){
0x393A	0x0102      	MOVLB       2
0x393C	0x5114      	MOVF        FARG_entrandoBP2_estado, 0, 1
0x393E	0x0A01      	XORLW       1
0x3940	0xE139      	BNZ         L_entrandoBP2390
;rutinasensores_v4(mstr-slv).h,1659 :: 		LCD_OUTCONST(3,1,"ENTRANDO");
0x3942	0x0E03      	MOVLW       3
0x3944	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x3946	0x0E01      	MOVLW       1
0x3948	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x394A	0x0E85      	MOVLW       ?lstr_72_MyProject
0x394C	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x394E	0x0EDA      	MOVLW       hi_addr(?lstr_72_MyProject)
0x3950	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x3952	0x0E00      	MOVLW       higher_addr(?lstr_72_MyProject)
0x3954	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x3956	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1660 :: 		if((SENSOR1 & SENSOR5)){
0x395A	0xA881      	BTFSS       PORTB, 4 
0x395C	0xD004      	BRA         L__entrandoBP21842
0x395E	0xA081      	BTFSS       PORTB, 0 
0x3960	0xD002      	BRA         L__entrandoBP21842
0x3962	0x80D8      	BSF         STATUS, 0 
0x3964	0xD001      	BRA         L__entrandoBP21843
L__entrandoBP21842:
0x3966	0x90D8      	BCF         STATUS, 0 
L__entrandoBP21843:
0x3968	0xE308      	BNC         L_entrandoBP2391
;rutinasensores_v4(mstr-slv).h,1661 :: 		lcd_cmd(_LCD_CLEAR);
0x396A	0x0E01      	MOVLW       1
0x396C	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x396E	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1662 :: 		return debugEstadoB = ESPERA;
0x3972	0x0101      	MOVLB       1
0x3974	0x6B3D      	CLRF        _debugEstadoB, 1
0x3976	0x6A00      	CLRF        R0 
0x3978	0xD01D      	BRA         L_end_entrandoBP2
;rutinasensores_v4(mstr-slv).h,1663 :: 		}
L_entrandoBP2391:
;rutinasensores_v4(mstr-slv).h,1664 :: 		if((!SENSOR2 & !SENSOR6)){
0x397A	0xB883      	BTFSC       PORTD, 4 
0x397C	0xD002      	BRA         L__entrandoBP21844
0x397E	0x8001      	BSF         R1, 0 
0x3980	0xD001      	BRA         L__entrandoBP21845
L__entrandoBP21844:
0x3982	0x9001      	BCF         R1, 0 
L__entrandoBP21845:
0x3984	0xB281      	BTFSC       PORTB, 1 
0x3986	0xD002      	BRA         L__entrandoBP21846
0x3988	0x80D8      	BSF         STATUS, 0 
0x398A	0xD001      	BRA         L__entrandoBP21847
L__entrandoBP21846:
0x398C	0x90D8      	BCF         STATUS, 0 
L__entrandoBP21847:
0x398E	0xA001      	BTFSS       R1, 0 
0x3990	0xD003      	BRA         L__entrandoBP21848
0x3992	0xE302      	BNC         L__entrandoBP21848
0x3994	0x8001      	BSF         R1, 0 
0x3996	0xD001      	BRA         L__entrandoBP21849
L__entrandoBP21848:
0x3998	0x9001      	BCF         R1, 0 
L__entrandoBP21849:
0x399A	0xA001      	BTFSS       R1, 0 
0x399C	0xD00B      	BRA         L_entrandoBP2392
;rutinasensores_v4(mstr-slv).h,1665 :: 		lcd_cmd(_LCD_CLEAR);
0x399E	0x0E01      	MOVLW       1
0x39A0	0x0102      	MOVLB       2
0x39A2	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x39A4	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1666 :: 		return debugEstadoB = TRANSICION;
0x39A8	0x0E02      	MOVLW       2
0x39AA	0x0101      	MOVLB       1
0x39AC	0x6F3D      	MOVWF       _debugEstadoB, 1
0x39AE	0x0E02      	MOVLW       2
0x39B0	0x6E00      	MOVWF       R0 
0x39B2	0xD000      	BRA         L_end_entrandoBP2
;rutinasensores_v4(mstr-slv).h,1667 :: 		}
L_entrandoBP2392:
;rutinasensores_v4(mstr-slv).h,1668 :: 		}
L_entrandoBP2390:
;rutinasensores_v4(mstr-slv).h,1669 :: 		}
L_end_entrandoBP2:
0x39B4	0x0012      	RETURN      0
; end of _entrandoBP2
_transicionEntBP1:
;rutinasensores_v4(mstr-slv).h,1538 :: 		short transicionEntBP1(short estado){
;rutinasensores_v4(mstr-slv).h,1539 :: 		if(estado == TRANENT){
0x39B6	0x0102      	MOVLB       2
0x39B8	0x5114      	MOVF        FARG_transicionEntBP1_estado, 0, 1
0x39BA	0x0A07      	XORLW       7
0x39BC	0xE13B      	BNZ         L_transicionEntBP1370
;rutinasensores_v4(mstr-slv).h,1540 :: 		LCD_OUTCONST(3,1,"TRANSICION ENTRADA");
0x39BE	0x0E03      	MOVLW       3
0x39C0	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x39C2	0x0E01      	MOVLW       1
0x39C4	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x39C6	0x0EF9      	MOVLW       ?lstr_66_MyProject
0x39C8	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x39CA	0x0ED5      	MOVLW       hi_addr(?lstr_66_MyProject)
0x39CC	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x39CE	0x0E00      	MOVLW       higher_addr(?lstr_66_MyProject)
0x39D0	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x39D2	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1541 :: 		if((!SENSOR3 & !SENSOR5)/*(!SENSOR1 | !SENSOR3) | (!SENSOR3 | !SENSOR5) | (!SENSOR1 | !SENSOR5)*/){
0x39D6	0xB481      	BTFSC       PORTB, 2 
0x39D8	0xD002      	BRA         L__transicionEntBP11785
0x39DA	0x8001      	BSF         R1, 0 
0x39DC	0xD001      	BRA         L__transicionEntBP11786
L__transicionEntBP11785:
0x39DE	0x9001      	BCF         R1, 0 
L__transicionEntBP11786:
0x39E0	0xB081      	BTFSC       PORTB, 0 
0x39E2	0xD002      	BRA         L__transicionEntBP11787
0x39E4	0x80D8      	BSF         STATUS, 0 
0x39E6	0xD001      	BRA         L__transicionEntBP11788
L__transicionEntBP11787:
0x39E8	0x90D8      	BCF         STATUS, 0 
L__transicionEntBP11788:
0x39EA	0xA001      	BTFSS       R1, 0 
0x39EC	0xD003      	BRA         L__transicionEntBP11789
0x39EE	0xE302      	BNC         L__transicionEntBP11789
0x39F0	0x8001      	BSF         R1, 0 
0x39F2	0xD001      	BRA         L__transicionEntBP11790
L__transicionEntBP11789:
0x39F4	0x9001      	BCF         R1, 0 
L__transicionEntBP11790:
0x39F6	0xA001      	BTFSS       R1, 0 
0x39F8	0xD00A      	BRA         L_transicionEntBP1371
;rutinasensores_v4(mstr-slv).h,1542 :: 		lcd_cmd(_LCD_CLEAR);
0x39FA	0x0E01      	MOVLW       1
0x39FC	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x39FE	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1543 :: 		return debugEstadoB = TRANSICION;
0x3A02	0x0E02      	MOVLW       2
0x3A04	0x0101      	MOVLB       1
0x3A06	0x6F3D      	MOVWF       _debugEstadoB, 1
0x3A08	0x0E02      	MOVLW       2
0x3A0A	0x6E00      	MOVWF       R0 
0x3A0C	0xD013      	BRA         L_end_transicionEntBP1
;rutinasensores_v4(mstr-slv).h,1544 :: 		}
L_transicionEntBP1371:
;rutinasensores_v4(mstr-slv).h,1545 :: 		if(/*(SENSOR2 & SENSOR4) | (SENSOR4 & SENSOR6) | (SENSOR2 & SENSOR6) | */(SENSOR4 & SENSOR6)){
0x3A0E	0xA681      	BTFSS       PORTB, 3 
0x3A10	0xD004      	BRA         L__transicionEntBP11791
0x3A12	0xA281      	BTFSS       PORTB, 1 
0x3A14	0xD002      	BRA         L__transicionEntBP11791
0x3A16	0x80D8      	BSF         STATUS, 0 
0x3A18	0xD001      	BRA         L__transicionEntBP11792
L__transicionEntBP11791:
0x3A1A	0x90D8      	BCF         STATUS, 0 
L__transicionEntBP11792:
0x3A1C	0xE30B      	BNC         L_transicionEntBP1372
;rutinasensores_v4(mstr-slv).h,1546 :: 		lcd_cmd(_LCD_CLEAR);
0x3A1E	0x0E01      	MOVLW       1
0x3A20	0x0102      	MOVLB       2
0x3A22	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x3A24	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1547 :: 		return debugEstadoB = ENTRO;
0x3A28	0x0E03      	MOVLW       3
0x3A2A	0x0101      	MOVLB       1
0x3A2C	0x6F3D      	MOVWF       _debugEstadoB, 1
0x3A2E	0x0E03      	MOVLW       3
0x3A30	0x6E00      	MOVWF       R0 
0x3A32	0xD000      	BRA         L_end_transicionEntBP1
;rutinasensores_v4(mstr-slv).h,1548 :: 		}
L_transicionEntBP1372:
;rutinasensores_v4(mstr-slv).h,1549 :: 		}
L_transicionEntBP1370:
;rutinasensores_v4(mstr-slv).h,1550 :: 		}
L_end_transicionEntBP1:
0x3A34	0x0012      	RETURN      0
; end of _transicionEntBP1
_entroBP6:
;rutinasensores_v4(mstr-slv).h,2136 :: 		short entroBP6(short estado){
;rutinasensores_v4(mstr-slv).h,2137 :: 		if(estado == ENTRO){
0x3A36	0x0102      	MOVLB       2
0x3A38	0x5114      	MOVF        FARG_entroBP6_estado, 0, 1
0x3A3A	0x0A03      	XORLW       3
0x3A3C	0xA4D8      	BTFSS       STATUS, 2 
0x3A3E	0xD117      	BRA         L_entroBP6477
;rutinasensores_v4(mstr-slv).h,2138 :: 		LCD_OUTCONST(3,1,"BIENVENIDO: $6.00");
0x3A40	0x0E03      	MOVLW       3
0x3A42	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x3A44	0x0E01      	MOVLW       1
0x3A46	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x3A48	0x0EE6      	MOVLW       ?lstr_99_MyProject
0x3A4A	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x3A4C	0x0ED6      	MOVLW       hi_addr(?lstr_99_MyProject)
0x3A4E	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x3A50	0x0E00      	MOVLW       higher_addr(?lstr_99_MyProject)
0x3A52	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x3A54	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,2139 :: 		delay_ms(350);
0x3A58	0x0E09      	MOVLW       9
0x3A5A	0x6E0B      	MOVWF       R11, 0
0x3A5C	0x0EE1      	MOVLW       225
0x3A5E	0x6E0C      	MOVWF       R12, 0
0x3A60	0x0EB2      	MOVLW       178
0x3A62	0x6E0D      	MOVWF       R13, 0
L_entroBP6478:
0x3A64	0x2E0D      	DECFSZ      R13, 1, 0
0x3A66	0xD7FE      	BRA         L_entroBP6478
0x3A68	0x2E0C      	DECFSZ      R12, 1, 0
0x3A6A	0xD7FC      	BRA         L_entroBP6478
0x3A6C	0x2E0B      	DECFSZ      R11, 1, 0
0x3A6E	0xD7FA      	BRA         L_entroBP6478
0x3A70	0x0000      	NOP
;rutinasensores_v4(mstr-slv).h,2140 :: 		pBajan = eepromLeeNumero(0x0003,2);
0x3A72	0x0E03      	MOVLW       3
0x3A74	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x3A76	0x0E00      	MOVLW       0
0x3A78	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x3A7A	0x0E02      	MOVLW       2
0x3A7C	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x3A7E	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x3A82	0xF135C000  	MOVFF       R0, _pBajan
0x3A86	0xF136C001  	MOVFF       R1, _pBajan+1
;rutinasensores_v4(mstr-slv).h,2141 :: 		pSuben = eepromLeeNumero(0x0000,2) + 1;
0x3A8A	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x3A8C	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x3A8E	0x0E02      	MOVLW       2
0x3A90	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x3A92	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x3A96	0x4A00      	INFSNZ      R0, 1 
0x3A98	0x2A01      	INCF        R1, 1 
0x3A9A	0xF137C000  	MOVFF       R0, _pSuben
0x3A9E	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,2142 :: 		eepromEscribeNumero(0x0000,pSuben,2);
0x3AA2	0x6B1D      	CLRF        FARG_eepromEscribeNumero_Registro, 1
0x3AA4	0x6B1E      	CLRF        FARG_eepromEscribeNumero_Registro+1, 1
0x3AA6	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x3AAA	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x3AAE	0x0E00      	MOVLW       0
0x3AB0	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x3AB2	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x3AB4	0x0E02      	MOVLW       2
0x3AB6	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x3AB8	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,2143 :: 		pSuben = eepromLeeNumero(0x0000,2);
0x3ABC	0x0102      	MOVLB       2
0x3ABE	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x3AC0	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x3AC2	0x0E02      	MOVLW       2
0x3AC4	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x3AC6	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x3ACA	0xF137C000  	MOVFF       R0, _pSuben
0x3ACE	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,2144 :: 		pasajerosVerdaderos = ((float)pSuben + (float)pBajan)/2;
0x3AD2	0xF008EC65  	CALL        _Word2Double, 0
0x3AD6	0xF215C000  	MOVFF       R0, FLOC__entroBP6
0x3ADA	0xF216C001  	MOVFF       R1, FLOC__entroBP6+1
0x3ADE	0xF217C002  	MOVFF       R2, FLOC__entroBP6+2
0x3AE2	0xF218C003  	MOVFF       R3, FLOC__entroBP6+3
0x3AE6	0xF000C135  	MOVFF       _pBajan, R0
0x3AEA	0xF001C136  	MOVFF       _pBajan+1, R1
0x3AEE	0xF008EC65  	CALL        _Word2Double, 0
0x3AF2	0xF004C215  	MOVFF       FLOC__entroBP6, R4
0x3AF6	0xF005C216  	MOVFF       FLOC__entroBP6+1, R5
0x3AFA	0xF006C217  	MOVFF       FLOC__entroBP6+2, R6
0x3AFE	0xF007C218  	MOVFF       FLOC__entroBP6+3, R7
0x3B02	0xF004EC8D  	CALL        _Add_32x32_FP, 0
0x3B06	0x0E00      	MOVLW       0
0x3B08	0x6E04      	MOVWF       R4 
0x3B0A	0x0E00      	MOVLW       0
0x3B0C	0x6E05      	MOVWF       R5 
0x3B0E	0x0E00      	MOVLW       0
0x3B10	0x6E06      	MOVWF       R6 
0x3B12	0x0E80      	MOVLW       128
0x3B14	0x6E07      	MOVWF       R7 
0x3B16	0xF007ECA7  	CALL        _Div_32x32_FP, 0
0x3B1A	0xF139C000  	MOVFF       R0, _pasajerosVerdaderos
0x3B1E	0xF13AC001  	MOVFF       R1, _pasajerosVerdaderos+1
0x3B22	0xF13BC002  	MOVFF       R2, _pasajerosVerdaderos+2
0x3B26	0xF13CC003  	MOVFF       R3, _pasajerosVerdaderos+3
;rutinasensores_v4(mstr-slv).h,2145 :: 		eepromEscribeNumero(0x0009, (unsigned int)pasajerosVerdaderos, 2);
0x3B2A	0x0E09      	MOVLW       9
0x3B2C	0x0102      	MOVLB       2
0x3B2E	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x3B30	0x0E00      	MOVLW       0
0x3B32	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x3B34	0xF006ECA0  	CALL        _Double2Word, 0
0x3B38	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x3B3C	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x3B40	0x0E00      	MOVLW       0
0x3B42	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x3B44	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x3B46	0x0E02      	MOVLW       2
0x3B48	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x3B4A	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,2146 :: 		if(MSTR){
0x3B4E	0xA483      	BTFSS       PORTD, 2 
0x3B50	0xD085      	BRA         L_entroBP6479
;rutinasensores_v4(mstr-slv).h,2147 :: 		pVerdaderosMEntero = eepromLeeNumero(0x0009, 2);
0x3B52	0x0E09      	MOVLW       9
0x3B54	0x0102      	MOVLB       2
0x3B56	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x3B58	0x0E00      	MOVLW       0
0x3B5A	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x3B5C	0x0E02      	MOVLW       2
0x3B5E	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x3B60	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x3B64	0xF12FC000  	MOVFF       R0, _pVerdaderosMEntero
0x3B68	0xF130C001  	MOVFF       R1, _pVerdaderosMEntero+1
;rutinasensores_v4(mstr-slv).h,2148 :: 		pVerdaderosEEntero = eepromLeeNumero(0x0007, 2);
0x3B6C	0x0E07      	MOVLW       7
0x3B6E	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x3B70	0x0E00      	MOVLW       0
0x3B72	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x3B74	0x0E02      	MOVLW       2
0x3B76	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x3B78	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x3B7C	0xF12DC000  	MOVFF       R0, _pVerdaderosEEntero
0x3B80	0xF12EC001  	MOVFF       R1, _pVerdaderosEEntero+1
;rutinasensores_v4(mstr-slv).h,2149 :: 		pasajerosTotalesL = pVerdaderosMEntero + pVerdaderosEEntero;
0x3B84	0x5000      	MOVF        R0, 0 
0x3B86	0x0101      	MOVLB       1
0x3B88	0x252F      	ADDWF       _pVerdaderosMEntero, 0, 1
0x3B8A	0x6F33      	MOVWF       _pasajerosTotalesL, 1
0x3B8C	0x5001      	MOVF        R1, 0 
0x3B8E	0x2130      	ADDWFC      _pVerdaderosMEntero+1, 0, 1
0x3B90	0x6F34      	MOVWF       _pasajerosTotalesL+1, 1
;rutinasensores_v4(mstr-slv).h,2150 :: 		totalCalculado = (eepromLeeNumero(0x0000, 2)+eepromLeeNumero(0x0003, 2)+eepromLeeNumero(0x0900, 2)+eepromLeeNumero(0x0700, 2))/2;
0x3B92	0x0102      	MOVLB       2
0x3B94	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x3B96	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x3B98	0x0E02      	MOVLW       2
0x3B9A	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x3B9C	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x3BA0	0xF215C000  	MOVFF       R0, FLOC__entroBP6
0x3BA4	0xF216C001  	MOVFF       R1, FLOC__entroBP6+1
0x3BA8	0xF217C002  	MOVFF       R2, FLOC__entroBP6+2
0x3BAC	0xF218C003  	MOVFF       R3, FLOC__entroBP6+3
0x3BB0	0x0E03      	MOVLW       3
0x3BB2	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x3BB4	0x0E00      	MOVLW       0
0x3BB6	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x3BB8	0x0E02      	MOVLW       2
0x3BBA	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x3BBC	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x3BC0	0x5000      	MOVF        R0, 0 
0x3BC2	0x2715      	ADDWF       FLOC__entroBP6, 1, 1
0x3BC4	0x5001      	MOVF        R1, 0 
0x3BC6	0x2316      	ADDWFC      FLOC__entroBP6+1, 1, 1
0x3BC8	0x5002      	MOVF        R2, 0 
0x3BCA	0x2317      	ADDWFC      FLOC__entroBP6+2, 1, 1
0x3BCC	0x5003      	MOVF        R3, 0 
0x3BCE	0x2318      	ADDWFC      FLOC__entroBP6+3, 1, 1
0x3BD0	0x0E00      	MOVLW       0
0x3BD2	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x3BD4	0x0E09      	MOVLW       9
0x3BD6	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x3BD8	0x0E02      	MOVLW       2
0x3BDA	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x3BDC	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x3BE0	0x5000      	MOVF        R0, 0 
0x3BE2	0x2715      	ADDWF       FLOC__entroBP6, 1, 1
0x3BE4	0x5001      	MOVF        R1, 0 
0x3BE6	0x2316      	ADDWFC      FLOC__entroBP6+1, 1, 1
0x3BE8	0x5002      	MOVF        R2, 0 
0x3BEA	0x2317      	ADDWFC      FLOC__entroBP6+2, 1, 1
0x3BEC	0x5003      	MOVF        R3, 0 
0x3BEE	0x2318      	ADDWFC      FLOC__entroBP6+3, 1, 1
0x3BF0	0x0E00      	MOVLW       0
0x3BF2	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x3BF4	0x0E07      	MOVLW       7
0x3BF6	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x3BF8	0x0E02      	MOVLW       2
0x3BFA	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x3BFC	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x3C00	0x5000      	MOVF        R0, 0 
0x3C02	0x2515      	ADDWF       FLOC__entroBP6, 0, 1
0x3C04	0x6E05      	MOVWF       R5 
0x3C06	0x5001      	MOVF        R1, 0 
0x3C08	0x2116      	ADDWFC      FLOC__entroBP6+1, 0, 1
0x3C0A	0x6E06      	MOVWF       R6 
0x3C0C	0x5002      	MOVF        R2, 0 
0x3C0E	0x2117      	ADDWFC      FLOC__entroBP6+2, 0, 1
0x3C10	0x6E07      	MOVWF       R7 
0x3C12	0x5003      	MOVF        R3, 0 
0x3C14	0x2118      	ADDWFC      FLOC__entroBP6+3, 0, 1
0x3C16	0x6E08      	MOVWF       R8 
0x3C18	0xF000C005  	MOVFF       R5, R0
0x3C1C	0xF001C006  	MOVFF       R6, R1
0x3C20	0xF002C007  	MOVFF       R7, R2
0x3C24	0xF003C008  	MOVFF       R8, R3
0x3C28	0x3203      	RRCF        R3, 1 
0x3C2A	0x3202      	RRCF        R2, 1 
0x3C2C	0x3201      	RRCF        R1, 1 
0x3C2E	0x3200      	RRCF        R0, 1 
0x3C30	0x9E03      	BCF         R3, 7 
0x3C32	0xBC03      	BTFSC       R3, 6 
0x3C34	0x8E03      	BSF         R3, 7 
0x3C36	0xF131C000  	MOVFF       R0, _totalCalculado
0x3C3A	0xF132C001  	MOVFF       R1, _totalCalculado+1
;rutinasensores_v4(mstr-slv).h,2151 :: 		eepromEscribeNumero(0x0005, totalCalculado, 2);
0x3C3E	0x0E05      	MOVLW       5
0x3C40	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x3C42	0x0E00      	MOVLW       0
0x3C44	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x3C46	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x3C4A	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x3C4E	0x0E00      	MOVLW       0
0x3C50	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x3C52	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x3C54	0x0E02      	MOVLW       2
0x3C56	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x3C58	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,2152 :: 		}
L_entroBP6479:
;rutinasensores_v4(mstr-slv).h,2153 :: 		lcd_cmd(_LCD_CLEAR);
0x3C5C	0x0E01      	MOVLW       1
0x3C5E	0x0102      	MOVLB       2
0x3C60	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x3C62	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2154 :: 		return debugEstadoB = ESPERA;
0x3C66	0x0101      	MOVLB       1
0x3C68	0x6B3D      	CLRF        _debugEstadoB, 1
0x3C6A	0x6A00      	CLRF        R0 
0x3C6C	0xD000      	BRA         L_end_entroBP6
;rutinasensores_v4(mstr-slv).h,2155 :: 		}
L_entroBP6477:
;rutinasensores_v4(mstr-slv).h,2156 :: 		}
L_end_entroBP6:
0x3C6E	0x0012      	RETURN      0
; end of _entroBP6
_esperaBP2:
;rutinasensores_v4(mstr-slv).h,1641 :: 		short esperaBP2(short estado){
;rutinasensores_v4(mstr-slv).h,1642 :: 		if(estado == ESPERA){
0x3C70	0x0102      	MOVLB       2
0x3C72	0x5114      	MOVF        FARG_esperaBP2_estado, 0, 1
0x3C74	0x0A00      	XORLW       0
0x3C76	0xE13B      	BNZ         L_esperaBP2387
;rutinasensores_v4(mstr-slv).h,1644 :: 		muestraEstatus();
0x3C78	0xF008EC8B  	CALL        _muestraEstatus, 0
;rutinasensores_v4(mstr-slv).h,1646 :: 		if((!SENSOR1 | !SENSOR5)){
0x3C7C	0xB881      	BTFSC       PORTB, 4 
0x3C7E	0xD002      	BRA         L__esperaBP21829
0x3C80	0x8001      	BSF         R1, 0 
0x3C82	0xD001      	BRA         L__esperaBP21830
L__esperaBP21829:
0x3C84	0x9001      	BCF         R1, 0 
L__esperaBP21830:
0x3C86	0xB081      	BTFSC       PORTB, 0 
0x3C88	0xD002      	BRA         L__esperaBP21831
0x3C8A	0x80D8      	BSF         STATUS, 0 
0x3C8C	0xD001      	BRA         L__esperaBP21832
L__esperaBP21831:
0x3C8E	0x90D8      	BCF         STATUS, 0 
L__esperaBP21832:
0x3C90	0xB001      	BTFSC       R1, 0 
0x3C92	0xD003      	BRA         L__esperaBP21833
0x3C94	0xE202      	BC          L__esperaBP21833
0x3C96	0x9001      	BCF         R1, 0 
0x3C98	0xD001      	BRA         L__esperaBP21834
L__esperaBP21833:
0x3C9A	0x8001      	BSF         R1, 0 
L__esperaBP21834:
0x3C9C	0xA001      	BTFSS       R1, 0 
0x3C9E	0xD00A      	BRA         L_esperaBP2388
;rutinasensores_v4(mstr-slv).h,1647 :: 		lcd_cmd(_LCD_CLEAR);
0x3CA0	0x0E01      	MOVLW       1
0x3CA2	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x3CA4	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1648 :: 		return debugEstadoB = ENTRANDO;
0x3CA8	0x0E01      	MOVLW       1
0x3CAA	0x0101      	MOVLB       1
0x3CAC	0x6F3D      	MOVWF       _debugEstadoB, 1
0x3CAE	0x0E01      	MOVLW       1
0x3CB0	0x6E00      	MOVWF       R0 
0x3CB2	0xD01D      	BRA         L_end_esperaBP2
;rutinasensores_v4(mstr-slv).h,1649 :: 		}
L_esperaBP2388:
;rutinasensores_v4(mstr-slv).h,1650 :: 		if((!SENSOR2 | !SENSOR6)){
0x3CB4	0xB883      	BTFSC       PORTD, 4 
0x3CB6	0xD002      	BRA         L__esperaBP21835
0x3CB8	0x8001      	BSF         R1, 0 
0x3CBA	0xD001      	BRA         L__esperaBP21836
L__esperaBP21835:
0x3CBC	0x9001      	BCF         R1, 0 
L__esperaBP21836:
0x3CBE	0xB281      	BTFSC       PORTB, 1 
0x3CC0	0xD002      	BRA         L__esperaBP21837
0x3CC2	0x80D8      	BSF         STATUS, 0 
0x3CC4	0xD001      	BRA         L__esperaBP21838
L__esperaBP21837:
0x3CC6	0x90D8      	BCF         STATUS, 0 
L__esperaBP21838:
0x3CC8	0xB001      	BTFSC       R1, 0 
0x3CCA	0xD003      	BRA         L__esperaBP21839
0x3CCC	0xE202      	BC          L__esperaBP21839
0x3CCE	0x9001      	BCF         R1, 0 
0x3CD0	0xD001      	BRA         L__esperaBP21840
L__esperaBP21839:
0x3CD2	0x8001      	BSF         R1, 0 
L__esperaBP21840:
0x3CD4	0xA001      	BTFSS       R1, 0 
0x3CD6	0xD00B      	BRA         L_esperaBP2389
;rutinasensores_v4(mstr-slv).h,1651 :: 		lcd_cmd(_LCD_CLEAR);
0x3CD8	0x0E01      	MOVLW       1
0x3CDA	0x0102      	MOVLB       2
0x3CDC	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x3CDE	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1652 :: 		return debugEstadoB = SALIENDO;
0x3CE2	0x0E04      	MOVLW       4
0x3CE4	0x0101      	MOVLB       1
0x3CE6	0x6F3D      	MOVWF       _debugEstadoB, 1
0x3CE8	0x0E04      	MOVLW       4
0x3CEA	0x6E00      	MOVWF       R0 
0x3CEC	0xD000      	BRA         L_end_esperaBP2
;rutinasensores_v4(mstr-slv).h,1653 :: 		}
L_esperaBP2389:
;rutinasensores_v4(mstr-slv).h,1654 :: 		}
L_esperaBP2387:
;rutinasensores_v4(mstr-slv).h,1655 :: 		}
L_end_esperaBP2:
0x3CEE	0x0012      	RETURN      0
; end of _esperaBP2
_transicionEnt:
;rutinasensores_v4(mstr-slv).h,512 :: 		short transicionEnt(short estado){
;rutinasensores_v4(mstr-slv).h,513 :: 		if(estado == TRANENT){
0x3CF0	0x0102      	MOVLB       2
0x3CF2	0x5114      	MOVF        FARG_transicionEnt_estado, 0, 1
0x3CF4	0x0A07      	XORLW       7
0x3CF6	0xA4D8      	BTFSS       STATUS, 2 
0x3CF8	0xD062      	BRA         L_transicionEnt195
;rutinasensores_v4(mstr-slv).h,514 :: 		LCD_OUTCONST(3,1,"TRANSICION ENTRADA");
0x3CFA	0x0E03      	MOVLW       3
0x3CFC	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x3CFE	0x0E01      	MOVLW       1
0x3D00	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x3D02	0x0E87      	MOVLW       ?lstr_10_MyProject
0x3D04	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x3D06	0x0ED5      	MOVLW       hi_addr(?lstr_10_MyProject)
0x3D08	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x3D0A	0x0E00      	MOVLW       higher_addr(?lstr_10_MyProject)
0x3D0C	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x3D0E	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,516 :: 		((!SENSOR1&!SENSOR3) | (!SENSOR3&!SENSOR5) | (!SENSOR1& !SENSOR5))
0x3D12	0xB881      	BTFSC       PORTB, 4 
0x3D14	0xD002      	BRA         L__transicionEnt844
0x3D16	0x8601      	BSF         R1, 3 
0x3D18	0xD001      	BRA         L__transicionEnt845
L__transicionEnt844:
0x3D1A	0x9601      	BCF         R1, 3 
L__transicionEnt845:
0x3D1C	0xB481      	BTFSC       PORTB, 2 
0x3D1E	0xD002      	BRA         L__transicionEnt846
0x3D20	0x8001      	BSF         R1, 0 
0x3D22	0xD001      	BRA         L__transicionEnt847
L__transicionEnt846:
0x3D24	0x9001      	BCF         R1, 0 
L__transicionEnt847:
0x3D26	0xA601      	BTFSS       R1, 3 
0x3D28	0xD004      	BRA         L__transicionEnt848
0x3D2A	0xA001      	BTFSS       R1, 0 
0x3D2C	0xD002      	BRA         L__transicionEnt848
0x3D2E	0x8201      	BSF         R1, 1 
0x3D30	0xD001      	BRA         L__transicionEnt849
L__transicionEnt848:
0x3D32	0x9201      	BCF         R1, 1 
L__transicionEnt849:
0x3D34	0xB081      	BTFSC       PORTB, 0 
0x3D36	0xD002      	BRA         L__transicionEnt850
0x3D38	0x8401      	BSF         R1, 2 
0x3D3A	0xD001      	BRA         L__transicionEnt851
L__transicionEnt850:
0x3D3C	0x9401      	BCF         R1, 2 
L__transicionEnt851:
0x3D3E	0xA001      	BTFSS       R1, 0 
0x3D40	0xD004      	BRA         L__transicionEnt852
0x3D42	0xA401      	BTFSS       R1, 2 
0x3D44	0xD002      	BRA         L__transicionEnt852
0x3D46	0x80D8      	BSF         STATUS, 0 
0x3D48	0xD001      	BRA         L__transicionEnt853
L__transicionEnt852:
0x3D4A	0x90D8      	BCF         STATUS, 0 
L__transicionEnt853:
0x3D4C	0xB201      	BTFSC       R1, 1 
0x3D4E	0xD003      	BRA         L__transicionEnt854
0x3D50	0xE202      	BC          L__transicionEnt854
0x3D52	0x9201      	BCF         R1, 1 
0x3D54	0xD001      	BRA         L__transicionEnt855
L__transicionEnt854:
0x3D56	0x8201      	BSF         R1, 1 
L__transicionEnt855:
0x3D58	0xB601      	BTFSC       R1, 3 
0x3D5A	0xD002      	BRA         L__transicionEnt856
0x3D5C	0x9001      	BCF         R1, 0 
0x3D5E	0xD001      	BRA         L__transicionEnt857
L__transicionEnt856:
0x3D60	0x8001      	BSF         R1, 0 
L__transicionEnt857:
0x3D62	0xB401      	BTFSC       R1, 2 
0x3D64	0xD002      	BRA         L__transicionEnt858
0x3D66	0x90D8      	BCF         STATUS, 0 
0x3D68	0xD001      	BRA         L__transicionEnt859
L__transicionEnt858:
0x3D6A	0x80D8      	BSF         STATUS, 0 
L__transicionEnt859:
0x3D6C	0xA001      	BTFSS       R1, 0 
0x3D6E	0xD003      	BRA         L__transicionEnt860
0x3D70	0xE302      	BNC         L__transicionEnt860
0x3D72	0x8001      	BSF         R1, 0 
0x3D74	0xD001      	BRA         L__transicionEnt861
L__transicionEnt860:
0x3D76	0x9001      	BCF         R1, 0 
L__transicionEnt861:
0x3D78	0xB201      	BTFSC       R1, 1 
0x3D7A	0xD004      	BRA         L__transicionEnt862
0x3D7C	0xB001      	BTFSC       R1, 0 
0x3D7E	0xD002      	BRA         L__transicionEnt862
0x3D80	0x90D8      	BCF         STATUS, 0 
0x3D82	0xD001      	BRA         L__transicionEnt863
L__transicionEnt862:
0x3D84	0x80D8      	BSF         STATUS, 0 
L__transicionEnt863:
;rutinasensores_v4(mstr-slv).h,517 :: 		){
0x3D86	0xE306      	BNC         L_transicionEnt196
;rutinasensores_v4(mstr-slv).h,518 :: 		return debugEstado = TRANSICION;
0x3D88	0x0E02      	MOVLW       2
0x3D8A	0x0100      	MOVLB       0
0x3D8C	0x6FE4      	MOVWF       _debugEstado, 1
0x3D8E	0x0E02      	MOVLW       2
0x3D90	0x6E00      	MOVWF       R0 
0x3D92	0xD015      	BRA         L_end_transicionEnt
;rutinasensores_v4(mstr-slv).h,519 :: 		}
L_transicionEnt196:
;rutinasensores_v4(mstr-slv).h,520 :: 		if(SENSOR2 & SENSOR4 & SENSOR6){
0x3D94	0xA883      	BTFSS       PORTD, 4 
0x3D96	0xD004      	BRA         L__transicionEnt864
0x3D98	0xA681      	BTFSS       PORTB, 3 
0x3D9A	0xD002      	BRA         L__transicionEnt864
0x3D9C	0x80D8      	BSF         STATUS, 0 
0x3D9E	0xD001      	BRA         L__transicionEnt865
L__transicionEnt864:
0x3DA0	0x90D8      	BCF         STATUS, 0 
L__transicionEnt865:
0x3DA2	0xE304      	BNC         L__transicionEnt866
0x3DA4	0xA281      	BTFSS       PORTB, 1 
0x3DA6	0xD002      	BRA         L__transicionEnt866
0x3DA8	0x8001      	BSF         R1, 0 
0x3DAA	0xD001      	BRA         L__transicionEnt867
L__transicionEnt866:
0x3DAC	0x9001      	BCF         R1, 0 
L__transicionEnt867:
0x3DAE	0xA001      	BTFSS       R1, 0 
0x3DB0	0xD006      	BRA         L_transicionEnt197
;rutinasensores_v4(mstr-slv).h,521 :: 		return debugEstado = ENTRO;
0x3DB2	0x0100      	MOVLB       0
0x3DB4	0x0E03      	MOVLW       3
0x3DB6	0x6FE4      	MOVWF       _debugEstado, 1
0x3DB8	0x0E03      	MOVLW       3
0x3DBA	0x6E00      	MOVWF       R0 
0x3DBC	0xD000      	BRA         L_end_transicionEnt
;rutinasensores_v4(mstr-slv).h,522 :: 		}
L_transicionEnt197:
;rutinasensores_v4(mstr-slv).h,523 :: 		}
L_transicionEnt195:
;rutinasensores_v4(mstr-slv).h,524 :: 		}
L_end_transicionEnt:
0x3DBE	0x0012      	RETURN      0
; end of _transicionEnt
_transicionEBP1:
;rutinasensores_v4(mstr-slv).h,1524 :: 		short transicionEBP1(short estado){
;rutinasensores_v4(mstr-slv).h,1525 :: 		if(estado == TRANSICION){
0x3DC0	0x0102      	MOVLB       2
0x3DC2	0x5114      	MOVF        FARG_transicionEBP1_estado, 0, 1
0x3DC4	0x0A02      	XORLW       2
0x3DC6	0xE14E      	BNZ         L_transicionEBP1367
;rutinasensores_v4(mstr-slv).h,1526 :: 		LCD_OUTCONST(3,1,"TRANSICION");
0x3DC8	0x0E03      	MOVLW       3
0x3DCA	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x3DCC	0x0E01      	MOVLW       1
0x3DCE	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x3DD0	0x0E3F      	MOVLW       ?lstr_65_MyProject
0x3DD2	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x3DD4	0x0ED9      	MOVLW       hi_addr(?lstr_65_MyProject)
0x3DD6	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x3DD8	0x0E00      	MOVLW       higher_addr(?lstr_65_MyProject)
0x3DDA	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x3DDC	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1527 :: 		if((SENSOR3 & SENSOR5)){
0x3DE0	0xA481      	BTFSS       PORTB, 2 
0x3DE2	0xD004      	BRA         L__transicionEBP11770
0x3DE4	0xA081      	BTFSS       PORTB, 0 
0x3DE6	0xD002      	BRA         L__transicionEBP11770
0x3DE8	0x80D8      	BSF         STATUS, 0 
0x3DEA	0xD001      	BRA         L__transicionEBP11771
L__transicionEBP11770:
0x3DEC	0x90D8      	BCF         STATUS, 0 
L__transicionEBP11771:
0x3DEE	0xE30A      	BNC         L_transicionEBP1368
;rutinasensores_v4(mstr-slv).h,1528 :: 		lcd_cmd(_LCD_CLEAR);
0x3DF0	0x0E01      	MOVLW       1
0x3DF2	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x3DF4	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1529 :: 		return debugEstadoB = TRANENT;
0x3DF8	0x0E07      	MOVLW       7
0x3DFA	0x0101      	MOVLB       1
0x3DFC	0x6F3D      	MOVWF       _debugEstadoB, 1
0x3DFE	0x0E07      	MOVLW       7
0x3E00	0x6E00      	MOVWF       R0 
0x3E02	0xD030      	BRA         L_end_transicionEBP1
;rutinasensores_v4(mstr-slv).h,1530 :: 		}
L_transicionEBP1368:
;rutinasensores_v4(mstr-slv).h,1531 :: 		if((SENSOR4 & SENSOR6 & !SENSOR3) | (SENSOR4 & SENSOR6 & !SENSOR5)){
0x3E04	0xA681      	BTFSS       PORTB, 3 
0x3E06	0xD004      	BRA         L__transicionEBP11772
0x3E08	0xA281      	BTFSS       PORTB, 1 
0x3E0A	0xD002      	BRA         L__transicionEBP11772
0x3E0C	0x8001      	BSF         R1, 0 
0x3E0E	0xD001      	BRA         L__transicionEBP11773
L__transicionEBP11772:
0x3E10	0x9001      	BCF         R1, 0 
L__transicionEBP11773:
0x3E12	0xB481      	BTFSC       PORTB, 2 
0x3E14	0xD002      	BRA         L__transicionEBP11774
0x3E16	0x80D8      	BSF         STATUS, 0 
0x3E18	0xD001      	BRA         L__transicionEBP11775
L__transicionEBP11774:
0x3E1A	0x90D8      	BCF         STATUS, 0 
L__transicionEBP11775:
0x3E1C	0xA001      	BTFSS       R1, 0 
0x3E1E	0xD003      	BRA         L__transicionEBP11776
0x3E20	0xE302      	BNC         L__transicionEBP11776
0x3E22	0x8201      	BSF         R1, 1 
0x3E24	0xD001      	BRA         L__transicionEBP11777
L__transicionEBP11776:
0x3E26	0x9201      	BCF         R1, 1 
L__transicionEBP11777:
0x3E28	0xB081      	BTFSC       PORTB, 0 
0x3E2A	0xD002      	BRA         L__transicionEBP11778
0x3E2C	0x80D8      	BSF         STATUS, 0 
0x3E2E	0xD001      	BRA         L__transicionEBP11779
L__transicionEBP11778:
0x3E30	0x90D8      	BCF         STATUS, 0 
L__transicionEBP11779:
0x3E32	0xA001      	BTFSS       R1, 0 
0x3E34	0xD003      	BRA         L__transicionEBP11780
0x3E36	0xE302      	BNC         L__transicionEBP11780
0x3E38	0x8001      	BSF         R1, 0 
0x3E3A	0xD001      	BRA         L__transicionEBP11781
L__transicionEBP11780:
0x3E3C	0x9001      	BCF         R1, 0 
L__transicionEBP11781:
0x3E3E	0xB201      	BTFSC       R1, 1 
0x3E40	0xD004      	BRA         L__transicionEBP11782
0x3E42	0xB001      	BTFSC       R1, 0 
0x3E44	0xD002      	BRA         L__transicionEBP11782
0x3E46	0x90D8      	BCF         STATUS, 0 
0x3E48	0xD001      	BRA         L__transicionEBP11783
L__transicionEBP11782:
0x3E4A	0x80D8      	BSF         STATUS, 0 
L__transicionEBP11783:
0x3E4C	0xE30B      	BNC         L_transicionEBP1369
;rutinasensores_v4(mstr-slv).h,1532 :: 		lcd_cmd(_LCD_CLEAR);
0x3E4E	0x0E01      	MOVLW       1
0x3E50	0x0102      	MOVLB       2
0x3E52	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x3E54	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1533 :: 		return debugEstadoB = ENTRANDO;
0x3E58	0x0E01      	MOVLW       1
0x3E5A	0x0101      	MOVLB       1
0x3E5C	0x6F3D      	MOVWF       _debugEstadoB, 1
0x3E5E	0x0E01      	MOVLW       1
0x3E60	0x6E00      	MOVWF       R0 
0x3E62	0xD000      	BRA         L_end_transicionEBP1
;rutinasensores_v4(mstr-slv).h,1534 :: 		}
L_transicionEBP1369:
;rutinasensores_v4(mstr-slv).h,1535 :: 		}
L_transicionEBP1367:
;rutinasensores_v4(mstr-slv).h,1536 :: 		}
L_end_transicionEBP1:
0x3E64	0x0012      	RETURN      0
; end of _transicionEBP1
_salioBP7:
;rutinasensores_v4(mstr-slv).h,2346 :: 		short salioBP7(short estado){
;rutinasensores_v4(mstr-slv).h,2347 :: 		if(estado == SALIO){
0x3E66	0x0102      	MOVLB       2
0x3E68	0x5114      	MOVF        FARG_salioBP7_estado, 0, 1
0x3E6A	0x0A06      	XORLW       6
0x3E6C	0xA4D8      	BTFSS       STATUS, 2 
0x3E6E	0xD11B      	BRA         L_salioBP7515
;rutinasensores_v4(mstr-slv).h,2348 :: 		LCD_OUTCONST(3,1,"GRACIAS!");
0x3E70	0x0E03      	MOVLW       3
0x3E72	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x3E74	0x0E01      	MOVLW       1
0x3E76	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x3E78	0x0EBB      	MOVLW       ?lstr_111_MyProject
0x3E7A	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x3E7C	0x0EDA      	MOVLW       hi_addr(?lstr_111_MyProject)
0x3E7E	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x3E80	0x0E00      	MOVLW       higher_addr(?lstr_111_MyProject)
0x3E82	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x3E84	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,2349 :: 		pSuben = eepromLeeNumero(0x0000,2);
0x3E88	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x3E8A	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x3E8C	0x0E02      	MOVLW       2
0x3E8E	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x3E90	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x3E94	0xF137C000  	MOVFF       R0, _pSuben
0x3E98	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,2350 :: 		pBajan = eepromLeeNumero(0x0003,2) + 1;
0x3E9C	0x0E03      	MOVLW       3
0x3E9E	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x3EA0	0x0E00      	MOVLW       0
0x3EA2	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x3EA4	0x0E02      	MOVLW       2
0x3EA6	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x3EA8	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x3EAC	0x4A00      	INFSNZ      R0, 1 
0x3EAE	0x2A01      	INCF        R1, 1 
0x3EB0	0xF135C000  	MOVFF       R0, _pBajan
0x3EB4	0xF136C001  	MOVFF       R1, _pBajan+1
;rutinasensores_v4(mstr-slv).h,2351 :: 		eepromEscribeNumero(0x0003,pBajan,2);
0x3EB8	0x0E03      	MOVLW       3
0x3EBA	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x3EBC	0x0E00      	MOVLW       0
0x3EBE	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x3EC0	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x3EC4	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x3EC8	0x0E00      	MOVLW       0
0x3ECA	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x3ECC	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x3ECE	0x0E02      	MOVLW       2
0x3ED0	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x3ED2	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,2352 :: 		pBajan = eepromLeeNumero(0x0003,2);
0x3ED6	0x0E03      	MOVLW       3
0x3ED8	0x0102      	MOVLB       2
0x3EDA	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x3EDC	0x0E00      	MOVLW       0
0x3EDE	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x3EE0	0x0E02      	MOVLW       2
0x3EE2	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x3EE4	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x3EE8	0xF219C000  	MOVFF       R0, FLOC__salioBP7+4
0x3EEC	0xF21AC001  	MOVFF       R1, FLOC__salioBP7+5
0x3EF0	0xF21BC002  	MOVFF       R2, FLOC__salioBP7+6
0x3EF4	0xF21CC003  	MOVFF       R3, FLOC__salioBP7+7
0x3EF8	0xF135C219  	MOVFF       FLOC__salioBP7+4, _pBajan
0x3EFC	0xF136C21A  	MOVFF       FLOC__salioBP7+5, _pBajan+1
;rutinasensores_v4(mstr-slv).h,2353 :: 		pasajerosVerdaderos = ((float)pSuben + (float)pBajan)/2;
0x3F00	0xF000C137  	MOVFF       _pSuben, R0
0x3F04	0xF001C138  	MOVFF       _pSuben+1, R1
0x3F08	0xF008EC65  	CALL        _Word2Double, 0
0x3F0C	0xF215C000  	MOVFF       R0, FLOC__salioBP7
0x3F10	0xF216C001  	MOVFF       R1, FLOC__salioBP7+1
0x3F14	0xF217C002  	MOVFF       R2, FLOC__salioBP7+2
0x3F18	0xF218C003  	MOVFF       R3, FLOC__salioBP7+3
0x3F1C	0xF000C219  	MOVFF       FLOC__salioBP7+4, R0
0x3F20	0xF001C21A  	MOVFF       FLOC__salioBP7+5, R1
0x3F24	0xF008EC65  	CALL        _Word2Double, 0
0x3F28	0xF004C215  	MOVFF       FLOC__salioBP7, R4
0x3F2C	0xF005C216  	MOVFF       FLOC__salioBP7+1, R5
0x3F30	0xF006C217  	MOVFF       FLOC__salioBP7+2, R6
0x3F34	0xF007C218  	MOVFF       FLOC__salioBP7+3, R7
0x3F38	0xF004EC8D  	CALL        _Add_32x32_FP, 0
0x3F3C	0x0E00      	MOVLW       0
0x3F3E	0x6E04      	MOVWF       R4 
0x3F40	0x0E00      	MOVLW       0
0x3F42	0x6E05      	MOVWF       R5 
0x3F44	0x0E00      	MOVLW       0
0x3F46	0x6E06      	MOVWF       R6 
0x3F48	0x0E80      	MOVLW       128
0x3F4A	0x6E07      	MOVWF       R7 
0x3F4C	0xF007ECA7  	CALL        _Div_32x32_FP, 0
0x3F50	0xF139C000  	MOVFF       R0, _pasajerosVerdaderos
0x3F54	0xF13AC001  	MOVFF       R1, _pasajerosVerdaderos+1
0x3F58	0xF13BC002  	MOVFF       R2, _pasajerosVerdaderos+2
0x3F5C	0xF13CC003  	MOVFF       R3, _pasajerosVerdaderos+3
;rutinasensores_v4(mstr-slv).h,2354 :: 		eepromEscribeNumero(0x0009, pasajerosVerdaderos, 2);
0x3F60	0x0E09      	MOVLW       9
0x3F62	0x0102      	MOVLB       2
0x3F64	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x3F66	0x0E00      	MOVLW       0
0x3F68	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x3F6A	0xF007EC0E  	CALL        _Double2Longint, 0
0x3F6E	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x3F72	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x3F76	0xF221C002  	MOVFF       R2, FARG_eepromEscribeNumero_Dato+2
0x3F7A	0xF222C003  	MOVFF       R3, FARG_eepromEscribeNumero_Dato+3
0x3F7E	0x0E02      	MOVLW       2
0x3F80	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x3F82	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,2355 :: 		if(MSTR){
0x3F86	0xA483      	BTFSS       PORTD, 2 
0x3F88	0xD085      	BRA         L_salioBP7516
;rutinasensores_v4(mstr-slv).h,2356 :: 		pVerdaderosMEntero = eepromLeeNumero(0x0009, 2);
0x3F8A	0x0E09      	MOVLW       9
0x3F8C	0x0102      	MOVLB       2
0x3F8E	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x3F90	0x0E00      	MOVLW       0
0x3F92	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x3F94	0x0E02      	MOVLW       2
0x3F96	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x3F98	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x3F9C	0xF12FC000  	MOVFF       R0, _pVerdaderosMEntero
0x3FA0	0xF130C001  	MOVFF       R1, _pVerdaderosMEntero+1
;rutinasensores_v4(mstr-slv).h,2357 :: 		pVerdaderosEEntero = eepromLeeNumero(0x0007, 2);
0x3FA4	0x0E07      	MOVLW       7
0x3FA6	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x3FA8	0x0E00      	MOVLW       0
0x3FAA	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x3FAC	0x0E02      	MOVLW       2
0x3FAE	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x3FB0	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x3FB4	0xF12DC000  	MOVFF       R0, _pVerdaderosEEntero
0x3FB8	0xF12EC001  	MOVFF       R1, _pVerdaderosEEntero+1
;rutinasensores_v4(mstr-slv).h,2358 :: 		pasajerosTotalesL = pVerdaderosMEntero + pVerdaderosEEntero;
0x3FBC	0x5000      	MOVF        R0, 0 
0x3FBE	0x0101      	MOVLB       1
0x3FC0	0x252F      	ADDWF       _pVerdaderosMEntero, 0, 1
0x3FC2	0x6F33      	MOVWF       _pasajerosTotalesL, 1
0x3FC4	0x5001      	MOVF        R1, 0 
0x3FC6	0x2130      	ADDWFC      _pVerdaderosMEntero+1, 0, 1
0x3FC8	0x6F34      	MOVWF       _pasajerosTotalesL+1, 1
;rutinasensores_v4(mstr-slv).h,2359 :: 		totalCalculado = (eepromLeeNumero(0x0000, 2)+eepromLeeNumero(0x0003, 2)+eepromLeeNumero(0x0900, 2)+eepromLeeNumero(0x0700, 2))/2;
0x3FCA	0x0102      	MOVLB       2
0x3FCC	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x3FCE	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x3FD0	0x0E02      	MOVLW       2
0x3FD2	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x3FD4	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x3FD8	0xF215C000  	MOVFF       R0, FLOC__salioBP7
0x3FDC	0xF216C001  	MOVFF       R1, FLOC__salioBP7+1
0x3FE0	0xF217C002  	MOVFF       R2, FLOC__salioBP7+2
0x3FE4	0xF218C003  	MOVFF       R3, FLOC__salioBP7+3
0x3FE8	0x0E03      	MOVLW       3
0x3FEA	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x3FEC	0x0E00      	MOVLW       0
0x3FEE	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x3FF0	0x0E02      	MOVLW       2
0x3FF2	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x3FF4	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x3FF8	0x5000      	MOVF        R0, 0 
0x3FFA	0x2715      	ADDWF       FLOC__salioBP7, 1, 1
0x3FFC	0x5001      	MOVF        R1, 0 
0x3FFE	0x2316      	ADDWFC      FLOC__salioBP7+1, 1, 1
0x4000	0x5002      	MOVF        R2, 0 
0x4002	0x2317      	ADDWFC      FLOC__salioBP7+2, 1, 1
0x4004	0x5003      	MOVF        R3, 0 
0x4006	0x2318      	ADDWFC      FLOC__salioBP7+3, 1, 1
0x4008	0x0E00      	MOVLW       0
0x400A	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x400C	0x0E09      	MOVLW       9
0x400E	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x4010	0x0E02      	MOVLW       2
0x4012	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x4014	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x4018	0x5000      	MOVF        R0, 0 
0x401A	0x2715      	ADDWF       FLOC__salioBP7, 1, 1
0x401C	0x5001      	MOVF        R1, 0 
0x401E	0x2316      	ADDWFC      FLOC__salioBP7+1, 1, 1
0x4020	0x5002      	MOVF        R2, 0 
0x4022	0x2317      	ADDWFC      FLOC__salioBP7+2, 1, 1
0x4024	0x5003      	MOVF        R3, 0 
0x4026	0x2318      	ADDWFC      FLOC__salioBP7+3, 1, 1
0x4028	0x0E00      	MOVLW       0
0x402A	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x402C	0x0E07      	MOVLW       7
0x402E	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x4030	0x0E02      	MOVLW       2
0x4032	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x4034	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x4038	0x5000      	MOVF        R0, 0 
0x403A	0x2515      	ADDWF       FLOC__salioBP7, 0, 1
0x403C	0x6E05      	MOVWF       R5 
0x403E	0x5001      	MOVF        R1, 0 
0x4040	0x2116      	ADDWFC      FLOC__salioBP7+1, 0, 1
0x4042	0x6E06      	MOVWF       R6 
0x4044	0x5002      	MOVF        R2, 0 
0x4046	0x2117      	ADDWFC      FLOC__salioBP7+2, 0, 1
0x4048	0x6E07      	MOVWF       R7 
0x404A	0x5003      	MOVF        R3, 0 
0x404C	0x2118      	ADDWFC      FLOC__salioBP7+3, 0, 1
0x404E	0x6E08      	MOVWF       R8 
0x4050	0xF000C005  	MOVFF       R5, R0
0x4054	0xF001C006  	MOVFF       R6, R1
0x4058	0xF002C007  	MOVFF       R7, R2
0x405C	0xF003C008  	MOVFF       R8, R3
0x4060	0x3203      	RRCF        R3, 1 
0x4062	0x3202      	RRCF        R2, 1 
0x4064	0x3201      	RRCF        R1, 1 
0x4066	0x3200      	RRCF        R0, 1 
0x4068	0x9E03      	BCF         R3, 7 
0x406A	0xBC03      	BTFSC       R3, 6 
0x406C	0x8E03      	BSF         R3, 7 
0x406E	0xF131C000  	MOVFF       R0, _totalCalculado
0x4072	0xF132C001  	MOVFF       R1, _totalCalculado+1
;rutinasensores_v4(mstr-slv).h,2360 :: 		eepromEscribeNumero(0x0005, totalCalculado, 2);
0x4076	0x0E05      	MOVLW       5
0x4078	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x407A	0x0E00      	MOVLW       0
0x407C	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x407E	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x4082	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x4086	0x0E00      	MOVLW       0
0x4088	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x408A	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x408C	0x0E02      	MOVLW       2
0x408E	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x4090	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,2361 :: 		}
L_salioBP7516:
;rutinasensores_v4(mstr-slv).h,2362 :: 		lcd_cmd(_LCD_CLEAR);
0x4094	0x0E01      	MOVLW       1
0x4096	0x0102      	MOVLB       2
0x4098	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x409A	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2363 :: 		return debugEstadoB = ESPERA;
0x409E	0x0101      	MOVLB       1
0x40A0	0x6B3D      	CLRF        _debugEstadoB, 1
0x40A2	0x6A00      	CLRF        R0 
0x40A4	0xD000      	BRA         L_end_salioBP7
;rutinasensores_v4(mstr-slv).h,2364 :: 		}
L_salioBP7515:
;rutinasensores_v4(mstr-slv).h,2365 :: 		}
L_end_salioBP7:
0x40A6	0x0012      	RETURN      0
; end of _salioBP7
_transicionEntBP7:
;rutinasensores_v4(mstr-slv).h,2268 :: 		short transicionEntBP7(short estado){
;rutinasensores_v4(mstr-slv).h,2269 :: 		if(estado == TRANENT){
0x40A8	0x0102      	MOVLB       2
0x40AA	0x5114      	MOVF        FARG_transicionEntBP7_estado, 0, 1
0x40AC	0x0A07      	XORLW       7
0x40AE	0xE153      	BNZ         L_transicionEntBP7500
;rutinasensores_v4(mstr-slv).h,2270 :: 		LCD_OUTCONST(3,1,"TRANSICION ENTRADA");
0x40B0	0x0E03      	MOVLW       3
0x40B2	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x40B4	0x0E01      	MOVLW       1
0x40B6	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x40B8	0x0EC0      	MOVLW       ?lstr_106_MyProject
0x40BA	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x40BC	0x0ED5      	MOVLW       hi_addr(?lstr_106_MyProject)
0x40BE	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x40C0	0x0E00      	MOVLW       higher_addr(?lstr_106_MyProject)
0x40C2	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x40C4	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,2271 :: 		if((!SENSOR3 | !SENSOR1 | !SENSOR5)/*(!SENSOR1 | !SENSOR3) | (!SENSOR3 | !SENSOR5) | (!SENSOR1 | !SENSOR5)*/){
0x40C8	0xB481      	BTFSC       PORTB, 2 
0x40CA	0xD002      	BRA         L__transicionEntBP72244
0x40CC	0x8001      	BSF         R1, 0 
0x40CE	0xD001      	BRA         L__transicionEntBP72245
L__transicionEntBP72244:
0x40D0	0x9001      	BCF         R1, 0 
L__transicionEntBP72245:
0x40D2	0xB881      	BTFSC       PORTB, 4 
0x40D4	0xD002      	BRA         L__transicionEntBP72246
0x40D6	0x80D8      	BSF         STATUS, 0 
0x40D8	0xD001      	BRA         L__transicionEntBP72247
L__transicionEntBP72246:
0x40DA	0x90D8      	BCF         STATUS, 0 
L__transicionEntBP72247:
0x40DC	0xB001      	BTFSC       R1, 0 
0x40DE	0xD003      	BRA         L__transicionEntBP72248
0x40E0	0xE202      	BC          L__transicionEntBP72248
0x40E2	0x9001      	BCF         R1, 0 
0x40E4	0xD001      	BRA         L__transicionEntBP72249
L__transicionEntBP72248:
0x40E6	0x8001      	BSF         R1, 0 
L__transicionEntBP72249:
0x40E8	0xB081      	BTFSC       PORTB, 0 
0x40EA	0xD002      	BRA         L__transicionEntBP72250
0x40EC	0x80D8      	BSF         STATUS, 0 
0x40EE	0xD001      	BRA         L__transicionEntBP72251
L__transicionEntBP72250:
0x40F0	0x90D8      	BCF         STATUS, 0 
L__transicionEntBP72251:
0x40F2	0xB001      	BTFSC       R1, 0 
0x40F4	0xD003      	BRA         L__transicionEntBP72252
0x40F6	0xE202      	BC          L__transicionEntBP72252
0x40F8	0x9001      	BCF         R1, 0 
0x40FA	0xD001      	BRA         L__transicionEntBP72253
L__transicionEntBP72252:
0x40FC	0x8001      	BSF         R1, 0 
L__transicionEntBP72253:
0x40FE	0xA001      	BTFSS       R1, 0 
0x4100	0xD00A      	BRA         L_transicionEntBP7501
;rutinasensores_v4(mstr-slv).h,2272 :: 		lcd_cmd(_LCD_CLEAR);
0x4102	0x0E01      	MOVLW       1
0x4104	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x4106	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2273 :: 		return debugEstadoB = TRANSICION;
0x410A	0x0E02      	MOVLW       2
0x410C	0x0101      	MOVLB       1
0x410E	0x6F3D      	MOVWF       _debugEstadoB, 1
0x4110	0x0E02      	MOVLW       2
0x4112	0x6E00      	MOVWF       R0 
0x4114	0xD020      	BRA         L_end_transicionEntBP7
;rutinasensores_v4(mstr-slv).h,2274 :: 		}
L_transicionEntBP7501:
;rutinasensores_v4(mstr-slv).h,2275 :: 		if(SENSOR6 & SENSOR1 & SENSOR3 & SENSOR5){
0x4116	0xA281      	BTFSS       PORTB, 1 
0x4118	0xD004      	BRA         L__transicionEntBP72254
0x411A	0xA881      	BTFSS       PORTB, 4 
0x411C	0xD002      	BRA         L__transicionEntBP72254
0x411E	0x80D8      	BSF         STATUS, 0 
0x4120	0xD001      	BRA         L__transicionEntBP72255
L__transicionEntBP72254:
0x4122	0x90D8      	BCF         STATUS, 0 
L__transicionEntBP72255:
0x4124	0xE304      	BNC         L__transicionEntBP72256
0x4126	0xA481      	BTFSS       PORTB, 2 
0x4128	0xD002      	BRA         L__transicionEntBP72256
0x412A	0x8001      	BSF         R1, 0 
0x412C	0xD001      	BRA         L__transicionEntBP72257
L__transicionEntBP72256:
0x412E	0x9001      	BCF         R1, 0 
L__transicionEntBP72257:
0x4130	0xA001      	BTFSS       R1, 0 
0x4132	0xD004      	BRA         L__transicionEntBP72258
0x4134	0xA081      	BTFSS       PORTB, 0 
0x4136	0xD002      	BRA         L__transicionEntBP72258
0x4138	0x80D8      	BSF         STATUS, 0 
0x413A	0xD001      	BRA         L__transicionEntBP72259
L__transicionEntBP72258:
0x413C	0x90D8      	BCF         STATUS, 0 
L__transicionEntBP72259:
0x413E	0xE30B      	BNC         L_transicionEntBP7502
;rutinasensores_v4(mstr-slv).h,2276 :: 		lcd_cmd(_LCD_CLEAR);
0x4140	0x0E01      	MOVLW       1
0x4142	0x0102      	MOVLB       2
0x4144	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x4146	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2277 :: 		return debugEstadoB = ENTRO;
0x414A	0x0E03      	MOVLW       3
0x414C	0x0101      	MOVLB       1
0x414E	0x6F3D      	MOVWF       _debugEstadoB, 1
0x4150	0x0E03      	MOVLW       3
0x4152	0x6E00      	MOVWF       R0 
0x4154	0xD000      	BRA         L_end_transicionEntBP7
;rutinasensores_v4(mstr-slv).h,2278 :: 		}
L_transicionEntBP7502:
;rutinasensores_v4(mstr-slv).h,2279 :: 		}
L_transicionEntBP7500:
;rutinasensores_v4(mstr-slv).h,2280 :: 		}
L_end_transicionEntBP7:
0x4156	0x0012      	RETURN      0
; end of _transicionEntBP7
_entroBP7:
;rutinasensores_v4(mstr-slv).h,2282 :: 		short entroBP7(short estado){
;rutinasensores_v4(mstr-slv).h,2283 :: 		if(estado == ENTRO){
0x4158	0x0102      	MOVLB       2
0x415A	0x5114      	MOVF        FARG_entroBP7_estado, 0, 1
0x415C	0x0A03      	XORLW       3
0x415E	0xA4D8      	BTFSS       STATUS, 2 
0x4160	0xD117      	BRA         L_entroBP7503
;rutinasensores_v4(mstr-slv).h,2284 :: 		LCD_OUTCONST(3,1,"BIENVENIDO: $6.00");
0x4162	0x0E03      	MOVLW       3
0x4164	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x4166	0x0E01      	MOVLW       1
0x4168	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x416A	0x0EC2      	MOVLW       ?lstr_107_MyProject
0x416C	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x416E	0x0ED6      	MOVLW       hi_addr(?lstr_107_MyProject)
0x4170	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x4172	0x0E00      	MOVLW       higher_addr(?lstr_107_MyProject)
0x4174	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x4176	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,2285 :: 		delay_ms(350);
0x417A	0x0E09      	MOVLW       9
0x417C	0x6E0B      	MOVWF       R11, 0
0x417E	0x0EE1      	MOVLW       225
0x4180	0x6E0C      	MOVWF       R12, 0
0x4182	0x0EB2      	MOVLW       178
0x4184	0x6E0D      	MOVWF       R13, 0
L_entroBP7504:
0x4186	0x2E0D      	DECFSZ      R13, 1, 0
0x4188	0xD7FE      	BRA         L_entroBP7504
0x418A	0x2E0C      	DECFSZ      R12, 1, 0
0x418C	0xD7FC      	BRA         L_entroBP7504
0x418E	0x2E0B      	DECFSZ      R11, 1, 0
0x4190	0xD7FA      	BRA         L_entroBP7504
0x4192	0x0000      	NOP
;rutinasensores_v4(mstr-slv).h,2286 :: 		pBajan = eepromLeeNumero(0x0003,2);
0x4194	0x0E03      	MOVLW       3
0x4196	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x4198	0x0E00      	MOVLW       0
0x419A	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x419C	0x0E02      	MOVLW       2
0x419E	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x41A0	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x41A4	0xF135C000  	MOVFF       R0, _pBajan
0x41A8	0xF136C001  	MOVFF       R1, _pBajan+1
;rutinasensores_v4(mstr-slv).h,2287 :: 		pSuben = eepromLeeNumero(0x0000,2) + 1;
0x41AC	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x41AE	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x41B0	0x0E02      	MOVLW       2
0x41B2	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x41B4	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x41B8	0x4A00      	INFSNZ      R0, 1 
0x41BA	0x2A01      	INCF        R1, 1 
0x41BC	0xF137C000  	MOVFF       R0, _pSuben
0x41C0	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,2288 :: 		eepromEscribeNumero(0x0000,pSuben,2);
0x41C4	0x6B1D      	CLRF        FARG_eepromEscribeNumero_Registro, 1
0x41C6	0x6B1E      	CLRF        FARG_eepromEscribeNumero_Registro+1, 1
0x41C8	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x41CC	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x41D0	0x0E00      	MOVLW       0
0x41D2	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x41D4	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x41D6	0x0E02      	MOVLW       2
0x41D8	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x41DA	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,2289 :: 		pSuben = eepromLeeNumero(0x0000,2);
0x41DE	0x0102      	MOVLB       2
0x41E0	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x41E2	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x41E4	0x0E02      	MOVLW       2
0x41E6	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x41E8	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x41EC	0xF137C000  	MOVFF       R0, _pSuben
0x41F0	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,2290 :: 		pasajerosVerdaderos = ((float)pSuben + (float)pBajan)/2;
0x41F4	0xF008EC65  	CALL        _Word2Double, 0
0x41F8	0xF215C000  	MOVFF       R0, FLOC__entroBP7
0x41FC	0xF216C001  	MOVFF       R1, FLOC__entroBP7+1
0x4200	0xF217C002  	MOVFF       R2, FLOC__entroBP7+2
0x4204	0xF218C003  	MOVFF       R3, FLOC__entroBP7+3
0x4208	0xF000C135  	MOVFF       _pBajan, R0
0x420C	0xF001C136  	MOVFF       _pBajan+1, R1
0x4210	0xF008EC65  	CALL        _Word2Double, 0
0x4214	0xF004C215  	MOVFF       FLOC__entroBP7, R4
0x4218	0xF005C216  	MOVFF       FLOC__entroBP7+1, R5
0x421C	0xF006C217  	MOVFF       FLOC__entroBP7+2, R6
0x4220	0xF007C218  	MOVFF       FLOC__entroBP7+3, R7
0x4224	0xF004EC8D  	CALL        _Add_32x32_FP, 0
0x4228	0x0E00      	MOVLW       0
0x422A	0x6E04      	MOVWF       R4 
0x422C	0x0E00      	MOVLW       0
0x422E	0x6E05      	MOVWF       R5 
0x4230	0x0E00      	MOVLW       0
0x4232	0x6E06      	MOVWF       R6 
0x4234	0x0E80      	MOVLW       128
0x4236	0x6E07      	MOVWF       R7 
0x4238	0xF007ECA7  	CALL        _Div_32x32_FP, 0
0x423C	0xF139C000  	MOVFF       R0, _pasajerosVerdaderos
0x4240	0xF13AC001  	MOVFF       R1, _pasajerosVerdaderos+1
0x4244	0xF13BC002  	MOVFF       R2, _pasajerosVerdaderos+2
0x4248	0xF13CC003  	MOVFF       R3, _pasajerosVerdaderos+3
;rutinasensores_v4(mstr-slv).h,2291 :: 		eepromEscribeNumero(0x0009, (unsigned int)pasajerosVerdaderos, 2);
0x424C	0x0E09      	MOVLW       9
0x424E	0x0102      	MOVLB       2
0x4250	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x4252	0x0E00      	MOVLW       0
0x4254	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x4256	0xF006ECA0  	CALL        _Double2Word, 0
0x425A	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x425E	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x4262	0x0E00      	MOVLW       0
0x4264	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x4266	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x4268	0x0E02      	MOVLW       2
0x426A	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x426C	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,2292 :: 		if(MSTR){
0x4270	0xA483      	BTFSS       PORTD, 2 
0x4272	0xD085      	BRA         L_entroBP7505
;rutinasensores_v4(mstr-slv).h,2293 :: 		pVerdaderosMEntero = eepromLeeNumero(0x0009, 2);
0x4274	0x0E09      	MOVLW       9
0x4276	0x0102      	MOVLB       2
0x4278	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x427A	0x0E00      	MOVLW       0
0x427C	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x427E	0x0E02      	MOVLW       2
0x4280	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x4282	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x4286	0xF12FC000  	MOVFF       R0, _pVerdaderosMEntero
0x428A	0xF130C001  	MOVFF       R1, _pVerdaderosMEntero+1
;rutinasensores_v4(mstr-slv).h,2294 :: 		pVerdaderosEEntero = eepromLeeNumero(0x0007, 2);
0x428E	0x0E07      	MOVLW       7
0x4290	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x4292	0x0E00      	MOVLW       0
0x4294	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x4296	0x0E02      	MOVLW       2
0x4298	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x429A	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x429E	0xF12DC000  	MOVFF       R0, _pVerdaderosEEntero
0x42A2	0xF12EC001  	MOVFF       R1, _pVerdaderosEEntero+1
;rutinasensores_v4(mstr-slv).h,2295 :: 		pasajerosTotalesL = pVerdaderosMEntero + pVerdaderosEEntero;
0x42A6	0x5000      	MOVF        R0, 0 
0x42A8	0x0101      	MOVLB       1
0x42AA	0x252F      	ADDWF       _pVerdaderosMEntero, 0, 1
0x42AC	0x6F33      	MOVWF       _pasajerosTotalesL, 1
0x42AE	0x5001      	MOVF        R1, 0 
0x42B0	0x2130      	ADDWFC      _pVerdaderosMEntero+1, 0, 1
0x42B2	0x6F34      	MOVWF       _pasajerosTotalesL+1, 1
;rutinasensores_v4(mstr-slv).h,2296 :: 		totalCalculado = (eepromLeeNumero(0x0000, 2)+eepromLeeNumero(0x0003, 2)+eepromLeeNumero(0x0900, 2)+eepromLeeNumero(0x0700, 2))/2;
0x42B4	0x0102      	MOVLB       2
0x42B6	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x42B8	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x42BA	0x0E02      	MOVLW       2
0x42BC	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x42BE	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x42C2	0xF215C000  	MOVFF       R0, FLOC__entroBP7
0x42C6	0xF216C001  	MOVFF       R1, FLOC__entroBP7+1
0x42CA	0xF217C002  	MOVFF       R2, FLOC__entroBP7+2
0x42CE	0xF218C003  	MOVFF       R3, FLOC__entroBP7+3
0x42D2	0x0E03      	MOVLW       3
0x42D4	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x42D6	0x0E00      	MOVLW       0
0x42D8	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x42DA	0x0E02      	MOVLW       2
0x42DC	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x42DE	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x42E2	0x5000      	MOVF        R0, 0 
0x42E4	0x2715      	ADDWF       FLOC__entroBP7, 1, 1
0x42E6	0x5001      	MOVF        R1, 0 
0x42E8	0x2316      	ADDWFC      FLOC__entroBP7+1, 1, 1
0x42EA	0x5002      	MOVF        R2, 0 
0x42EC	0x2317      	ADDWFC      FLOC__entroBP7+2, 1, 1
0x42EE	0x5003      	MOVF        R3, 0 
0x42F0	0x2318      	ADDWFC      FLOC__entroBP7+3, 1, 1
0x42F2	0x0E00      	MOVLW       0
0x42F4	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x42F6	0x0E09      	MOVLW       9
0x42F8	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x42FA	0x0E02      	MOVLW       2
0x42FC	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x42FE	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x4302	0x5000      	MOVF        R0, 0 
0x4304	0x2715      	ADDWF       FLOC__entroBP7, 1, 1
0x4306	0x5001      	MOVF        R1, 0 
0x4308	0x2316      	ADDWFC      FLOC__entroBP7+1, 1, 1
0x430A	0x5002      	MOVF        R2, 0 
0x430C	0x2317      	ADDWFC      FLOC__entroBP7+2, 1, 1
0x430E	0x5003      	MOVF        R3, 0 
0x4310	0x2318      	ADDWFC      FLOC__entroBP7+3, 1, 1
0x4312	0x0E00      	MOVLW       0
0x4314	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x4316	0x0E07      	MOVLW       7
0x4318	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x431A	0x0E02      	MOVLW       2
0x431C	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x431E	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x4322	0x5000      	MOVF        R0, 0 
0x4324	0x2515      	ADDWF       FLOC__entroBP7, 0, 1
0x4326	0x6E05      	MOVWF       R5 
0x4328	0x5001      	MOVF        R1, 0 
0x432A	0x2116      	ADDWFC      FLOC__entroBP7+1, 0, 1
0x432C	0x6E06      	MOVWF       R6 
0x432E	0x5002      	MOVF        R2, 0 
0x4330	0x2117      	ADDWFC      FLOC__entroBP7+2, 0, 1
0x4332	0x6E07      	MOVWF       R7 
0x4334	0x5003      	MOVF        R3, 0 
0x4336	0x2118      	ADDWFC      FLOC__entroBP7+3, 0, 1
0x4338	0x6E08      	MOVWF       R8 
0x433A	0xF000C005  	MOVFF       R5, R0
0x433E	0xF001C006  	MOVFF       R6, R1
0x4342	0xF002C007  	MOVFF       R7, R2
0x4346	0xF003C008  	MOVFF       R8, R3
0x434A	0x3203      	RRCF        R3, 1 
0x434C	0x3202      	RRCF        R2, 1 
0x434E	0x3201      	RRCF        R1, 1 
0x4350	0x3200      	RRCF        R0, 1 
0x4352	0x9E03      	BCF         R3, 7 
0x4354	0xBC03      	BTFSC       R3, 6 
0x4356	0x8E03      	BSF         R3, 7 
0x4358	0xF131C000  	MOVFF       R0, _totalCalculado
0x435C	0xF132C001  	MOVFF       R1, _totalCalculado+1
;rutinasensores_v4(mstr-slv).h,2297 :: 		eepromEscribeNumero(0x0005, totalCalculado, 2);
0x4360	0x0E05      	MOVLW       5
0x4362	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x4364	0x0E00      	MOVLW       0
0x4366	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x4368	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x436C	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x4370	0x0E00      	MOVLW       0
0x4372	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x4374	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x4376	0x0E02      	MOVLW       2
0x4378	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x437A	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,2298 :: 		}
L_entroBP7505:
;rutinasensores_v4(mstr-slv).h,2299 :: 		lcd_cmd(_LCD_CLEAR);
0x437E	0x0E01      	MOVLW       1
0x4380	0x0102      	MOVLB       2
0x4382	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x4384	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2300 :: 		return debugEstadoB = ESPERA;
0x4388	0x0101      	MOVLB       1
0x438A	0x6B3D      	CLRF        _debugEstadoB, 1
0x438C	0x6A00      	CLRF        R0 
0x438E	0xD000      	BRA         L_end_entroBP7
;rutinasensores_v4(mstr-slv).h,2301 :: 		}
L_entroBP7503:
;rutinasensores_v4(mstr-slv).h,2302 :: 		}
L_end_entroBP7:
0x4390	0x0012      	RETURN      0
; end of _entroBP7
_saliendoBP7:
;rutinasensores_v4(mstr-slv).h,2304 :: 		short saliendoBP7(short estado){
;rutinasensores_v4(mstr-slv).h,2305 :: 		if(estado == SALIENDO){
0x4392	0x0102      	MOVLB       2
0x4394	0x5114      	MOVF        FARG_saliendoBP7_estado, 0, 1
0x4396	0x0A04      	XORLW       4
0x4398	0xE15C      	BNZ         L_saliendoBP7506
;rutinasensores_v4(mstr-slv).h,2306 :: 		lcd_outConst(3, 1, "SALIENDO");
0x439A	0x0E03      	MOVLW       3
0x439C	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x439E	0x0E01      	MOVLW       1
0x43A0	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x43A2	0x0E73      	MOVLW       ?lstr_108_MyProject
0x43A4	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x43A6	0x0EDA      	MOVLW       hi_addr(?lstr_108_MyProject)
0x43A8	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x43AA	0x0E00      	MOVLW       higher_addr(?lstr_108_MyProject)
0x43AC	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x43AE	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,2307 :: 		if((!SENSOR1 & !SENSOR3) | (!SENSOR3 & !SENSOR5) | (!SENSOR1 & !SENSOR5)){
0x43B2	0xB881      	BTFSC       PORTB, 4 
0x43B4	0xD002      	BRA         L__saliendoBP72262
0x43B6	0x8601      	BSF         R1, 3 
0x43B8	0xD001      	BRA         L__saliendoBP72263
L__saliendoBP72262:
0x43BA	0x9601      	BCF         R1, 3 
L__saliendoBP72263:
0x43BC	0xB481      	BTFSC       PORTB, 2 
0x43BE	0xD002      	BRA         L__saliendoBP72264
0x43C0	0x8001      	BSF         R1, 0 
0x43C2	0xD001      	BRA         L__saliendoBP72265
L__saliendoBP72264:
0x43C4	0x9001      	BCF         R1, 0 
L__saliendoBP72265:
0x43C6	0xA601      	BTFSS       R1, 3 
0x43C8	0xD004      	BRA         L__saliendoBP72266
0x43CA	0xA001      	BTFSS       R1, 0 
0x43CC	0xD002      	BRA         L__saliendoBP72266
0x43CE	0x8201      	BSF         R1, 1 
0x43D0	0xD001      	BRA         L__saliendoBP72267
L__saliendoBP72266:
0x43D2	0x9201      	BCF         R1, 1 
L__saliendoBP72267:
0x43D4	0xB081      	BTFSC       PORTB, 0 
0x43D6	0xD002      	BRA         L__saliendoBP72268
0x43D8	0x8401      	BSF         R1, 2 
0x43DA	0xD001      	BRA         L__saliendoBP72269
L__saliendoBP72268:
0x43DC	0x9401      	BCF         R1, 2 
L__saliendoBP72269:
0x43DE	0xA001      	BTFSS       R1, 0 
0x43E0	0xD004      	BRA         L__saliendoBP72270
0x43E2	0xA401      	BTFSS       R1, 2 
0x43E4	0xD002      	BRA         L__saliendoBP72270
0x43E6	0x80D8      	BSF         STATUS, 0 
0x43E8	0xD001      	BRA         L__saliendoBP72271
L__saliendoBP72270:
0x43EA	0x90D8      	BCF         STATUS, 0 
L__saliendoBP72271:
0x43EC	0xB201      	BTFSC       R1, 1 
0x43EE	0xD003      	BRA         L__saliendoBP72272
0x43F0	0xE202      	BC          L__saliendoBP72272
0x43F2	0x9201      	BCF         R1, 1 
0x43F4	0xD001      	BRA         L__saliendoBP72273
L__saliendoBP72272:
0x43F6	0x8201      	BSF         R1, 1 
L__saliendoBP72273:
0x43F8	0xB601      	BTFSC       R1, 3 
0x43FA	0xD002      	BRA         L__saliendoBP72274
0x43FC	0x9001      	BCF         R1, 0 
0x43FE	0xD001      	BRA         L__saliendoBP72275
L__saliendoBP72274:
0x4400	0x8001      	BSF         R1, 0 
L__saliendoBP72275:
0x4402	0xB401      	BTFSC       R1, 2 
0x4404	0xD002      	BRA         L__saliendoBP72276
0x4406	0x90D8      	BCF         STATUS, 0 
0x4408	0xD001      	BRA         L__saliendoBP72277
L__saliendoBP72276:
0x440A	0x80D8      	BSF         STATUS, 0 
L__saliendoBP72277:
0x440C	0xA001      	BTFSS       R1, 0 
0x440E	0xD003      	BRA         L__saliendoBP72278
0x4410	0xE302      	BNC         L__saliendoBP72278
0x4412	0x8001      	BSF         R1, 0 
0x4414	0xD001      	BRA         L__saliendoBP72279
L__saliendoBP72278:
0x4416	0x9001      	BCF         R1, 0 
L__saliendoBP72279:
0x4418	0xB201      	BTFSC       R1, 1 
0x441A	0xD004      	BRA         L__saliendoBP72280
0x441C	0xB001      	BTFSC       R1, 0 
0x441E	0xD002      	BRA         L__saliendoBP72280
0x4420	0x90D8      	BCF         STATUS, 0 
0x4422	0xD001      	BRA         L__saliendoBP72281
L__saliendoBP72280:
0x4424	0x80D8      	BSF         STATUS, 0 
L__saliendoBP72281:
0x4426	0xE30A      	BNC         L_saliendoBP7507
;rutinasensores_v4(mstr-slv).h,2308 :: 		lcd_cmd(_LCD_CLEAR);
0x4428	0x0E01      	MOVLW       1
0x442A	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x442C	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2309 :: 		return debugEstadoB = TRANSICIONS;
0x4430	0x0E08      	MOVLW       8
0x4432	0x0101      	MOVLB       1
0x4434	0x6F3D      	MOVWF       _debugEstadoB, 1
0x4436	0x0E08      	MOVLW       8
0x4438	0x6E00      	MOVWF       R0 
0x443A	0xD00B      	BRA         L_end_saliendoBP7
;rutinasensores_v4(mstr-slv).h,2310 :: 		}
L_saliendoBP7507:
;rutinasensores_v4(mstr-slv).h,2311 :: 		if((SENSOR6)){
0x443C	0xA281      	BTFSS       PORTB, 1 
0x443E	0xD009      	BRA         L_saliendoBP7508
;rutinasensores_v4(mstr-slv).h,2312 :: 		lcd_cmd(_LCD_CLEAR);
0x4440	0x0E01      	MOVLW       1
0x4442	0x0102      	MOVLB       2
0x4444	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x4446	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2313 :: 		return debugEstadoB = ESPERA;
0x444A	0x0101      	MOVLB       1
0x444C	0x6B3D      	CLRF        _debugEstadoB, 1
0x444E	0x6A00      	CLRF        R0 
0x4450	0xD000      	BRA         L_end_saliendoBP7
;rutinasensores_v4(mstr-slv).h,2314 :: 		}
L_saliendoBP7508:
;rutinasensores_v4(mstr-slv).h,2315 :: 		}
L_saliendoBP7506:
;rutinasensores_v4(mstr-slv).h,2316 :: 		}
L_end_saliendoBP7:
0x4452	0x0012      	RETURN      0
; end of _saliendoBP7
_transicionEBP7:
;rutinasensores_v4(mstr-slv).h,2254 :: 		short transicionEBP7(short estado){
;rutinasensores_v4(mstr-slv).h,2255 :: 		if(estado == TRANSICION){
0x4454	0x0102      	MOVLB       2
0x4456	0x5114      	MOVF        FARG_transicionEBP7_estado, 0, 1
0x4458	0x0A02      	XORLW       2
0x445A	0xA4D8      	BTFSS       STATUS, 2 
0x445C	0xD060      	BRA         L_transicionEBP7497
;rutinasensores_v4(mstr-slv).h,2256 :: 		LCD_OUTCONST(3,1,"TRANSICION");
0x445E	0x0E03      	MOVLW       3
0x4460	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x4462	0x0E01      	MOVLW       1
0x4464	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x4466	0x0E29      	MOVLW       ?lstr_105_MyProject
0x4468	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x446A	0x0ED9      	MOVLW       hi_addr(?lstr_105_MyProject)
0x446C	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x446E	0x0E00      	MOVLW       higher_addr(?lstr_105_MyProject)
0x4470	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x4472	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,2257 :: 		if(SENSOR1 & SENSOR3 & SENSOR5){
0x4476	0xA881      	BTFSS       PORTB, 4 
0x4478	0xD004      	BRA         L__transicionEBP72223
0x447A	0xA481      	BTFSS       PORTB, 2 
0x447C	0xD002      	BRA         L__transicionEBP72223
0x447E	0x80D8      	BSF         STATUS, 0 
0x4480	0xD001      	BRA         L__transicionEBP72224
L__transicionEBP72223:
0x4482	0x90D8      	BCF         STATUS, 0 
L__transicionEBP72224:
0x4484	0xE304      	BNC         L__transicionEBP72225
0x4486	0xA081      	BTFSS       PORTB, 0 
0x4488	0xD002      	BRA         L__transicionEBP72225
0x448A	0x8001      	BSF         R1, 0 
0x448C	0xD001      	BRA         L__transicionEBP72226
L__transicionEBP72225:
0x448E	0x9001      	BCF         R1, 0 
L__transicionEBP72226:
0x4490	0xA001      	BTFSS       R1, 0 
0x4492	0xD00A      	BRA         L_transicionEBP7498
;rutinasensores_v4(mstr-slv).h,2258 :: 		lcd_cmd(_LCD_CLEAR);
0x4494	0x0E01      	MOVLW       1
0x4496	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x4498	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2259 :: 		return debugEstado = TRANENT;
0x449C	0x0E07      	MOVLW       7
0x449E	0x0100      	MOVLB       0
0x44A0	0x6FE4      	MOVWF       _debugEstado, 1
0x44A2	0x0E07      	MOVLW       7
0x44A4	0x6E00      	MOVWF       R0 
0x44A6	0xD03B      	BRA         L_end_transicionEBP7
;rutinasensores_v4(mstr-slv).h,2260 :: 		}
L_transicionEBP7498:
;rutinasensores_v4(mstr-slv).h,2261 :: 		if((SENSOR6 & !SENSOR1) | (SENSOR6 & !SENSOR3) | (SENSOR6 & !SENSOR5)){
0x44A8	0xB881      	BTFSC       PORTB, 4 
0x44AA	0xD002      	BRA         L__transicionEBP72227
0x44AC	0x80D8      	BSF         STATUS, 0 
0x44AE	0xD001      	BRA         L__transicionEBP72228
L__transicionEBP72227:
0x44B0	0x90D8      	BCF         STATUS, 0 
L__transicionEBP72228:
0x44B2	0xA281      	BTFSS       PORTB, 1 
0x44B4	0xD003      	BRA         L__transicionEBP72229
0x44B6	0xE302      	BNC         L__transicionEBP72229
0x44B8	0x8201      	BSF         R1, 1 
0x44BA	0xD001      	BRA         L__transicionEBP72230
L__transicionEBP72229:
0x44BC	0x9201      	BCF         R1, 1 
L__transicionEBP72230:
0x44BE	0xB481      	BTFSC       PORTB, 2 
0x44C0	0xD002      	BRA         L__transicionEBP72231
0x44C2	0x80D8      	BSF         STATUS, 0 
0x44C4	0xD001      	BRA         L__transicionEBP72232
L__transicionEBP72231:
0x44C6	0x90D8      	BCF         STATUS, 0 
L__transicionEBP72232:
0x44C8	0xA281      	BTFSS       PORTB, 1 
0x44CA	0xD003      	BRA         L__transicionEBP72233
0x44CC	0xE302      	BNC         L__transicionEBP72233
0x44CE	0x8001      	BSF         R1, 0 
0x44D0	0xD001      	BRA         L__transicionEBP72234
L__transicionEBP72233:
0x44D2	0x9001      	BCF         R1, 0 
L__transicionEBP72234:
0x44D4	0xB201      	BTFSC       R1, 1 
0x44D6	0xD004      	BRA         L__transicionEBP72235
0x44D8	0xB001      	BTFSC       R1, 0 
0x44DA	0xD002      	BRA         L__transicionEBP72235
0x44DC	0x9201      	BCF         R1, 1 
0x44DE	0xD001      	BRA         L__transicionEBP72236
L__transicionEBP72235:
0x44E0	0x8201      	BSF         R1, 1 
L__transicionEBP72236:
0x44E2	0xB081      	BTFSC       PORTB, 0 
0x44E4	0xD002      	BRA         L__transicionEBP72237
0x44E6	0x80D8      	BSF         STATUS, 0 
0x44E8	0xD001      	BRA         L__transicionEBP72238
L__transicionEBP72237:
0x44EA	0x90D8      	BCF         STATUS, 0 
L__transicionEBP72238:
0x44EC	0xA281      	BTFSS       PORTB, 1 
0x44EE	0xD003      	BRA         L__transicionEBP72239
0x44F0	0xE302      	BNC         L__transicionEBP72239
0x44F2	0x8001      	BSF         R1, 0 
0x44F4	0xD001      	BRA         L__transicionEBP72240
L__transicionEBP72239:
0x44F6	0x9001      	BCF         R1, 0 
L__transicionEBP72240:
0x44F8	0xB201      	BTFSC       R1, 1 
0x44FA	0xD004      	BRA         L__transicionEBP72241
0x44FC	0xB001      	BTFSC       R1, 0 
0x44FE	0xD002      	BRA         L__transicionEBP72241
0x4500	0x90D8      	BCF         STATUS, 0 
0x4502	0xD001      	BRA         L__transicionEBP72242
L__transicionEBP72241:
0x4504	0x80D8      	BSF         STATUS, 0 
L__transicionEBP72242:
0x4506	0xE30B      	BNC         L_transicionEBP7499
;rutinasensores_v4(mstr-slv).h,2262 :: 		lcd_cmd(_LCD_CLEAR);
0x4508	0x0E01      	MOVLW       1
0x450A	0x0102      	MOVLB       2
0x450C	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x450E	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2263 :: 		return debugEstado = ENTRANDO;
0x4512	0x0E01      	MOVLW       1
0x4514	0x0100      	MOVLB       0
0x4516	0x6FE4      	MOVWF       _debugEstado, 1
0x4518	0x0E01      	MOVLW       1
0x451A	0x6E00      	MOVWF       R0 
0x451C	0xD000      	BRA         L_end_transicionEBP7
;rutinasensores_v4(mstr-slv).h,2264 :: 		}
L_transicionEBP7499:
;rutinasensores_v4(mstr-slv).h,2265 :: 		}
L_transicionEBP7497:
;rutinasensores_v4(mstr-slv).h,2266 :: 		}
L_end_transicionEBP7:
0x451E	0x0012      	RETURN      0
; end of _transicionEBP7
_entrandoBP4:
;rutinasensores_v4(mstr-slv).h,1948 :: 		short entrandoBP4(short estado){
;rutinasensores_v4(mstr-slv).h,1949 :: 		if(estado == ENTRANDO){
0x4520	0x0102      	MOVLB       2
0x4522	0x5114      	MOVF        FARG_entrandoBP4_estado, 0, 1
0x4524	0x0A01      	XORLW       1
0x4526	0xE15C      	BNZ         L_entrandoBP4442
;rutinasensores_v4(mstr-slv).h,1950 :: 		LCD_OUTCONST(3,1,"ENTRANDO");
0x4528	0x0E03      	MOVLW       3
0x452A	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x452C	0x0E01      	MOVLW       1
0x452E	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x4530	0x0EFE      	MOVLW       ?lstr_88_MyProject
0x4532	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x4534	0x0ED9      	MOVLW       hi_addr(?lstr_88_MyProject)
0x4536	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x4538	0x0E00      	MOVLW       higher_addr(?lstr_88_MyProject)
0x453A	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x453C	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1951 :: 		if((SENSOR5)){
0x4540	0xA081      	BTFSS       PORTB, 0 
0x4542	0xD008      	BRA         L_entrandoBP4443
;rutinasensores_v4(mstr-slv).h,1952 :: 		lcd_cmd(_LCD_CLEAR);
0x4544	0x0E01      	MOVLW       1
0x4546	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x4548	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1953 :: 		return debugEstadoB = ESPERA;
0x454C	0x0101      	MOVLB       1
0x454E	0x6B3D      	CLRF        _debugEstadoB, 1
0x4550	0x6A00      	CLRF        R0 
0x4552	0xD046      	BRA         L_end_entrandoBP4
;rutinasensores_v4(mstr-slv).h,1954 :: 		}
L_entrandoBP4443:
;rutinasensores_v4(mstr-slv).h,1955 :: 		if((!SENSOR2 & !SENSOR4) | (!SENSOR4 & !SENSOR6) | (!SENSOR2 & !SENSOR6)){
0x4554	0xB883      	BTFSC       PORTD, 4 
0x4556	0xD002      	BRA         L__entrandoBP42012
0x4558	0x8601      	BSF         R1, 3 
0x455A	0xD001      	BRA         L__entrandoBP42013
L__entrandoBP42012:
0x455C	0x9601      	BCF         R1, 3 
L__entrandoBP42013:
0x455E	0xB681      	BTFSC       PORTB, 3 
0x4560	0xD002      	BRA         L__entrandoBP42014
0x4562	0x8001      	BSF         R1, 0 
0x4564	0xD001      	BRA         L__entrandoBP42015
L__entrandoBP42014:
0x4566	0x9001      	BCF         R1, 0 
L__entrandoBP42015:
0x4568	0xA601      	BTFSS       R1, 3 
0x456A	0xD004      	BRA         L__entrandoBP42016
0x456C	0xA001      	BTFSS       R1, 0 
0x456E	0xD002      	BRA         L__entrandoBP42016
0x4570	0x8201      	BSF         R1, 1 
0x4572	0xD001      	BRA         L__entrandoBP42017
L__entrandoBP42016:
0x4574	0x9201      	BCF         R1, 1 
L__entrandoBP42017:
0x4576	0xB281      	BTFSC       PORTB, 1 
0x4578	0xD002      	BRA         L__entrandoBP42018
0x457A	0x8401      	BSF         R1, 2 
0x457C	0xD001      	BRA         L__entrandoBP42019
L__entrandoBP42018:
0x457E	0x9401      	BCF         R1, 2 
L__entrandoBP42019:
0x4580	0xA001      	BTFSS       R1, 0 
0x4582	0xD004      	BRA         L__entrandoBP42020
0x4584	0xA401      	BTFSS       R1, 2 
0x4586	0xD002      	BRA         L__entrandoBP42020
0x4588	0x80D8      	BSF         STATUS, 0 
0x458A	0xD001      	BRA         L__entrandoBP42021
L__entrandoBP42020:
0x458C	0x90D8      	BCF         STATUS, 0 
L__entrandoBP42021:
0x458E	0xB201      	BTFSC       R1, 1 
0x4590	0xD003      	BRA         L__entrandoBP42022
0x4592	0xE202      	BC          L__entrandoBP42022
0x4594	0x9201      	BCF         R1, 1 
0x4596	0xD001      	BRA         L__entrandoBP42023
L__entrandoBP42022:
0x4598	0x8201      	BSF         R1, 1 
L__entrandoBP42023:
0x459A	0xB601      	BTFSC       R1, 3 
0x459C	0xD002      	BRA         L__entrandoBP42024
0x459E	0x9001      	BCF         R1, 0 
0x45A0	0xD001      	BRA         L__entrandoBP42025
L__entrandoBP42024:
0x45A2	0x8001      	BSF         R1, 0 
L__entrandoBP42025:
0x45A4	0xB401      	BTFSC       R1, 2 
0x45A6	0xD002      	BRA         L__entrandoBP42026
0x45A8	0x90D8      	BCF         STATUS, 0 
0x45AA	0xD001      	BRA         L__entrandoBP42027
L__entrandoBP42026:
0x45AC	0x80D8      	BSF         STATUS, 0 
L__entrandoBP42027:
0x45AE	0xA001      	BTFSS       R1, 0 
0x45B0	0xD003      	BRA         L__entrandoBP42028
0x45B2	0xE302      	BNC         L__entrandoBP42028
0x45B4	0x8001      	BSF         R1, 0 
0x45B6	0xD001      	BRA         L__entrandoBP42029
L__entrandoBP42028:
0x45B8	0x9001      	BCF         R1, 0 
L__entrandoBP42029:
0x45BA	0xB201      	BTFSC       R1, 1 
0x45BC	0xD004      	BRA         L__entrandoBP42030
0x45BE	0xB001      	BTFSC       R1, 0 
0x45C0	0xD002      	BRA         L__entrandoBP42030
0x45C2	0x90D8      	BCF         STATUS, 0 
0x45C4	0xD001      	BRA         L__entrandoBP42031
L__entrandoBP42030:
0x45C6	0x80D8      	BSF         STATUS, 0 
L__entrandoBP42031:
0x45C8	0xE30B      	BNC         L_entrandoBP4444
;rutinasensores_v4(mstr-slv).h,1956 :: 		lcd_cmd(_LCD_CLEAR);
0x45CA	0x0E01      	MOVLW       1
0x45CC	0x0102      	MOVLB       2
0x45CE	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x45D0	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1957 :: 		return debugEstadoB = TRANSICION;
0x45D4	0x0E02      	MOVLW       2
0x45D6	0x0101      	MOVLB       1
0x45D8	0x6F3D      	MOVWF       _debugEstadoB, 1
0x45DA	0x0E02      	MOVLW       2
0x45DC	0x6E00      	MOVWF       R0 
0x45DE	0xD000      	BRA         L_end_entrandoBP4
;rutinasensores_v4(mstr-slv).h,1958 :: 		}
L_entrandoBP4444:
;rutinasensores_v4(mstr-slv).h,1959 :: 		}
L_entrandoBP4442:
;rutinasensores_v4(mstr-slv).h,1960 :: 		}
L_end_entrandoBP4:
0x45E0	0x0012      	RETURN      0
; end of _entrandoBP4
_salioBP4:
;rutinasensores_v4(mstr-slv).h,2054 :: 		short salioBP4(short estado){
;rutinasensores_v4(mstr-slv).h,2055 :: 		if(estado == SALIO){
0x45E2	0x0102      	MOVLB       2
0x45E4	0x5114      	MOVF        FARG_salioBP4_estado, 0, 1
0x45E6	0x0A06      	XORLW       6
0x45E8	0xA4D8      	BTFSS       STATUS, 2 
0x45EA	0xD11B      	BRA         L_salioBP4463
;rutinasensores_v4(mstr-slv).h,2056 :: 		LCD_OUTCONST(3,1,"GRACIAS!");
0x45EC	0x0E03      	MOVLW       3
0x45EE	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x45F0	0x0E01      	MOVLW       1
0x45F2	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x45F4	0x0EA0      	MOVLW       ?lstr_95_MyProject
0x45F6	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x45F8	0x0EDA      	MOVLW       hi_addr(?lstr_95_MyProject)
0x45FA	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x45FC	0x0E00      	MOVLW       higher_addr(?lstr_95_MyProject)
0x45FE	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x4600	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,2057 :: 		pSuben = eepromLeeNumero(0x0000,2);
0x4604	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x4606	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x4608	0x0E02      	MOVLW       2
0x460A	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x460C	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x4610	0xF137C000  	MOVFF       R0, _pSuben
0x4614	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,2058 :: 		pBajan = eepromLeeNumero(0x0003,2) + 1;
0x4618	0x0E03      	MOVLW       3
0x461A	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x461C	0x0E00      	MOVLW       0
0x461E	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x4620	0x0E02      	MOVLW       2
0x4622	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x4624	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x4628	0x4A00      	INFSNZ      R0, 1 
0x462A	0x2A01      	INCF        R1, 1 
0x462C	0xF135C000  	MOVFF       R0, _pBajan
0x4630	0xF136C001  	MOVFF       R1, _pBajan+1
;rutinasensores_v4(mstr-slv).h,2059 :: 		eepromEscribeNumero(0x0003,pBajan,2);
0x4634	0x0E03      	MOVLW       3
0x4636	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x4638	0x0E00      	MOVLW       0
0x463A	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x463C	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x4640	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x4644	0x0E00      	MOVLW       0
0x4646	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x4648	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x464A	0x0E02      	MOVLW       2
0x464C	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x464E	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,2060 :: 		pBajan = eepromLeeNumero(0x0003,2);
0x4652	0x0E03      	MOVLW       3
0x4654	0x0102      	MOVLB       2
0x4656	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x4658	0x0E00      	MOVLW       0
0x465A	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x465C	0x0E02      	MOVLW       2
0x465E	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x4660	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x4664	0xF219C000  	MOVFF       R0, FLOC__salioBP4+4
0x4668	0xF21AC001  	MOVFF       R1, FLOC__salioBP4+5
0x466C	0xF21BC002  	MOVFF       R2, FLOC__salioBP4+6
0x4670	0xF21CC003  	MOVFF       R3, FLOC__salioBP4+7
0x4674	0xF135C219  	MOVFF       FLOC__salioBP4+4, _pBajan
0x4678	0xF136C21A  	MOVFF       FLOC__salioBP4+5, _pBajan+1
;rutinasensores_v4(mstr-slv).h,2061 :: 		pasajerosVerdaderos = ((float)pSuben + (float)pBajan)/2;
0x467C	0xF000C137  	MOVFF       _pSuben, R0
0x4680	0xF001C138  	MOVFF       _pSuben+1, R1
0x4684	0xF008EC65  	CALL        _Word2Double, 0
0x4688	0xF215C000  	MOVFF       R0, FLOC__salioBP4
0x468C	0xF216C001  	MOVFF       R1, FLOC__salioBP4+1
0x4690	0xF217C002  	MOVFF       R2, FLOC__salioBP4+2
0x4694	0xF218C003  	MOVFF       R3, FLOC__salioBP4+3
0x4698	0xF000C219  	MOVFF       FLOC__salioBP4+4, R0
0x469C	0xF001C21A  	MOVFF       FLOC__salioBP4+5, R1
0x46A0	0xF008EC65  	CALL        _Word2Double, 0
0x46A4	0xF004C215  	MOVFF       FLOC__salioBP4, R4
0x46A8	0xF005C216  	MOVFF       FLOC__salioBP4+1, R5
0x46AC	0xF006C217  	MOVFF       FLOC__salioBP4+2, R6
0x46B0	0xF007C218  	MOVFF       FLOC__salioBP4+3, R7
0x46B4	0xF004EC8D  	CALL        _Add_32x32_FP, 0
0x46B8	0x0E00      	MOVLW       0
0x46BA	0x6E04      	MOVWF       R4 
0x46BC	0x0E00      	MOVLW       0
0x46BE	0x6E05      	MOVWF       R5 
0x46C0	0x0E00      	MOVLW       0
0x46C2	0x6E06      	MOVWF       R6 
0x46C4	0x0E80      	MOVLW       128
0x46C6	0x6E07      	MOVWF       R7 
0x46C8	0xF007ECA7  	CALL        _Div_32x32_FP, 0
0x46CC	0xF139C000  	MOVFF       R0, _pasajerosVerdaderos
0x46D0	0xF13AC001  	MOVFF       R1, _pasajerosVerdaderos+1
0x46D4	0xF13BC002  	MOVFF       R2, _pasajerosVerdaderos+2
0x46D8	0xF13CC003  	MOVFF       R3, _pasajerosVerdaderos+3
;rutinasensores_v4(mstr-slv).h,2062 :: 		eepromEscribeNumero(0x0009, pasajerosVerdaderos, 2);
0x46DC	0x0E09      	MOVLW       9
0x46DE	0x0102      	MOVLB       2
0x46E0	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x46E2	0x0E00      	MOVLW       0
0x46E4	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x46E6	0xF007EC0E  	CALL        _Double2Longint, 0
0x46EA	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x46EE	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x46F2	0xF221C002  	MOVFF       R2, FARG_eepromEscribeNumero_Dato+2
0x46F6	0xF222C003  	MOVFF       R3, FARG_eepromEscribeNumero_Dato+3
0x46FA	0x0E02      	MOVLW       2
0x46FC	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x46FE	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,2063 :: 		if(MSTR){
0x4702	0xA483      	BTFSS       PORTD, 2 
0x4704	0xD085      	BRA         L_salioBP4464
;rutinasensores_v4(mstr-slv).h,2064 :: 		pVerdaderosMEntero = eepromLeeNumero(0x0009, 2);
0x4706	0x0E09      	MOVLW       9
0x4708	0x0102      	MOVLB       2
0x470A	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x470C	0x0E00      	MOVLW       0
0x470E	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x4710	0x0E02      	MOVLW       2
0x4712	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x4714	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x4718	0xF12FC000  	MOVFF       R0, _pVerdaderosMEntero
0x471C	0xF130C001  	MOVFF       R1, _pVerdaderosMEntero+1
;rutinasensores_v4(mstr-slv).h,2065 :: 		pVerdaderosEEntero = eepromLeeNumero(0x0007, 2);
0x4720	0x0E07      	MOVLW       7
0x4722	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x4724	0x0E00      	MOVLW       0
0x4726	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x4728	0x0E02      	MOVLW       2
0x472A	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x472C	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x4730	0xF12DC000  	MOVFF       R0, _pVerdaderosEEntero
0x4734	0xF12EC001  	MOVFF       R1, _pVerdaderosEEntero+1
;rutinasensores_v4(mstr-slv).h,2066 :: 		pasajerosTotalesL = pVerdaderosMEntero + pVerdaderosEEntero;
0x4738	0x5000      	MOVF        R0, 0 
0x473A	0x0101      	MOVLB       1
0x473C	0x252F      	ADDWF       _pVerdaderosMEntero, 0, 1
0x473E	0x6F33      	MOVWF       _pasajerosTotalesL, 1
0x4740	0x5001      	MOVF        R1, 0 
0x4742	0x2130      	ADDWFC      _pVerdaderosMEntero+1, 0, 1
0x4744	0x6F34      	MOVWF       _pasajerosTotalesL+1, 1
;rutinasensores_v4(mstr-slv).h,2067 :: 		totalCalculado = (eepromLeeNumero(0x0000, 2)+eepromLeeNumero(0x0003, 2)+eepromLeeNumero(0x0900, 2)+eepromLeeNumero(0x0700, 2))/2;
0x4746	0x0102      	MOVLB       2
0x4748	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x474A	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x474C	0x0E02      	MOVLW       2
0x474E	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x4750	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x4754	0xF215C000  	MOVFF       R0, FLOC__salioBP4
0x4758	0xF216C001  	MOVFF       R1, FLOC__salioBP4+1
0x475C	0xF217C002  	MOVFF       R2, FLOC__salioBP4+2
0x4760	0xF218C003  	MOVFF       R3, FLOC__salioBP4+3
0x4764	0x0E03      	MOVLW       3
0x4766	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x4768	0x0E00      	MOVLW       0
0x476A	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x476C	0x0E02      	MOVLW       2
0x476E	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x4770	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x4774	0x5000      	MOVF        R0, 0 
0x4776	0x2715      	ADDWF       FLOC__salioBP4, 1, 1
0x4778	0x5001      	MOVF        R1, 0 
0x477A	0x2316      	ADDWFC      FLOC__salioBP4+1, 1, 1
0x477C	0x5002      	MOVF        R2, 0 
0x477E	0x2317      	ADDWFC      FLOC__salioBP4+2, 1, 1
0x4780	0x5003      	MOVF        R3, 0 
0x4782	0x2318      	ADDWFC      FLOC__salioBP4+3, 1, 1
0x4784	0x0E00      	MOVLW       0
0x4786	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x4788	0x0E09      	MOVLW       9
0x478A	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x478C	0x0E02      	MOVLW       2
0x478E	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x4790	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x4794	0x5000      	MOVF        R0, 0 
0x4796	0x2715      	ADDWF       FLOC__salioBP4, 1, 1
0x4798	0x5001      	MOVF        R1, 0 
0x479A	0x2316      	ADDWFC      FLOC__salioBP4+1, 1, 1
0x479C	0x5002      	MOVF        R2, 0 
0x479E	0x2317      	ADDWFC      FLOC__salioBP4+2, 1, 1
0x47A0	0x5003      	MOVF        R3, 0 
0x47A2	0x2318      	ADDWFC      FLOC__salioBP4+3, 1, 1
0x47A4	0x0E00      	MOVLW       0
0x47A6	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x47A8	0x0E07      	MOVLW       7
0x47AA	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x47AC	0x0E02      	MOVLW       2
0x47AE	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x47B0	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x47B4	0x5000      	MOVF        R0, 0 
0x47B6	0x2515      	ADDWF       FLOC__salioBP4, 0, 1
0x47B8	0x6E05      	MOVWF       R5 
0x47BA	0x5001      	MOVF        R1, 0 
0x47BC	0x2116      	ADDWFC      FLOC__salioBP4+1, 0, 1
0x47BE	0x6E06      	MOVWF       R6 
0x47C0	0x5002      	MOVF        R2, 0 
0x47C2	0x2117      	ADDWFC      FLOC__salioBP4+2, 0, 1
0x47C4	0x6E07      	MOVWF       R7 
0x47C6	0x5003      	MOVF        R3, 0 
0x47C8	0x2118      	ADDWFC      FLOC__salioBP4+3, 0, 1
0x47CA	0x6E08      	MOVWF       R8 
0x47CC	0xF000C005  	MOVFF       R5, R0
0x47D0	0xF001C006  	MOVFF       R6, R1
0x47D4	0xF002C007  	MOVFF       R7, R2
0x47D8	0xF003C008  	MOVFF       R8, R3
0x47DC	0x3203      	RRCF        R3, 1 
0x47DE	0x3202      	RRCF        R2, 1 
0x47E0	0x3201      	RRCF        R1, 1 
0x47E2	0x3200      	RRCF        R0, 1 
0x47E4	0x9E03      	BCF         R3, 7 
0x47E6	0xBC03      	BTFSC       R3, 6 
0x47E8	0x8E03      	BSF         R3, 7 
0x47EA	0xF131C000  	MOVFF       R0, _totalCalculado
0x47EE	0xF132C001  	MOVFF       R1, _totalCalculado+1
;rutinasensores_v4(mstr-slv).h,2068 :: 		eepromEscribeNumero(0x0005, totalCalculado, 2);
0x47F2	0x0E05      	MOVLW       5
0x47F4	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x47F6	0x0E00      	MOVLW       0
0x47F8	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x47FA	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x47FE	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x4802	0x0E00      	MOVLW       0
0x4804	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x4806	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x4808	0x0E02      	MOVLW       2
0x480A	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x480C	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,2069 :: 		}
L_salioBP4464:
;rutinasensores_v4(mstr-slv).h,2070 :: 		lcd_cmd(_LCD_CLEAR);
0x4810	0x0E01      	MOVLW       1
0x4812	0x0102      	MOVLB       2
0x4814	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x4816	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2071 :: 		return debugEstadoB = ESPERA;
0x481A	0x0101      	MOVLB       1
0x481C	0x6B3D      	CLRF        _debugEstadoB, 1
0x481E	0x6A00      	CLRF        R0 
0x4820	0xD000      	BRA         L_end_salioBP4
;rutinasensores_v4(mstr-slv).h,2072 :: 		}
L_salioBP4463:
;rutinasensores_v4(mstr-slv).h,2073 :: 		}
L_end_salioBP4:
0x4822	0x0012      	RETURN      0
; end of _salioBP4
_entrandoBP7:
;rutinasensores_v4(mstr-slv).h,2240 :: 		short entrandoBP7(short estado){
;rutinasensores_v4(mstr-slv).h,2241 :: 		if(estado == ENTRANDO){
0x4824	0x0102      	MOVLB       2
0x4826	0x5114      	MOVF        FARG_entrandoBP7_estado, 0, 1
0x4828	0x0A01      	XORLW       1
0x482A	0xE130      	BNZ         L_entrandoBP7494
;rutinasensores_v4(mstr-slv).h,2242 :: 		LCD_OUTCONST(3,1,"ENTRANDO");
0x482C	0x0E03      	MOVLW       3
0x482E	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x4830	0x0E01      	MOVLW       1
0x4832	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x4834	0x0EF1      	MOVLW       ?lstr_104_MyProject
0x4836	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x4838	0x0EDA      	MOVLW       hi_addr(?lstr_104_MyProject)
0x483A	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x483C	0x0E00      	MOVLW       higher_addr(?lstr_104_MyProject)
0x483E	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x4840	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,2243 :: 		if((SENSOR1 & SENSOR3 & SENSOR5)){
0x4844	0xA881      	BTFSS       PORTB, 4 
0x4846	0xD004      	BRA         L__entrandoBP72218
0x4848	0xA481      	BTFSS       PORTB, 2 
0x484A	0xD002      	BRA         L__entrandoBP72218
0x484C	0x80D8      	BSF         STATUS, 0 
0x484E	0xD001      	BRA         L__entrandoBP72219
L__entrandoBP72218:
0x4850	0x90D8      	BCF         STATUS, 0 
L__entrandoBP72219:
0x4852	0xE304      	BNC         L__entrandoBP72220
0x4854	0xA081      	BTFSS       PORTB, 0 
0x4856	0xD002      	BRA         L__entrandoBP72220
0x4858	0x8001      	BSF         R1, 0 
0x485A	0xD001      	BRA         L__entrandoBP72221
L__entrandoBP72220:
0x485C	0x9001      	BCF         R1, 0 
L__entrandoBP72221:
0x485E	0xA001      	BTFSS       R1, 0 
0x4860	0xD008      	BRA         L_entrandoBP7495
;rutinasensores_v4(mstr-slv).h,2244 :: 		lcd_cmd(_LCD_CLEAR);
0x4862	0x0E01      	MOVLW       1
0x4864	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x4866	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2245 :: 		return debugEstadoB = ESPERA;
0x486A	0x0101      	MOVLB       1
0x486C	0x6B3D      	CLRF        _debugEstadoB, 1
0x486E	0x6A00      	CLRF        R0 
0x4870	0xD00D      	BRA         L_end_entrandoBP7
;rutinasensores_v4(mstr-slv).h,2246 :: 		}
L_entrandoBP7495:
;rutinasensores_v4(mstr-slv).h,2247 :: 		if(!SENSOR6){
0x4872	0xB281      	BTFSC       PORTB, 1 
0x4874	0xD00B      	BRA         L_entrandoBP7496
;rutinasensores_v4(mstr-slv).h,2248 :: 		lcd_cmd(_LCD_CLEAR);
0x4876	0x0E01      	MOVLW       1
0x4878	0x0102      	MOVLB       2
0x487A	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x487C	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2249 :: 		return debugEstadoB = TRANSICION;
0x4880	0x0E02      	MOVLW       2
0x4882	0x0101      	MOVLB       1
0x4884	0x6F3D      	MOVWF       _debugEstadoB, 1
0x4886	0x0E02      	MOVLW       2
0x4888	0x6E00      	MOVWF       R0 
0x488A	0xD000      	BRA         L_end_entrandoBP7
;rutinasensores_v4(mstr-slv).h,2250 :: 		}
L_entrandoBP7496:
;rutinasensores_v4(mstr-slv).h,2251 :: 		}
L_entrandoBP7494:
;rutinasensores_v4(mstr-slv).h,2252 :: 		}
L_end_entrandoBP7:
0x488C	0x0012      	RETURN      0
; end of _entrandoBP7
_esperaBP7:
;rutinasensores_v4(mstr-slv).h,2225 :: 		short esperaBP7(short estado){
;rutinasensores_v4(mstr-slv).h,2226 :: 		if(estado == ESPERA){
0x488E	0x0102      	MOVLB       2
0x4890	0x5114      	MOVF        FARG_esperaBP7_estado, 0, 1
0x4892	0x0A00      	XORLW       0
0x4894	0xE136      	BNZ         L_esperaBP7491
;rutinasensores_v4(mstr-slv).h,2227 :: 		muestraEstatus();
0x4896	0xF008EC8B  	CALL        _muestraEstatus, 0
;rutinasensores_v4(mstr-slv).h,2229 :: 		if((!SENSOR1 | !SENSOR3 | !SENSOR5)){
0x489A	0xB881      	BTFSC       PORTB, 4 
0x489C	0xD002      	BRA         L__esperaBP72207
0x489E	0x8001      	BSF         R1, 0 
0x48A0	0xD001      	BRA         L__esperaBP72208
L__esperaBP72207:
0x48A2	0x9001      	BCF         R1, 0 
L__esperaBP72208:
0x48A4	0xB481      	BTFSC       PORTB, 2 
0x48A6	0xD002      	BRA         L__esperaBP72209
0x48A8	0x80D8      	BSF         STATUS, 0 
0x48AA	0xD001      	BRA         L__esperaBP72210
L__esperaBP72209:
0x48AC	0x90D8      	BCF         STATUS, 0 
L__esperaBP72210:
0x48AE	0xB001      	BTFSC       R1, 0 
0x48B0	0xD003      	BRA         L__esperaBP72211
0x48B2	0xE202      	BC          L__esperaBP72211
0x48B4	0x9001      	BCF         R1, 0 
0x48B6	0xD001      	BRA         L__esperaBP72212
L__esperaBP72211:
0x48B8	0x8001      	BSF         R1, 0 
L__esperaBP72212:
0x48BA	0xB081      	BTFSC       PORTB, 0 
0x48BC	0xD002      	BRA         L__esperaBP72213
0x48BE	0x80D8      	BSF         STATUS, 0 
0x48C0	0xD001      	BRA         L__esperaBP72214
L__esperaBP72213:
0x48C2	0x90D8      	BCF         STATUS, 0 
L__esperaBP72214:
0x48C4	0xB001      	BTFSC       R1, 0 
0x48C6	0xD003      	BRA         L__esperaBP72215
0x48C8	0xE202      	BC          L__esperaBP72215
0x48CA	0x9001      	BCF         R1, 0 
0x48CC	0xD001      	BRA         L__esperaBP72216
L__esperaBP72215:
0x48CE	0x8001      	BSF         R1, 0 
L__esperaBP72216:
0x48D0	0xA001      	BTFSS       R1, 0 
0x48D2	0xD00A      	BRA         L_esperaBP7492
;rutinasensores_v4(mstr-slv).h,2230 :: 		lcd_cmd(_LCD_CLEAR);
0x48D4	0x0E01      	MOVLW       1
0x48D6	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x48D8	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2231 :: 		return debugEstadoB = ENTRANDO;
0x48DC	0x0E01      	MOVLW       1
0x48DE	0x0101      	MOVLB       1
0x48E0	0x6F3D      	MOVWF       _debugEstadoB, 1
0x48E2	0x0E01      	MOVLW       1
0x48E4	0x6E00      	MOVWF       R0 
0x48E6	0xD00D      	BRA         L_end_esperaBP7
;rutinasensores_v4(mstr-slv).h,2232 :: 		}
L_esperaBP7492:
;rutinasensores_v4(mstr-slv).h,2233 :: 		if((!SENSOR6)){
0x48E8	0xB281      	BTFSC       PORTB, 1 
0x48EA	0xD00B      	BRA         L_esperaBP7493
;rutinasensores_v4(mstr-slv).h,2234 :: 		lcd_cmd(_LCD_CLEAR);
0x48EC	0x0E01      	MOVLW       1
0x48EE	0x0102      	MOVLB       2
0x48F0	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x48F2	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2235 :: 		return debugEstadoB = SALIENDO;
0x48F6	0x0E04      	MOVLW       4
0x48F8	0x0101      	MOVLB       1
0x48FA	0x6F3D      	MOVWF       _debugEstadoB, 1
0x48FC	0x0E04      	MOVLW       4
0x48FE	0x6E00      	MOVWF       R0 
0x4900	0xD000      	BRA         L_end_esperaBP7
;rutinasensores_v4(mstr-slv).h,2236 :: 		}
L_esperaBP7493:
;rutinasensores_v4(mstr-slv).h,2237 :: 		}
L_esperaBP7491:
;rutinasensores_v4(mstr-slv).h,2238 :: 		}
L_end_esperaBP7:
0x4902	0x0012      	RETURN      0
; end of _esperaBP7
_esperaBP9:
;rutinasensores_v4(mstr-slv).h,2371 :: 		short esperaBP9(short estado){
;rutinasensores_v4(mstr-slv).h,2372 :: 		if(estado == ESPERA){
0x4904	0x0102      	MOVLB       2
0x4906	0x5114      	MOVF        FARG_esperaBP9_estado, 0, 1
0x4908	0x0A00      	XORLW       0
0x490A	0xE136      	BNZ         L_esperaBP9517
;rutinasensores_v4(mstr-slv).h,2373 :: 		muestraEstatus();
0x490C	0xF008EC8B  	CALL        _muestraEstatus, 0
;rutinasensores_v4(mstr-slv).h,2375 :: 		if((!SENSOR1 | !SENSOR3 | !SENSOR5)){
0x4910	0xB881      	BTFSC       PORTB, 4 
0x4912	0xD002      	BRA         L__esperaBP92300
0x4914	0x8001      	BSF         R1, 0 
0x4916	0xD001      	BRA         L__esperaBP92301
L__esperaBP92300:
0x4918	0x9001      	BCF         R1, 0 
L__esperaBP92301:
0x491A	0xB481      	BTFSC       PORTB, 2 
0x491C	0xD002      	BRA         L__esperaBP92302
0x491E	0x80D8      	BSF         STATUS, 0 
0x4920	0xD001      	BRA         L__esperaBP92303
L__esperaBP92302:
0x4922	0x90D8      	BCF         STATUS, 0 
L__esperaBP92303:
0x4924	0xB001      	BTFSC       R1, 0 
0x4926	0xD003      	BRA         L__esperaBP92304
0x4928	0xE202      	BC          L__esperaBP92304
0x492A	0x9001      	BCF         R1, 0 
0x492C	0xD001      	BRA         L__esperaBP92305
L__esperaBP92304:
0x492E	0x8001      	BSF         R1, 0 
L__esperaBP92305:
0x4930	0xB081      	BTFSC       PORTB, 0 
0x4932	0xD002      	BRA         L__esperaBP92306
0x4934	0x80D8      	BSF         STATUS, 0 
0x4936	0xD001      	BRA         L__esperaBP92307
L__esperaBP92306:
0x4938	0x90D8      	BCF         STATUS, 0 
L__esperaBP92307:
0x493A	0xB001      	BTFSC       R1, 0 
0x493C	0xD003      	BRA         L__esperaBP92308
0x493E	0xE202      	BC          L__esperaBP92308
0x4940	0x9001      	BCF         R1, 0 
0x4942	0xD001      	BRA         L__esperaBP92309
L__esperaBP92308:
0x4944	0x8001      	BSF         R1, 0 
L__esperaBP92309:
0x4946	0xA001      	BTFSS       R1, 0 
0x4948	0xD00A      	BRA         L_esperaBP9518
;rutinasensores_v4(mstr-slv).h,2376 :: 		lcd_cmd(_LCD_CLEAR);
0x494A	0x0E01      	MOVLW       1
0x494C	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x494E	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2377 :: 		return debugEstadoB = ENTRANDO;
0x4952	0x0E01      	MOVLW       1
0x4954	0x0101      	MOVLB       1
0x4956	0x6F3D      	MOVWF       _debugEstadoB, 1
0x4958	0x0E01      	MOVLW       1
0x495A	0x6E00      	MOVWF       R0 
0x495C	0xD00D      	BRA         L_end_esperaBP9
;rutinasensores_v4(mstr-slv).h,2378 :: 		}
L_esperaBP9518:
;rutinasensores_v4(mstr-slv).h,2379 :: 		if((!SENSOR2)){
0x495E	0xB883      	BTFSC       PORTD, 4 
0x4960	0xD00B      	BRA         L_esperaBP9519
;rutinasensores_v4(mstr-slv).h,2380 :: 		lcd_cmd(_LCD_CLEAR);
0x4962	0x0E01      	MOVLW       1
0x4964	0x0102      	MOVLB       2
0x4966	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x4968	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2381 :: 		return debugEstadoB = SALIENDO;
0x496C	0x0E04      	MOVLW       4
0x496E	0x0101      	MOVLB       1
0x4970	0x6F3D      	MOVWF       _debugEstadoB, 1
0x4972	0x0E04      	MOVLW       4
0x4974	0x6E00      	MOVWF       R0 
0x4976	0xD000      	BRA         L_end_esperaBP9
;rutinasensores_v4(mstr-slv).h,2382 :: 		}
L_esperaBP9519:
;rutinasensores_v4(mstr-slv).h,2383 :: 		}
L_esperaBP9517:
;rutinasensores_v4(mstr-slv).h,2384 :: 		}
L_end_esperaBP9:
0x4978	0x0012      	RETURN      0
; end of _esperaBP9
_transicionSalBP9:
;rutinasensores_v4(mstr-slv).h,2478 :: 		short transicionSalBP9(short estado){
;rutinasensores_v4(mstr-slv).h,2479 :: 		if(estado == TRANSAL){
0x497A	0x0102      	MOVLB       2
0x497C	0x5114      	MOVF        FARG_transicionSalBP9_estado, 0, 1
0x497E	0x0A05      	XORLW       5
0x4980	0xE153      	BNZ         L_transicionSalBP9538
;rutinasensores_v4(mstr-slv).h,2480 :: 		LCD_OUTCONST(3,1,"TRANSICION SALIDA");
0x4982	0x0E03      	MOVLW       3
0x4984	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x4986	0x0E01      	MOVLW       1
0x4988	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x498A	0x0E64      	MOVLW       ?lstr_118_MyProject
0x498C	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x498E	0x0ED7      	MOVLW       hi_addr(?lstr_118_MyProject)
0x4990	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x4992	0x0E00      	MOVLW       higher_addr(?lstr_118_MyProject)
0x4994	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x4996	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,2481 :: 		if(!SENSOR2 | !SENSOR4 | !SENSOR6){
0x499A	0xB883      	BTFSC       PORTD, 4 
0x499C	0xD002      	BRA         L__transicionSalBP92385
0x499E	0x8001      	BSF         R1, 0 
0x49A0	0xD001      	BRA         L__transicionSalBP92386
L__transicionSalBP92385:
0x49A2	0x9001      	BCF         R1, 0 
L__transicionSalBP92386:
0x49A4	0xB681      	BTFSC       PORTB, 3 
0x49A6	0xD002      	BRA         L__transicionSalBP92387
0x49A8	0x80D8      	BSF         STATUS, 0 
0x49AA	0xD001      	BRA         L__transicionSalBP92388
L__transicionSalBP92387:
0x49AC	0x90D8      	BCF         STATUS, 0 
L__transicionSalBP92388:
0x49AE	0xB001      	BTFSC       R1, 0 
0x49B0	0xD003      	BRA         L__transicionSalBP92389
0x49B2	0xE202      	BC          L__transicionSalBP92389
0x49B4	0x9001      	BCF         R1, 0 
0x49B6	0xD001      	BRA         L__transicionSalBP92390
L__transicionSalBP92389:
0x49B8	0x8001      	BSF         R1, 0 
L__transicionSalBP92390:
0x49BA	0xB281      	BTFSC       PORTB, 1 
0x49BC	0xD002      	BRA         L__transicionSalBP92391
0x49BE	0x80D8      	BSF         STATUS, 0 
0x49C0	0xD001      	BRA         L__transicionSalBP92392
L__transicionSalBP92391:
0x49C2	0x90D8      	BCF         STATUS, 0 
L__transicionSalBP92392:
0x49C4	0xB001      	BTFSC       R1, 0 
0x49C6	0xD003      	BRA         L__transicionSalBP92393
0x49C8	0xE202      	BC          L__transicionSalBP92393
0x49CA	0x9001      	BCF         R1, 0 
0x49CC	0xD001      	BRA         L__transicionSalBP92394
L__transicionSalBP92393:
0x49CE	0x8001      	BSF         R1, 0 
L__transicionSalBP92394:
0x49D0	0xA001      	BTFSS       R1, 0 
0x49D2	0xD00A      	BRA         L_transicionSalBP9539
;rutinasensores_v4(mstr-slv).h,2482 :: 		lcd_cmd(_LCD_CLEAR);
0x49D4	0x0E01      	MOVLW       1
0x49D6	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x49D8	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2483 :: 		return debugEstadoB = TRANSICIONS;
0x49DC	0x0E08      	MOVLW       8
0x49DE	0x0101      	MOVLB       1
0x49E0	0x6F3D      	MOVWF       _debugEstadoB, 1
0x49E2	0x0E08      	MOVLW       8
0x49E4	0x6E00      	MOVWF       R0 
0x49E6	0xD020      	BRA         L_end_transicionSalBP9
;rutinasensores_v4(mstr-slv).h,2484 :: 		}
L_transicionSalBP9539:
;rutinasensores_v4(mstr-slv).h,2485 :: 		if((SENSOR1 & SENSOR3 & SENSOR5) & (SENSOR2)){
0x49E8	0xA881      	BTFSS       PORTB, 4 
0x49EA	0xD004      	BRA         L__transicionSalBP92395
0x49EC	0xA481      	BTFSS       PORTB, 2 
0x49EE	0xD002      	BRA         L__transicionSalBP92395
0x49F0	0x80D8      	BSF         STATUS, 0 
0x49F2	0xD001      	BRA         L__transicionSalBP92396
L__transicionSalBP92395:
0x49F4	0x90D8      	BCF         STATUS, 0 
L__transicionSalBP92396:
0x49F6	0xE304      	BNC         L__transicionSalBP92397
0x49F8	0xA081      	BTFSS       PORTB, 0 
0x49FA	0xD002      	BRA         L__transicionSalBP92397
0x49FC	0x8001      	BSF         R1, 0 
0x49FE	0xD001      	BRA         L__transicionSalBP92398
L__transicionSalBP92397:
0x4A00	0x9001      	BCF         R1, 0 
L__transicionSalBP92398:
0x4A02	0xA001      	BTFSS       R1, 0 
0x4A04	0xD004      	BRA         L__transicionSalBP92399
0x4A06	0xA883      	BTFSS       PORTD, 4 
0x4A08	0xD002      	BRA         L__transicionSalBP92399
0x4A0A	0x80D8      	BSF         STATUS, 0 
0x4A0C	0xD001      	BRA         L__transicionSalBP92400
L__transicionSalBP92399:
0x4A0E	0x90D8      	BCF         STATUS, 0 
L__transicionSalBP92400:
0x4A10	0xE30B      	BNC         L_transicionSalBP9540
;rutinasensores_v4(mstr-slv).h,2486 :: 		lcd_cmd(_LCD_CLEAR);
0x4A12	0x0E01      	MOVLW       1
0x4A14	0x0102      	MOVLB       2
0x4A16	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x4A18	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2487 :: 		return debugEstadoB = SALIO;
0x4A1C	0x0E06      	MOVLW       6
0x4A1E	0x0101      	MOVLB       1
0x4A20	0x6F3D      	MOVWF       _debugEstadoB, 1
0x4A22	0x0E06      	MOVLW       6
0x4A24	0x6E00      	MOVWF       R0 
0x4A26	0xD000      	BRA         L_end_transicionSalBP9
;rutinasensores_v4(mstr-slv).h,2488 :: 		}
L_transicionSalBP9540:
;rutinasensores_v4(mstr-slv).h,2489 :: 		}
L_transicionSalBP9538:
;rutinasensores_v4(mstr-slv).h,2490 :: 		}
L_end_transicionSalBP9:
0x4A28	0x0012      	RETURN      0
; end of _transicionSalBP9
_transicionSBP9:
;rutinasensores_v4(mstr-slv).h,2464 :: 		short transicionSBP9(short estado){
;rutinasensores_v4(mstr-slv).h,2465 :: 		if(estado == TRANSICIONS){
0x4A2A	0x0102      	MOVLB       2
0x4A2C	0x5114      	MOVF        FARG_transicionSBP9_estado, 0, 1
0x4A2E	0x0A08      	XORLW       8
0x4A30	0xE13D      	BNZ         L_transicionSBP9535
;rutinasensores_v4(mstr-slv).h,2466 :: 		lcd_outConst(3, 1, "TRANSICION");
0x4A32	0x0E03      	MOVLW       3
0x4A34	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x4A36	0x0E01      	MOVLW       1
0x4A38	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x4A3A	0x0EA2      	MOVLW       ?lstr_117_MyProject
0x4A3C	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x4A3E	0x0ED9      	MOVLW       hi_addr(?lstr_117_MyProject)
0x4A40	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x4A42	0x0E00      	MOVLW       higher_addr(?lstr_117_MyProject)
0x4A44	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x4A46	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,2467 :: 		if(SENSOR2){
0x4A4A	0xA883      	BTFSS       PORTD, 4 
0x4A4C	0xD00A      	BRA         L_transicionSBP9536
;rutinasensores_v4(mstr-slv).h,2468 :: 		lcd_cmd(_LCD_CLEAR);
0x4A4E	0x0E01      	MOVLW       1
0x4A50	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x4A52	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2469 :: 		return debugEstadoB = TRANSAL;
0x4A56	0x0E05      	MOVLW       5
0x4A58	0x0101      	MOVLB       1
0x4A5A	0x6F3D      	MOVWF       _debugEstadoB, 1
0x4A5C	0x0E05      	MOVLW       5
0x4A5E	0x6E00      	MOVWF       R0 
0x4A60	0xD025      	BRA         L_end_transicionSBP9
;rutinasensores_v4(mstr-slv).h,2470 :: 		}
L_transicionSBP9536:
;rutinasensores_v4(mstr-slv).h,2471 :: 		if((SENSOR1 & SENSOR3 & SENSOR5 & !SENSOR2)){
0x4A62	0xA881      	BTFSS       PORTB, 4 
0x4A64	0xD004      	BRA         L__transicionSBP92376
0x4A66	0xA481      	BTFSS       PORTB, 2 
0x4A68	0xD002      	BRA         L__transicionSBP92376
0x4A6A	0x80D8      	BSF         STATUS, 0 
0x4A6C	0xD001      	BRA         L__transicionSBP92377
L__transicionSBP92376:
0x4A6E	0x90D8      	BCF         STATUS, 0 
L__transicionSBP92377:
0x4A70	0xE304      	BNC         L__transicionSBP92378
0x4A72	0xA081      	BTFSS       PORTB, 0 
0x4A74	0xD002      	BRA         L__transicionSBP92378
0x4A76	0x8001      	BSF         R1, 0 
0x4A78	0xD001      	BRA         L__transicionSBP92379
L__transicionSBP92378:
0x4A7A	0x9001      	BCF         R1, 0 
L__transicionSBP92379:
0x4A7C	0xB883      	BTFSC       PORTD, 4 
0x4A7E	0xD002      	BRA         L__transicionSBP92380
0x4A80	0x80D8      	BSF         STATUS, 0 
0x4A82	0xD001      	BRA         L__transicionSBP92381
L__transicionSBP92380:
0x4A84	0x90D8      	BCF         STATUS, 0 
L__transicionSBP92381:
0x4A86	0xA001      	BTFSS       R1, 0 
0x4A88	0xD003      	BRA         L__transicionSBP92382
0x4A8A	0xE302      	BNC         L__transicionSBP92382
0x4A8C	0x8001      	BSF         R1, 0 
0x4A8E	0xD001      	BRA         L__transicionSBP92383
L__transicionSBP92382:
0x4A90	0x9001      	BCF         R1, 0 
L__transicionSBP92383:
0x4A92	0xA001      	BTFSS       R1, 0 
0x4A94	0xD00B      	BRA         L_transicionSBP9537
;rutinasensores_v4(mstr-slv).h,2472 :: 		lcd_cmd(_LCD_CLEAR);
0x4A96	0x0E01      	MOVLW       1
0x4A98	0x0102      	MOVLB       2
0x4A9A	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x4A9C	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2473 :: 		return debugEstadoB = SALIENDO;
0x4AA0	0x0E04      	MOVLW       4
0x4AA2	0x0101      	MOVLB       1
0x4AA4	0x6F3D      	MOVWF       _debugEstadoB, 1
0x4AA6	0x0E04      	MOVLW       4
0x4AA8	0x6E00      	MOVWF       R0 
0x4AAA	0xD000      	BRA         L_end_transicionSBP9
;rutinasensores_v4(mstr-slv).h,2474 :: 		}
L_transicionSBP9537:
;rutinasensores_v4(mstr-slv).h,2475 :: 		}
L_transicionSBP9535:
;rutinasensores_v4(mstr-slv).h,2476 :: 		}
L_end_transicionSBP9:
0x4AAC	0x0012      	RETURN      0
; end of _transicionSBP9
_Div_16x16_U:
;__Lib_Math.c,102 :: 		
;__Lib_Math.c,109 :: 		
0x4AAE	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,110 :: 		
0x4AB0	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,111 :: 		
0x4AB2	0x0E10      	MOVLW       16
;__Lib_Math.c,112 :: 		
0x4AB4	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,113 :: 		
0x4AB6	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,114 :: 		
0x4AB8	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,115 :: 		
0x4ABA	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,116 :: 		
0x4ABC	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,117 :: 		
0x4ABE	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,118 :: 		
0x4AC0	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,119 :: 		
0x4AC2	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,120 :: 		
0x4AC4	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,121 :: 		
0x4AC6	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,122 :: 		
0x4AC8	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,123 :: 		
0x4ACA	0xD007      	BRA         $+16
;__Lib_Math.c,124 :: 		
0x4ACC	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,125 :: 		
0x4ACE	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,126 :: 		
0x4AD0	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,127 :: 		
0x4AD2	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,128 :: 		
0x4AD4	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,129 :: 		
0x4AD6	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,130 :: 		
0x4AD8	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,131 :: 		
0x4ADA	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,132 :: 		
0x4ADC	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,133 :: 		
0x4ADE	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,134 :: 		
0x4AE0	0xD7EA      	BRA         $-42
;__Lib_Math.c,136 :: 		
L_end_Div_16x16_U:
0x4AE2	0x0012      	RETURN      0
; end of _Div_16x16_U
_transicionEBP9:
;rutinasensores_v4(mstr-slv).h,2400 :: 		short transicionEBP9(short estado){
;rutinasensores_v4(mstr-slv).h,2401 :: 		if(estado == TRANSICION){
0x4AE4	0x0102      	MOVLB       2
0x4AE6	0x5114      	MOVF        FARG_transicionEBP9_estado, 0, 1
0x4AE8	0x0A02      	XORLW       2
0x4AEA	0xA4D8      	BTFSS       STATUS, 2 
0x4AEC	0xD060      	BRA         L_transicionEBP9523
;rutinasensores_v4(mstr-slv).h,2402 :: 		LCD_OUTCONST(3,1,"TRANSICION");
0x4AEE	0x0E03      	MOVLW       3
0x4AF0	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x4AF2	0x0E01      	MOVLW       1
0x4AF4	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x4AF6	0x0E4A      	MOVLW       ?lstr_113_MyProject
0x4AF8	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x4AFA	0x0ED9      	MOVLW       hi_addr(?lstr_113_MyProject)
0x4AFC	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x4AFE	0x0E00      	MOVLW       higher_addr(?lstr_113_MyProject)
0x4B00	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x4B02	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,2403 :: 		if(SENSOR1 & SENSOR3 & SENSOR5){
0x4B06	0xA881      	BTFSS       PORTB, 4 
0x4B08	0xD004      	BRA         L__transicionEBP92316
0x4B0A	0xA481      	BTFSS       PORTB, 2 
0x4B0C	0xD002      	BRA         L__transicionEBP92316
0x4B0E	0x80D8      	BSF         STATUS, 0 
0x4B10	0xD001      	BRA         L__transicionEBP92317
L__transicionEBP92316:
0x4B12	0x90D8      	BCF         STATUS, 0 
L__transicionEBP92317:
0x4B14	0xE304      	BNC         L__transicionEBP92318
0x4B16	0xA081      	BTFSS       PORTB, 0 
0x4B18	0xD002      	BRA         L__transicionEBP92318
0x4B1A	0x8001      	BSF         R1, 0 
0x4B1C	0xD001      	BRA         L__transicionEBP92319
L__transicionEBP92318:
0x4B1E	0x9001      	BCF         R1, 0 
L__transicionEBP92319:
0x4B20	0xA001      	BTFSS       R1, 0 
0x4B22	0xD00A      	BRA         L_transicionEBP9524
;rutinasensores_v4(mstr-slv).h,2404 :: 		lcd_cmd(_LCD_CLEAR);
0x4B24	0x0E01      	MOVLW       1
0x4B26	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x4B28	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2405 :: 		return debugEstadoB = TRANENT;
0x4B2C	0x0E07      	MOVLW       7
0x4B2E	0x0101      	MOVLB       1
0x4B30	0x6F3D      	MOVWF       _debugEstadoB, 1
0x4B32	0x0E07      	MOVLW       7
0x4B34	0x6E00      	MOVWF       R0 
0x4B36	0xD03B      	BRA         L_end_transicionEBP9
;rutinasensores_v4(mstr-slv).h,2406 :: 		}
L_transicionEBP9524:
;rutinasensores_v4(mstr-slv).h,2407 :: 		if((SENSOR2 & !SENSOR1) | (SENSOR2 & !SENSOR3) | (SENSOR2 & !SENSOR5)){
0x4B38	0xB881      	BTFSC       PORTB, 4 
0x4B3A	0xD002      	BRA         L__transicionEBP92320
0x4B3C	0x80D8      	BSF         STATUS, 0 
0x4B3E	0xD001      	BRA         L__transicionEBP92321
L__transicionEBP92320:
0x4B40	0x90D8      	BCF         STATUS, 0 
L__transicionEBP92321:
0x4B42	0xA883      	BTFSS       PORTD, 4 
0x4B44	0xD003      	BRA         L__transicionEBP92322
0x4B46	0xE302      	BNC         L__transicionEBP92322
0x4B48	0x8201      	BSF         R1, 1 
0x4B4A	0xD001      	BRA         L__transicionEBP92323
L__transicionEBP92322:
0x4B4C	0x9201      	BCF         R1, 1 
L__transicionEBP92323:
0x4B4E	0xB481      	BTFSC       PORTB, 2 
0x4B50	0xD002      	BRA         L__transicionEBP92324
0x4B52	0x80D8      	BSF         STATUS, 0 
0x4B54	0xD001      	BRA         L__transicionEBP92325
L__transicionEBP92324:
0x4B56	0x90D8      	BCF         STATUS, 0 
L__transicionEBP92325:
0x4B58	0xA883      	BTFSS       PORTD, 4 
0x4B5A	0xD003      	BRA         L__transicionEBP92326
0x4B5C	0xE302      	BNC         L__transicionEBP92326
0x4B5E	0x8001      	BSF         R1, 0 
0x4B60	0xD001      	BRA         L__transicionEBP92327
L__transicionEBP92326:
0x4B62	0x9001      	BCF         R1, 0 
L__transicionEBP92327:
0x4B64	0xB201      	BTFSC       R1, 1 
0x4B66	0xD004      	BRA         L__transicionEBP92328
0x4B68	0xB001      	BTFSC       R1, 0 
0x4B6A	0xD002      	BRA         L__transicionEBP92328
0x4B6C	0x9201      	BCF         R1, 1 
0x4B6E	0xD001      	BRA         L__transicionEBP92329
L__transicionEBP92328:
0x4B70	0x8201      	BSF         R1, 1 
L__transicionEBP92329:
0x4B72	0xB081      	BTFSC       PORTB, 0 
0x4B74	0xD002      	BRA         L__transicionEBP92330
0x4B76	0x80D8      	BSF         STATUS, 0 
0x4B78	0xD001      	BRA         L__transicionEBP92331
L__transicionEBP92330:
0x4B7A	0x90D8      	BCF         STATUS, 0 
L__transicionEBP92331:
0x4B7C	0xA883      	BTFSS       PORTD, 4 
0x4B7E	0xD003      	BRA         L__transicionEBP92332
0x4B80	0xE302      	BNC         L__transicionEBP92332
0x4B82	0x8001      	BSF         R1, 0 
0x4B84	0xD001      	BRA         L__transicionEBP92333
L__transicionEBP92332:
0x4B86	0x9001      	BCF         R1, 0 
L__transicionEBP92333:
0x4B88	0xB201      	BTFSC       R1, 1 
0x4B8A	0xD004      	BRA         L__transicionEBP92334
0x4B8C	0xB001      	BTFSC       R1, 0 
0x4B8E	0xD002      	BRA         L__transicionEBP92334
0x4B90	0x90D8      	BCF         STATUS, 0 
0x4B92	0xD001      	BRA         L__transicionEBP92335
L__transicionEBP92334:
0x4B94	0x80D8      	BSF         STATUS, 0 
L__transicionEBP92335:
0x4B96	0xE30B      	BNC         L_transicionEBP9525
;rutinasensores_v4(mstr-slv).h,2408 :: 		lcd_cmd(_LCD_CLEAR);
0x4B98	0x0E01      	MOVLW       1
0x4B9A	0x0102      	MOVLB       2
0x4B9C	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x4B9E	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2409 :: 		return debugEstadoB = ENTRANDO;
0x4BA2	0x0E01      	MOVLW       1
0x4BA4	0x0101      	MOVLB       1
0x4BA6	0x6F3D      	MOVWF       _debugEstadoB, 1
0x4BA8	0x0E01      	MOVLW       1
0x4BAA	0x6E00      	MOVWF       R0 
0x4BAC	0xD000      	BRA         L_end_transicionEBP9
;rutinasensores_v4(mstr-slv).h,2410 :: 		}
L_transicionEBP9525:
;rutinasensores_v4(mstr-slv).h,2411 :: 		}
L_transicionEBP9523:
;rutinasensores_v4(mstr-slv).h,2412 :: 		}
L_end_transicionEBP9:
0x4BAE	0x0012      	RETURN      0
; end of _transicionEBP9
_saliendoBP9:
;rutinasensores_v4(mstr-slv).h,2450 :: 		short saliendoBP9(short estado){
;rutinasensores_v4(mstr-slv).h,2451 :: 		if(estado == SALIENDO){
0x4BB0	0x0102      	MOVLB       2
0x4BB2	0x5114      	MOVF        FARG_saliendoBP9_estado, 0, 1
0x4BB4	0x0A04      	XORLW       4
0x4BB6	0xE15C      	BNZ         L_saliendoBP9532
;rutinasensores_v4(mstr-slv).h,2452 :: 		lcd_outConst(3, 1, "SALIENDO");
0x4BB8	0x0E03      	MOVLW       3
0x4BBA	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x4BBC	0x0E01      	MOVLW       1
0x4BBE	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x4BC0	0x0E03      	MOVLW       ?lstr_116_MyProject
0x4BC2	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x4BC4	0x0EDB      	MOVLW       hi_addr(?lstr_116_MyProject)
0x4BC6	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x4BC8	0x0E00      	MOVLW       higher_addr(?lstr_116_MyProject)
0x4BCA	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x4BCC	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,2453 :: 		if((!SENSOR1 & !SENSOR3) | (!SENSOR3 & !SENSOR5) | (!SENSOR1 & !SENSOR5)){
0x4BD0	0xB881      	BTFSC       PORTB, 4 
0x4BD2	0xD002      	BRA         L__saliendoBP92355
0x4BD4	0x8601      	BSF         R1, 3 
0x4BD6	0xD001      	BRA         L__saliendoBP92356
L__saliendoBP92355:
0x4BD8	0x9601      	BCF         R1, 3 
L__saliendoBP92356:
0x4BDA	0xB481      	BTFSC       PORTB, 2 
0x4BDC	0xD002      	BRA         L__saliendoBP92357
0x4BDE	0x8001      	BSF         R1, 0 
0x4BE0	0xD001      	BRA         L__saliendoBP92358
L__saliendoBP92357:
0x4BE2	0x9001      	BCF         R1, 0 
L__saliendoBP92358:
0x4BE4	0xA601      	BTFSS       R1, 3 
0x4BE6	0xD004      	BRA         L__saliendoBP92359
0x4BE8	0xA001      	BTFSS       R1, 0 
0x4BEA	0xD002      	BRA         L__saliendoBP92359
0x4BEC	0x8201      	BSF         R1, 1 
0x4BEE	0xD001      	BRA         L__saliendoBP92360
L__saliendoBP92359:
0x4BF0	0x9201      	BCF         R1, 1 
L__saliendoBP92360:
0x4BF2	0xB081      	BTFSC       PORTB, 0 
0x4BF4	0xD002      	BRA         L__saliendoBP92361
0x4BF6	0x8401      	BSF         R1, 2 
0x4BF8	0xD001      	BRA         L__saliendoBP92362
L__saliendoBP92361:
0x4BFA	0x9401      	BCF         R1, 2 
L__saliendoBP92362:
0x4BFC	0xA001      	BTFSS       R1, 0 
0x4BFE	0xD004      	BRA         L__saliendoBP92363
0x4C00	0xA401      	BTFSS       R1, 2 
0x4C02	0xD002      	BRA         L__saliendoBP92363
0x4C04	0x80D8      	BSF         STATUS, 0 
0x4C06	0xD001      	BRA         L__saliendoBP92364
L__saliendoBP92363:
0x4C08	0x90D8      	BCF         STATUS, 0 
L__saliendoBP92364:
0x4C0A	0xB201      	BTFSC       R1, 1 
0x4C0C	0xD003      	BRA         L__saliendoBP92365
0x4C0E	0xE202      	BC          L__saliendoBP92365
0x4C10	0x9201      	BCF         R1, 1 
0x4C12	0xD001      	BRA         L__saliendoBP92366
L__saliendoBP92365:
0x4C14	0x8201      	BSF         R1, 1 
L__saliendoBP92366:
0x4C16	0xB601      	BTFSC       R1, 3 
0x4C18	0xD002      	BRA         L__saliendoBP92367
0x4C1A	0x9001      	BCF         R1, 0 
0x4C1C	0xD001      	BRA         L__saliendoBP92368
L__saliendoBP92367:
0x4C1E	0x8001      	BSF         R1, 0 
L__saliendoBP92368:
0x4C20	0xB401      	BTFSC       R1, 2 
0x4C22	0xD002      	BRA         L__saliendoBP92369
0x4C24	0x90D8      	BCF         STATUS, 0 
0x4C26	0xD001      	BRA         L__saliendoBP92370
L__saliendoBP92369:
0x4C28	0x80D8      	BSF         STATUS, 0 
L__saliendoBP92370:
0x4C2A	0xA001      	BTFSS       R1, 0 
0x4C2C	0xD003      	BRA         L__saliendoBP92371
0x4C2E	0xE302      	BNC         L__saliendoBP92371
0x4C30	0x8001      	BSF         R1, 0 
0x4C32	0xD001      	BRA         L__saliendoBP92372
L__saliendoBP92371:
0x4C34	0x9001      	BCF         R1, 0 
L__saliendoBP92372:
0x4C36	0xB201      	BTFSC       R1, 1 
0x4C38	0xD004      	BRA         L__saliendoBP92373
0x4C3A	0xB001      	BTFSC       R1, 0 
0x4C3C	0xD002      	BRA         L__saliendoBP92373
0x4C3E	0x90D8      	BCF         STATUS, 0 
0x4C40	0xD001      	BRA         L__saliendoBP92374
L__saliendoBP92373:
0x4C42	0x80D8      	BSF         STATUS, 0 
L__saliendoBP92374:
0x4C44	0xE30A      	BNC         L_saliendoBP9533
;rutinasensores_v4(mstr-slv).h,2454 :: 		lcd_cmd(_LCD_CLEAR);
0x4C46	0x0E01      	MOVLW       1
0x4C48	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x4C4A	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2455 :: 		return debugEstadoB = TRANSICIONS;
0x4C4E	0x0E08      	MOVLW       8
0x4C50	0x0101      	MOVLB       1
0x4C52	0x6F3D      	MOVWF       _debugEstadoB, 1
0x4C54	0x0E08      	MOVLW       8
0x4C56	0x6E00      	MOVWF       R0 
0x4C58	0xD00B      	BRA         L_end_saliendoBP9
;rutinasensores_v4(mstr-slv).h,2456 :: 		}
L_saliendoBP9533:
;rutinasensores_v4(mstr-slv).h,2457 :: 		if((SENSOR2)){
0x4C5A	0xA883      	BTFSS       PORTD, 4 
0x4C5C	0xD009      	BRA         L_saliendoBP9534
;rutinasensores_v4(mstr-slv).h,2458 :: 		lcd_cmd(_LCD_CLEAR);
0x4C5E	0x0E01      	MOVLW       1
0x4C60	0x0102      	MOVLB       2
0x4C62	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x4C64	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2459 :: 		return debugEstadoB = ESPERA;
0x4C68	0x0101      	MOVLB       1
0x4C6A	0x6B3D      	CLRF        _debugEstadoB, 1
0x4C6C	0x6A00      	CLRF        R0 
0x4C6E	0xD000      	BRA         L_end_saliendoBP9
;rutinasensores_v4(mstr-slv).h,2460 :: 		}
L_saliendoBP9534:
;rutinasensores_v4(mstr-slv).h,2461 :: 		}
L_saliendoBP9532:
;rutinasensores_v4(mstr-slv).h,2462 :: 		}
L_end_saliendoBP9:
0x4C70	0x0012      	RETURN      0
; end of _saliendoBP9
_transicionSalBP7:
;rutinasensores_v4(mstr-slv).h,2332 :: 		short transicionSalBP7(short estado){
;rutinasensores_v4(mstr-slv).h,2333 :: 		if(estado == TRANSAL){
0x4C72	0x0102      	MOVLB       2
0x4C74	0x5114      	MOVF        FARG_transicionSalBP7_estado, 0, 1
0x4C76	0x0A05      	XORLW       5
0x4C78	0xE138      	BNZ         L_transicionSalBP7512
;rutinasensores_v4(mstr-slv).h,2334 :: 		LCD_OUTCONST(3,1,"TRANSICION SALIDA");
0x4C7A	0x0E03      	MOVLW       3
0x4C7C	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x4C7E	0x0E01      	MOVLW       1
0x4C80	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x4C82	0x0E0A      	MOVLW       ?lstr_110_MyProject
0x4C84	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x4C86	0x0ED7      	MOVLW       hi_addr(?lstr_110_MyProject)
0x4C88	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x4C8A	0x0E00      	MOVLW       higher_addr(?lstr_110_MyProject)
0x4C8C	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x4C8E	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,2335 :: 		if(!SENSOR6){
0x4C92	0xB281      	BTFSC       PORTB, 1 
0x4C94	0xD00A      	BRA         L_transicionSalBP7513
;rutinasensores_v4(mstr-slv).h,2336 :: 		lcd_cmd(_LCD_CLEAR);
0x4C96	0x0E01      	MOVLW       1
0x4C98	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x4C9A	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2337 :: 		return debugEstadoB = TRANSICIONS;
0x4C9E	0x0E08      	MOVLW       8
0x4CA0	0x0101      	MOVLB       1
0x4CA2	0x6F3D      	MOVWF       _debugEstadoB, 1
0x4CA4	0x0E08      	MOVLW       8
0x4CA6	0x6E00      	MOVWF       R0 
0x4CA8	0xD020      	BRA         L_end_transicionSalBP7
;rutinasensores_v4(mstr-slv).h,2338 :: 		}
L_transicionSalBP7513:
;rutinasensores_v4(mstr-slv).h,2339 :: 		if((SENSOR1 & SENSOR3 & SENSOR5) & (SENSOR6)){
0x4CAA	0xA881      	BTFSS       PORTB, 4 
0x4CAC	0xD004      	BRA         L__transicionSalBP72292
0x4CAE	0xA481      	BTFSS       PORTB, 2 
0x4CB0	0xD002      	BRA         L__transicionSalBP72292
0x4CB2	0x80D8      	BSF         STATUS, 0 
0x4CB4	0xD001      	BRA         L__transicionSalBP72293
L__transicionSalBP72292:
0x4CB6	0x90D8      	BCF         STATUS, 0 
L__transicionSalBP72293:
0x4CB8	0xE304      	BNC         L__transicionSalBP72294
0x4CBA	0xA081      	BTFSS       PORTB, 0 
0x4CBC	0xD002      	BRA         L__transicionSalBP72294
0x4CBE	0x8001      	BSF         R1, 0 
0x4CC0	0xD001      	BRA         L__transicionSalBP72295
L__transicionSalBP72294:
0x4CC2	0x9001      	BCF         R1, 0 
L__transicionSalBP72295:
0x4CC4	0xA001      	BTFSS       R1, 0 
0x4CC6	0xD004      	BRA         L__transicionSalBP72296
0x4CC8	0xA281      	BTFSS       PORTB, 1 
0x4CCA	0xD002      	BRA         L__transicionSalBP72296
0x4CCC	0x80D8      	BSF         STATUS, 0 
0x4CCE	0xD001      	BRA         L__transicionSalBP72297
L__transicionSalBP72296:
0x4CD0	0x90D8      	BCF         STATUS, 0 
L__transicionSalBP72297:
0x4CD2	0xE30B      	BNC         L_transicionSalBP7514
;rutinasensores_v4(mstr-slv).h,2340 :: 		lcd_cmd(_LCD_CLEAR);
0x4CD4	0x0E01      	MOVLW       1
0x4CD6	0x0102      	MOVLB       2
0x4CD8	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x4CDA	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2341 :: 		return debugEstadoB = SALIO;
0x4CDE	0x0E06      	MOVLW       6
0x4CE0	0x0101      	MOVLB       1
0x4CE2	0x6F3D      	MOVWF       _debugEstadoB, 1
0x4CE4	0x0E06      	MOVLW       6
0x4CE6	0x6E00      	MOVWF       R0 
0x4CE8	0xD000      	BRA         L_end_transicionSalBP7
;rutinasensores_v4(mstr-slv).h,2342 :: 		}
L_transicionSalBP7514:
;rutinasensores_v4(mstr-slv).h,2343 :: 		}
L_transicionSalBP7512:
;rutinasensores_v4(mstr-slv).h,2344 :: 		}
L_end_transicionSalBP7:
0x4CEA	0x0012      	RETURN      0
; end of _transicionSalBP7
_entrandoBP9:
;rutinasensores_v4(mstr-slv).h,2386 :: 		short entrandoBP9(short estado){
;rutinasensores_v4(mstr-slv).h,2387 :: 		if(estado == ENTRANDO){
0x4CEC	0x0102      	MOVLB       2
0x4CEE	0x5114      	MOVF        FARG_entrandoBP9_estado, 0, 1
0x4CF0	0x0A01      	XORLW       1
0x4CF2	0xE130      	BNZ         L_entrandoBP9520
;rutinasensores_v4(mstr-slv).h,2388 :: 		LCD_OUTCONST(3,1,"ENTRANDO");
0x4CF4	0x0E03      	MOVLW       3
0x4CF6	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x4CF8	0x0E01      	MOVLW       1
0x4CFA	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x4CFC	0x0E0C      	MOVLW       ?lstr_112_MyProject
0x4CFE	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x4D00	0x0EDB      	MOVLW       hi_addr(?lstr_112_MyProject)
0x4D02	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x4D04	0x0E00      	MOVLW       higher_addr(?lstr_112_MyProject)
0x4D06	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x4D08	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,2389 :: 		if((SENSOR1 & SENSOR3 & SENSOR5)){
0x4D0C	0xA881      	BTFSS       PORTB, 4 
0x4D0E	0xD004      	BRA         L__entrandoBP92311
0x4D10	0xA481      	BTFSS       PORTB, 2 
0x4D12	0xD002      	BRA         L__entrandoBP92311
0x4D14	0x80D8      	BSF         STATUS, 0 
0x4D16	0xD001      	BRA         L__entrandoBP92312
L__entrandoBP92311:
0x4D18	0x90D8      	BCF         STATUS, 0 
L__entrandoBP92312:
0x4D1A	0xE304      	BNC         L__entrandoBP92313
0x4D1C	0xA081      	BTFSS       PORTB, 0 
0x4D1E	0xD002      	BRA         L__entrandoBP92313
0x4D20	0x8001      	BSF         R1, 0 
0x4D22	0xD001      	BRA         L__entrandoBP92314
L__entrandoBP92313:
0x4D24	0x9001      	BCF         R1, 0 
L__entrandoBP92314:
0x4D26	0xA001      	BTFSS       R1, 0 
0x4D28	0xD008      	BRA         L_entrandoBP9521
;rutinasensores_v4(mstr-slv).h,2390 :: 		lcd_cmd(_LCD_CLEAR);
0x4D2A	0x0E01      	MOVLW       1
0x4D2C	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x4D2E	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2391 :: 		return debugEstadoB = ESPERA;
0x4D32	0x0101      	MOVLB       1
0x4D34	0x6B3D      	CLRF        _debugEstadoB, 1
0x4D36	0x6A00      	CLRF        R0 
0x4D38	0xD00D      	BRA         L_end_entrandoBP9
;rutinasensores_v4(mstr-slv).h,2392 :: 		}
L_entrandoBP9521:
;rutinasensores_v4(mstr-slv).h,2393 :: 		if(!SENSOR2){
0x4D3A	0xB883      	BTFSC       PORTD, 4 
0x4D3C	0xD00B      	BRA         L_entrandoBP9522
;rutinasensores_v4(mstr-slv).h,2394 :: 		lcd_cmd(_LCD_CLEAR);
0x4D3E	0x0E01      	MOVLW       1
0x4D40	0x0102      	MOVLB       2
0x4D42	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x4D44	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2395 :: 		return debugEstadoB = TRANSICION;
0x4D48	0x0E02      	MOVLW       2
0x4D4A	0x0101      	MOVLB       1
0x4D4C	0x6F3D      	MOVWF       _debugEstadoB, 1
0x4D4E	0x0E02      	MOVLW       2
0x4D50	0x6E00      	MOVWF       R0 
0x4D52	0xD000      	BRA         L_end_entrandoBP9
;rutinasensores_v4(mstr-slv).h,2396 :: 		}
L_entrandoBP9522:
;rutinasensores_v4(mstr-slv).h,2397 :: 		}
L_entrandoBP9520:
;rutinasensores_v4(mstr-slv).h,2398 :: 		}
L_end_entrandoBP9:
0x4D54	0x0012      	RETURN      0
; end of _entrandoBP9
_salioBP9:
;rutinasensores_v4(mstr-slv).h,2492 :: 		short salioBP9(short estado){
;rutinasensores_v4(mstr-slv).h,2493 :: 		if(estado == SALIO){
0x4D56	0x0102      	MOVLB       2
0x4D58	0x5114      	MOVF        FARG_salioBP9_estado, 0, 1
0x4D5A	0x0A06      	XORLW       6
0x4D5C	0xA4D8      	BTFSS       STATUS, 2 
0x4D5E	0xD11B      	BRA         L_salioBP9541
;rutinasensores_v4(mstr-slv).h,2494 :: 		LCD_OUTCONST(3,1,"GRACIAS!");
0x4D60	0x0E03      	MOVLW       3
0x4D62	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x4D64	0x0E01      	MOVLW       1
0x4D66	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x4D68	0x0ED6      	MOVLW       ?lstr_119_MyProject
0x4D6A	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x4D6C	0x0EDA      	MOVLW       hi_addr(?lstr_119_MyProject)
0x4D6E	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x4D70	0x0E00      	MOVLW       higher_addr(?lstr_119_MyProject)
0x4D72	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x4D74	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,2495 :: 		pSuben = eepromLeeNumero(0x0000,2);
0x4D78	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x4D7A	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x4D7C	0x0E02      	MOVLW       2
0x4D7E	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x4D80	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x4D84	0xF137C000  	MOVFF       R0, _pSuben
0x4D88	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,2496 :: 		pBajan = eepromLeeNumero(0x0003,2) + 1;
0x4D8C	0x0E03      	MOVLW       3
0x4D8E	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x4D90	0x0E00      	MOVLW       0
0x4D92	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x4D94	0x0E02      	MOVLW       2
0x4D96	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x4D98	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x4D9C	0x4A00      	INFSNZ      R0, 1 
0x4D9E	0x2A01      	INCF        R1, 1 
0x4DA0	0xF135C000  	MOVFF       R0, _pBajan
0x4DA4	0xF136C001  	MOVFF       R1, _pBajan+1
;rutinasensores_v4(mstr-slv).h,2497 :: 		eepromEscribeNumero(0x0003,pBajan,2);
0x4DA8	0x0E03      	MOVLW       3
0x4DAA	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x4DAC	0x0E00      	MOVLW       0
0x4DAE	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x4DB0	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x4DB4	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x4DB8	0x0E00      	MOVLW       0
0x4DBA	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x4DBC	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x4DBE	0x0E02      	MOVLW       2
0x4DC0	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x4DC2	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,2498 :: 		pBajan = eepromLeeNumero(0x0003,2);
0x4DC6	0x0E03      	MOVLW       3
0x4DC8	0x0102      	MOVLB       2
0x4DCA	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x4DCC	0x0E00      	MOVLW       0
0x4DCE	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x4DD0	0x0E02      	MOVLW       2
0x4DD2	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x4DD4	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x4DD8	0xF219C000  	MOVFF       R0, FLOC__salioBP9+4
0x4DDC	0xF21AC001  	MOVFF       R1, FLOC__salioBP9+5
0x4DE0	0xF21BC002  	MOVFF       R2, FLOC__salioBP9+6
0x4DE4	0xF21CC003  	MOVFF       R3, FLOC__salioBP9+7
0x4DE8	0xF135C219  	MOVFF       FLOC__salioBP9+4, _pBajan
0x4DEC	0xF136C21A  	MOVFF       FLOC__salioBP9+5, _pBajan+1
;rutinasensores_v4(mstr-slv).h,2499 :: 		pasajerosVerdaderos = ((float)pSuben + (float)pBajan)/2;
0x4DF0	0xF000C137  	MOVFF       _pSuben, R0
0x4DF4	0xF001C138  	MOVFF       _pSuben+1, R1
0x4DF8	0xF008EC65  	CALL        _Word2Double, 0
0x4DFC	0xF215C000  	MOVFF       R0, FLOC__salioBP9
0x4E00	0xF216C001  	MOVFF       R1, FLOC__salioBP9+1
0x4E04	0xF217C002  	MOVFF       R2, FLOC__salioBP9+2
0x4E08	0xF218C003  	MOVFF       R3, FLOC__salioBP9+3
0x4E0C	0xF000C219  	MOVFF       FLOC__salioBP9+4, R0
0x4E10	0xF001C21A  	MOVFF       FLOC__salioBP9+5, R1
0x4E14	0xF008EC65  	CALL        _Word2Double, 0
0x4E18	0xF004C215  	MOVFF       FLOC__salioBP9, R4
0x4E1C	0xF005C216  	MOVFF       FLOC__salioBP9+1, R5
0x4E20	0xF006C217  	MOVFF       FLOC__salioBP9+2, R6
0x4E24	0xF007C218  	MOVFF       FLOC__salioBP9+3, R7
0x4E28	0xF004EC8D  	CALL        _Add_32x32_FP, 0
0x4E2C	0x0E00      	MOVLW       0
0x4E2E	0x6E04      	MOVWF       R4 
0x4E30	0x0E00      	MOVLW       0
0x4E32	0x6E05      	MOVWF       R5 
0x4E34	0x0E00      	MOVLW       0
0x4E36	0x6E06      	MOVWF       R6 
0x4E38	0x0E80      	MOVLW       128
0x4E3A	0x6E07      	MOVWF       R7 
0x4E3C	0xF007ECA7  	CALL        _Div_32x32_FP, 0
0x4E40	0xF139C000  	MOVFF       R0, _pasajerosVerdaderos
0x4E44	0xF13AC001  	MOVFF       R1, _pasajerosVerdaderos+1
0x4E48	0xF13BC002  	MOVFF       R2, _pasajerosVerdaderos+2
0x4E4C	0xF13CC003  	MOVFF       R3, _pasajerosVerdaderos+3
;rutinasensores_v4(mstr-slv).h,2500 :: 		eepromEscribeNumero(0x0009, pasajerosVerdaderos, 2);
0x4E50	0x0E09      	MOVLW       9
0x4E52	0x0102      	MOVLB       2
0x4E54	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x4E56	0x0E00      	MOVLW       0
0x4E58	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x4E5A	0xF007EC0E  	CALL        _Double2Longint, 0
0x4E5E	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x4E62	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x4E66	0xF221C002  	MOVFF       R2, FARG_eepromEscribeNumero_Dato+2
0x4E6A	0xF222C003  	MOVFF       R3, FARG_eepromEscribeNumero_Dato+3
0x4E6E	0x0E02      	MOVLW       2
0x4E70	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x4E72	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,2501 :: 		if(MSTR){
0x4E76	0xA483      	BTFSS       PORTD, 2 
0x4E78	0xD085      	BRA         L_salioBP9542
;rutinasensores_v4(mstr-slv).h,2502 :: 		pVerdaderosMEntero = eepromLeeNumero(0x0009, 2);
0x4E7A	0x0E09      	MOVLW       9
0x4E7C	0x0102      	MOVLB       2
0x4E7E	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x4E80	0x0E00      	MOVLW       0
0x4E82	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x4E84	0x0E02      	MOVLW       2
0x4E86	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x4E88	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x4E8C	0xF12FC000  	MOVFF       R0, _pVerdaderosMEntero
0x4E90	0xF130C001  	MOVFF       R1, _pVerdaderosMEntero+1
;rutinasensores_v4(mstr-slv).h,2503 :: 		pVerdaderosEEntero = eepromLeeNumero(0x0007, 2);
0x4E94	0x0E07      	MOVLW       7
0x4E96	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x4E98	0x0E00      	MOVLW       0
0x4E9A	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x4E9C	0x0E02      	MOVLW       2
0x4E9E	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x4EA0	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x4EA4	0xF12DC000  	MOVFF       R0, _pVerdaderosEEntero
0x4EA8	0xF12EC001  	MOVFF       R1, _pVerdaderosEEntero+1
;rutinasensores_v4(mstr-slv).h,2504 :: 		pasajerosTotalesL = pVerdaderosMEntero + pVerdaderosEEntero;
0x4EAC	0x5000      	MOVF        R0, 0 
0x4EAE	0x0101      	MOVLB       1
0x4EB0	0x252F      	ADDWF       _pVerdaderosMEntero, 0, 1
0x4EB2	0x6F33      	MOVWF       _pasajerosTotalesL, 1
0x4EB4	0x5001      	MOVF        R1, 0 
0x4EB6	0x2130      	ADDWFC      _pVerdaderosMEntero+1, 0, 1
0x4EB8	0x6F34      	MOVWF       _pasajerosTotalesL+1, 1
;rutinasensores_v4(mstr-slv).h,2505 :: 		totalCalculado = (eepromLeeNumero(0x0000, 2)+eepromLeeNumero(0x0003, 2)+eepromLeeNumero(0x0900, 2)+eepromLeeNumero(0x0700, 2))/2;
0x4EBA	0x0102      	MOVLB       2
0x4EBC	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x4EBE	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x4EC0	0x0E02      	MOVLW       2
0x4EC2	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x4EC4	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x4EC8	0xF215C000  	MOVFF       R0, FLOC__salioBP9
0x4ECC	0xF216C001  	MOVFF       R1, FLOC__salioBP9+1
0x4ED0	0xF217C002  	MOVFF       R2, FLOC__salioBP9+2
0x4ED4	0xF218C003  	MOVFF       R3, FLOC__salioBP9+3
0x4ED8	0x0E03      	MOVLW       3
0x4EDA	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x4EDC	0x0E00      	MOVLW       0
0x4EDE	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x4EE0	0x0E02      	MOVLW       2
0x4EE2	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x4EE4	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x4EE8	0x5000      	MOVF        R0, 0 
0x4EEA	0x2715      	ADDWF       FLOC__salioBP9, 1, 1
0x4EEC	0x5001      	MOVF        R1, 0 
0x4EEE	0x2316      	ADDWFC      FLOC__salioBP9+1, 1, 1
0x4EF0	0x5002      	MOVF        R2, 0 
0x4EF2	0x2317      	ADDWFC      FLOC__salioBP9+2, 1, 1
0x4EF4	0x5003      	MOVF        R3, 0 
0x4EF6	0x2318      	ADDWFC      FLOC__salioBP9+3, 1, 1
0x4EF8	0x0E00      	MOVLW       0
0x4EFA	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x4EFC	0x0E09      	MOVLW       9
0x4EFE	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x4F00	0x0E02      	MOVLW       2
0x4F02	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x4F04	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x4F08	0x5000      	MOVF        R0, 0 
0x4F0A	0x2715      	ADDWF       FLOC__salioBP9, 1, 1
0x4F0C	0x5001      	MOVF        R1, 0 
0x4F0E	0x2316      	ADDWFC      FLOC__salioBP9+1, 1, 1
0x4F10	0x5002      	MOVF        R2, 0 
0x4F12	0x2317      	ADDWFC      FLOC__salioBP9+2, 1, 1
0x4F14	0x5003      	MOVF        R3, 0 
0x4F16	0x2318      	ADDWFC      FLOC__salioBP9+3, 1, 1
0x4F18	0x0E00      	MOVLW       0
0x4F1A	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x4F1C	0x0E07      	MOVLW       7
0x4F1E	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x4F20	0x0E02      	MOVLW       2
0x4F22	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x4F24	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x4F28	0x5000      	MOVF        R0, 0 
0x4F2A	0x2515      	ADDWF       FLOC__salioBP9, 0, 1
0x4F2C	0x6E05      	MOVWF       R5 
0x4F2E	0x5001      	MOVF        R1, 0 
0x4F30	0x2116      	ADDWFC      FLOC__salioBP9+1, 0, 1
0x4F32	0x6E06      	MOVWF       R6 
0x4F34	0x5002      	MOVF        R2, 0 
0x4F36	0x2117      	ADDWFC      FLOC__salioBP9+2, 0, 1
0x4F38	0x6E07      	MOVWF       R7 
0x4F3A	0x5003      	MOVF        R3, 0 
0x4F3C	0x2118      	ADDWFC      FLOC__salioBP9+3, 0, 1
0x4F3E	0x6E08      	MOVWF       R8 
0x4F40	0xF000C005  	MOVFF       R5, R0
0x4F44	0xF001C006  	MOVFF       R6, R1
0x4F48	0xF002C007  	MOVFF       R7, R2
0x4F4C	0xF003C008  	MOVFF       R8, R3
0x4F50	0x3203      	RRCF        R3, 1 
0x4F52	0x3202      	RRCF        R2, 1 
0x4F54	0x3201      	RRCF        R1, 1 
0x4F56	0x3200      	RRCF        R0, 1 
0x4F58	0x9E03      	BCF         R3, 7 
0x4F5A	0xBC03      	BTFSC       R3, 6 
0x4F5C	0x8E03      	BSF         R3, 7 
0x4F5E	0xF131C000  	MOVFF       R0, _totalCalculado
0x4F62	0xF132C001  	MOVFF       R1, _totalCalculado+1
;rutinasensores_v4(mstr-slv).h,2506 :: 		eepromEscribeNumero(0x0005, totalCalculado, 2);
0x4F66	0x0E05      	MOVLW       5
0x4F68	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x4F6A	0x0E00      	MOVLW       0
0x4F6C	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x4F6E	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x4F72	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x4F76	0x0E00      	MOVLW       0
0x4F78	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x4F7A	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x4F7C	0x0E02      	MOVLW       2
0x4F7E	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x4F80	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,2507 :: 		}
L_salioBP9542:
;rutinasensores_v4(mstr-slv).h,2508 :: 		lcd_cmd(_LCD_CLEAR);
0x4F84	0x0E01      	MOVLW       1
0x4F86	0x0102      	MOVLB       2
0x4F88	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x4F8A	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2509 :: 		return debugEstadoB = ESPERA;
0x4F8E	0x0101      	MOVLB       1
0x4F90	0x6B3D      	CLRF        _debugEstadoB, 1
0x4F92	0x6A00      	CLRF        R0 
0x4F94	0xD000      	BRA         L_end_salioBP9
;rutinasensores_v4(mstr-slv).h,2510 :: 		}
L_salioBP9541:
;rutinasensores_v4(mstr-slv).h,2511 :: 		}
L_end_salioBP9:
0x4F96	0x0012      	RETURN      0
; end of _salioBP9
_salioBP3:
;rutinasensores_v4(mstr-slv).h,1909 :: 		short salioBP3(short estado){
;rutinasensores_v4(mstr-slv).h,1910 :: 		if(estado == SALIO){
0x4F98	0x0102      	MOVLB       2
0x4F9A	0x5114      	MOVF        FARG_salioBP3_estado, 0, 1
0x4F9C	0x0A06      	XORLW       6
0x4F9E	0xA4D8      	BTFSS       STATUS, 2 
0x4FA0	0xD11B      	BRA         L_salioBP3437
;rutinasensores_v4(mstr-slv).h,1911 :: 		LCD_OUTCONST(3,1,"GRACIAS!");
0x4FA2	0x0E03      	MOVLW       3
0x4FA4	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x4FA6	0x0E01      	MOVLW       1
0x4FA8	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x4FAA	0x0E7C      	MOVLW       ?lstr_87_MyProject
0x4FAC	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x4FAE	0x0EDA      	MOVLW       hi_addr(?lstr_87_MyProject)
0x4FB0	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x4FB2	0x0E00      	MOVLW       higher_addr(?lstr_87_MyProject)
0x4FB4	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x4FB6	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1912 :: 		pSuben = eepromLeeNumero(0x0000,2);
0x4FBA	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x4FBC	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x4FBE	0x0E02      	MOVLW       2
0x4FC0	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x4FC2	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x4FC6	0xF137C000  	MOVFF       R0, _pSuben
0x4FCA	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,1913 :: 		pBajan = eepromLeeNumero(0x0003,2) + 1;
0x4FCE	0x0E03      	MOVLW       3
0x4FD0	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x4FD2	0x0E00      	MOVLW       0
0x4FD4	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x4FD6	0x0E02      	MOVLW       2
0x4FD8	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x4FDA	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x4FDE	0x4A00      	INFSNZ      R0, 1 
0x4FE0	0x2A01      	INCF        R1, 1 
0x4FE2	0xF135C000  	MOVFF       R0, _pBajan
0x4FE6	0xF136C001  	MOVFF       R1, _pBajan+1
;rutinasensores_v4(mstr-slv).h,1914 :: 		eepromEscribeNumero(0x0003,pBajan,2);
0x4FEA	0x0E03      	MOVLW       3
0x4FEC	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x4FEE	0x0E00      	MOVLW       0
0x4FF0	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x4FF2	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x4FF6	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x4FFA	0x0E00      	MOVLW       0
0x4FFC	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x4FFE	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x5000	0x0E02      	MOVLW       2
0x5002	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x5004	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,1915 :: 		pBajan = eepromLeeNumero(0x0003,2);
0x5008	0x0E03      	MOVLW       3
0x500A	0x0102      	MOVLB       2
0x500C	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x500E	0x0E00      	MOVLW       0
0x5010	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x5012	0x0E02      	MOVLW       2
0x5014	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x5016	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x501A	0xF219C000  	MOVFF       R0, FLOC__salioBP3+4
0x501E	0xF21AC001  	MOVFF       R1, FLOC__salioBP3+5
0x5022	0xF21BC002  	MOVFF       R2, FLOC__salioBP3+6
0x5026	0xF21CC003  	MOVFF       R3, FLOC__salioBP3+7
0x502A	0xF135C219  	MOVFF       FLOC__salioBP3+4, _pBajan
0x502E	0xF136C21A  	MOVFF       FLOC__salioBP3+5, _pBajan+1
;rutinasensores_v4(mstr-slv).h,1916 :: 		pasajerosVerdaderos = ((float)pSuben + (float)pBajan)/2;
0x5032	0xF000C137  	MOVFF       _pSuben, R0
0x5036	0xF001C138  	MOVFF       _pSuben+1, R1
0x503A	0xF008EC65  	CALL        _Word2Double, 0
0x503E	0xF215C000  	MOVFF       R0, FLOC__salioBP3
0x5042	0xF216C001  	MOVFF       R1, FLOC__salioBP3+1
0x5046	0xF217C002  	MOVFF       R2, FLOC__salioBP3+2
0x504A	0xF218C003  	MOVFF       R3, FLOC__salioBP3+3
0x504E	0xF000C219  	MOVFF       FLOC__salioBP3+4, R0
0x5052	0xF001C21A  	MOVFF       FLOC__salioBP3+5, R1
0x5056	0xF008EC65  	CALL        _Word2Double, 0
0x505A	0xF004C215  	MOVFF       FLOC__salioBP3, R4
0x505E	0xF005C216  	MOVFF       FLOC__salioBP3+1, R5
0x5062	0xF006C217  	MOVFF       FLOC__salioBP3+2, R6
0x5066	0xF007C218  	MOVFF       FLOC__salioBP3+3, R7
0x506A	0xF004EC8D  	CALL        _Add_32x32_FP, 0
0x506E	0x0E00      	MOVLW       0
0x5070	0x6E04      	MOVWF       R4 
0x5072	0x0E00      	MOVLW       0
0x5074	0x6E05      	MOVWF       R5 
0x5076	0x0E00      	MOVLW       0
0x5078	0x6E06      	MOVWF       R6 
0x507A	0x0E80      	MOVLW       128
0x507C	0x6E07      	MOVWF       R7 
0x507E	0xF007ECA7  	CALL        _Div_32x32_FP, 0
0x5082	0xF139C000  	MOVFF       R0, _pasajerosVerdaderos
0x5086	0xF13AC001  	MOVFF       R1, _pasajerosVerdaderos+1
0x508A	0xF13BC002  	MOVFF       R2, _pasajerosVerdaderos+2
0x508E	0xF13CC003  	MOVFF       R3, _pasajerosVerdaderos+3
;rutinasensores_v4(mstr-slv).h,1917 :: 		eepromEscribeNumero(0x0009, pasajerosVerdaderos, 2);
0x5092	0x0E09      	MOVLW       9
0x5094	0x0102      	MOVLB       2
0x5096	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x5098	0x0E00      	MOVLW       0
0x509A	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x509C	0xF007EC0E  	CALL        _Double2Longint, 0
0x50A0	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x50A4	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x50A8	0xF221C002  	MOVFF       R2, FARG_eepromEscribeNumero_Dato+2
0x50AC	0xF222C003  	MOVFF       R3, FARG_eepromEscribeNumero_Dato+3
0x50B0	0x0E02      	MOVLW       2
0x50B2	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x50B4	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,1918 :: 		if(MSTR){
0x50B8	0xA483      	BTFSS       PORTD, 2 
0x50BA	0xD085      	BRA         L_salioBP3438
;rutinasensores_v4(mstr-slv).h,1919 :: 		pVerdaderosMEntero = eepromLeeNumero(0x0009, 2);
0x50BC	0x0E09      	MOVLW       9
0x50BE	0x0102      	MOVLB       2
0x50C0	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x50C2	0x0E00      	MOVLW       0
0x50C4	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x50C6	0x0E02      	MOVLW       2
0x50C8	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x50CA	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x50CE	0xF12FC000  	MOVFF       R0, _pVerdaderosMEntero
0x50D2	0xF130C001  	MOVFF       R1, _pVerdaderosMEntero+1
;rutinasensores_v4(mstr-slv).h,1920 :: 		pVerdaderosEEntero = eepromLeeNumero(0x0007, 2);
0x50D6	0x0E07      	MOVLW       7
0x50D8	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x50DA	0x0E00      	MOVLW       0
0x50DC	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x50DE	0x0E02      	MOVLW       2
0x50E0	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x50E2	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x50E6	0xF12DC000  	MOVFF       R0, _pVerdaderosEEntero
0x50EA	0xF12EC001  	MOVFF       R1, _pVerdaderosEEntero+1
;rutinasensores_v4(mstr-slv).h,1921 :: 		pasajerosTotalesL = pVerdaderosMEntero + pVerdaderosEEntero;
0x50EE	0x5000      	MOVF        R0, 0 
0x50F0	0x0101      	MOVLB       1
0x50F2	0x252F      	ADDWF       _pVerdaderosMEntero, 0, 1
0x50F4	0x6F33      	MOVWF       _pasajerosTotalesL, 1
0x50F6	0x5001      	MOVF        R1, 0 
0x50F8	0x2130      	ADDWFC      _pVerdaderosMEntero+1, 0, 1
0x50FA	0x6F34      	MOVWF       _pasajerosTotalesL+1, 1
;rutinasensores_v4(mstr-slv).h,1922 :: 		totalCalculado = (eepromLeeNumero(0x0000, 2)+eepromLeeNumero(0x0003, 2)+eepromLeeNumero(0x0900, 2)+eepromLeeNumero(0x0700, 2))/2;
0x50FC	0x0102      	MOVLB       2
0x50FE	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x5100	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x5102	0x0E02      	MOVLW       2
0x5104	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x5106	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x510A	0xF215C000  	MOVFF       R0, FLOC__salioBP3
0x510E	0xF216C001  	MOVFF       R1, FLOC__salioBP3+1
0x5112	0xF217C002  	MOVFF       R2, FLOC__salioBP3+2
0x5116	0xF218C003  	MOVFF       R3, FLOC__salioBP3+3
0x511A	0x0E03      	MOVLW       3
0x511C	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x511E	0x0E00      	MOVLW       0
0x5120	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x5122	0x0E02      	MOVLW       2
0x5124	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x5126	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x512A	0x5000      	MOVF        R0, 0 
0x512C	0x2715      	ADDWF       FLOC__salioBP3, 1, 1
0x512E	0x5001      	MOVF        R1, 0 
0x5130	0x2316      	ADDWFC      FLOC__salioBP3+1, 1, 1
0x5132	0x5002      	MOVF        R2, 0 
0x5134	0x2317      	ADDWFC      FLOC__salioBP3+2, 1, 1
0x5136	0x5003      	MOVF        R3, 0 
0x5138	0x2318      	ADDWFC      FLOC__salioBP3+3, 1, 1
0x513A	0x0E00      	MOVLW       0
0x513C	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x513E	0x0E09      	MOVLW       9
0x5140	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x5142	0x0E02      	MOVLW       2
0x5144	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x5146	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x514A	0x5000      	MOVF        R0, 0 
0x514C	0x2715      	ADDWF       FLOC__salioBP3, 1, 1
0x514E	0x5001      	MOVF        R1, 0 
0x5150	0x2316      	ADDWFC      FLOC__salioBP3+1, 1, 1
0x5152	0x5002      	MOVF        R2, 0 
0x5154	0x2317      	ADDWFC      FLOC__salioBP3+2, 1, 1
0x5156	0x5003      	MOVF        R3, 0 
0x5158	0x2318      	ADDWFC      FLOC__salioBP3+3, 1, 1
0x515A	0x0E00      	MOVLW       0
0x515C	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x515E	0x0E07      	MOVLW       7
0x5160	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x5162	0x0E02      	MOVLW       2
0x5164	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x5166	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x516A	0x5000      	MOVF        R0, 0 
0x516C	0x2515      	ADDWF       FLOC__salioBP3, 0, 1
0x516E	0x6E05      	MOVWF       R5 
0x5170	0x5001      	MOVF        R1, 0 
0x5172	0x2116      	ADDWFC      FLOC__salioBP3+1, 0, 1
0x5174	0x6E06      	MOVWF       R6 
0x5176	0x5002      	MOVF        R2, 0 
0x5178	0x2117      	ADDWFC      FLOC__salioBP3+2, 0, 1
0x517A	0x6E07      	MOVWF       R7 
0x517C	0x5003      	MOVF        R3, 0 
0x517E	0x2118      	ADDWFC      FLOC__salioBP3+3, 0, 1
0x5180	0x6E08      	MOVWF       R8 
0x5182	0xF000C005  	MOVFF       R5, R0
0x5186	0xF001C006  	MOVFF       R6, R1
0x518A	0xF002C007  	MOVFF       R7, R2
0x518E	0xF003C008  	MOVFF       R8, R3
0x5192	0x3203      	RRCF        R3, 1 
0x5194	0x3202      	RRCF        R2, 1 
0x5196	0x3201      	RRCF        R1, 1 
0x5198	0x3200      	RRCF        R0, 1 
0x519A	0x9E03      	BCF         R3, 7 
0x519C	0xBC03      	BTFSC       R3, 6 
0x519E	0x8E03      	BSF         R3, 7 
0x51A0	0xF131C000  	MOVFF       R0, _totalCalculado
0x51A4	0xF132C001  	MOVFF       R1, _totalCalculado+1
;rutinasensores_v4(mstr-slv).h,1923 :: 		eepromEscribeNumero(0x0005, totalCalculado, 2);
0x51A8	0x0E05      	MOVLW       5
0x51AA	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x51AC	0x0E00      	MOVLW       0
0x51AE	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x51B0	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x51B4	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x51B8	0x0E00      	MOVLW       0
0x51BA	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x51BC	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x51BE	0x0E02      	MOVLW       2
0x51C0	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x51C2	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,1924 :: 		}
L_salioBP3438:
;rutinasensores_v4(mstr-slv).h,1925 :: 		lcd_cmd(_LCD_CLEAR);
0x51C6	0x0E01      	MOVLW       1
0x51C8	0x0102      	MOVLB       2
0x51CA	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x51CC	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1926 :: 		return debugEstadoB = ESPERA;
0x51D0	0x0101      	MOVLB       1
0x51D2	0x6B3D      	CLRF        _debugEstadoB, 1
0x51D4	0x6A00      	CLRF        R0 
0x51D6	0xD000      	BRA         L_end_salioBP3
;rutinasensores_v4(mstr-slv).h,1927 :: 		}
L_salioBP3437:
;rutinasensores_v4(mstr-slv).h,1928 :: 		}
L_end_salioBP3:
0x51D8	0x0012      	RETURN      0
; end of _salioBP3
_transicionSalBP4:
;rutinasensores_v4(mstr-slv).h,2040 :: 		short transicionSalBP4(short estado){
;rutinasensores_v4(mstr-slv).h,2041 :: 		if(estado == TRANSAL){
0x51DA	0x0102      	MOVLB       2
0x51DC	0x5114      	MOVF        FARG_transicionSalBP4_estado, 0, 1
0x51DE	0x0A05      	XORLW       5
0x51E0	0xE153      	BNZ         L_transicionSalBP4460
;rutinasensores_v4(mstr-slv).h,2042 :: 		LCD_OUTCONST(3,1,"TRANSICION SALIDA");
0x51E2	0x0E03      	MOVLW       3
0x51E4	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x51E6	0x0E01      	MOVLW       1
0x51E8	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x51EA	0x0E32      	MOVLW       ?lstr_94_MyProject
0x51EC	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x51EE	0x0ED6      	MOVLW       hi_addr(?lstr_94_MyProject)
0x51F0	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x51F2	0x0E00      	MOVLW       higher_addr(?lstr_94_MyProject)
0x51F4	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x51F6	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,2043 :: 		if(!SENSOR2 | !SENSOR4 | !SENSOR6){
0x51FA	0xB883      	BTFSC       PORTD, 4 
0x51FC	0xD002      	BRA         L__transicionSalBP42076
0x51FE	0x8001      	BSF         R1, 0 
0x5200	0xD001      	BRA         L__transicionSalBP42077
L__transicionSalBP42076:
0x5202	0x9001      	BCF         R1, 0 
L__transicionSalBP42077:
0x5204	0xB681      	BTFSC       PORTB, 3 
0x5206	0xD002      	BRA         L__transicionSalBP42078
0x5208	0x80D8      	BSF         STATUS, 0 
0x520A	0xD001      	BRA         L__transicionSalBP42079
L__transicionSalBP42078:
0x520C	0x90D8      	BCF         STATUS, 0 
L__transicionSalBP42079:
0x520E	0xB001      	BTFSC       R1, 0 
0x5210	0xD003      	BRA         L__transicionSalBP42080
0x5212	0xE202      	BC          L__transicionSalBP42080
0x5214	0x9001      	BCF         R1, 0 
0x5216	0xD001      	BRA         L__transicionSalBP42081
L__transicionSalBP42080:
0x5218	0x8001      	BSF         R1, 0 
L__transicionSalBP42081:
0x521A	0xB281      	BTFSC       PORTB, 1 
0x521C	0xD002      	BRA         L__transicionSalBP42082
0x521E	0x80D8      	BSF         STATUS, 0 
0x5220	0xD001      	BRA         L__transicionSalBP42083
L__transicionSalBP42082:
0x5222	0x90D8      	BCF         STATUS, 0 
L__transicionSalBP42083:
0x5224	0xB001      	BTFSC       R1, 0 
0x5226	0xD003      	BRA         L__transicionSalBP42084
0x5228	0xE202      	BC          L__transicionSalBP42084
0x522A	0x9001      	BCF         R1, 0 
0x522C	0xD001      	BRA         L__transicionSalBP42085
L__transicionSalBP42084:
0x522E	0x8001      	BSF         R1, 0 
L__transicionSalBP42085:
0x5230	0xA001      	BTFSS       R1, 0 
0x5232	0xD00A      	BRA         L_transicionSalBP4461
;rutinasensores_v4(mstr-slv).h,2044 :: 		lcd_cmd(_LCD_CLEAR);
0x5234	0x0E01      	MOVLW       1
0x5236	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x5238	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2045 :: 		return debugEstadoB = TRANSICIONS;
0x523C	0x0E08      	MOVLW       8
0x523E	0x0101      	MOVLB       1
0x5240	0x6F3D      	MOVWF       _debugEstadoB, 1
0x5242	0x0E08      	MOVLW       8
0x5244	0x6E00      	MOVWF       R0 
0x5246	0xD020      	BRA         L_end_transicionSalBP4
;rutinasensores_v4(mstr-slv).h,2046 :: 		}
L_transicionSalBP4461:
;rutinasensores_v4(mstr-slv).h,2047 :: 		if((SENSOR5) & (SENSOR2 & SENSOR4 & SENSOR6)){
0x5248	0xA883      	BTFSS       PORTD, 4 
0x524A	0xD004      	BRA         L__transicionSalBP42086
0x524C	0xA681      	BTFSS       PORTB, 3 
0x524E	0xD002      	BRA         L__transicionSalBP42086
0x5250	0x80D8      	BSF         STATUS, 0 
0x5252	0xD001      	BRA         L__transicionSalBP42087
L__transicionSalBP42086:
0x5254	0x90D8      	BCF         STATUS, 0 
L__transicionSalBP42087:
0x5256	0xE304      	BNC         L__transicionSalBP42088
0x5258	0xA281      	BTFSS       PORTB, 1 
0x525A	0xD002      	BRA         L__transicionSalBP42088
0x525C	0x8001      	BSF         R1, 0 
0x525E	0xD001      	BRA         L__transicionSalBP42089
L__transicionSalBP42088:
0x5260	0x9001      	BCF         R1, 0 
L__transicionSalBP42089:
0x5262	0xA081      	BTFSS       PORTB, 0 
0x5264	0xD004      	BRA         L__transicionSalBP42090
0x5266	0xA001      	BTFSS       R1, 0 
0x5268	0xD002      	BRA         L__transicionSalBP42090
0x526A	0x80D8      	BSF         STATUS, 0 
0x526C	0xD001      	BRA         L__transicionSalBP42091
L__transicionSalBP42090:
0x526E	0x90D8      	BCF         STATUS, 0 
L__transicionSalBP42091:
0x5270	0xE30B      	BNC         L_transicionSalBP4462
;rutinasensores_v4(mstr-slv).h,2048 :: 		lcd_cmd(_LCD_CLEAR);
0x5272	0x0E01      	MOVLW       1
0x5274	0x0102      	MOVLB       2
0x5276	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x5278	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2049 :: 		return debugEstadoB = SALIO;
0x527C	0x0E06      	MOVLW       6
0x527E	0x0101      	MOVLB       1
0x5280	0x6F3D      	MOVWF       _debugEstadoB, 1
0x5282	0x0E06      	MOVLW       6
0x5284	0x6E00      	MOVWF       R0 
0x5286	0xD000      	BRA         L_end_transicionSalBP4
;rutinasensores_v4(mstr-slv).h,2050 :: 		}
L_transicionSalBP4462:
;rutinasensores_v4(mstr-slv).h,2051 :: 		}
L_transicionSalBP4460:
;rutinasensores_v4(mstr-slv).h,2052 :: 		}
L_end_transicionSalBP4:
0x5288	0x0012      	RETURN      0
; end of _transicionSalBP4
_transicionSBP4:
;rutinasensores_v4(mstr-slv).h,2026 :: 		short transicionSBP4(short estado){
;rutinasensores_v4(mstr-slv).h,2027 :: 		if(estado == TRANSICIONS){
0x528A	0x0102      	MOVLB       2
0x528C	0x5114      	MOVF        FARG_transicionSBP4_estado, 0, 1
0x528E	0x0A08      	XORLW       8
0x5290	0xA4D8      	BTFSS       STATUS, 2 
0x5292	0xD060      	BRA         L_transicionSBP4457
;rutinasensores_v4(mstr-slv).h,2028 :: 		lcd_outConst(3, 1, "TRANSICION");
0x5294	0x0E03      	MOVLW       3
0x5296	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x5298	0x0E01      	MOVLW       1
0x529A	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x529C	0x0EBB      	MOVLW       ?lstr_93_MyProject
0x529E	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x52A0	0x0ED8      	MOVLW       hi_addr(?lstr_93_MyProject)
0x52A2	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x52A4	0x0E00      	MOVLW       higher_addr(?lstr_93_MyProject)
0x52A6	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x52A8	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,2029 :: 		if(SENSOR2 & SENSOR4 & SENSOR6){
0x52AC	0xA883      	BTFSS       PORTD, 4 
0x52AE	0xD004      	BRA         L__transicionSBP42055
0x52B0	0xA681      	BTFSS       PORTB, 3 
0x52B2	0xD002      	BRA         L__transicionSBP42055
0x52B4	0x80D8      	BSF         STATUS, 0 
0x52B6	0xD001      	BRA         L__transicionSBP42056
L__transicionSBP42055:
0x52B8	0x90D8      	BCF         STATUS, 0 
L__transicionSBP42056:
0x52BA	0xE304      	BNC         L__transicionSBP42057
0x52BC	0xA281      	BTFSS       PORTB, 1 
0x52BE	0xD002      	BRA         L__transicionSBP42057
0x52C0	0x8001      	BSF         R1, 0 
0x52C2	0xD001      	BRA         L__transicionSBP42058
L__transicionSBP42057:
0x52C4	0x9001      	BCF         R1, 0 
L__transicionSBP42058:
0x52C6	0xA001      	BTFSS       R1, 0 
0x52C8	0xD00A      	BRA         L_transicionSBP4458
;rutinasensores_v4(mstr-slv).h,2030 :: 		lcd_cmd(_LCD_CLEAR);
0x52CA	0x0E01      	MOVLW       1
0x52CC	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x52CE	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2031 :: 		return debugEstadoB = TRANSAL;
0x52D2	0x0E05      	MOVLW       5
0x52D4	0x0101      	MOVLB       1
0x52D6	0x6F3D      	MOVWF       _debugEstadoB, 1
0x52D8	0x0E05      	MOVLW       5
0x52DA	0x6E00      	MOVWF       R0 
0x52DC	0xD03B      	BRA         L_end_transicionSBP4
;rutinasensores_v4(mstr-slv).h,2032 :: 		}
L_transicionSBP4458:
;rutinasensores_v4(mstr-slv).h,2033 :: 		if((SENSOR5 & !SENSOR2) | (SENSOR5 & !SENSOR4) | (SENSOR5 & !SENSOR6)){
0x52DE	0xB883      	BTFSC       PORTD, 4 
0x52E0	0xD002      	BRA         L__transicionSBP42059
0x52E2	0x80D8      	BSF         STATUS, 0 
0x52E4	0xD001      	BRA         L__transicionSBP42060
L__transicionSBP42059:
0x52E6	0x90D8      	BCF         STATUS, 0 
L__transicionSBP42060:
0x52E8	0xA081      	BTFSS       PORTB, 0 
0x52EA	0xD003      	BRA         L__transicionSBP42061
0x52EC	0xE302      	BNC         L__transicionSBP42061
0x52EE	0x8201      	BSF         R1, 1 
0x52F0	0xD001      	BRA         L__transicionSBP42062
L__transicionSBP42061:
0x52F2	0x9201      	BCF         R1, 1 
L__transicionSBP42062:
0x52F4	0xB681      	BTFSC       PORTB, 3 
0x52F6	0xD002      	BRA         L__transicionSBP42063
0x52F8	0x80D8      	BSF         STATUS, 0 
0x52FA	0xD001      	BRA         L__transicionSBP42064
L__transicionSBP42063:
0x52FC	0x90D8      	BCF         STATUS, 0 
L__transicionSBP42064:
0x52FE	0xA081      	BTFSS       PORTB, 0 
0x5300	0xD003      	BRA         L__transicionSBP42065
0x5302	0xE302      	BNC         L__transicionSBP42065
0x5304	0x8001      	BSF         R1, 0 
0x5306	0xD001      	BRA         L__transicionSBP42066
L__transicionSBP42065:
0x5308	0x9001      	BCF         R1, 0 
L__transicionSBP42066:
0x530A	0xB201      	BTFSC       R1, 1 
0x530C	0xD004      	BRA         L__transicionSBP42067
0x530E	0xB001      	BTFSC       R1, 0 
0x5310	0xD002      	BRA         L__transicionSBP42067
0x5312	0x9201      	BCF         R1, 1 
0x5314	0xD001      	BRA         L__transicionSBP42068
L__transicionSBP42067:
0x5316	0x8201      	BSF         R1, 1 
L__transicionSBP42068:
0x5318	0xB281      	BTFSC       PORTB, 1 
0x531A	0xD002      	BRA         L__transicionSBP42069
0x531C	0x80D8      	BSF         STATUS, 0 
0x531E	0xD001      	BRA         L__transicionSBP42070
L__transicionSBP42069:
0x5320	0x90D8      	BCF         STATUS, 0 
L__transicionSBP42070:
0x5322	0xA081      	BTFSS       PORTB, 0 
0x5324	0xD003      	BRA         L__transicionSBP42071
0x5326	0xE302      	BNC         L__transicionSBP42071
0x5328	0x8001      	BSF         R1, 0 
0x532A	0xD001      	BRA         L__transicionSBP42072
L__transicionSBP42071:
0x532C	0x9001      	BCF         R1, 0 
L__transicionSBP42072:
0x532E	0xB201      	BTFSC       R1, 1 
0x5330	0xD004      	BRA         L__transicionSBP42073
0x5332	0xB001      	BTFSC       R1, 0 
0x5334	0xD002      	BRA         L__transicionSBP42073
0x5336	0x90D8      	BCF         STATUS, 0 
0x5338	0xD001      	BRA         L__transicionSBP42074
L__transicionSBP42073:
0x533A	0x80D8      	BSF         STATUS, 0 
L__transicionSBP42074:
0x533C	0xE30B      	BNC         L_transicionSBP4459
;rutinasensores_v4(mstr-slv).h,2034 :: 		lcd_cmd(_LCD_CLEAR);
0x533E	0x0E01      	MOVLW       1
0x5340	0x0102      	MOVLB       2
0x5342	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x5344	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2035 :: 		return debugEstadoB = SALIENDO;
0x5348	0x0E04      	MOVLW       4
0x534A	0x0101      	MOVLB       1
0x534C	0x6F3D      	MOVWF       _debugEstadoB, 1
0x534E	0x0E04      	MOVLW       4
0x5350	0x6E00      	MOVWF       R0 
0x5352	0xD000      	BRA         L_end_transicionSBP4
;rutinasensores_v4(mstr-slv).h,2036 :: 		}
L_transicionSBP4459:
;rutinasensores_v4(mstr-slv).h,2037 :: 		}
L_transicionSBP4457:
;rutinasensores_v4(mstr-slv).h,2038 :: 		}
L_end_transicionSBP4:
0x5354	0x0012      	RETURN      0
; end of _transicionSBP4
_transicionEntBP4:
;rutinasensores_v4(mstr-slv).h,1976 :: 		short transicionEntBP4(short estado){
;rutinasensores_v4(mstr-slv).h,1977 :: 		if(estado == TRANENT){
0x5356	0x0102      	MOVLB       2
0x5358	0x5114      	MOVF        FARG_transicionEntBP4_estado, 0, 1
0x535A	0x0A07      	XORLW       7
0x535C	0xE138      	BNZ         L_transicionEntBP4448
;rutinasensores_v4(mstr-slv).h,1978 :: 		LCD_OUTCONST(3,1,"TRANSICION ENTRADA");
0x535E	0x0E03      	MOVLW       3
0x5360	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x5362	0x0E01      	MOVLW       1
0x5364	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x5366	0x0E1F      	MOVLW       ?lstr_90_MyProject
0x5368	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x536A	0x0ED6      	MOVLW       hi_addr(?lstr_90_MyProject)
0x536C	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x536E	0x0E00      	MOVLW       higher_addr(?lstr_90_MyProject)
0x5370	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x5372	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1979 :: 		if((!SENSOR5)/*(!SENSOR1 | !SENSOR3) | (!SENSOR3 | !SENSOR5) | (!SENSOR1 | !SENSOR5)*/){
0x5376	0xB081      	BTFSC       PORTB, 0 
0x5378	0xD00A      	BRA         L_transicionEntBP4449
;rutinasensores_v4(mstr-slv).h,1980 :: 		lcd_cmd(_LCD_CLEAR);
0x537A	0x0E01      	MOVLW       1
0x537C	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x537E	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1981 :: 		return debugEstadoB = TRANSICION;
0x5382	0x0E02      	MOVLW       2
0x5384	0x0101      	MOVLB       1
0x5386	0x6F3D      	MOVWF       _debugEstadoB, 1
0x5388	0x0E02      	MOVLW       2
0x538A	0x6E00      	MOVWF       R0 
0x538C	0xD020      	BRA         L_end_transicionEntBP4
;rutinasensores_v4(mstr-slv).h,1982 :: 		}
L_transicionEntBP4449:
;rutinasensores_v4(mstr-slv).h,1983 :: 		if(SENSOR2 & SENSOR4 & SENSOR6 & SENSOR5){
0x538E	0xA883      	BTFSS       PORTD, 4 
0x5390	0xD004      	BRA         L__transicionEntBP42042
0x5392	0xA681      	BTFSS       PORTB, 3 
0x5394	0xD002      	BRA         L__transicionEntBP42042
0x5396	0x80D8      	BSF         STATUS, 0 
0x5398	0xD001      	BRA         L__transicionEntBP42043
L__transicionEntBP42042:
0x539A	0x90D8      	BCF         STATUS, 0 
L__transicionEntBP42043:
0x539C	0xE304      	BNC         L__transicionEntBP42044
0x539E	0xA281      	BTFSS       PORTB, 1 
0x53A0	0xD002      	BRA         L__transicionEntBP42044
0x53A2	0x8001      	BSF         R1, 0 
0x53A4	0xD001      	BRA         L__transicionEntBP42045
L__transicionEntBP42044:
0x53A6	0x9001      	BCF         R1, 0 
L__transicionEntBP42045:
0x53A8	0xA001      	BTFSS       R1, 0 
0x53AA	0xD004      	BRA         L__transicionEntBP42046
0x53AC	0xA081      	BTFSS       PORTB, 0 
0x53AE	0xD002      	BRA         L__transicionEntBP42046
0x53B0	0x80D8      	BSF         STATUS, 0 
0x53B2	0xD001      	BRA         L__transicionEntBP42047
L__transicionEntBP42046:
0x53B4	0x90D8      	BCF         STATUS, 0 
L__transicionEntBP42047:
0x53B6	0xE30B      	BNC         L_transicionEntBP4450
;rutinasensores_v4(mstr-slv).h,1984 :: 		lcd_cmd(_LCD_CLEAR);
0x53B8	0x0E01      	MOVLW       1
0x53BA	0x0102      	MOVLB       2
0x53BC	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x53BE	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1985 :: 		return debugEstadoB = ENTRO;
0x53C2	0x0E03      	MOVLW       3
0x53C4	0x0101      	MOVLB       1
0x53C6	0x6F3D      	MOVWF       _debugEstadoB, 1
0x53C8	0x0E03      	MOVLW       3
0x53CA	0x6E00      	MOVWF       R0 
0x53CC	0xD000      	BRA         L_end_transicionEntBP4
;rutinasensores_v4(mstr-slv).h,1986 :: 		}
L_transicionEntBP4450:
;rutinasensores_v4(mstr-slv).h,1987 :: 		}
L_transicionEntBP4448:
;rutinasensores_v4(mstr-slv).h,1988 :: 		}
L_end_transicionEntBP4:
0x53CE	0x0012      	RETURN      0
; end of _transicionEntBP4
_esperaBP4:
;rutinasensores_v4(mstr-slv).h,1934 :: 		short esperaBP4(short estado){
;rutinasensores_v4(mstr-slv).h,1935 :: 		if(estado == ESPERA){
0x53D0	0x0102      	MOVLB       2
0x53D2	0x5114      	MOVF        FARG_esperaBP4_estado, 0, 1
0x53D4	0x0A00      	XORLW       0
0x53D6	0xE136      	BNZ         L_esperaBP4439
;rutinasensores_v4(mstr-slv).h,1936 :: 		muestraEstatus();
0x53D8	0xF008EC8B  	CALL        _muestraEstatus, 0
;rutinasensores_v4(mstr-slv).h,1937 :: 		if((!SENSOR5)){
0x53DC	0xB081      	BTFSC       PORTB, 0 
0x53DE	0xD00A      	BRA         L_esperaBP4440
;rutinasensores_v4(mstr-slv).h,1938 :: 		lcd_cmd(_LCD_CLEAR);
0x53E0	0x0E01      	MOVLW       1
0x53E2	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x53E4	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1939 :: 		return debugEstadoB = ENTRANDO;
0x53E8	0x0E01      	MOVLW       1
0x53EA	0x0101      	MOVLB       1
0x53EC	0x6F3D      	MOVWF       _debugEstadoB, 1
0x53EE	0x0E01      	MOVLW       1
0x53F0	0x6E00      	MOVWF       R0 
0x53F2	0xD028      	BRA         L_end_esperaBP4
;rutinasensores_v4(mstr-slv).h,1940 :: 		}
L_esperaBP4440:
;rutinasensores_v4(mstr-slv).h,1941 :: 		if((!SENSOR2 | !SENSOR4 | !SENSOR6)){
0x53F4	0xB883      	BTFSC       PORTD, 4 
0x53F6	0xD002      	BRA         L__esperaBP42001
0x53F8	0x8001      	BSF         R1, 0 
0x53FA	0xD001      	BRA         L__esperaBP42002
L__esperaBP42001:
0x53FC	0x9001      	BCF         R1, 0 
L__esperaBP42002:
0x53FE	0xB681      	BTFSC       PORTB, 3 
0x5400	0xD002      	BRA         L__esperaBP42003
0x5402	0x80D8      	BSF         STATUS, 0 
0x5404	0xD001      	BRA         L__esperaBP42004
L__esperaBP42003:
0x5406	0x90D8      	BCF         STATUS, 0 
L__esperaBP42004:
0x5408	0xB001      	BTFSC       R1, 0 
0x540A	0xD003      	BRA         L__esperaBP42005
0x540C	0xE202      	BC          L__esperaBP42005
0x540E	0x9001      	BCF         R1, 0 
0x5410	0xD001      	BRA         L__esperaBP42006
L__esperaBP42005:
0x5412	0x8001      	BSF         R1, 0 
L__esperaBP42006:
0x5414	0xB281      	BTFSC       PORTB, 1 
0x5416	0xD002      	BRA         L__esperaBP42007
0x5418	0x80D8      	BSF         STATUS, 0 
0x541A	0xD001      	BRA         L__esperaBP42008
L__esperaBP42007:
0x541C	0x90D8      	BCF         STATUS, 0 
L__esperaBP42008:
0x541E	0xB001      	BTFSC       R1, 0 
0x5420	0xD003      	BRA         L__esperaBP42009
0x5422	0xE202      	BC          L__esperaBP42009
0x5424	0x9001      	BCF         R1, 0 
0x5426	0xD001      	BRA         L__esperaBP42010
L__esperaBP42009:
0x5428	0x8001      	BSF         R1, 0 
L__esperaBP42010:
0x542A	0xA001      	BTFSS       R1, 0 
0x542C	0xD00B      	BRA         L_esperaBP4441
;rutinasensores_v4(mstr-slv).h,1942 :: 		lcd_cmd(_LCD_CLEAR);
0x542E	0x0E01      	MOVLW       1
0x5430	0x0102      	MOVLB       2
0x5432	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x5434	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1943 :: 		return debugEstadoB = SALIENDO;
0x5438	0x0E04      	MOVLW       4
0x543A	0x0101      	MOVLB       1
0x543C	0x6F3D      	MOVWF       _debugEstadoB, 1
0x543E	0x0E04      	MOVLW       4
0x5440	0x6E00      	MOVWF       R0 
0x5442	0xD000      	BRA         L_end_esperaBP4
;rutinasensores_v4(mstr-slv).h,1944 :: 		}
L_esperaBP4441:
;rutinasensores_v4(mstr-slv).h,1945 :: 		}
L_esperaBP4439:
;rutinasensores_v4(mstr-slv).h,1946 :: 		}
L_end_esperaBP4:
0x5444	0x0012      	RETURN      0
; end of _esperaBP4
_transicionSBP7:
;rutinasensores_v4(mstr-slv).h,2318 :: 		short transicionSBP7(short estado){
;rutinasensores_v4(mstr-slv).h,2319 :: 		if(estado == TRANSICIONS){
0x5446	0x0102      	MOVLB       2
0x5448	0x5114      	MOVF        FARG_transicionSBP7_estado, 0, 1
0x544A	0x0A08      	XORLW       8
0x544C	0xE13D      	BNZ         L_transicionSBP7509
;rutinasensores_v4(mstr-slv).h,2320 :: 		lcd_outConst(3, 1, "TRANSICION");
0x544E	0x0E03      	MOVLW       3
0x5450	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x5452	0x0E01      	MOVLW       1
0x5454	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x5456	0x0E34      	MOVLW       ?lstr_109_MyProject
0x5458	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x545A	0x0ED9      	MOVLW       hi_addr(?lstr_109_MyProject)
0x545C	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x545E	0x0E00      	MOVLW       higher_addr(?lstr_109_MyProject)
0x5460	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x5462	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,2321 :: 		if(SENSOR6){
0x5466	0xA281      	BTFSS       PORTB, 1 
0x5468	0xD00A      	BRA         L_transicionSBP7510
;rutinasensores_v4(mstr-slv).h,2322 :: 		lcd_cmd(_LCD_CLEAR);
0x546A	0x0E01      	MOVLW       1
0x546C	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x546E	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2323 :: 		return debugEstadoB = TRANSAL;
0x5472	0x0E05      	MOVLW       5
0x5474	0x0101      	MOVLB       1
0x5476	0x6F3D      	MOVWF       _debugEstadoB, 1
0x5478	0x0E05      	MOVLW       5
0x547A	0x6E00      	MOVWF       R0 
0x547C	0xD025      	BRA         L_end_transicionSBP7
;rutinasensores_v4(mstr-slv).h,2324 :: 		}
L_transicionSBP7510:
;rutinasensores_v4(mstr-slv).h,2325 :: 		if((SENSOR1 & SENSOR3 & SENSOR5 & !SENSOR6)){
0x547E	0xA881      	BTFSS       PORTB, 4 
0x5480	0xD004      	BRA         L__transicionSBP72283
0x5482	0xA481      	BTFSS       PORTB, 2 
0x5484	0xD002      	BRA         L__transicionSBP72283
0x5486	0x80D8      	BSF         STATUS, 0 
0x5488	0xD001      	BRA         L__transicionSBP72284
L__transicionSBP72283:
0x548A	0x90D8      	BCF         STATUS, 0 
L__transicionSBP72284:
0x548C	0xE304      	BNC         L__transicionSBP72285
0x548E	0xA081      	BTFSS       PORTB, 0 
0x5490	0xD002      	BRA         L__transicionSBP72285
0x5492	0x8001      	BSF         R1, 0 
0x5494	0xD001      	BRA         L__transicionSBP72286
L__transicionSBP72285:
0x5496	0x9001      	BCF         R1, 0 
L__transicionSBP72286:
0x5498	0xB281      	BTFSC       PORTB, 1 
0x549A	0xD002      	BRA         L__transicionSBP72287
0x549C	0x80D8      	BSF         STATUS, 0 
0x549E	0xD001      	BRA         L__transicionSBP72288
L__transicionSBP72287:
0x54A0	0x90D8      	BCF         STATUS, 0 
L__transicionSBP72288:
0x54A2	0xA001      	BTFSS       R1, 0 
0x54A4	0xD003      	BRA         L__transicionSBP72289
0x54A6	0xE302      	BNC         L__transicionSBP72289
0x54A8	0x8001      	BSF         R1, 0 
0x54AA	0xD001      	BRA         L__transicionSBP72290
L__transicionSBP72289:
0x54AC	0x9001      	BCF         R1, 0 
L__transicionSBP72290:
0x54AE	0xA001      	BTFSS       R1, 0 
0x54B0	0xD00B      	BRA         L_transicionSBP7511
;rutinasensores_v4(mstr-slv).h,2326 :: 		lcd_cmd(_LCD_CLEAR);
0x54B2	0x0E01      	MOVLW       1
0x54B4	0x0102      	MOVLB       2
0x54B6	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x54B8	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2327 :: 		return debugEstadoB = SALIENDO;
0x54BC	0x0E04      	MOVLW       4
0x54BE	0x0101      	MOVLB       1
0x54C0	0x6F3D      	MOVWF       _debugEstadoB, 1
0x54C2	0x0E04      	MOVLW       4
0x54C4	0x6E00      	MOVWF       R0 
0x54C6	0xD000      	BRA         L_end_transicionSBP7
;rutinasensores_v4(mstr-slv).h,2328 :: 		}
L_transicionSBP7511:
;rutinasensores_v4(mstr-slv).h,2329 :: 		}
L_transicionSBP7509:
;rutinasensores_v4(mstr-slv).h,2330 :: 		}
L_end_transicionSBP7:
0x54C8	0x0012      	RETURN      0
; end of _transicionSBP7
_esperaBP3:
;rutinasensores_v4(mstr-slv).h,1788 :: 		short esperaBP3(short estado){
;rutinasensores_v4(mstr-slv).h,1789 :: 		if(estado == ESPERA){
0x54CA	0x0102      	MOVLB       2
0x54CC	0x5114      	MOVF        FARG_esperaBP3_estado, 0, 1
0x54CE	0x0A00      	XORLW       0
0x54D0	0xE13B      	BNZ         L_esperaBP3413
;rutinasensores_v4(mstr-slv).h,1790 :: 		muestraEstatus();
0x54D2	0xF008EC8B  	CALL        _muestraEstatus, 0
;rutinasensores_v4(mstr-slv).h,1792 :: 		if((!SENSOR1 | !SENSOR3)){
0x54D6	0xB881      	BTFSC       PORTB, 4 
0x54D8	0xD002      	BRA         L__esperaBP31920
0x54DA	0x8001      	BSF         R1, 0 
0x54DC	0xD001      	BRA         L__esperaBP31921
L__esperaBP31920:
0x54DE	0x9001      	BCF         R1, 0 
L__esperaBP31921:
0x54E0	0xB481      	BTFSC       PORTB, 2 
0x54E2	0xD002      	BRA         L__esperaBP31922
0x54E4	0x80D8      	BSF         STATUS, 0 
0x54E6	0xD001      	BRA         L__esperaBP31923
L__esperaBP31922:
0x54E8	0x90D8      	BCF         STATUS, 0 
L__esperaBP31923:
0x54EA	0xB001      	BTFSC       R1, 0 
0x54EC	0xD003      	BRA         L__esperaBP31924
0x54EE	0xE202      	BC          L__esperaBP31924
0x54F0	0x9001      	BCF         R1, 0 
0x54F2	0xD001      	BRA         L__esperaBP31925
L__esperaBP31924:
0x54F4	0x8001      	BSF         R1, 0 
L__esperaBP31925:
0x54F6	0xA001      	BTFSS       R1, 0 
0x54F8	0xD00A      	BRA         L_esperaBP3414
;rutinasensores_v4(mstr-slv).h,1793 :: 		lcd_cmd(_LCD_CLEAR);
0x54FA	0x0E01      	MOVLW       1
0x54FC	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x54FE	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1794 :: 		return debugEstadoB = ENTRANDO;
0x5502	0x0E01      	MOVLW       1
0x5504	0x0101      	MOVLB       1
0x5506	0x6F3D      	MOVWF       _debugEstadoB, 1
0x5508	0x0E01      	MOVLW       1
0x550A	0x6E00      	MOVWF       R0 
0x550C	0xD01D      	BRA         L_end_esperaBP3
;rutinasensores_v4(mstr-slv).h,1795 :: 		}
L_esperaBP3414:
;rutinasensores_v4(mstr-slv).h,1796 :: 		if((!SENSOR2 | !SENSOR4)){
0x550E	0xB883      	BTFSC       PORTD, 4 
0x5510	0xD002      	BRA         L__esperaBP31926
0x5512	0x8001      	BSF         R1, 0 
0x5514	0xD001      	BRA         L__esperaBP31927
L__esperaBP31926:
0x5516	0x9001      	BCF         R1, 0 
L__esperaBP31927:
0x5518	0xB681      	BTFSC       PORTB, 3 
0x551A	0xD002      	BRA         L__esperaBP31928
0x551C	0x80D8      	BSF         STATUS, 0 
0x551E	0xD001      	BRA         L__esperaBP31929
L__esperaBP31928:
0x5520	0x90D8      	BCF         STATUS, 0 
L__esperaBP31929:
0x5522	0xB001      	BTFSC       R1, 0 
0x5524	0xD003      	BRA         L__esperaBP31930
0x5526	0xE202      	BC          L__esperaBP31930
0x5528	0x9001      	BCF         R1, 0 
0x552A	0xD001      	BRA         L__esperaBP31931
L__esperaBP31930:
0x552C	0x8001      	BSF         R1, 0 
L__esperaBP31931:
0x552E	0xA001      	BTFSS       R1, 0 
0x5530	0xD00B      	BRA         L_esperaBP3415
;rutinasensores_v4(mstr-slv).h,1797 :: 		lcd_cmd(_LCD_CLEAR);
0x5532	0x0E01      	MOVLW       1
0x5534	0x0102      	MOVLB       2
0x5536	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x5538	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1798 :: 		return debugEstadoB = SALIENDO;
0x553C	0x0E04      	MOVLW       4
0x553E	0x0101      	MOVLB       1
0x5540	0x6F3D      	MOVWF       _debugEstadoB, 1
0x5542	0x0E04      	MOVLW       4
0x5544	0x6E00      	MOVWF       R0 
0x5546	0xD000      	BRA         L_end_esperaBP3
;rutinasensores_v4(mstr-slv).h,1799 :: 		}
L_esperaBP3415:
;rutinasensores_v4(mstr-slv).h,1800 :: 		}
L_esperaBP3413:
;rutinasensores_v4(mstr-slv).h,1801 :: 		}
L_end_esperaBP3:
0x5548	0x0012      	RETURN      0
; end of _esperaBP3
_salioBP2:
;rutinasensores_v4(mstr-slv).h,1763 :: 		short salioBP2(short estado){
;rutinasensores_v4(mstr-slv).h,1764 :: 		if(estado == SALIO){
0x554A	0x0102      	MOVLB       2
0x554C	0x5114      	MOVF        FARG_salioBP2_estado, 0, 1
0x554E	0x0A06      	XORLW       6
0x5550	0xA4D8      	BTFSS       STATUS, 2 
0x5552	0xD11B      	BRA         L_salioBP2411
;rutinasensores_v4(mstr-slv).h,1765 :: 		LCD_OUTCONST(3,1,"GRACIAS!");
0x5554	0x0E03      	MOVLW       3
0x5556	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x5558	0x0E01      	MOVLW       1
0x555A	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x555C	0x0E22      	MOVLW       ?lstr_79_MyProject
0x555E	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x5560	0x0EDA      	MOVLW       hi_addr(?lstr_79_MyProject)
0x5562	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x5564	0x0E00      	MOVLW       higher_addr(?lstr_79_MyProject)
0x5566	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x5568	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1766 :: 		pSuben = eepromLeeNumero(0x0000,2);
0x556C	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x556E	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x5570	0x0E02      	MOVLW       2
0x5572	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x5574	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x5578	0xF137C000  	MOVFF       R0, _pSuben
0x557C	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,1767 :: 		pBajan = eepromLeeNumero(0x0003,2) + 1;
0x5580	0x0E03      	MOVLW       3
0x5582	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x5584	0x0E00      	MOVLW       0
0x5586	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x5588	0x0E02      	MOVLW       2
0x558A	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x558C	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x5590	0x4A00      	INFSNZ      R0, 1 
0x5592	0x2A01      	INCF        R1, 1 
0x5594	0xF135C000  	MOVFF       R0, _pBajan
0x5598	0xF136C001  	MOVFF       R1, _pBajan+1
;rutinasensores_v4(mstr-slv).h,1768 :: 		eepromEscribeNumero(0x0003,pBajan,2);
0x559C	0x0E03      	MOVLW       3
0x559E	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x55A0	0x0E00      	MOVLW       0
0x55A2	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x55A4	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x55A8	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x55AC	0x0E00      	MOVLW       0
0x55AE	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x55B0	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x55B2	0x0E02      	MOVLW       2
0x55B4	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x55B6	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,1769 :: 		pBajan = eepromLeeNumero(0x0003,2);
0x55BA	0x0E03      	MOVLW       3
0x55BC	0x0102      	MOVLB       2
0x55BE	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x55C0	0x0E00      	MOVLW       0
0x55C2	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x55C4	0x0E02      	MOVLW       2
0x55C6	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x55C8	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x55CC	0xF219C000  	MOVFF       R0, FLOC__salioBP2+4
0x55D0	0xF21AC001  	MOVFF       R1, FLOC__salioBP2+5
0x55D4	0xF21BC002  	MOVFF       R2, FLOC__salioBP2+6
0x55D8	0xF21CC003  	MOVFF       R3, FLOC__salioBP2+7
0x55DC	0xF135C219  	MOVFF       FLOC__salioBP2+4, _pBajan
0x55E0	0xF136C21A  	MOVFF       FLOC__salioBP2+5, _pBajan+1
;rutinasensores_v4(mstr-slv).h,1770 :: 		pasajerosVerdaderos = ((float)pSuben + (float)pBajan)/2;
0x55E4	0xF000C137  	MOVFF       _pSuben, R0
0x55E8	0xF001C138  	MOVFF       _pSuben+1, R1
0x55EC	0xF008EC65  	CALL        _Word2Double, 0
0x55F0	0xF215C000  	MOVFF       R0, FLOC__salioBP2
0x55F4	0xF216C001  	MOVFF       R1, FLOC__salioBP2+1
0x55F8	0xF217C002  	MOVFF       R2, FLOC__salioBP2+2
0x55FC	0xF218C003  	MOVFF       R3, FLOC__salioBP2+3
0x5600	0xF000C219  	MOVFF       FLOC__salioBP2+4, R0
0x5604	0xF001C21A  	MOVFF       FLOC__salioBP2+5, R1
0x5608	0xF008EC65  	CALL        _Word2Double, 0
0x560C	0xF004C215  	MOVFF       FLOC__salioBP2, R4
0x5610	0xF005C216  	MOVFF       FLOC__salioBP2+1, R5
0x5614	0xF006C217  	MOVFF       FLOC__salioBP2+2, R6
0x5618	0xF007C218  	MOVFF       FLOC__salioBP2+3, R7
0x561C	0xF004EC8D  	CALL        _Add_32x32_FP, 0
0x5620	0x0E00      	MOVLW       0
0x5622	0x6E04      	MOVWF       R4 
0x5624	0x0E00      	MOVLW       0
0x5626	0x6E05      	MOVWF       R5 
0x5628	0x0E00      	MOVLW       0
0x562A	0x6E06      	MOVWF       R6 
0x562C	0x0E80      	MOVLW       128
0x562E	0x6E07      	MOVWF       R7 
0x5630	0xF007ECA7  	CALL        _Div_32x32_FP, 0
0x5634	0xF139C000  	MOVFF       R0, _pasajerosVerdaderos
0x5638	0xF13AC001  	MOVFF       R1, _pasajerosVerdaderos+1
0x563C	0xF13BC002  	MOVFF       R2, _pasajerosVerdaderos+2
0x5640	0xF13CC003  	MOVFF       R3, _pasajerosVerdaderos+3
;rutinasensores_v4(mstr-slv).h,1771 :: 		eepromEscribeNumero(0x0009, pasajerosVerdaderos, 2);
0x5644	0x0E09      	MOVLW       9
0x5646	0x0102      	MOVLB       2
0x5648	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x564A	0x0E00      	MOVLW       0
0x564C	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x564E	0xF007EC0E  	CALL        _Double2Longint, 0
0x5652	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x5656	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x565A	0xF221C002  	MOVFF       R2, FARG_eepromEscribeNumero_Dato+2
0x565E	0xF222C003  	MOVFF       R3, FARG_eepromEscribeNumero_Dato+3
0x5662	0x0E02      	MOVLW       2
0x5664	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x5666	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,1772 :: 		if(MSTR){
0x566A	0xA483      	BTFSS       PORTD, 2 
0x566C	0xD085      	BRA         L_salioBP2412
;rutinasensores_v4(mstr-slv).h,1773 :: 		pVerdaderosMEntero = eepromLeeNumero(0x0009, 2);
0x566E	0x0E09      	MOVLW       9
0x5670	0x0102      	MOVLB       2
0x5672	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x5674	0x0E00      	MOVLW       0
0x5676	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x5678	0x0E02      	MOVLW       2
0x567A	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x567C	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x5680	0xF12FC000  	MOVFF       R0, _pVerdaderosMEntero
0x5684	0xF130C001  	MOVFF       R1, _pVerdaderosMEntero+1
;rutinasensores_v4(mstr-slv).h,1774 :: 		pVerdaderosEEntero = eepromLeeNumero(0x0007, 2);
0x5688	0x0E07      	MOVLW       7
0x568A	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x568C	0x0E00      	MOVLW       0
0x568E	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x5690	0x0E02      	MOVLW       2
0x5692	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x5694	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x5698	0xF12DC000  	MOVFF       R0, _pVerdaderosEEntero
0x569C	0xF12EC001  	MOVFF       R1, _pVerdaderosEEntero+1
;rutinasensores_v4(mstr-slv).h,1775 :: 		pasajerosTotalesL = pVerdaderosMEntero + pVerdaderosEEntero;
0x56A0	0x5000      	MOVF        R0, 0 
0x56A2	0x0101      	MOVLB       1
0x56A4	0x252F      	ADDWF       _pVerdaderosMEntero, 0, 1
0x56A6	0x6F33      	MOVWF       _pasajerosTotalesL, 1
0x56A8	0x5001      	MOVF        R1, 0 
0x56AA	0x2130      	ADDWFC      _pVerdaderosMEntero+1, 0, 1
0x56AC	0x6F34      	MOVWF       _pasajerosTotalesL+1, 1
;rutinasensores_v4(mstr-slv).h,1776 :: 		totalCalculado = (eepromLeeNumero(0x0000, 2)+eepromLeeNumero(0x0003, 2)+eepromLeeNumero(0x0900, 2)+eepromLeeNumero(0x0700, 2))/2;
0x56AE	0x0102      	MOVLB       2
0x56B0	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x56B2	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x56B4	0x0E02      	MOVLW       2
0x56B6	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x56B8	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x56BC	0xF215C000  	MOVFF       R0, FLOC__salioBP2
0x56C0	0xF216C001  	MOVFF       R1, FLOC__salioBP2+1
0x56C4	0xF217C002  	MOVFF       R2, FLOC__salioBP2+2
0x56C8	0xF218C003  	MOVFF       R3, FLOC__salioBP2+3
0x56CC	0x0E03      	MOVLW       3
0x56CE	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x56D0	0x0E00      	MOVLW       0
0x56D2	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x56D4	0x0E02      	MOVLW       2
0x56D6	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x56D8	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x56DC	0x5000      	MOVF        R0, 0 
0x56DE	0x2715      	ADDWF       FLOC__salioBP2, 1, 1
0x56E0	0x5001      	MOVF        R1, 0 
0x56E2	0x2316      	ADDWFC      FLOC__salioBP2+1, 1, 1
0x56E4	0x5002      	MOVF        R2, 0 
0x56E6	0x2317      	ADDWFC      FLOC__salioBP2+2, 1, 1
0x56E8	0x5003      	MOVF        R3, 0 
0x56EA	0x2318      	ADDWFC      FLOC__salioBP2+3, 1, 1
0x56EC	0x0E00      	MOVLW       0
0x56EE	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x56F0	0x0E09      	MOVLW       9
0x56F2	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x56F4	0x0E02      	MOVLW       2
0x56F6	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x56F8	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x56FC	0x5000      	MOVF        R0, 0 
0x56FE	0x2715      	ADDWF       FLOC__salioBP2, 1, 1
0x5700	0x5001      	MOVF        R1, 0 
0x5702	0x2316      	ADDWFC      FLOC__salioBP2+1, 1, 1
0x5704	0x5002      	MOVF        R2, 0 
0x5706	0x2317      	ADDWFC      FLOC__salioBP2+2, 1, 1
0x5708	0x5003      	MOVF        R3, 0 
0x570A	0x2318      	ADDWFC      FLOC__salioBP2+3, 1, 1
0x570C	0x0E00      	MOVLW       0
0x570E	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x5710	0x0E07      	MOVLW       7
0x5712	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x5714	0x0E02      	MOVLW       2
0x5716	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x5718	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x571C	0x5000      	MOVF        R0, 0 
0x571E	0x2515      	ADDWF       FLOC__salioBP2, 0, 1
0x5720	0x6E05      	MOVWF       R5 
0x5722	0x5001      	MOVF        R1, 0 
0x5724	0x2116      	ADDWFC      FLOC__salioBP2+1, 0, 1
0x5726	0x6E06      	MOVWF       R6 
0x5728	0x5002      	MOVF        R2, 0 
0x572A	0x2117      	ADDWFC      FLOC__salioBP2+2, 0, 1
0x572C	0x6E07      	MOVWF       R7 
0x572E	0x5003      	MOVF        R3, 0 
0x5730	0x2118      	ADDWFC      FLOC__salioBP2+3, 0, 1
0x5732	0x6E08      	MOVWF       R8 
0x5734	0xF000C005  	MOVFF       R5, R0
0x5738	0xF001C006  	MOVFF       R6, R1
0x573C	0xF002C007  	MOVFF       R7, R2
0x5740	0xF003C008  	MOVFF       R8, R3
0x5744	0x3203      	RRCF        R3, 1 
0x5746	0x3202      	RRCF        R2, 1 
0x5748	0x3201      	RRCF        R1, 1 
0x574A	0x3200      	RRCF        R0, 1 
0x574C	0x9E03      	BCF         R3, 7 
0x574E	0xBC03      	BTFSC       R3, 6 
0x5750	0x8E03      	BSF         R3, 7 
0x5752	0xF131C000  	MOVFF       R0, _totalCalculado
0x5756	0xF132C001  	MOVFF       R1, _totalCalculado+1
;rutinasensores_v4(mstr-slv).h,1777 :: 		eepromEscribeNumero(0x0005, totalCalculado, 2);
0x575A	0x0E05      	MOVLW       5
0x575C	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x575E	0x0E00      	MOVLW       0
0x5760	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x5762	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x5766	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x576A	0x0E00      	MOVLW       0
0x576C	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x576E	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x5770	0x0E02      	MOVLW       2
0x5772	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x5774	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,1778 :: 		}
L_salioBP2412:
;rutinasensores_v4(mstr-slv).h,1779 :: 		lcd_cmd(_LCD_CLEAR);
0x5778	0x0E01      	MOVLW       1
0x577A	0x0102      	MOVLB       2
0x577C	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x577E	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1780 :: 		return debugEstadoB = ESPERA;
0x5782	0x0101      	MOVLB       1
0x5784	0x6B3D      	CLRF        _debugEstadoB, 1
0x5786	0x6A00      	CLRF        R0 
0x5788	0xD000      	BRA         L_end_salioBP2
;rutinasensores_v4(mstr-slv).h,1781 :: 		}
L_salioBP2411:
;rutinasensores_v4(mstr-slv).h,1782 :: 		}
L_end_salioBP2:
0x578A	0x0012      	RETURN      0
; end of _salioBP2
_transicionEBP3:
;rutinasensores_v4(mstr-slv).h,1817 :: 		short transicionEBP3(short estado){
;rutinasensores_v4(mstr-slv).h,1818 :: 		if(estado == TRANSICION){
0x578C	0x0102      	MOVLB       2
0x578E	0x5114      	MOVF        FARG_transicionEBP3_estado, 0, 1
0x5790	0x0A02      	XORLW       2
0x5792	0xE14E      	BNZ         L_transicionEBP3419
;rutinasensores_v4(mstr-slv).h,1819 :: 		LCD_OUTCONST(3,1,"TRANSICION");
0x5794	0x0E03      	MOVLW       3
0x5796	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x5798	0x0E01      	MOVLW       1
0x579A	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x579C	0x0E76      	MOVLW       ?lstr_81_MyProject
0x579E	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x57A0	0x0ED9      	MOVLW       hi_addr(?lstr_81_MyProject)
0x57A2	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x57A4	0x0E00      	MOVLW       higher_addr(?lstr_81_MyProject)
0x57A6	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x57A8	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1820 :: 		if((SENSOR1 & SENSOR3)){
0x57AC	0xA881      	BTFSS       PORTB, 4 
0x57AE	0xD004      	BRA         L__transicionEBP31942
0x57B0	0xA481      	BTFSS       PORTB, 2 
0x57B2	0xD002      	BRA         L__transicionEBP31942
0x57B4	0x80D8      	BSF         STATUS, 0 
0x57B6	0xD001      	BRA         L__transicionEBP31943
L__transicionEBP31942:
0x57B8	0x90D8      	BCF         STATUS, 0 
L__transicionEBP31943:
0x57BA	0xE30A      	BNC         L_transicionEBP3420
;rutinasensores_v4(mstr-slv).h,1821 :: 		lcd_cmd(_LCD_CLEAR);
0x57BC	0x0E01      	MOVLW       1
0x57BE	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x57C0	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1822 :: 		return debugEstadoB = TRANENT;
0x57C4	0x0E07      	MOVLW       7
0x57C6	0x0101      	MOVLB       1
0x57C8	0x6F3D      	MOVWF       _debugEstadoB, 1
0x57CA	0x0E07      	MOVLW       7
0x57CC	0x6E00      	MOVWF       R0 
0x57CE	0xD030      	BRA         L_end_transicionEBP3
;rutinasensores_v4(mstr-slv).h,1823 :: 		}
L_transicionEBP3420:
;rutinasensores_v4(mstr-slv).h,1824 :: 		if((SENSOR2 & SENSOR4 & !SENSOR1) | (SENSOR2 & SENSOR4 & !SENSOR3)){
0x57D0	0xA883      	BTFSS       PORTD, 4 
0x57D2	0xD004      	BRA         L__transicionEBP31944
0x57D4	0xA681      	BTFSS       PORTB, 3 
0x57D6	0xD002      	BRA         L__transicionEBP31944
0x57D8	0x8001      	BSF         R1, 0 
0x57DA	0xD001      	BRA         L__transicionEBP31945
L__transicionEBP31944:
0x57DC	0x9001      	BCF         R1, 0 
L__transicionEBP31945:
0x57DE	0xB881      	BTFSC       PORTB, 4 
0x57E0	0xD002      	BRA         L__transicionEBP31946
0x57E2	0x80D8      	BSF         STATUS, 0 
0x57E4	0xD001      	BRA         L__transicionEBP31947
L__transicionEBP31946:
0x57E6	0x90D8      	BCF         STATUS, 0 
L__transicionEBP31947:
0x57E8	0xA001      	BTFSS       R1, 0 
0x57EA	0xD003      	BRA         L__transicionEBP31948
0x57EC	0xE302      	BNC         L__transicionEBP31948
0x57EE	0x8201      	BSF         R1, 1 
0x57F0	0xD001      	BRA         L__transicionEBP31949
L__transicionEBP31948:
0x57F2	0x9201      	BCF         R1, 1 
L__transicionEBP31949:
0x57F4	0xB481      	BTFSC       PORTB, 2 
0x57F6	0xD002      	BRA         L__transicionEBP31950
0x57F8	0x80D8      	BSF         STATUS, 0 
0x57FA	0xD001      	BRA         L__transicionEBP31951
L__transicionEBP31950:
0x57FC	0x90D8      	BCF         STATUS, 0 
L__transicionEBP31951:
0x57FE	0xA001      	BTFSS       R1, 0 
0x5800	0xD003      	BRA         L__transicionEBP31952
0x5802	0xE302      	BNC         L__transicionEBP31952
0x5804	0x8001      	BSF         R1, 0 
0x5806	0xD001      	BRA         L__transicionEBP31953
L__transicionEBP31952:
0x5808	0x9001      	BCF         R1, 0 
L__transicionEBP31953:
0x580A	0xB201      	BTFSC       R1, 1 
0x580C	0xD004      	BRA         L__transicionEBP31954
0x580E	0xB001      	BTFSC       R1, 0 
0x5810	0xD002      	BRA         L__transicionEBP31954
0x5812	0x90D8      	BCF         STATUS, 0 
0x5814	0xD001      	BRA         L__transicionEBP31955
L__transicionEBP31954:
0x5816	0x80D8      	BSF         STATUS, 0 
L__transicionEBP31955:
0x5818	0xE30B      	BNC         L_transicionEBP3421
;rutinasensores_v4(mstr-slv).h,1825 :: 		lcd_cmd(_LCD_CLEAR);
0x581A	0x0E01      	MOVLW       1
0x581C	0x0102      	MOVLB       2
0x581E	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x5820	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1826 :: 		return debugEstadoB = ENTRANDO;
0x5824	0x0E01      	MOVLW       1
0x5826	0x0101      	MOVLB       1
0x5828	0x6F3D      	MOVWF       _debugEstadoB, 1
0x582A	0x0E01      	MOVLW       1
0x582C	0x6E00      	MOVWF       R0 
0x582E	0xD000      	BRA         L_end_transicionEBP3
;rutinasensores_v4(mstr-slv).h,1827 :: 		}
L_transicionEBP3421:
;rutinasensores_v4(mstr-slv).h,1828 :: 		}
L_transicionEBP3419:
;rutinasensores_v4(mstr-slv).h,1829 :: 		}
L_end_transicionEBP3:
0x5830	0x0012      	RETURN      0
; end of _transicionEBP3
_entrandoBP3:
;rutinasensores_v4(mstr-slv).h,1803 :: 		short entrandoBP3(short estado){
;rutinasensores_v4(mstr-slv).h,1804 :: 		if(estado == ENTRANDO){
0x5832	0x0102      	MOVLB       2
0x5834	0x5114      	MOVF        FARG_entrandoBP3_estado, 0, 1
0x5836	0x0A01      	XORLW       1
0x5838	0xE139      	BNZ         L_entrandoBP3416
;rutinasensores_v4(mstr-slv).h,1805 :: 		LCD_OUTCONST(3,1,"ENTRANDO DEBUG");
0x583A	0x0E03      	MOVLW       3
0x583C	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x583E	0x0E01      	MOVLW       1
0x5840	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x5842	0x0E7D      	MOVLW       ?lstr_80_MyProject
0x5844	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x5846	0x0ED8      	MOVLW       hi_addr(?lstr_80_MyProject)
0x5848	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x584A	0x0E00      	MOVLW       higher_addr(?lstr_80_MyProject)
0x584C	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x584E	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1806 :: 		if((SENSOR1 & SENSOR3)){
0x5852	0xA881      	BTFSS       PORTB, 4 
0x5854	0xD004      	BRA         L__entrandoBP31933
0x5856	0xA481      	BTFSS       PORTB, 2 
0x5858	0xD002      	BRA         L__entrandoBP31933
0x585A	0x80D8      	BSF         STATUS, 0 
0x585C	0xD001      	BRA         L__entrandoBP31934
L__entrandoBP31933:
0x585E	0x90D8      	BCF         STATUS, 0 
L__entrandoBP31934:
0x5860	0xE308      	BNC         L_entrandoBP3417
;rutinasensores_v4(mstr-slv).h,1807 :: 		lcd_cmd(_LCD_CLEAR);
0x5862	0x0E01      	MOVLW       1
0x5864	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x5866	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1808 :: 		return debugEstadoB = ESPERA;
0x586A	0x0101      	MOVLB       1
0x586C	0x6B3D      	CLRF        _debugEstadoB, 1
0x586E	0x6A00      	CLRF        R0 
0x5870	0xD01D      	BRA         L_end_entrandoBP3
;rutinasensores_v4(mstr-slv).h,1809 :: 		}
L_entrandoBP3417:
;rutinasensores_v4(mstr-slv).h,1810 :: 		if((!SENSOR2 & !SENSOR4)){
0x5872	0xB883      	BTFSC       PORTD, 4 
0x5874	0xD002      	BRA         L__entrandoBP31935
0x5876	0x8001      	BSF         R1, 0 
0x5878	0xD001      	BRA         L__entrandoBP31936
L__entrandoBP31935:
0x587A	0x9001      	BCF         R1, 0 
L__entrandoBP31936:
0x587C	0xB681      	BTFSC       PORTB, 3 
0x587E	0xD002      	BRA         L__entrandoBP31937
0x5880	0x80D8      	BSF         STATUS, 0 
0x5882	0xD001      	BRA         L__entrandoBP31938
L__entrandoBP31937:
0x5884	0x90D8      	BCF         STATUS, 0 
L__entrandoBP31938:
0x5886	0xA001      	BTFSS       R1, 0 
0x5888	0xD003      	BRA         L__entrandoBP31939
0x588A	0xE302      	BNC         L__entrandoBP31939
0x588C	0x8001      	BSF         R1, 0 
0x588E	0xD001      	BRA         L__entrandoBP31940
L__entrandoBP31939:
0x5890	0x9001      	BCF         R1, 0 
L__entrandoBP31940:
0x5892	0xA001      	BTFSS       R1, 0 
0x5894	0xD00B      	BRA         L_entrandoBP3418
;rutinasensores_v4(mstr-slv).h,1811 :: 		lcd_cmd(_LCD_CLEAR);
0x5896	0x0E01      	MOVLW       1
0x5898	0x0102      	MOVLB       2
0x589A	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x589C	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1812 :: 		return debugEstadoB = TRANSICION;
0x58A0	0x0E02      	MOVLW       2
0x58A2	0x0101      	MOVLB       1
0x58A4	0x6F3D      	MOVWF       _debugEstadoB, 1
0x58A6	0x0E02      	MOVLW       2
0x58A8	0x6E00      	MOVWF       R0 
0x58AA	0xD000      	BRA         L_end_entrandoBP3
;rutinasensores_v4(mstr-slv).h,1813 :: 		}
L_entrandoBP3418:
;rutinasensores_v4(mstr-slv).h,1814 :: 		}
L_entrandoBP3416:
;rutinasensores_v4(mstr-slv).h,1815 :: 		}
L_end_entrandoBP3:
0x58AC	0x0012      	RETURN      0
; end of _entrandoBP3
_transicionSalBP6:
;rutinasensores_v4(mstr-slv).h,2186 :: 		short transicionSalBP6(short estado){
;rutinasensores_v4(mstr-slv).h,2187 :: 		if(estado == TRANSAL){
0x58AE	0x0102      	MOVLB       2
0x58B0	0x5114      	MOVF        FARG_transicionSalBP6_estado, 0, 1
0x58B2	0x0A05      	XORLW       5
0x58B4	0xE153      	BNZ         L_transicionSalBP6486
;rutinasensores_v4(mstr-slv).h,2188 :: 		LCD_OUTCONST(3,1,"TRANSICION SALIDA");
0x58B6	0x0E03      	MOVLW       3
0x58B8	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x58BA	0x0E01      	MOVLW       1
0x58BC	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x58BE	0x0E9E      	MOVLW       ?lstr_102_MyProject
0x58C0	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x58C2	0x0ED6      	MOVLW       hi_addr(?lstr_102_MyProject)
0x58C4	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x58C6	0x0E00      	MOVLW       higher_addr(?lstr_102_MyProject)
0x58C8	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x58CA	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,2189 :: 		if(!SENSOR2 | !SENSOR4 | !SENSOR6){
0x58CE	0xB883      	BTFSC       PORTD, 4 
0x58D0	0xD002      	BRA         L__transicionSalBP62189
0x58D2	0x8001      	BSF         R1, 0 
0x58D4	0xD001      	BRA         L__transicionSalBP62190
L__transicionSalBP62189:
0x58D6	0x9001      	BCF         R1, 0 
L__transicionSalBP62190:
0x58D8	0xB681      	BTFSC       PORTB, 3 
0x58DA	0xD002      	BRA         L__transicionSalBP62191
0x58DC	0x80D8      	BSF         STATUS, 0 
0x58DE	0xD001      	BRA         L__transicionSalBP62192
L__transicionSalBP62191:
0x58E0	0x90D8      	BCF         STATUS, 0 
L__transicionSalBP62192:
0x58E2	0xB001      	BTFSC       R1, 0 
0x58E4	0xD003      	BRA         L__transicionSalBP62193
0x58E6	0xE202      	BC          L__transicionSalBP62193
0x58E8	0x9001      	BCF         R1, 0 
0x58EA	0xD001      	BRA         L__transicionSalBP62194
L__transicionSalBP62193:
0x58EC	0x8001      	BSF         R1, 0 
L__transicionSalBP62194:
0x58EE	0xB281      	BTFSC       PORTB, 1 
0x58F0	0xD002      	BRA         L__transicionSalBP62195
0x58F2	0x80D8      	BSF         STATUS, 0 
0x58F4	0xD001      	BRA         L__transicionSalBP62196
L__transicionSalBP62195:
0x58F6	0x90D8      	BCF         STATUS, 0 
L__transicionSalBP62196:
0x58F8	0xB001      	BTFSC       R1, 0 
0x58FA	0xD003      	BRA         L__transicionSalBP62197
0x58FC	0xE202      	BC          L__transicionSalBP62197
0x58FE	0x9001      	BCF         R1, 0 
0x5900	0xD001      	BRA         L__transicionSalBP62198
L__transicionSalBP62197:
0x5902	0x8001      	BSF         R1, 0 
L__transicionSalBP62198:
0x5904	0xA001      	BTFSS       R1, 0 
0x5906	0xD00A      	BRA         L_transicionSalBP6487
;rutinasensores_v4(mstr-slv).h,2190 :: 		lcd_cmd(_LCD_CLEAR);
0x5908	0x0E01      	MOVLW       1
0x590A	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x590C	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2191 :: 		return debugEstadoB = TRANSICIONS;
0x5910	0x0E08      	MOVLW       8
0x5912	0x0101      	MOVLB       1
0x5914	0x6F3D      	MOVWF       _debugEstadoB, 1
0x5916	0x0E08      	MOVLW       8
0x5918	0x6E00      	MOVWF       R0 
0x591A	0xD020      	BRA         L_end_transicionSalBP6
;rutinasensores_v4(mstr-slv).h,2192 :: 		}
L_transicionSalBP6487:
;rutinasensores_v4(mstr-slv).h,2193 :: 		if((SENSOR1) & (SENSOR2 & SENSOR4 & SENSOR6)){
0x591C	0xA883      	BTFSS       PORTD, 4 
0x591E	0xD004      	BRA         L__transicionSalBP62199
0x5920	0xA681      	BTFSS       PORTB, 3 
0x5922	0xD002      	BRA         L__transicionSalBP62199
0x5924	0x80D8      	BSF         STATUS, 0 
0x5926	0xD001      	BRA         L__transicionSalBP62200
L__transicionSalBP62199:
0x5928	0x90D8      	BCF         STATUS, 0 
L__transicionSalBP62200:
0x592A	0xE304      	BNC         L__transicionSalBP62201
0x592C	0xA281      	BTFSS       PORTB, 1 
0x592E	0xD002      	BRA         L__transicionSalBP62201
0x5930	0x8001      	BSF         R1, 0 
0x5932	0xD001      	BRA         L__transicionSalBP62202
L__transicionSalBP62201:
0x5934	0x9001      	BCF         R1, 0 
L__transicionSalBP62202:
0x5936	0xA881      	BTFSS       PORTB, 4 
0x5938	0xD004      	BRA         L__transicionSalBP62203
0x593A	0xA001      	BTFSS       R1, 0 
0x593C	0xD002      	BRA         L__transicionSalBP62203
0x593E	0x80D8      	BSF         STATUS, 0 
0x5940	0xD001      	BRA         L__transicionSalBP62204
L__transicionSalBP62203:
0x5942	0x90D8      	BCF         STATUS, 0 
L__transicionSalBP62204:
0x5944	0xE30B      	BNC         L_transicionSalBP6488
;rutinasensores_v4(mstr-slv).h,2194 :: 		lcd_cmd(_LCD_CLEAR);
0x5946	0x0E01      	MOVLW       1
0x5948	0x0102      	MOVLB       2
0x594A	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x594C	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2195 :: 		return debugEstadoB = SALIO;
0x5950	0x0E06      	MOVLW       6
0x5952	0x0101      	MOVLB       1
0x5954	0x6F3D      	MOVWF       _debugEstadoB, 1
0x5956	0x0E06      	MOVLW       6
0x5958	0x6E00      	MOVWF       R0 
0x595A	0xD000      	BRA         L_end_transicionSalBP6
;rutinasensores_v4(mstr-slv).h,2196 :: 		}
L_transicionSalBP6488:
;rutinasensores_v4(mstr-slv).h,2197 :: 		}
L_transicionSalBP6486:
;rutinasensores_v4(mstr-slv).h,2198 :: 		}
L_end_transicionSalBP6:
0x595C	0x0012      	RETURN      0
; end of _transicionSalBP6
_transicionSBP6:
;rutinasensores_v4(mstr-slv).h,2172 :: 		short transicionSBP6(short estado){
;rutinasensores_v4(mstr-slv).h,2173 :: 		if(estado == TRANSICIONS){
0x595E	0x0102      	MOVLB       2
0x5960	0x5114      	MOVF        FARG_transicionSBP6_estado, 0, 1
0x5962	0x0A08      	XORLW       8
0x5964	0xA4D8      	BTFSS       STATUS, 2 
0x5966	0xD060      	BRA         L_transicionSBP6483
;rutinasensores_v4(mstr-slv).h,2174 :: 		lcd_outConst(3, 1, "TRANSICION");
0x5968	0x0E03      	MOVLW       3
0x596A	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x596C	0x0E01      	MOVLW       1
0x596E	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x5970	0x0E1E      	MOVLW       ?lstr_101_MyProject
0x5972	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x5974	0x0ED9      	MOVLW       hi_addr(?lstr_101_MyProject)
0x5976	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x5978	0x0E00      	MOVLW       higher_addr(?lstr_101_MyProject)
0x597A	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x597C	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,2175 :: 		if(SENSOR2 & SENSOR4 & SENSOR6){
0x5980	0xA883      	BTFSS       PORTD, 4 
0x5982	0xD004      	BRA         L__transicionSBP62168
0x5984	0xA681      	BTFSS       PORTB, 3 
0x5986	0xD002      	BRA         L__transicionSBP62168
0x5988	0x80D8      	BSF         STATUS, 0 
0x598A	0xD001      	BRA         L__transicionSBP62169
L__transicionSBP62168:
0x598C	0x90D8      	BCF         STATUS, 0 
L__transicionSBP62169:
0x598E	0xE304      	BNC         L__transicionSBP62170
0x5990	0xA281      	BTFSS       PORTB, 1 
0x5992	0xD002      	BRA         L__transicionSBP62170
0x5994	0x8001      	BSF         R1, 0 
0x5996	0xD001      	BRA         L__transicionSBP62171
L__transicionSBP62170:
0x5998	0x9001      	BCF         R1, 0 
L__transicionSBP62171:
0x599A	0xA001      	BTFSS       R1, 0 
0x599C	0xD00A      	BRA         L_transicionSBP6484
;rutinasensores_v4(mstr-slv).h,2176 :: 		lcd_cmd(_LCD_CLEAR);
0x599E	0x0E01      	MOVLW       1
0x59A0	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x59A2	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2177 :: 		return debugEstadoB = TRANSAL;
0x59A6	0x0E05      	MOVLW       5
0x59A8	0x0101      	MOVLB       1
0x59AA	0x6F3D      	MOVWF       _debugEstadoB, 1
0x59AC	0x0E05      	MOVLW       5
0x59AE	0x6E00      	MOVWF       R0 
0x59B0	0xD03B      	BRA         L_end_transicionSBP6
;rutinasensores_v4(mstr-slv).h,2178 :: 		}
L_transicionSBP6484:
;rutinasensores_v4(mstr-slv).h,2179 :: 		if((SENSOR1 & !SENSOR2) | (SENSOR1 & !SENSOR4) | (SENSOR1 & !SENSOR6)){
0x59B2	0xB883      	BTFSC       PORTD, 4 
0x59B4	0xD002      	BRA         L__transicionSBP62172
0x59B6	0x80D8      	BSF         STATUS, 0 
0x59B8	0xD001      	BRA         L__transicionSBP62173
L__transicionSBP62172:
0x59BA	0x90D8      	BCF         STATUS, 0 
L__transicionSBP62173:
0x59BC	0xA881      	BTFSS       PORTB, 4 
0x59BE	0xD003      	BRA         L__transicionSBP62174
0x59C0	0xE302      	BNC         L__transicionSBP62174
0x59C2	0x8201      	BSF         R1, 1 
0x59C4	0xD001      	BRA         L__transicionSBP62175
L__transicionSBP62174:
0x59C6	0x9201      	BCF         R1, 1 
L__transicionSBP62175:
0x59C8	0xB681      	BTFSC       PORTB, 3 
0x59CA	0xD002      	BRA         L__transicionSBP62176
0x59CC	0x80D8      	BSF         STATUS, 0 
0x59CE	0xD001      	BRA         L__transicionSBP62177
L__transicionSBP62176:
0x59D0	0x90D8      	BCF         STATUS, 0 
L__transicionSBP62177:
0x59D2	0xA881      	BTFSS       PORTB, 4 
0x59D4	0xD003      	BRA         L__transicionSBP62178
0x59D6	0xE302      	BNC         L__transicionSBP62178
0x59D8	0x8001      	BSF         R1, 0 
0x59DA	0xD001      	BRA         L__transicionSBP62179
L__transicionSBP62178:
0x59DC	0x9001      	BCF         R1, 0 
L__transicionSBP62179:
0x59DE	0xB201      	BTFSC       R1, 1 
0x59E0	0xD004      	BRA         L__transicionSBP62180
0x59E2	0xB001      	BTFSC       R1, 0 
0x59E4	0xD002      	BRA         L__transicionSBP62180
0x59E6	0x9201      	BCF         R1, 1 
0x59E8	0xD001      	BRA         L__transicionSBP62181
L__transicionSBP62180:
0x59EA	0x8201      	BSF         R1, 1 
L__transicionSBP62181:
0x59EC	0xB281      	BTFSC       PORTB, 1 
0x59EE	0xD002      	BRA         L__transicionSBP62182
0x59F0	0x80D8      	BSF         STATUS, 0 
0x59F2	0xD001      	BRA         L__transicionSBP62183
L__transicionSBP62182:
0x59F4	0x90D8      	BCF         STATUS, 0 
L__transicionSBP62183:
0x59F6	0xA881      	BTFSS       PORTB, 4 
0x59F8	0xD003      	BRA         L__transicionSBP62184
0x59FA	0xE302      	BNC         L__transicionSBP62184
0x59FC	0x8001      	BSF         R1, 0 
0x59FE	0xD001      	BRA         L__transicionSBP62185
L__transicionSBP62184:
0x5A00	0x9001      	BCF         R1, 0 
L__transicionSBP62185:
0x5A02	0xB201      	BTFSC       R1, 1 
0x5A04	0xD004      	BRA         L__transicionSBP62186
0x5A06	0xB001      	BTFSC       R1, 0 
0x5A08	0xD002      	BRA         L__transicionSBP62186
0x5A0A	0x90D8      	BCF         STATUS, 0 
0x5A0C	0xD001      	BRA         L__transicionSBP62187
L__transicionSBP62186:
0x5A0E	0x80D8      	BSF         STATUS, 0 
L__transicionSBP62187:
0x5A10	0xE30B      	BNC         L_transicionSBP6485
;rutinasensores_v4(mstr-slv).h,2180 :: 		lcd_cmd(_LCD_CLEAR);
0x5A12	0x0E01      	MOVLW       1
0x5A14	0x0102      	MOVLB       2
0x5A16	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x5A18	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2181 :: 		return debugEstadoB = SALIENDO;
0x5A1C	0x0E04      	MOVLW       4
0x5A1E	0x0101      	MOVLB       1
0x5A20	0x6F3D      	MOVWF       _debugEstadoB, 1
0x5A22	0x0E04      	MOVLW       4
0x5A24	0x6E00      	MOVWF       R0 
0x5A26	0xD000      	BRA         L_end_transicionSBP6
;rutinasensores_v4(mstr-slv).h,2182 :: 		}
L_transicionSBP6485:
;rutinasensores_v4(mstr-slv).h,2183 :: 		}
L_transicionSBP6483:
;rutinasensores_v4(mstr-slv).h,2184 :: 		}
L_end_transicionSBP6:
0x5A28	0x0012      	RETURN      0
; end of _transicionSBP6
_transicionEBP4:
;rutinasensores_v4(mstr-slv).h,1962 :: 		short transicionEBP4(short estado){
;rutinasensores_v4(mstr-slv).h,1963 :: 		if(estado == TRANSICION){
0x5A2A	0x0102      	MOVLB       2
0x5A2C	0x5114      	MOVF        FARG_transicionEBP4_estado, 0, 1
0x5A2E	0x0A02      	XORLW       2
0x5A30	0xE13D      	BNZ         L_transicionEBP4445
;rutinasensores_v4(mstr-slv).h,1964 :: 		LCD_OUTCONST(3,1,"TRANSICION");
0x5A32	0x0E03      	MOVLW       3
0x5A34	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x5A36	0x0E01      	MOVLW       1
0x5A38	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x5A3A	0x0E97      	MOVLW       ?lstr_89_MyProject
0x5A3C	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x5A3E	0x0ED9      	MOVLW       hi_addr(?lstr_89_MyProject)
0x5A40	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x5A42	0x0E00      	MOVLW       higher_addr(?lstr_89_MyProject)
0x5A44	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x5A46	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1965 :: 		if(SENSOR5){
0x5A4A	0xA081      	BTFSS       PORTB, 0 
0x5A4C	0xD00A      	BRA         L_transicionEBP4446
;rutinasensores_v4(mstr-slv).h,1966 :: 		lcd_cmd(_LCD_CLEAR);
0x5A4E	0x0E01      	MOVLW       1
0x5A50	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x5A52	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1967 :: 		return debugEstadoB = TRANENT;
0x5A56	0x0E07      	MOVLW       7
0x5A58	0x0101      	MOVLB       1
0x5A5A	0x6F3D      	MOVWF       _debugEstadoB, 1
0x5A5C	0x0E07      	MOVLW       7
0x5A5E	0x6E00      	MOVWF       R0 
0x5A60	0xD025      	BRA         L_end_transicionEBP4
;rutinasensores_v4(mstr-slv).h,1968 :: 		}
L_transicionEBP4446:
;rutinasensores_v4(mstr-slv).h,1969 :: 		if((SENSOR2 & SENSOR4 & SENSOR6 & !SENSOR5)){
0x5A62	0xA883      	BTFSS       PORTD, 4 
0x5A64	0xD004      	BRA         L__transicionEBP42033
0x5A66	0xA681      	BTFSS       PORTB, 3 
0x5A68	0xD002      	BRA         L__transicionEBP42033
0x5A6A	0x80D8      	BSF         STATUS, 0 
0x5A6C	0xD001      	BRA         L__transicionEBP42034
L__transicionEBP42033:
0x5A6E	0x90D8      	BCF         STATUS, 0 
L__transicionEBP42034:
0x5A70	0xE304      	BNC         L__transicionEBP42035
0x5A72	0xA281      	BTFSS       PORTB, 1 
0x5A74	0xD002      	BRA         L__transicionEBP42035
0x5A76	0x8001      	BSF         R1, 0 
0x5A78	0xD001      	BRA         L__transicionEBP42036
L__transicionEBP42035:
0x5A7A	0x9001      	BCF         R1, 0 
L__transicionEBP42036:
0x5A7C	0xB081      	BTFSC       PORTB, 0 
0x5A7E	0xD002      	BRA         L__transicionEBP42037
0x5A80	0x80D8      	BSF         STATUS, 0 
0x5A82	0xD001      	BRA         L__transicionEBP42038
L__transicionEBP42037:
0x5A84	0x90D8      	BCF         STATUS, 0 
L__transicionEBP42038:
0x5A86	0xA001      	BTFSS       R1, 0 
0x5A88	0xD003      	BRA         L__transicionEBP42039
0x5A8A	0xE302      	BNC         L__transicionEBP42039
0x5A8C	0x8001      	BSF         R1, 0 
0x5A8E	0xD001      	BRA         L__transicionEBP42040
L__transicionEBP42039:
0x5A90	0x9001      	BCF         R1, 0 
L__transicionEBP42040:
0x5A92	0xA001      	BTFSS       R1, 0 
0x5A94	0xD00B      	BRA         L_transicionEBP4447
;rutinasensores_v4(mstr-slv).h,1970 :: 		lcd_cmd(_LCD_CLEAR);
0x5A96	0x0E01      	MOVLW       1
0x5A98	0x0102      	MOVLB       2
0x5A9A	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x5A9C	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1971 :: 		return debugEstadoB = ENTRANDO;
0x5AA0	0x0E01      	MOVLW       1
0x5AA2	0x0101      	MOVLB       1
0x5AA4	0x6F3D      	MOVWF       _debugEstadoB, 1
0x5AA6	0x0E01      	MOVLW       1
0x5AA8	0x6E00      	MOVWF       R0 
0x5AAA	0xD000      	BRA         L_end_transicionEBP4
;rutinasensores_v4(mstr-slv).h,1972 :: 		}
L_transicionEBP4447:
;rutinasensores_v4(mstr-slv).h,1973 :: 		}
L_transicionEBP4445:
;rutinasensores_v4(mstr-slv).h,1974 :: 		}
L_end_transicionEBP4:
0x5AAC	0x0012      	RETURN      0
; end of _transicionEBP4
_salioBP6:
;rutinasensores_v4(mstr-slv).h,2200 :: 		short salioBP6(short estado){
;rutinasensores_v4(mstr-slv).h,2201 :: 		if(estado == SALIO){
0x5AAE	0x0102      	MOVLB       2
0x5AB0	0x5114      	MOVF        FARG_salioBP6_estado, 0, 1
0x5AB2	0x0A06      	XORLW       6
0x5AB4	0xA4D8      	BTFSS       STATUS, 2 
0x5AB6	0xD11B      	BRA         L_salioBP6489
;rutinasensores_v4(mstr-slv).h,2202 :: 		LCD_OUTCONST(3,1,"GRACIAS!");
0x5AB8	0x0E03      	MOVLW       3
0x5ABA	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x5ABC	0x0E01      	MOVLW       1
0x5ABE	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x5AC0	0x0E97      	MOVLW       ?lstr_103_MyProject
0x5AC2	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x5AC4	0x0EDA      	MOVLW       hi_addr(?lstr_103_MyProject)
0x5AC6	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x5AC8	0x0E00      	MOVLW       higher_addr(?lstr_103_MyProject)
0x5ACA	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x5ACC	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,2203 :: 		pSuben = eepromLeeNumero(0x0000,2);
0x5AD0	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x5AD2	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x5AD4	0x0E02      	MOVLW       2
0x5AD6	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x5AD8	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x5ADC	0xF137C000  	MOVFF       R0, _pSuben
0x5AE0	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,2204 :: 		pBajan = eepromLeeNumero(0x0003,2) + 1;
0x5AE4	0x0E03      	MOVLW       3
0x5AE6	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x5AE8	0x0E00      	MOVLW       0
0x5AEA	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x5AEC	0x0E02      	MOVLW       2
0x5AEE	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x5AF0	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x5AF4	0x4A00      	INFSNZ      R0, 1 
0x5AF6	0x2A01      	INCF        R1, 1 
0x5AF8	0xF135C000  	MOVFF       R0, _pBajan
0x5AFC	0xF136C001  	MOVFF       R1, _pBajan+1
;rutinasensores_v4(mstr-slv).h,2205 :: 		eepromEscribeNumero(0x0003,pBajan,2);
0x5B00	0x0E03      	MOVLW       3
0x5B02	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x5B04	0x0E00      	MOVLW       0
0x5B06	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x5B08	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x5B0C	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x5B10	0x0E00      	MOVLW       0
0x5B12	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x5B14	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x5B16	0x0E02      	MOVLW       2
0x5B18	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x5B1A	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,2206 :: 		pBajan = eepromLeeNumero(0x0003,2);
0x5B1E	0x0E03      	MOVLW       3
0x5B20	0x0102      	MOVLB       2
0x5B22	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x5B24	0x0E00      	MOVLW       0
0x5B26	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x5B28	0x0E02      	MOVLW       2
0x5B2A	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x5B2C	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x5B30	0xF219C000  	MOVFF       R0, FLOC__salioBP6+4
0x5B34	0xF21AC001  	MOVFF       R1, FLOC__salioBP6+5
0x5B38	0xF21BC002  	MOVFF       R2, FLOC__salioBP6+6
0x5B3C	0xF21CC003  	MOVFF       R3, FLOC__salioBP6+7
0x5B40	0xF135C219  	MOVFF       FLOC__salioBP6+4, _pBajan
0x5B44	0xF136C21A  	MOVFF       FLOC__salioBP6+5, _pBajan+1
;rutinasensores_v4(mstr-slv).h,2207 :: 		pasajerosVerdaderos = ((float)pSuben + (float)pBajan)/2;
0x5B48	0xF000C137  	MOVFF       _pSuben, R0
0x5B4C	0xF001C138  	MOVFF       _pSuben+1, R1
0x5B50	0xF008EC65  	CALL        _Word2Double, 0
0x5B54	0xF215C000  	MOVFF       R0, FLOC__salioBP6
0x5B58	0xF216C001  	MOVFF       R1, FLOC__salioBP6+1
0x5B5C	0xF217C002  	MOVFF       R2, FLOC__salioBP6+2
0x5B60	0xF218C003  	MOVFF       R3, FLOC__salioBP6+3
0x5B64	0xF000C219  	MOVFF       FLOC__salioBP6+4, R0
0x5B68	0xF001C21A  	MOVFF       FLOC__salioBP6+5, R1
0x5B6C	0xF008EC65  	CALL        _Word2Double, 0
0x5B70	0xF004C215  	MOVFF       FLOC__salioBP6, R4
0x5B74	0xF005C216  	MOVFF       FLOC__salioBP6+1, R5
0x5B78	0xF006C217  	MOVFF       FLOC__salioBP6+2, R6
0x5B7C	0xF007C218  	MOVFF       FLOC__salioBP6+3, R7
0x5B80	0xF004EC8D  	CALL        _Add_32x32_FP, 0
0x5B84	0x0E00      	MOVLW       0
0x5B86	0x6E04      	MOVWF       R4 
0x5B88	0x0E00      	MOVLW       0
0x5B8A	0x6E05      	MOVWF       R5 
0x5B8C	0x0E00      	MOVLW       0
0x5B8E	0x6E06      	MOVWF       R6 
0x5B90	0x0E80      	MOVLW       128
0x5B92	0x6E07      	MOVWF       R7 
0x5B94	0xF007ECA7  	CALL        _Div_32x32_FP, 0
0x5B98	0xF139C000  	MOVFF       R0, _pasajerosVerdaderos
0x5B9C	0xF13AC001  	MOVFF       R1, _pasajerosVerdaderos+1
0x5BA0	0xF13BC002  	MOVFF       R2, _pasajerosVerdaderos+2
0x5BA4	0xF13CC003  	MOVFF       R3, _pasajerosVerdaderos+3
;rutinasensores_v4(mstr-slv).h,2208 :: 		eepromEscribeNumero(0x0009, pasajerosVerdaderos, 2);
0x5BA8	0x0E09      	MOVLW       9
0x5BAA	0x0102      	MOVLB       2
0x5BAC	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x5BAE	0x0E00      	MOVLW       0
0x5BB0	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x5BB2	0xF007EC0E  	CALL        _Double2Longint, 0
0x5BB6	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x5BBA	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x5BBE	0xF221C002  	MOVFF       R2, FARG_eepromEscribeNumero_Dato+2
0x5BC2	0xF222C003  	MOVFF       R3, FARG_eepromEscribeNumero_Dato+3
0x5BC6	0x0E02      	MOVLW       2
0x5BC8	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x5BCA	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,2209 :: 		if(MSTR){
0x5BCE	0xA483      	BTFSS       PORTD, 2 
0x5BD0	0xD085      	BRA         L_salioBP6490
;rutinasensores_v4(mstr-slv).h,2210 :: 		pVerdaderosMEntero = eepromLeeNumero(0x0009, 2);
0x5BD2	0x0E09      	MOVLW       9
0x5BD4	0x0102      	MOVLB       2
0x5BD6	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x5BD8	0x0E00      	MOVLW       0
0x5BDA	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x5BDC	0x0E02      	MOVLW       2
0x5BDE	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x5BE0	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x5BE4	0xF12FC000  	MOVFF       R0, _pVerdaderosMEntero
0x5BE8	0xF130C001  	MOVFF       R1, _pVerdaderosMEntero+1
;rutinasensores_v4(mstr-slv).h,2211 :: 		pVerdaderosEEntero = eepromLeeNumero(0x0007, 2);
0x5BEC	0x0E07      	MOVLW       7
0x5BEE	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x5BF0	0x0E00      	MOVLW       0
0x5BF2	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x5BF4	0x0E02      	MOVLW       2
0x5BF6	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x5BF8	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x5BFC	0xF12DC000  	MOVFF       R0, _pVerdaderosEEntero
0x5C00	0xF12EC001  	MOVFF       R1, _pVerdaderosEEntero+1
;rutinasensores_v4(mstr-slv).h,2212 :: 		pasajerosTotalesL = pVerdaderosMEntero + pVerdaderosEEntero;
0x5C04	0x5000      	MOVF        R0, 0 
0x5C06	0x0101      	MOVLB       1
0x5C08	0x252F      	ADDWF       _pVerdaderosMEntero, 0, 1
0x5C0A	0x6F33      	MOVWF       _pasajerosTotalesL, 1
0x5C0C	0x5001      	MOVF        R1, 0 
0x5C0E	0x2130      	ADDWFC      _pVerdaderosMEntero+1, 0, 1
0x5C10	0x6F34      	MOVWF       _pasajerosTotalesL+1, 1
;rutinasensores_v4(mstr-slv).h,2213 :: 		totalCalculado = (eepromLeeNumero(0x0000, 2)+eepromLeeNumero(0x0003, 2)+eepromLeeNumero(0x0900, 2)+eepromLeeNumero(0x0700, 2))/2;
0x5C12	0x0102      	MOVLB       2
0x5C14	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x5C16	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x5C18	0x0E02      	MOVLW       2
0x5C1A	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x5C1C	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x5C20	0xF215C000  	MOVFF       R0, FLOC__salioBP6
0x5C24	0xF216C001  	MOVFF       R1, FLOC__salioBP6+1
0x5C28	0xF217C002  	MOVFF       R2, FLOC__salioBP6+2
0x5C2C	0xF218C003  	MOVFF       R3, FLOC__salioBP6+3
0x5C30	0x0E03      	MOVLW       3
0x5C32	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x5C34	0x0E00      	MOVLW       0
0x5C36	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x5C38	0x0E02      	MOVLW       2
0x5C3A	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x5C3C	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x5C40	0x5000      	MOVF        R0, 0 
0x5C42	0x2715      	ADDWF       FLOC__salioBP6, 1, 1
0x5C44	0x5001      	MOVF        R1, 0 
0x5C46	0x2316      	ADDWFC      FLOC__salioBP6+1, 1, 1
0x5C48	0x5002      	MOVF        R2, 0 
0x5C4A	0x2317      	ADDWFC      FLOC__salioBP6+2, 1, 1
0x5C4C	0x5003      	MOVF        R3, 0 
0x5C4E	0x2318      	ADDWFC      FLOC__salioBP6+3, 1, 1
0x5C50	0x0E00      	MOVLW       0
0x5C52	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x5C54	0x0E09      	MOVLW       9
0x5C56	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x5C58	0x0E02      	MOVLW       2
0x5C5A	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x5C5C	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x5C60	0x5000      	MOVF        R0, 0 
0x5C62	0x2715      	ADDWF       FLOC__salioBP6, 1, 1
0x5C64	0x5001      	MOVF        R1, 0 
0x5C66	0x2316      	ADDWFC      FLOC__salioBP6+1, 1, 1
0x5C68	0x5002      	MOVF        R2, 0 
0x5C6A	0x2317      	ADDWFC      FLOC__salioBP6+2, 1, 1
0x5C6C	0x5003      	MOVF        R3, 0 
0x5C6E	0x2318      	ADDWFC      FLOC__salioBP6+3, 1, 1
0x5C70	0x0E00      	MOVLW       0
0x5C72	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x5C74	0x0E07      	MOVLW       7
0x5C76	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x5C78	0x0E02      	MOVLW       2
0x5C7A	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x5C7C	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x5C80	0x5000      	MOVF        R0, 0 
0x5C82	0x2515      	ADDWF       FLOC__salioBP6, 0, 1
0x5C84	0x6E05      	MOVWF       R5 
0x5C86	0x5001      	MOVF        R1, 0 
0x5C88	0x2116      	ADDWFC      FLOC__salioBP6+1, 0, 1
0x5C8A	0x6E06      	MOVWF       R6 
0x5C8C	0x5002      	MOVF        R2, 0 
0x5C8E	0x2117      	ADDWFC      FLOC__salioBP6+2, 0, 1
0x5C90	0x6E07      	MOVWF       R7 
0x5C92	0x5003      	MOVF        R3, 0 
0x5C94	0x2118      	ADDWFC      FLOC__salioBP6+3, 0, 1
0x5C96	0x6E08      	MOVWF       R8 
0x5C98	0xF000C005  	MOVFF       R5, R0
0x5C9C	0xF001C006  	MOVFF       R6, R1
0x5CA0	0xF002C007  	MOVFF       R7, R2
0x5CA4	0xF003C008  	MOVFF       R8, R3
0x5CA8	0x3203      	RRCF        R3, 1 
0x5CAA	0x3202      	RRCF        R2, 1 
0x5CAC	0x3201      	RRCF        R1, 1 
0x5CAE	0x3200      	RRCF        R0, 1 
0x5CB0	0x9E03      	BCF         R3, 7 
0x5CB2	0xBC03      	BTFSC       R3, 6 
0x5CB4	0x8E03      	BSF         R3, 7 
0x5CB6	0xF131C000  	MOVFF       R0, _totalCalculado
0x5CBA	0xF132C001  	MOVFF       R1, _totalCalculado+1
;rutinasensores_v4(mstr-slv).h,2214 :: 		eepromEscribeNumero(0x0005, totalCalculado, 2);
0x5CBE	0x0E05      	MOVLW       5
0x5CC0	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x5CC2	0x0E00      	MOVLW       0
0x5CC4	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x5CC6	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x5CCA	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x5CCE	0x0E00      	MOVLW       0
0x5CD0	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x5CD2	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x5CD4	0x0E02      	MOVLW       2
0x5CD6	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x5CD8	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,2215 :: 		}
L_salioBP6490:
;rutinasensores_v4(mstr-slv).h,2216 :: 		lcd_cmd(_LCD_CLEAR);
0x5CDC	0x0E01      	MOVLW       1
0x5CDE	0x0102      	MOVLB       2
0x5CE0	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x5CE2	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2217 :: 		return debugEstadoB = ESPERA;
0x5CE6	0x0101      	MOVLB       1
0x5CE8	0x6B3D      	CLRF        _debugEstadoB, 1
0x5CEA	0x6A00      	CLRF        R0 
0x5CEC	0xD000      	BRA         L_end_salioBP6
;rutinasensores_v4(mstr-slv).h,2218 :: 		}
L_salioBP6489:
;rutinasensores_v4(mstr-slv).h,2219 :: 		}
L_end_salioBP6:
0x5CEE	0x0012      	RETURN      0
; end of _salioBP6
_saliendoBP6:
;rutinasensores_v4(mstr-slv).h,2158 :: 		short saliendoBP6(short estado){
;rutinasensores_v4(mstr-slv).h,2159 :: 		if(estado == SALIENDO){
0x5CF0	0x0102      	MOVLB       2
0x5CF2	0x5114      	MOVF        FARG_saliendoBP6_estado, 0, 1
0x5CF4	0x0A04      	XORLW       4
0x5CF6	0xE130      	BNZ         L_saliendoBP6480
;rutinasensores_v4(mstr-slv).h,2160 :: 		lcd_outConst(3, 1, "SALIENDO");
0x5CF8	0x0E03      	MOVLW       3
0x5CFA	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x5CFC	0x0E01      	MOVLW       1
0x5CFE	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x5D00	0x0E8E      	MOVLW       ?lstr_100_MyProject
0x5D02	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x5D04	0x0EDA      	MOVLW       hi_addr(?lstr_100_MyProject)
0x5D06	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x5D08	0x0E00      	MOVLW       higher_addr(?lstr_100_MyProject)
0x5D0A	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x5D0C	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,2161 :: 		if(!SENSOR1){
0x5D10	0xB881      	BTFSC       PORTB, 4 
0x5D12	0xD00A      	BRA         L_saliendoBP6481
;rutinasensores_v4(mstr-slv).h,2162 :: 		lcd_cmd(_LCD_CLEAR);
0x5D14	0x0E01      	MOVLW       1
0x5D16	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x5D18	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2163 :: 		return debugEstadoB = TRANSICIONS;
0x5D1C	0x0E08      	MOVLW       8
0x5D1E	0x0101      	MOVLB       1
0x5D20	0x6F3D      	MOVWF       _debugEstadoB, 1
0x5D22	0x0E08      	MOVLW       8
0x5D24	0x6E00      	MOVWF       R0 
0x5D26	0xD018      	BRA         L_end_saliendoBP6
;rutinasensores_v4(mstr-slv).h,2164 :: 		}
L_saliendoBP6481:
;rutinasensores_v4(mstr-slv).h,2165 :: 		if((SENSOR2 & SENSOR4 & SENSOR6)){
0x5D28	0xA883      	BTFSS       PORTD, 4 
0x5D2A	0xD004      	BRA         L__saliendoBP62163
0x5D2C	0xA681      	BTFSS       PORTB, 3 
0x5D2E	0xD002      	BRA         L__saliendoBP62163
0x5D30	0x80D8      	BSF         STATUS, 0 
0x5D32	0xD001      	BRA         L__saliendoBP62164
L__saliendoBP62163:
0x5D34	0x90D8      	BCF         STATUS, 0 
L__saliendoBP62164:
0x5D36	0xE304      	BNC         L__saliendoBP62165
0x5D38	0xA281      	BTFSS       PORTB, 1 
0x5D3A	0xD002      	BRA         L__saliendoBP62165
0x5D3C	0x8001      	BSF         R1, 0 
0x5D3E	0xD001      	BRA         L__saliendoBP62166
L__saliendoBP62165:
0x5D40	0x9001      	BCF         R1, 0 
L__saliendoBP62166:
0x5D42	0xA001      	BTFSS       R1, 0 
0x5D44	0xD009      	BRA         L_saliendoBP6482
;rutinasensores_v4(mstr-slv).h,2166 :: 		lcd_cmd(_LCD_CLEAR);
0x5D46	0x0E01      	MOVLW       1
0x5D48	0x0102      	MOVLB       2
0x5D4A	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x5D4C	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2167 :: 		return debugEstadoB = ESPERA;
0x5D50	0x0101      	MOVLB       1
0x5D52	0x6B3D      	CLRF        _debugEstadoB, 1
0x5D54	0x6A00      	CLRF        R0 
0x5D56	0xD000      	BRA         L_end_saliendoBP6
;rutinasensores_v4(mstr-slv).h,2168 :: 		}
L_saliendoBP6482:
;rutinasensores_v4(mstr-slv).h,2169 :: 		}
L_saliendoBP6480:
;rutinasensores_v4(mstr-slv).h,2170 :: 		}
L_end_saliendoBP6:
0x5D58	0x0012      	RETURN      0
; end of _saliendoBP6
_entroBP9:
;rutinasensores_v4(mstr-slv).h,2428 :: 		short entroBP9(short estado){
;rutinasensores_v4(mstr-slv).h,2429 :: 		if(estado == ENTRO){
0x5D5A	0x0102      	MOVLB       2
0x5D5C	0x5114      	MOVF        FARG_entroBP9_estado, 0, 1
0x5D5E	0x0A03      	XORLW       3
0x5D60	0xA4D8      	BTFSS       STATUS, 2 
0x5D62	0xD117      	BRA         L_entroBP9529
;rutinasensores_v4(mstr-slv).h,2430 :: 		LCD_OUTCONST(3,1,"BIENVENIDO: $6.00");
0x5D64	0x0E03      	MOVLW       3
0x5D66	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x5D68	0x0E01      	MOVLW       1
0x5D6A	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x5D6C	0x0E44      	MOVLW       ?lstr_115_MyProject
0x5D6E	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x5D70	0x0ED6      	MOVLW       hi_addr(?lstr_115_MyProject)
0x5D72	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x5D74	0x0E00      	MOVLW       higher_addr(?lstr_115_MyProject)
0x5D76	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x5D78	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,2431 :: 		delay_ms(350);
0x5D7C	0x0E09      	MOVLW       9
0x5D7E	0x6E0B      	MOVWF       R11, 0
0x5D80	0x0EE1      	MOVLW       225
0x5D82	0x6E0C      	MOVWF       R12, 0
0x5D84	0x0EB2      	MOVLW       178
0x5D86	0x6E0D      	MOVWF       R13, 0
L_entroBP9530:
0x5D88	0x2E0D      	DECFSZ      R13, 1, 0
0x5D8A	0xD7FE      	BRA         L_entroBP9530
0x5D8C	0x2E0C      	DECFSZ      R12, 1, 0
0x5D8E	0xD7FC      	BRA         L_entroBP9530
0x5D90	0x2E0B      	DECFSZ      R11, 1, 0
0x5D92	0xD7FA      	BRA         L_entroBP9530
0x5D94	0x0000      	NOP
;rutinasensores_v4(mstr-slv).h,2432 :: 		pBajan = eepromLeeNumero(0x0003,2);
0x5D96	0x0E03      	MOVLW       3
0x5D98	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x5D9A	0x0E00      	MOVLW       0
0x5D9C	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x5D9E	0x0E02      	MOVLW       2
0x5DA0	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x5DA2	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x5DA6	0xF135C000  	MOVFF       R0, _pBajan
0x5DAA	0xF136C001  	MOVFF       R1, _pBajan+1
;rutinasensores_v4(mstr-slv).h,2433 :: 		pSuben = eepromLeeNumero(0x0000,2) + 1;
0x5DAE	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x5DB0	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x5DB2	0x0E02      	MOVLW       2
0x5DB4	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x5DB6	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x5DBA	0x4A00      	INFSNZ      R0, 1 
0x5DBC	0x2A01      	INCF        R1, 1 
0x5DBE	0xF137C000  	MOVFF       R0, _pSuben
0x5DC2	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,2434 :: 		eepromEscribeNumero(0x0000,pSuben,2);
0x5DC6	0x6B1D      	CLRF        FARG_eepromEscribeNumero_Registro, 1
0x5DC8	0x6B1E      	CLRF        FARG_eepromEscribeNumero_Registro+1, 1
0x5DCA	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x5DCE	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x5DD2	0x0E00      	MOVLW       0
0x5DD4	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x5DD6	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x5DD8	0x0E02      	MOVLW       2
0x5DDA	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x5DDC	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,2435 :: 		pSuben = eepromLeeNumero(0x0000,2);
0x5DE0	0x0102      	MOVLB       2
0x5DE2	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x5DE4	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x5DE6	0x0E02      	MOVLW       2
0x5DE8	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x5DEA	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x5DEE	0xF137C000  	MOVFF       R0, _pSuben
0x5DF2	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,2436 :: 		pasajerosVerdaderos = ((float)pSuben + (float)pBajan)/2;
0x5DF6	0xF008EC65  	CALL        _Word2Double, 0
0x5DFA	0xF215C000  	MOVFF       R0, FLOC__entroBP9
0x5DFE	0xF216C001  	MOVFF       R1, FLOC__entroBP9+1
0x5E02	0xF217C002  	MOVFF       R2, FLOC__entroBP9+2
0x5E06	0xF218C003  	MOVFF       R3, FLOC__entroBP9+3
0x5E0A	0xF000C135  	MOVFF       _pBajan, R0
0x5E0E	0xF001C136  	MOVFF       _pBajan+1, R1
0x5E12	0xF008EC65  	CALL        _Word2Double, 0
0x5E16	0xF004C215  	MOVFF       FLOC__entroBP9, R4
0x5E1A	0xF005C216  	MOVFF       FLOC__entroBP9+1, R5
0x5E1E	0xF006C217  	MOVFF       FLOC__entroBP9+2, R6
0x5E22	0xF007C218  	MOVFF       FLOC__entroBP9+3, R7
0x5E26	0xF004EC8D  	CALL        _Add_32x32_FP, 0
0x5E2A	0x0E00      	MOVLW       0
0x5E2C	0x6E04      	MOVWF       R4 
0x5E2E	0x0E00      	MOVLW       0
0x5E30	0x6E05      	MOVWF       R5 
0x5E32	0x0E00      	MOVLW       0
0x5E34	0x6E06      	MOVWF       R6 
0x5E36	0x0E80      	MOVLW       128
0x5E38	0x6E07      	MOVWF       R7 
0x5E3A	0xF007ECA7  	CALL        _Div_32x32_FP, 0
0x5E3E	0xF139C000  	MOVFF       R0, _pasajerosVerdaderos
0x5E42	0xF13AC001  	MOVFF       R1, _pasajerosVerdaderos+1
0x5E46	0xF13BC002  	MOVFF       R2, _pasajerosVerdaderos+2
0x5E4A	0xF13CC003  	MOVFF       R3, _pasajerosVerdaderos+3
;rutinasensores_v4(mstr-slv).h,2437 :: 		eepromEscribeNumero(0x0009, (unsigned int)pasajerosVerdaderos, 2);
0x5E4E	0x0E09      	MOVLW       9
0x5E50	0x0102      	MOVLB       2
0x5E52	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x5E54	0x0E00      	MOVLW       0
0x5E56	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x5E58	0xF006ECA0  	CALL        _Double2Word, 0
0x5E5C	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x5E60	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x5E64	0x0E00      	MOVLW       0
0x5E66	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x5E68	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x5E6A	0x0E02      	MOVLW       2
0x5E6C	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x5E6E	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,2438 :: 		if(MSTR){
0x5E72	0xA483      	BTFSS       PORTD, 2 
0x5E74	0xD085      	BRA         L_entroBP9531
;rutinasensores_v4(mstr-slv).h,2439 :: 		pVerdaderosMEntero = eepromLeeNumero(0x0009, 2);
0x5E76	0x0E09      	MOVLW       9
0x5E78	0x0102      	MOVLB       2
0x5E7A	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x5E7C	0x0E00      	MOVLW       0
0x5E7E	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x5E80	0x0E02      	MOVLW       2
0x5E82	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x5E84	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x5E88	0xF12FC000  	MOVFF       R0, _pVerdaderosMEntero
0x5E8C	0xF130C001  	MOVFF       R1, _pVerdaderosMEntero+1
;rutinasensores_v4(mstr-slv).h,2440 :: 		pVerdaderosEEntero = eepromLeeNumero(0x0007, 2);
0x5E90	0x0E07      	MOVLW       7
0x5E92	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x5E94	0x0E00      	MOVLW       0
0x5E96	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x5E98	0x0E02      	MOVLW       2
0x5E9A	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x5E9C	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x5EA0	0xF12DC000  	MOVFF       R0, _pVerdaderosEEntero
0x5EA4	0xF12EC001  	MOVFF       R1, _pVerdaderosEEntero+1
;rutinasensores_v4(mstr-slv).h,2441 :: 		pasajerosTotalesL = pVerdaderosMEntero + pVerdaderosEEntero;
0x5EA8	0x5000      	MOVF        R0, 0 
0x5EAA	0x0101      	MOVLB       1
0x5EAC	0x252F      	ADDWF       _pVerdaderosMEntero, 0, 1
0x5EAE	0x6F33      	MOVWF       _pasajerosTotalesL, 1
0x5EB0	0x5001      	MOVF        R1, 0 
0x5EB2	0x2130      	ADDWFC      _pVerdaderosMEntero+1, 0, 1
0x5EB4	0x6F34      	MOVWF       _pasajerosTotalesL+1, 1
;rutinasensores_v4(mstr-slv).h,2442 :: 		totalCalculado = (eepromLeeNumero(0x0000, 2)+eepromLeeNumero(0x0003, 2)+eepromLeeNumero(0x0900, 2)+eepromLeeNumero(0x0700, 2))/2;
0x5EB6	0x0102      	MOVLB       2
0x5EB8	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x5EBA	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x5EBC	0x0E02      	MOVLW       2
0x5EBE	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x5EC0	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x5EC4	0xF215C000  	MOVFF       R0, FLOC__entroBP9
0x5EC8	0xF216C001  	MOVFF       R1, FLOC__entroBP9+1
0x5ECC	0xF217C002  	MOVFF       R2, FLOC__entroBP9+2
0x5ED0	0xF218C003  	MOVFF       R3, FLOC__entroBP9+3
0x5ED4	0x0E03      	MOVLW       3
0x5ED6	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x5ED8	0x0E00      	MOVLW       0
0x5EDA	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x5EDC	0x0E02      	MOVLW       2
0x5EDE	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x5EE0	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x5EE4	0x5000      	MOVF        R0, 0 
0x5EE6	0x2715      	ADDWF       FLOC__entroBP9, 1, 1
0x5EE8	0x5001      	MOVF        R1, 0 
0x5EEA	0x2316      	ADDWFC      FLOC__entroBP9+1, 1, 1
0x5EEC	0x5002      	MOVF        R2, 0 
0x5EEE	0x2317      	ADDWFC      FLOC__entroBP9+2, 1, 1
0x5EF0	0x5003      	MOVF        R3, 0 
0x5EF2	0x2318      	ADDWFC      FLOC__entroBP9+3, 1, 1
0x5EF4	0x0E00      	MOVLW       0
0x5EF6	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x5EF8	0x0E09      	MOVLW       9
0x5EFA	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x5EFC	0x0E02      	MOVLW       2
0x5EFE	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x5F00	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x5F04	0x5000      	MOVF        R0, 0 
0x5F06	0x2715      	ADDWF       FLOC__entroBP9, 1, 1
0x5F08	0x5001      	MOVF        R1, 0 
0x5F0A	0x2316      	ADDWFC      FLOC__entroBP9+1, 1, 1
0x5F0C	0x5002      	MOVF        R2, 0 
0x5F0E	0x2317      	ADDWFC      FLOC__entroBP9+2, 1, 1
0x5F10	0x5003      	MOVF        R3, 0 
0x5F12	0x2318      	ADDWFC      FLOC__entroBP9+3, 1, 1
0x5F14	0x0E00      	MOVLW       0
0x5F16	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x5F18	0x0E07      	MOVLW       7
0x5F1A	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x5F1C	0x0E02      	MOVLW       2
0x5F1E	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x5F20	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x5F24	0x5000      	MOVF        R0, 0 
0x5F26	0x2515      	ADDWF       FLOC__entroBP9, 0, 1
0x5F28	0x6E05      	MOVWF       R5 
0x5F2A	0x5001      	MOVF        R1, 0 
0x5F2C	0x2116      	ADDWFC      FLOC__entroBP9+1, 0, 1
0x5F2E	0x6E06      	MOVWF       R6 
0x5F30	0x5002      	MOVF        R2, 0 
0x5F32	0x2117      	ADDWFC      FLOC__entroBP9+2, 0, 1
0x5F34	0x6E07      	MOVWF       R7 
0x5F36	0x5003      	MOVF        R3, 0 
0x5F38	0x2118      	ADDWFC      FLOC__entroBP9+3, 0, 1
0x5F3A	0x6E08      	MOVWF       R8 
0x5F3C	0xF000C005  	MOVFF       R5, R0
0x5F40	0xF001C006  	MOVFF       R6, R1
0x5F44	0xF002C007  	MOVFF       R7, R2
0x5F48	0xF003C008  	MOVFF       R8, R3
0x5F4C	0x3203      	RRCF        R3, 1 
0x5F4E	0x3202      	RRCF        R2, 1 
0x5F50	0x3201      	RRCF        R1, 1 
0x5F52	0x3200      	RRCF        R0, 1 
0x5F54	0x9E03      	BCF         R3, 7 
0x5F56	0xBC03      	BTFSC       R3, 6 
0x5F58	0x8E03      	BSF         R3, 7 
0x5F5A	0xF131C000  	MOVFF       R0, _totalCalculado
0x5F5E	0xF132C001  	MOVFF       R1, _totalCalculado+1
;rutinasensores_v4(mstr-slv).h,2443 :: 		eepromEscribeNumero(0x0005, totalCalculado, 2);
0x5F62	0x0E05      	MOVLW       5
0x5F64	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x5F66	0x0E00      	MOVLW       0
0x5F68	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x5F6A	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x5F6E	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x5F72	0x0E00      	MOVLW       0
0x5F74	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x5F76	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x5F78	0x0E02      	MOVLW       2
0x5F7A	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x5F7C	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,2444 :: 		}
L_entroBP9531:
;rutinasensores_v4(mstr-slv).h,2445 :: 		lcd_cmd(_LCD_CLEAR);
0x5F80	0x0E01      	MOVLW       1
0x5F82	0x0102      	MOVLB       2
0x5F84	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x5F86	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2446 :: 		return debugEstadoB = ESPERA;
0x5F8A	0x0101      	MOVLB       1
0x5F8C	0x6B3D      	CLRF        _debugEstadoB, 1
0x5F8E	0x6A00      	CLRF        R0 
0x5F90	0xD000      	BRA         L_end_entroBP9
;rutinasensores_v4(mstr-slv).h,2447 :: 		}
L_entroBP9529:
;rutinasensores_v4(mstr-slv).h,2448 :: 		}
L_end_entroBP9:
0x5F92	0x0012      	RETURN      0
; end of _entroBP9
_transicionEntBP9:
;rutinasensores_v4(mstr-slv).h,2414 :: 		short transicionEntBP9(short estado){
;rutinasensores_v4(mstr-slv).h,2415 :: 		if(estado == TRANENT){
0x5F94	0x0102      	MOVLB       2
0x5F96	0x5114      	MOVF        FARG_transicionEntBP9_estado, 0, 1
0x5F98	0x0A07      	XORLW       7
0x5F9A	0xE153      	BNZ         L_transicionEntBP9526
;rutinasensores_v4(mstr-slv).h,2416 :: 		LCD_OUTCONST(3,1,"TRANSICION ENTRADA");
0x5F9C	0x0E03      	MOVLW       3
0x5F9E	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x5FA0	0x0E01      	MOVLW       1
0x5FA2	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x5FA4	0x0ED3      	MOVLW       ?lstr_114_MyProject
0x5FA6	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x5FA8	0x0ED5      	MOVLW       hi_addr(?lstr_114_MyProject)
0x5FAA	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x5FAC	0x0E00      	MOVLW       higher_addr(?lstr_114_MyProject)
0x5FAE	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x5FB0	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,2417 :: 		if((!SENSOR3 | !SENSOR1 | !SENSOR5)/*(!SENSOR1 | !SENSOR3) | (!SENSOR3 | !SENSOR5) | (!SENSOR1 | !SENSOR5)*/){
0x5FB4	0xB481      	BTFSC       PORTB, 2 
0x5FB6	0xD002      	BRA         L__transicionEntBP92337
0x5FB8	0x8001      	BSF         R1, 0 
0x5FBA	0xD001      	BRA         L__transicionEntBP92338
L__transicionEntBP92337:
0x5FBC	0x9001      	BCF         R1, 0 
L__transicionEntBP92338:
0x5FBE	0xB881      	BTFSC       PORTB, 4 
0x5FC0	0xD002      	BRA         L__transicionEntBP92339
0x5FC2	0x80D8      	BSF         STATUS, 0 
0x5FC4	0xD001      	BRA         L__transicionEntBP92340
L__transicionEntBP92339:
0x5FC6	0x90D8      	BCF         STATUS, 0 
L__transicionEntBP92340:
0x5FC8	0xB001      	BTFSC       R1, 0 
0x5FCA	0xD003      	BRA         L__transicionEntBP92341
0x5FCC	0xE202      	BC          L__transicionEntBP92341
0x5FCE	0x9001      	BCF         R1, 0 
0x5FD0	0xD001      	BRA         L__transicionEntBP92342
L__transicionEntBP92341:
0x5FD2	0x8001      	BSF         R1, 0 
L__transicionEntBP92342:
0x5FD4	0xB081      	BTFSC       PORTB, 0 
0x5FD6	0xD002      	BRA         L__transicionEntBP92343
0x5FD8	0x80D8      	BSF         STATUS, 0 
0x5FDA	0xD001      	BRA         L__transicionEntBP92344
L__transicionEntBP92343:
0x5FDC	0x90D8      	BCF         STATUS, 0 
L__transicionEntBP92344:
0x5FDE	0xB001      	BTFSC       R1, 0 
0x5FE0	0xD003      	BRA         L__transicionEntBP92345
0x5FE2	0xE202      	BC          L__transicionEntBP92345
0x5FE4	0x9001      	BCF         R1, 0 
0x5FE6	0xD001      	BRA         L__transicionEntBP92346
L__transicionEntBP92345:
0x5FE8	0x8001      	BSF         R1, 0 
L__transicionEntBP92346:
0x5FEA	0xA001      	BTFSS       R1, 0 
0x5FEC	0xD00A      	BRA         L_transicionEntBP9527
;rutinasensores_v4(mstr-slv).h,2418 :: 		lcd_cmd(_LCD_CLEAR);
0x5FEE	0x0E01      	MOVLW       1
0x5FF0	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x5FF2	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2419 :: 		return debugEstadoB = TRANSICION;
0x5FF6	0x0E02      	MOVLW       2
0x5FF8	0x0101      	MOVLB       1
0x5FFA	0x6F3D      	MOVWF       _debugEstadoB, 1
0x5FFC	0x0E02      	MOVLW       2
0x5FFE	0x6E00      	MOVWF       R0 
0x6000	0xD020      	BRA         L_end_transicionEntBP9
;rutinasensores_v4(mstr-slv).h,2420 :: 		}
L_transicionEntBP9527:
;rutinasensores_v4(mstr-slv).h,2421 :: 		if(SENSOR2 & SENSOR1 & SENSOR3 & SENSOR5){
0x6002	0xA883      	BTFSS       PORTD, 4 
0x6004	0xD004      	BRA         L__transicionEntBP92347
0x6006	0xA881      	BTFSS       PORTB, 4 
0x6008	0xD002      	BRA         L__transicionEntBP92347
0x600A	0x80D8      	BSF         STATUS, 0 
0x600C	0xD001      	BRA         L__transicionEntBP92348
L__transicionEntBP92347:
0x600E	0x90D8      	BCF         STATUS, 0 
L__transicionEntBP92348:
0x6010	0xE304      	BNC         L__transicionEntBP92349
0x6012	0xA481      	BTFSS       PORTB, 2 
0x6014	0xD002      	BRA         L__transicionEntBP92349
0x6016	0x8001      	BSF         R1, 0 
0x6018	0xD001      	BRA         L__transicionEntBP92350
L__transicionEntBP92349:
0x601A	0x9001      	BCF         R1, 0 
L__transicionEntBP92350:
0x601C	0xA001      	BTFSS       R1, 0 
0x601E	0xD004      	BRA         L__transicionEntBP92351
0x6020	0xA081      	BTFSS       PORTB, 0 
0x6022	0xD002      	BRA         L__transicionEntBP92351
0x6024	0x80D8      	BSF         STATUS, 0 
0x6026	0xD001      	BRA         L__transicionEntBP92352
L__transicionEntBP92351:
0x6028	0x90D8      	BCF         STATUS, 0 
L__transicionEntBP92352:
0x602A	0xE30B      	BNC         L_transicionEntBP9528
;rutinasensores_v4(mstr-slv).h,2422 :: 		lcd_cmd(_LCD_CLEAR);
0x602C	0x0E01      	MOVLW       1
0x602E	0x0102      	MOVLB       2
0x6030	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x6032	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2423 :: 		return debugEstadoB = ENTRO;
0x6036	0x0E03      	MOVLW       3
0x6038	0x0101      	MOVLB       1
0x603A	0x6F3D      	MOVWF       _debugEstadoB, 1
0x603C	0x0E03      	MOVLW       3
0x603E	0x6E00      	MOVWF       R0 
0x6040	0xD000      	BRA         L_end_transicionEntBP9
;rutinasensores_v4(mstr-slv).h,2424 :: 		}
L_transicionEntBP9528:
;rutinasensores_v4(mstr-slv).h,2425 :: 		}
L_transicionEntBP9526:
;rutinasensores_v4(mstr-slv).h,2426 :: 		}
L_end_transicionEntBP9:
0x6042	0x0012      	RETURN      0
; end of _transicionEntBP9
_saliendoBP4:
;rutinasensores_v4(mstr-slv).h,2012 :: 		short saliendoBP4(short estado){
;rutinasensores_v4(mstr-slv).h,2013 :: 		if(estado == SALIENDO){
0x6044	0x0102      	MOVLB       2
0x6046	0x5114      	MOVF        FARG_saliendoBP4_estado, 0, 1
0x6048	0x0A04      	XORLW       4
0x604A	0xE130      	BNZ         L_saliendoBP4454
;rutinasensores_v4(mstr-slv).h,2014 :: 		lcd_outConst(3, 1, "SALIENDO");
0x604C	0x0E03      	MOVLW       3
0x604E	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x6050	0x0E01      	MOVLW       1
0x6052	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x6054	0x0E4F      	MOVLW       ?lstr_92_MyProject
0x6056	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x6058	0x0EDA      	MOVLW       hi_addr(?lstr_92_MyProject)
0x605A	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x605C	0x0E00      	MOVLW       higher_addr(?lstr_92_MyProject)
0x605E	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x6060	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,2015 :: 		if(!SENSOR5){
0x6064	0xB081      	BTFSC       PORTB, 0 
0x6066	0xD00A      	BRA         L_saliendoBP4455
;rutinasensores_v4(mstr-slv).h,2016 :: 		lcd_cmd(_LCD_CLEAR);
0x6068	0x0E01      	MOVLW       1
0x606A	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x606C	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2017 :: 		return debugEstadoB = TRANSICIONS;
0x6070	0x0E08      	MOVLW       8
0x6072	0x0101      	MOVLB       1
0x6074	0x6F3D      	MOVWF       _debugEstadoB, 1
0x6076	0x0E08      	MOVLW       8
0x6078	0x6E00      	MOVWF       R0 
0x607A	0xD018      	BRA         L_end_saliendoBP4
;rutinasensores_v4(mstr-slv).h,2018 :: 		}
L_saliendoBP4455:
;rutinasensores_v4(mstr-slv).h,2019 :: 		if((SENSOR2 & SENSOR4 & SENSOR6)){
0x607C	0xA883      	BTFSS       PORTD, 4 
0x607E	0xD004      	BRA         L__saliendoBP42050
0x6080	0xA681      	BTFSS       PORTB, 3 
0x6082	0xD002      	BRA         L__saliendoBP42050
0x6084	0x80D8      	BSF         STATUS, 0 
0x6086	0xD001      	BRA         L__saliendoBP42051
L__saliendoBP42050:
0x6088	0x90D8      	BCF         STATUS, 0 
L__saliendoBP42051:
0x608A	0xE304      	BNC         L__saliendoBP42052
0x608C	0xA281      	BTFSS       PORTB, 1 
0x608E	0xD002      	BRA         L__saliendoBP42052
0x6090	0x8001      	BSF         R1, 0 
0x6092	0xD001      	BRA         L__saliendoBP42053
L__saliendoBP42052:
0x6094	0x9001      	BCF         R1, 0 
L__saliendoBP42053:
0x6096	0xA001      	BTFSS       R1, 0 
0x6098	0xD009      	BRA         L_saliendoBP4456
;rutinasensores_v4(mstr-slv).h,2020 :: 		lcd_cmd(_LCD_CLEAR);
0x609A	0x0E01      	MOVLW       1
0x609C	0x0102      	MOVLB       2
0x609E	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x60A0	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2021 :: 		return debugEstadoB = ESPERA;
0x60A4	0x0101      	MOVLB       1
0x60A6	0x6B3D      	CLRF        _debugEstadoB, 1
0x60A8	0x6A00      	CLRF        R0 
0x60AA	0xD000      	BRA         L_end_saliendoBP4
;rutinasensores_v4(mstr-slv).h,2022 :: 		}
L_saliendoBP4456:
;rutinasensores_v4(mstr-slv).h,2023 :: 		}
L_saliendoBP4454:
;rutinasensores_v4(mstr-slv).h,2024 :: 		}
L_end_saliendoBP4:
0x60AC	0x0012      	RETURN      0
; end of _saliendoBP4
_entroBP4:
;rutinasensores_v4(mstr-slv).h,1990 :: 		short entroBP4(short estado){
;rutinasensores_v4(mstr-slv).h,1991 :: 		if(estado == ENTRO){
0x60AE	0x0102      	MOVLB       2
0x60B0	0x5114      	MOVF        FARG_entroBP4_estado, 0, 1
0x60B2	0x0A03      	XORLW       3
0x60B4	0xA4D8      	BTFSS       STATUS, 2 
0x60B6	0xD117      	BRA         L_entroBP4451
;rutinasensores_v4(mstr-slv).h,1992 :: 		LCD_OUTCONST(3,1,"BIENVENIDO: $6.00");
0x60B8	0x0E03      	MOVLW       3
0x60BA	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x60BC	0x0E01      	MOVLW       1
0x60BE	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x60C0	0x0E76      	MOVLW       ?lstr_91_MyProject
0x60C2	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x60C4	0x0ED7      	MOVLW       hi_addr(?lstr_91_MyProject)
0x60C6	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x60C8	0x0E00      	MOVLW       higher_addr(?lstr_91_MyProject)
0x60CA	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x60CC	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1993 :: 		delay_ms(350);
0x60D0	0x0E09      	MOVLW       9
0x60D2	0x6E0B      	MOVWF       R11, 0
0x60D4	0x0EE1      	MOVLW       225
0x60D6	0x6E0C      	MOVWF       R12, 0
0x60D8	0x0EB2      	MOVLW       178
0x60DA	0x6E0D      	MOVWF       R13, 0
L_entroBP4452:
0x60DC	0x2E0D      	DECFSZ      R13, 1, 0
0x60DE	0xD7FE      	BRA         L_entroBP4452
0x60E0	0x2E0C      	DECFSZ      R12, 1, 0
0x60E2	0xD7FC      	BRA         L_entroBP4452
0x60E4	0x2E0B      	DECFSZ      R11, 1, 0
0x60E6	0xD7FA      	BRA         L_entroBP4452
0x60E8	0x0000      	NOP
;rutinasensores_v4(mstr-slv).h,1994 :: 		pBajan = eepromLeeNumero(0x0003,2);
0x60EA	0x0E03      	MOVLW       3
0x60EC	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x60EE	0x0E00      	MOVLW       0
0x60F0	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x60F2	0x0E02      	MOVLW       2
0x60F4	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x60F6	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x60FA	0xF135C000  	MOVFF       R0, _pBajan
0x60FE	0xF136C001  	MOVFF       R1, _pBajan+1
;rutinasensores_v4(mstr-slv).h,1995 :: 		pSuben = eepromLeeNumero(0x0000,2) + 1;
0x6102	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x6104	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x6106	0x0E02      	MOVLW       2
0x6108	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x610A	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x610E	0x4A00      	INFSNZ      R0, 1 
0x6110	0x2A01      	INCF        R1, 1 
0x6112	0xF137C000  	MOVFF       R0, _pSuben
0x6116	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,1996 :: 		eepromEscribeNumero(0x0000,pSuben,2);
0x611A	0x6B1D      	CLRF        FARG_eepromEscribeNumero_Registro, 1
0x611C	0x6B1E      	CLRF        FARG_eepromEscribeNumero_Registro+1, 1
0x611E	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x6122	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x6126	0x0E00      	MOVLW       0
0x6128	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x612A	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x612C	0x0E02      	MOVLW       2
0x612E	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x6130	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,1997 :: 		pSuben = eepromLeeNumero(0x0000,2);
0x6134	0x0102      	MOVLB       2
0x6136	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x6138	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x613A	0x0E02      	MOVLW       2
0x613C	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x613E	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x6142	0xF137C000  	MOVFF       R0, _pSuben
0x6146	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,1998 :: 		pasajerosVerdaderos = ((float)pSuben + (float)pBajan)/2;
0x614A	0xF008EC65  	CALL        _Word2Double, 0
0x614E	0xF215C000  	MOVFF       R0, FLOC__entroBP4
0x6152	0xF216C001  	MOVFF       R1, FLOC__entroBP4+1
0x6156	0xF217C002  	MOVFF       R2, FLOC__entroBP4+2
0x615A	0xF218C003  	MOVFF       R3, FLOC__entroBP4+3
0x615E	0xF000C135  	MOVFF       _pBajan, R0
0x6162	0xF001C136  	MOVFF       _pBajan+1, R1
0x6166	0xF008EC65  	CALL        _Word2Double, 0
0x616A	0xF004C215  	MOVFF       FLOC__entroBP4, R4
0x616E	0xF005C216  	MOVFF       FLOC__entroBP4+1, R5
0x6172	0xF006C217  	MOVFF       FLOC__entroBP4+2, R6
0x6176	0xF007C218  	MOVFF       FLOC__entroBP4+3, R7
0x617A	0xF004EC8D  	CALL        _Add_32x32_FP, 0
0x617E	0x0E00      	MOVLW       0
0x6180	0x6E04      	MOVWF       R4 
0x6182	0x0E00      	MOVLW       0
0x6184	0x6E05      	MOVWF       R5 
0x6186	0x0E00      	MOVLW       0
0x6188	0x6E06      	MOVWF       R6 
0x618A	0x0E80      	MOVLW       128
0x618C	0x6E07      	MOVWF       R7 
0x618E	0xF007ECA7  	CALL        _Div_32x32_FP, 0
0x6192	0xF139C000  	MOVFF       R0, _pasajerosVerdaderos
0x6196	0xF13AC001  	MOVFF       R1, _pasajerosVerdaderos+1
0x619A	0xF13BC002  	MOVFF       R2, _pasajerosVerdaderos+2
0x619E	0xF13CC003  	MOVFF       R3, _pasajerosVerdaderos+3
;rutinasensores_v4(mstr-slv).h,1999 :: 		eepromEscribeNumero(0x0009, (unsigned int)pasajerosVerdaderos, 2);
0x61A2	0x0E09      	MOVLW       9
0x61A4	0x0102      	MOVLB       2
0x61A6	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x61A8	0x0E00      	MOVLW       0
0x61AA	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x61AC	0xF006ECA0  	CALL        _Double2Word, 0
0x61B0	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x61B4	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x61B8	0x0E00      	MOVLW       0
0x61BA	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x61BC	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x61BE	0x0E02      	MOVLW       2
0x61C0	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x61C2	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,2000 :: 		if(MSTR){
0x61C6	0xA483      	BTFSS       PORTD, 2 
0x61C8	0xD085      	BRA         L_entroBP4453
;rutinasensores_v4(mstr-slv).h,2001 :: 		pVerdaderosMEntero = eepromLeeNumero(0x0009, 2);
0x61CA	0x0E09      	MOVLW       9
0x61CC	0x0102      	MOVLB       2
0x61CE	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x61D0	0x0E00      	MOVLW       0
0x61D2	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x61D4	0x0E02      	MOVLW       2
0x61D6	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x61D8	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x61DC	0xF12FC000  	MOVFF       R0, _pVerdaderosMEntero
0x61E0	0xF130C001  	MOVFF       R1, _pVerdaderosMEntero+1
;rutinasensores_v4(mstr-slv).h,2002 :: 		pVerdaderosEEntero = eepromLeeNumero(0x0007, 2);
0x61E4	0x0E07      	MOVLW       7
0x61E6	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x61E8	0x0E00      	MOVLW       0
0x61EA	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x61EC	0x0E02      	MOVLW       2
0x61EE	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x61F0	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x61F4	0xF12DC000  	MOVFF       R0, _pVerdaderosEEntero
0x61F8	0xF12EC001  	MOVFF       R1, _pVerdaderosEEntero+1
;rutinasensores_v4(mstr-slv).h,2003 :: 		pasajerosTotalesL = pVerdaderosMEntero + pVerdaderosEEntero;
0x61FC	0x5000      	MOVF        R0, 0 
0x61FE	0x0101      	MOVLB       1
0x6200	0x252F      	ADDWF       _pVerdaderosMEntero, 0, 1
0x6202	0x6F33      	MOVWF       _pasajerosTotalesL, 1
0x6204	0x5001      	MOVF        R1, 0 
0x6206	0x2130      	ADDWFC      _pVerdaderosMEntero+1, 0, 1
0x6208	0x6F34      	MOVWF       _pasajerosTotalesL+1, 1
;rutinasensores_v4(mstr-slv).h,2004 :: 		totalCalculado = (eepromLeeNumero(0x0000, 2)+eepromLeeNumero(0x0003, 2)+eepromLeeNumero(0x0900, 2)+eepromLeeNumero(0x0700, 2))/2;
0x620A	0x0102      	MOVLB       2
0x620C	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x620E	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x6210	0x0E02      	MOVLW       2
0x6212	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x6214	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x6218	0xF215C000  	MOVFF       R0, FLOC__entroBP4
0x621C	0xF216C001  	MOVFF       R1, FLOC__entroBP4+1
0x6220	0xF217C002  	MOVFF       R2, FLOC__entroBP4+2
0x6224	0xF218C003  	MOVFF       R3, FLOC__entroBP4+3
0x6228	0x0E03      	MOVLW       3
0x622A	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x622C	0x0E00      	MOVLW       0
0x622E	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x6230	0x0E02      	MOVLW       2
0x6232	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x6234	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x6238	0x5000      	MOVF        R0, 0 
0x623A	0x2715      	ADDWF       FLOC__entroBP4, 1, 1
0x623C	0x5001      	MOVF        R1, 0 
0x623E	0x2316      	ADDWFC      FLOC__entroBP4+1, 1, 1
0x6240	0x5002      	MOVF        R2, 0 
0x6242	0x2317      	ADDWFC      FLOC__entroBP4+2, 1, 1
0x6244	0x5003      	MOVF        R3, 0 
0x6246	0x2318      	ADDWFC      FLOC__entroBP4+3, 1, 1
0x6248	0x0E00      	MOVLW       0
0x624A	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x624C	0x0E09      	MOVLW       9
0x624E	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x6250	0x0E02      	MOVLW       2
0x6252	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x6254	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x6258	0x5000      	MOVF        R0, 0 
0x625A	0x2715      	ADDWF       FLOC__entroBP4, 1, 1
0x625C	0x5001      	MOVF        R1, 0 
0x625E	0x2316      	ADDWFC      FLOC__entroBP4+1, 1, 1
0x6260	0x5002      	MOVF        R2, 0 
0x6262	0x2317      	ADDWFC      FLOC__entroBP4+2, 1, 1
0x6264	0x5003      	MOVF        R3, 0 
0x6266	0x2318      	ADDWFC      FLOC__entroBP4+3, 1, 1
0x6268	0x0E00      	MOVLW       0
0x626A	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x626C	0x0E07      	MOVLW       7
0x626E	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x6270	0x0E02      	MOVLW       2
0x6272	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x6274	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x6278	0x5000      	MOVF        R0, 0 
0x627A	0x2515      	ADDWF       FLOC__entroBP4, 0, 1
0x627C	0x6E05      	MOVWF       R5 
0x627E	0x5001      	MOVF        R1, 0 
0x6280	0x2116      	ADDWFC      FLOC__entroBP4+1, 0, 1
0x6282	0x6E06      	MOVWF       R6 
0x6284	0x5002      	MOVF        R2, 0 
0x6286	0x2117      	ADDWFC      FLOC__entroBP4+2, 0, 1
0x6288	0x6E07      	MOVWF       R7 
0x628A	0x5003      	MOVF        R3, 0 
0x628C	0x2118      	ADDWFC      FLOC__entroBP4+3, 0, 1
0x628E	0x6E08      	MOVWF       R8 
0x6290	0xF000C005  	MOVFF       R5, R0
0x6294	0xF001C006  	MOVFF       R6, R1
0x6298	0xF002C007  	MOVFF       R7, R2
0x629C	0xF003C008  	MOVFF       R8, R3
0x62A0	0x3203      	RRCF        R3, 1 
0x62A2	0x3202      	RRCF        R2, 1 
0x62A4	0x3201      	RRCF        R1, 1 
0x62A6	0x3200      	RRCF        R0, 1 
0x62A8	0x9E03      	BCF         R3, 7 
0x62AA	0xBC03      	BTFSC       R3, 6 
0x62AC	0x8E03      	BSF         R3, 7 
0x62AE	0xF131C000  	MOVFF       R0, _totalCalculado
0x62B2	0xF132C001  	MOVFF       R1, _totalCalculado+1
;rutinasensores_v4(mstr-slv).h,2005 :: 		eepromEscribeNumero(0x0005, totalCalculado, 2);
0x62B6	0x0E05      	MOVLW       5
0x62B8	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x62BA	0x0E00      	MOVLW       0
0x62BC	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x62BE	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x62C2	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x62C6	0x0E00      	MOVLW       0
0x62C8	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x62CA	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x62CC	0x0E02      	MOVLW       2
0x62CE	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x62D0	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,2006 :: 		}
L_entroBP4453:
;rutinasensores_v4(mstr-slv).h,2007 :: 		lcd_cmd(_LCD_CLEAR);
0x62D4	0x0E01      	MOVLW       1
0x62D6	0x0102      	MOVLB       2
0x62D8	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x62DA	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2008 :: 		return debugEstadoB = ESPERA;
0x62DE	0x0101      	MOVLB       1
0x62E0	0x6B3D      	CLRF        _debugEstadoB, 1
0x62E2	0x6A00      	CLRF        R0 
0x62E4	0xD000      	BRA         L_end_entroBP4
;rutinasensores_v4(mstr-slv).h,2009 :: 		}
L_entroBP4451:
;rutinasensores_v4(mstr-slv).h,2010 :: 		}
L_end_entroBP4:
0x62E6	0x0012      	RETURN      0
; end of _entroBP4
_transicionEBS:
;rutinasensores_v4(mstr-slv).h,1379 :: 		short transicionEBS(short estado){
;rutinasensores_v4(mstr-slv).h,1380 :: 		if(estado == TRANSICION){
0x62E8	0x0102      	MOVLB       2
0x62EA	0x5114      	MOVF        FARG_transicionEBS_estado, 0, 1
0x62EC	0x0A02      	XORLW       2
0x62EE	0xA4D8      	BTFSS       STATUS, 2 
0x62F0	0xD08B      	BRA         L_transicionEBS342
;rutinasensores_v4(mstr-slv).h,1381 :: 		LCD_OUTCONST(3,1,"TRANSICION");
0x62F2	0x0E03      	MOVLW       3
0x62F4	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x62F6	0x0E01      	MOVLW       1
0x62F8	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x62FA	0x0E60      	MOVLW       ?lstr_57_MyProject
0x62FC	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x62FE	0x0ED9      	MOVLW       hi_addr(?lstr_57_MyProject)
0x6300	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x6302	0x0E00      	MOVLW       higher_addr(?lstr_57_MyProject)
0x6304	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x6306	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1382 :: 		if((SENSOR1 & SENSOR3) | (SENSOR3 & SENSOR5) | (SENSOR1 & SENSOR5)){
0x630A	0xA881      	BTFSS       PORTB, 4 
0x630C	0xD004      	BRA         L__transicionEBS1643
0x630E	0xA481      	BTFSS       PORTB, 2 
0x6310	0xD002      	BRA         L__transicionEBS1643
0x6312	0x8001      	BSF         R1, 0 
0x6314	0xD001      	BRA         L__transicionEBS1644
L__transicionEBS1643:
0x6316	0x9001      	BCF         R1, 0 
L__transicionEBS1644:
0x6318	0xA481      	BTFSS       PORTB, 2 
0x631A	0xD004      	BRA         L__transicionEBS1645
0x631C	0xA081      	BTFSS       PORTB, 0 
0x631E	0xD002      	BRA         L__transicionEBS1645
0x6320	0x80D8      	BSF         STATUS, 0 
0x6322	0xD001      	BRA         L__transicionEBS1646
L__transicionEBS1645:
0x6324	0x90D8      	BCF         STATUS, 0 
L__transicionEBS1646:
0x6326	0xB001      	BTFSC       R1, 0 
0x6328	0xD003      	BRA         L__transicionEBS1647
0x632A	0xE202      	BC          L__transicionEBS1647
0x632C	0x9001      	BCF         R1, 0 
0x632E	0xD001      	BRA         L__transicionEBS1648
L__transicionEBS1647:
0x6330	0x8001      	BSF         R1, 0 
L__transicionEBS1648:
0x6332	0xA881      	BTFSS       PORTB, 4 
0x6334	0xD004      	BRA         L__transicionEBS1649
0x6336	0xA081      	BTFSS       PORTB, 0 
0x6338	0xD002      	BRA         L__transicionEBS1649
0x633A	0x80D8      	BSF         STATUS, 0 
0x633C	0xD001      	BRA         L__transicionEBS1650
L__transicionEBS1649:
0x633E	0x90D8      	BCF         STATUS, 0 
L__transicionEBS1650:
0x6340	0xB001      	BTFSC       R1, 0 
0x6342	0xD003      	BRA         L__transicionEBS1651
0x6344	0xE202      	BC          L__transicionEBS1651
0x6346	0x9001      	BCF         R1, 0 
0x6348	0xD001      	BRA         L__transicionEBS1652
L__transicionEBS1651:
0x634A	0x8001      	BSF         R1, 0 
L__transicionEBS1652:
0x634C	0xA001      	BTFSS       R1, 0 
0x634E	0xD00A      	BRA         L_transicionEBS343
;rutinasensores_v4(mstr-slv).h,1383 :: 		lcd_cmd(_LCD_CLEAR);
0x6350	0x0E01      	MOVLW       1
0x6352	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x6354	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1384 :: 		return debugEstadoB = TRANENT;
0x6358	0x0E07      	MOVLW       7
0x635A	0x0101      	MOVLB       1
0x635C	0x6F3D      	MOVWF       _debugEstadoB, 1
0x635E	0x0E07      	MOVLW       7
0x6360	0x6E00      	MOVWF       R0 
0x6362	0xD052      	BRA         L_end_transicionEBS
;rutinasensores_v4(mstr-slv).h,1385 :: 		}
L_transicionEBS343:
;rutinasensores_v4(mstr-slv).h,1386 :: 		if((SENSOR2 & SENSOR4 & !SENSOR1) | (SENSOR2 & SENSOR4 & !SENSOR3) | (SENSOR2 & SENSOR4 & SENSOR6 & !SENSOR5)){
0x6364	0xA883      	BTFSS       PORTD, 4 
0x6366	0xD004      	BRA         L__transicionEBS1653
0x6368	0xA681      	BTFSS       PORTB, 3 
0x636A	0xD002      	BRA         L__transicionEBS1653
0x636C	0x8401      	BSF         R1, 2 
0x636E	0xD001      	BRA         L__transicionEBS1654
L__transicionEBS1653:
0x6370	0x9401      	BCF         R1, 2 
L__transicionEBS1654:
0x6372	0xB881      	BTFSC       PORTB, 4 
0x6374	0xD002      	BRA         L__transicionEBS1655
0x6376	0x80D8      	BSF         STATUS, 0 
0x6378	0xD001      	BRA         L__transicionEBS1656
L__transicionEBS1655:
0x637A	0x90D8      	BCF         STATUS, 0 
L__transicionEBS1656:
0x637C	0xA401      	BTFSS       R1, 2 
0x637E	0xD003      	BRA         L__transicionEBS1657
0x6380	0xE302      	BNC         L__transicionEBS1657
0x6382	0x8201      	BSF         R1, 1 
0x6384	0xD001      	BRA         L__transicionEBS1658
L__transicionEBS1657:
0x6386	0x9201      	BCF         R1, 1 
L__transicionEBS1658:
0x6388	0xB401      	BTFSC       R1, 2 
0x638A	0xD002      	BRA         L__transicionEBS1659
0x638C	0x9001      	BCF         R1, 0 
0x638E	0xD001      	BRA         L__transicionEBS1660
L__transicionEBS1659:
0x6390	0x8001      	BSF         R1, 0 
L__transicionEBS1660:
0x6392	0xB481      	BTFSC       PORTB, 2 
0x6394	0xD002      	BRA         L__transicionEBS1661
0x6396	0x80D8      	BSF         STATUS, 0 
0x6398	0xD001      	BRA         L__transicionEBS1662
L__transicionEBS1661:
0x639A	0x90D8      	BCF         STATUS, 0 
L__transicionEBS1662:
0x639C	0xA001      	BTFSS       R1, 0 
0x639E	0xD003      	BRA         L__transicionEBS1663
0x63A0	0xE302      	BNC         L__transicionEBS1663
0x63A2	0x8001      	BSF         R1, 0 
0x63A4	0xD001      	BRA         L__transicionEBS1664
L__transicionEBS1663:
0x63A6	0x9001      	BCF         R1, 0 
L__transicionEBS1664:
0x63A8	0xB201      	BTFSC       R1, 1 
0x63AA	0xD004      	BRA         L__transicionEBS1665
0x63AC	0xB001      	BTFSC       R1, 0 
0x63AE	0xD002      	BRA         L__transicionEBS1665
0x63B0	0x9201      	BCF         R1, 1 
0x63B2	0xD001      	BRA         L__transicionEBS1666
L__transicionEBS1665:
0x63B4	0x8201      	BSF         R1, 1 
L__transicionEBS1666:
0x63B6	0xB401      	BTFSC       R1, 2 
0x63B8	0xD002      	BRA         L__transicionEBS1667
0x63BA	0x90D8      	BCF         STATUS, 0 
0x63BC	0xD001      	BRA         L__transicionEBS1668
L__transicionEBS1667:
0x63BE	0x80D8      	BSF         STATUS, 0 
L__transicionEBS1668:
0x63C0	0xE304      	BNC         L__transicionEBS1669
0x63C2	0xA281      	BTFSS       PORTB, 1 
0x63C4	0xD002      	BRA         L__transicionEBS1669
0x63C6	0x8001      	BSF         R1, 0 
0x63C8	0xD001      	BRA         L__transicionEBS1670
L__transicionEBS1669:
0x63CA	0x9001      	BCF         R1, 0 
L__transicionEBS1670:
0x63CC	0xB081      	BTFSC       PORTB, 0 
0x63CE	0xD002      	BRA         L__transicionEBS1671
0x63D0	0x80D8      	BSF         STATUS, 0 
0x63D2	0xD001      	BRA         L__transicionEBS1672
L__transicionEBS1671:
0x63D4	0x90D8      	BCF         STATUS, 0 
L__transicionEBS1672:
0x63D6	0xA001      	BTFSS       R1, 0 
0x63D8	0xD003      	BRA         L__transicionEBS1673
0x63DA	0xE302      	BNC         L__transicionEBS1673
0x63DC	0x8001      	BSF         R1, 0 
0x63DE	0xD001      	BRA         L__transicionEBS1674
L__transicionEBS1673:
0x63E0	0x9001      	BCF         R1, 0 
L__transicionEBS1674:
0x63E2	0xB201      	BTFSC       R1, 1 
0x63E4	0xD004      	BRA         L__transicionEBS1675
0x63E6	0xB001      	BTFSC       R1, 0 
0x63E8	0xD002      	BRA         L__transicionEBS1675
0x63EA	0x90D8      	BCF         STATUS, 0 
0x63EC	0xD001      	BRA         L__transicionEBS1676
L__transicionEBS1675:
0x63EE	0x80D8      	BSF         STATUS, 0 
L__transicionEBS1676:
0x63F0	0xE30B      	BNC         L_transicionEBS344
;rutinasensores_v4(mstr-slv).h,1387 :: 		lcd_cmd(_LCD_CLEAR);
0x63F2	0x0E01      	MOVLW       1
0x63F4	0x0102      	MOVLB       2
0x63F6	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x63F8	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1388 :: 		return debugEstadoB = ENTRANDO;
0x63FC	0x0E01      	MOVLW       1
0x63FE	0x0101      	MOVLB       1
0x6400	0x6F3D      	MOVWF       _debugEstadoB, 1
0x6402	0x0E01      	MOVLW       1
0x6404	0x6E00      	MOVWF       R0 
0x6406	0xD000      	BRA         L_end_transicionEBS
;rutinasensores_v4(mstr-slv).h,1389 :: 		}
L_transicionEBS344:
;rutinasensores_v4(mstr-slv).h,1390 :: 		}
L_transicionEBS342:
;rutinasensores_v4(mstr-slv).h,1391 :: 		}
L_end_transicionEBS:
0x6408	0x0012      	RETURN      0
; end of _transicionEBS
_transicionSalBD:
;rutinasensores_v4(mstr-slv).h,880 :: 		short transicionSalBD(short estado){
;rutinasensores_v4(mstr-slv).h,881 :: 		if(estado == TRANSAL){
0x640A	0x0102      	MOVLB       2
0x640C	0x5114      	MOVF        FARG_transicionSalBD_estado, 0, 1
0x640E	0x0A05      	XORLW       5
0x6410	0xE142      	BNZ         L_transicionSalBD256
;rutinasensores_v4(mstr-slv).h,882 :: 		LCD_OUTCONST(3,1,"TRANSICION SALIDA");
0x6412	0x0E03      	MOVLW       3
0x6414	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x6416	0x0E01      	MOVLW       1
0x6418	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x641A	0x0EBE      	MOVLW       ?lstr_30_MyProject
0x641C	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x641E	0x0ED7      	MOVLW       hi_addr(?lstr_30_MyProject)
0x6420	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x6422	0x0E00      	MOVLW       higher_addr(?lstr_30_MyProject)
0x6424	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x6426	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,883 :: 		if(!SENSOR4 & !SENSOR6){
0x642A	0xB681      	BTFSC       PORTB, 3 
0x642C	0xD002      	BRA         L__transicionSalBD1210
0x642E	0x8001      	BSF         R1, 0 
0x6430	0xD001      	BRA         L__transicionSalBD1211
L__transicionSalBD1210:
0x6432	0x9001      	BCF         R1, 0 
L__transicionSalBD1211:
0x6434	0xB281      	BTFSC       PORTB, 1 
0x6436	0xD002      	BRA         L__transicionSalBD1212
0x6438	0x80D8      	BSF         STATUS, 0 
0x643A	0xD001      	BRA         L__transicionSalBD1213
L__transicionSalBD1212:
0x643C	0x90D8      	BCF         STATUS, 0 
L__transicionSalBD1213:
0x643E	0xA001      	BTFSS       R1, 0 
0x6440	0xD003      	BRA         L__transicionSalBD1214
0x6442	0xE302      	BNC         L__transicionSalBD1214
0x6444	0x8001      	BSF         R1, 0 
0x6446	0xD001      	BRA         L__transicionSalBD1215
L__transicionSalBD1214:
0x6448	0x9001      	BCF         R1, 0 
L__transicionSalBD1215:
0x644A	0xA001      	BTFSS       R1, 0 
0x644C	0xD00A      	BRA         L_transicionSalBD257
;rutinasensores_v4(mstr-slv).h,884 :: 		lcd_cmd(_LCD_CLEAR);
0x644E	0x0E01      	MOVLW       1
0x6450	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x6452	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,885 :: 		return debugEstadoB = TRANSICIONS;
0x6456	0x0E08      	MOVLW       8
0x6458	0x0101      	MOVLB       1
0x645A	0x6F3D      	MOVWF       _debugEstadoB, 1
0x645C	0x0E08      	MOVLW       8
0x645E	0x6E00      	MOVWF       R0 
0x6460	0xD01A      	BRA         L_end_transicionSalBD
;rutinasensores_v4(mstr-slv).h,886 :: 		}
L_transicionSalBD257:
;rutinasensores_v4(mstr-slv).h,887 :: 		if((SENSOR1 & SENSOR3 & SENSOR5)){
0x6462	0xA881      	BTFSS       PORTB, 4 
0x6464	0xD004      	BRA         L__transicionSalBD1216
0x6466	0xA481      	BTFSS       PORTB, 2 
0x6468	0xD002      	BRA         L__transicionSalBD1216
0x646A	0x80D8      	BSF         STATUS, 0 
0x646C	0xD001      	BRA         L__transicionSalBD1217
L__transicionSalBD1216:
0x646E	0x90D8      	BCF         STATUS, 0 
L__transicionSalBD1217:
0x6470	0xE304      	BNC         L__transicionSalBD1218
0x6472	0xA081      	BTFSS       PORTB, 0 
0x6474	0xD002      	BRA         L__transicionSalBD1218
0x6476	0x8001      	BSF         R1, 0 
0x6478	0xD001      	BRA         L__transicionSalBD1219
L__transicionSalBD1218:
0x647A	0x9001      	BCF         R1, 0 
L__transicionSalBD1219:
0x647C	0xA001      	BTFSS       R1, 0 
0x647E	0xD00B      	BRA         L_transicionSalBD258
;rutinasensores_v4(mstr-slv).h,888 :: 		lcd_cmd(_LCD_CLEAR);
0x6480	0x0E01      	MOVLW       1
0x6482	0x0102      	MOVLB       2
0x6484	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x6486	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,889 :: 		return debugEstadoB = SALIO;
0x648A	0x0E06      	MOVLW       6
0x648C	0x0101      	MOVLB       1
0x648E	0x6F3D      	MOVWF       _debugEstadoB, 1
0x6490	0x0E06      	MOVLW       6
0x6492	0x6E00      	MOVWF       R0 
0x6494	0xD000      	BRA         L_end_transicionSalBD
;rutinasensores_v4(mstr-slv).h,890 :: 		}
L_transicionSalBD258:
;rutinasensores_v4(mstr-slv).h,891 :: 		}
L_transicionSalBD256:
;rutinasensores_v4(mstr-slv).h,892 :: 		}
L_end_transicionSalBD:
0x6496	0x0012      	RETURN      0
; end of _transicionSalBD
_transicionSBD:
;rutinasensores_v4(mstr-slv).h,866 :: 		short transicionSBD(short estado){
;rutinasensores_v4(mstr-slv).h,867 :: 		if(estado == TRANSICIONS){
0x6498	0x0102      	MOVLB       2
0x649A	0x5114      	MOVF        FARG_transicionSBD_estado, 0, 1
0x649C	0x0A08      	XORLW       8
0x649E	0xA4D8      	BTFSS       STATUS, 2 
0x64A0	0xD060      	BRA         L_transicionSBD253
;rutinasensores_v4(mstr-slv).h,868 :: 		lcd_outConst(3, 1, "TRANSICION");
0x64A2	0x0E03      	MOVLW       3
0x64A4	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x64A6	0x0E01      	MOVLW       1
0x64A8	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x64AA	0x0EC6      	MOVLW       ?lstr_29_MyProject
0x64AC	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x64AE	0x0ED8      	MOVLW       hi_addr(?lstr_29_MyProject)
0x64B0	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x64B2	0x0E00      	MOVLW       higher_addr(?lstr_29_MyProject)
0x64B4	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x64B6	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,869 :: 		if((SENSOR4 & SENSOR6)){
0x64BA	0xA681      	BTFSS       PORTB, 3 
0x64BC	0xD004      	BRA         L__transicionSBD1189
0x64BE	0xA281      	BTFSS       PORTB, 1 
0x64C0	0xD002      	BRA         L__transicionSBD1189
0x64C2	0x80D8      	BSF         STATUS, 0 
0x64C4	0xD001      	BRA         L__transicionSBD1190
L__transicionSBD1189:
0x64C6	0x90D8      	BCF         STATUS, 0 
L__transicionSBD1190:
0x64C8	0xE30A      	BNC         L_transicionSBD254
;rutinasensores_v4(mstr-slv).h,870 :: 		lcd_cmd(_LCD_CLEAR);
0x64CA	0x0E01      	MOVLW       1
0x64CC	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x64CE	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,871 :: 		return debugEstadoB = TRANSAL;
0x64D2	0x0E05      	MOVLW       5
0x64D4	0x0101      	MOVLB       1
0x64D6	0x6F3D      	MOVWF       _debugEstadoB, 1
0x64D8	0x0E05      	MOVLW       5
0x64DA	0x6E00      	MOVWF       R0 
0x64DC	0xD042      	BRA         L_end_transicionSBD
;rutinasensores_v4(mstr-slv).h,872 :: 		}
L_transicionSBD254:
;rutinasensores_v4(mstr-slv).h,873 :: 		if((SENSOR1 & SENSOR3 & SENSOR5 & !SENSOR4) | (SENSOR1 & SENSOR3 & SENSOR5 & !SENSOR6)){
0x64DE	0xA881      	BTFSS       PORTB, 4 
0x64E0	0xD004      	BRA         L__transicionSBD1191
0x64E2	0xA481      	BTFSS       PORTB, 2 
0x64E4	0xD002      	BRA         L__transicionSBD1191
0x64E6	0x8401      	BSF         R1, 2 
0x64E8	0xD001      	BRA         L__transicionSBD1192
L__transicionSBD1191:
0x64EA	0x9401      	BCF         R1, 2 
L__transicionSBD1192:
0x64EC	0xA401      	BTFSS       R1, 2 
0x64EE	0xD004      	BRA         L__transicionSBD1193
0x64F0	0xA081      	BTFSS       PORTB, 0 
0x64F2	0xD002      	BRA         L__transicionSBD1193
0x64F4	0x8001      	BSF         R1, 0 
0x64F6	0xD001      	BRA         L__transicionSBD1194
L__transicionSBD1193:
0x64F8	0x9001      	BCF         R1, 0 
L__transicionSBD1194:
0x64FA	0xB681      	BTFSC       PORTB, 3 
0x64FC	0xD002      	BRA         L__transicionSBD1195
0x64FE	0x80D8      	BSF         STATUS, 0 
0x6500	0xD001      	BRA         L__transicionSBD1196
L__transicionSBD1195:
0x6502	0x90D8      	BCF         STATUS, 0 
L__transicionSBD1196:
0x6504	0xA001      	BTFSS       R1, 0 
0x6506	0xD003      	BRA         L__transicionSBD1197
0x6508	0xE302      	BNC         L__transicionSBD1197
0x650A	0x8201      	BSF         R1, 1 
0x650C	0xD001      	BRA         L__transicionSBD1198
L__transicionSBD1197:
0x650E	0x9201      	BCF         R1, 1 
L__transicionSBD1198:
0x6510	0xB401      	BTFSC       R1, 2 
0x6512	0xD002      	BRA         L__transicionSBD1199
0x6514	0x90D8      	BCF         STATUS, 0 
0x6516	0xD001      	BRA         L__transicionSBD1200
L__transicionSBD1199:
0x6518	0x80D8      	BSF         STATUS, 0 
L__transicionSBD1200:
0x651A	0xE304      	BNC         L__transicionSBD1201
0x651C	0xA081      	BTFSS       PORTB, 0 
0x651E	0xD002      	BRA         L__transicionSBD1201
0x6520	0x8001      	BSF         R1, 0 
0x6522	0xD001      	BRA         L__transicionSBD1202
L__transicionSBD1201:
0x6524	0x9001      	BCF         R1, 0 
L__transicionSBD1202:
0x6526	0xB281      	BTFSC       PORTB, 1 
0x6528	0xD002      	BRA         L__transicionSBD1203
0x652A	0x80D8      	BSF         STATUS, 0 
0x652C	0xD001      	BRA         L__transicionSBD1204
L__transicionSBD1203:
0x652E	0x90D8      	BCF         STATUS, 0 
L__transicionSBD1204:
0x6530	0xA001      	BTFSS       R1, 0 
0x6532	0xD003      	BRA         L__transicionSBD1205
0x6534	0xE302      	BNC         L__transicionSBD1205
0x6536	0x8001      	BSF         R1, 0 
0x6538	0xD001      	BRA         L__transicionSBD1206
L__transicionSBD1205:
0x653A	0x9001      	BCF         R1, 0 
L__transicionSBD1206:
0x653C	0xB201      	BTFSC       R1, 1 
0x653E	0xD004      	BRA         L__transicionSBD1207
0x6540	0xB001      	BTFSC       R1, 0 
0x6542	0xD002      	BRA         L__transicionSBD1207
0x6544	0x90D8      	BCF         STATUS, 0 
0x6546	0xD001      	BRA         L__transicionSBD1208
L__transicionSBD1207:
0x6548	0x80D8      	BSF         STATUS, 0 
L__transicionSBD1208:
0x654A	0xE30B      	BNC         L_transicionSBD255
;rutinasensores_v4(mstr-slv).h,874 :: 		lcd_cmd(_LCD_CLEAR);
0x654C	0x0E01      	MOVLW       1
0x654E	0x0102      	MOVLB       2
0x6550	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x6552	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,875 :: 		return debugEstadoB = SALIENDO;
0x6556	0x0E04      	MOVLW       4
0x6558	0x0101      	MOVLB       1
0x655A	0x6F3D      	MOVWF       _debugEstadoB, 1
0x655C	0x0E04      	MOVLW       4
0x655E	0x6E00      	MOVWF       R0 
0x6560	0xD000      	BRA         L_end_transicionSBD
;rutinasensores_v4(mstr-slv).h,876 :: 		}
L_transicionSBD255:
;rutinasensores_v4(mstr-slv).h,877 :: 		}
L_transicionSBD253:
;rutinasensores_v4(mstr-slv).h,878 :: 		}
L_end_transicionSBD:
0x6562	0x0012      	RETURN      0
; end of _transicionSBD
_esperaBT:
;rutinasensores_v4(mstr-slv).h,919 :: 		short esperaBT(short estado){
;rutinasensores_v4(mstr-slv).h,920 :: 		if(estado == ESPERA){
0x6564	0x0102      	MOVLB       2
0x6566	0x5114      	MOVF        FARG_esperaBT_estado, 0, 1
0x6568	0x0A00      	XORLW       0
0x656A	0xE146      	BNZ         L_esperaBT261
;rutinasensores_v4(mstr-slv).h,921 :: 		muestraEstatus();
0x656C	0xF008EC8B  	CALL        _muestraEstatus, 0
;rutinasensores_v4(mstr-slv).h,922 :: 		if((!SENSOR1 | !SENSOR5)){
0x6570	0xB881      	BTFSC       PORTB, 4 
0x6572	0xD002      	BRA         L__esperaBT1222
0x6574	0x8001      	BSF         R1, 0 
0x6576	0xD001      	BRA         L__esperaBT1223
L__esperaBT1222:
0x6578	0x9001      	BCF         R1, 0 
L__esperaBT1223:
0x657A	0xB081      	BTFSC       PORTB, 0 
0x657C	0xD002      	BRA         L__esperaBT1224
0x657E	0x80D8      	BSF         STATUS, 0 
0x6580	0xD001      	BRA         L__esperaBT1225
L__esperaBT1224:
0x6582	0x90D8      	BCF         STATUS, 0 
L__esperaBT1225:
0x6584	0xB001      	BTFSC       R1, 0 
0x6586	0xD003      	BRA         L__esperaBT1226
0x6588	0xE202      	BC          L__esperaBT1226
0x658A	0x9001      	BCF         R1, 0 
0x658C	0xD001      	BRA         L__esperaBT1227
L__esperaBT1226:
0x658E	0x8001      	BSF         R1, 0 
L__esperaBT1227:
0x6590	0xA001      	BTFSS       R1, 0 
0x6592	0xD00A      	BRA         L_esperaBT262
;rutinasensores_v4(mstr-slv).h,923 :: 		lcd_cmd(_LCD_CLEAR);
0x6594	0x0E01      	MOVLW       1
0x6596	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x6598	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,924 :: 		return debugEstadoB = ENTRANDO;
0x659C	0x0E01      	MOVLW       1
0x659E	0x0101      	MOVLB       1
0x65A0	0x6F3D      	MOVWF       _debugEstadoB, 1
0x65A2	0x0E01      	MOVLW       1
0x65A4	0x6E00      	MOVWF       R0 
0x65A6	0xD028      	BRA         L_end_esperaBT
;rutinasensores_v4(mstr-slv).h,925 :: 		}
L_esperaBT262:
;rutinasensores_v4(mstr-slv).h,926 :: 		if((!SENSOR2 | !SENSOR4 | !SENSOR6)){
0x65A8	0xB883      	BTFSC       PORTD, 4 
0x65AA	0xD002      	BRA         L__esperaBT1228
0x65AC	0x8001      	BSF         R1, 0 
0x65AE	0xD001      	BRA         L__esperaBT1229
L__esperaBT1228:
0x65B0	0x9001      	BCF         R1, 0 
L__esperaBT1229:
0x65B2	0xB681      	BTFSC       PORTB, 3 
0x65B4	0xD002      	BRA         L__esperaBT1230
0x65B6	0x80D8      	BSF         STATUS, 0 
0x65B8	0xD001      	BRA         L__esperaBT1231
L__esperaBT1230:
0x65BA	0x90D8      	BCF         STATUS, 0 
L__esperaBT1231:
0x65BC	0xB001      	BTFSC       R1, 0 
0x65BE	0xD003      	BRA         L__esperaBT1232
0x65C0	0xE202      	BC          L__esperaBT1232
0x65C2	0x9001      	BCF         R1, 0 
0x65C4	0xD001      	BRA         L__esperaBT1233
L__esperaBT1232:
0x65C6	0x8001      	BSF         R1, 0 
L__esperaBT1233:
0x65C8	0xB281      	BTFSC       PORTB, 1 
0x65CA	0xD002      	BRA         L__esperaBT1234
0x65CC	0x80D8      	BSF         STATUS, 0 
0x65CE	0xD001      	BRA         L__esperaBT1235
L__esperaBT1234:
0x65D0	0x90D8      	BCF         STATUS, 0 
L__esperaBT1235:
0x65D2	0xB001      	BTFSC       R1, 0 
0x65D4	0xD003      	BRA         L__esperaBT1236
0x65D6	0xE202      	BC          L__esperaBT1236
0x65D8	0x9001      	BCF         R1, 0 
0x65DA	0xD001      	BRA         L__esperaBT1237
L__esperaBT1236:
0x65DC	0x8001      	BSF         R1, 0 
L__esperaBT1237:
0x65DE	0xA001      	BTFSS       R1, 0 
0x65E0	0xD00B      	BRA         L_esperaBT263
;rutinasensores_v4(mstr-slv).h,927 :: 		lcd_cmd(_LCD_CLEAR);
0x65E2	0x0E01      	MOVLW       1
0x65E4	0x0102      	MOVLB       2
0x65E6	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x65E8	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,928 :: 		return debugEstadoB = SALIENDO;
0x65EC	0x0E04      	MOVLW       4
0x65EE	0x0101      	MOVLB       1
0x65F0	0x6F3D      	MOVWF       _debugEstadoB, 1
0x65F2	0x0E04      	MOVLW       4
0x65F4	0x6E00      	MOVWF       R0 
0x65F6	0xD000      	BRA         L_end_esperaBT
;rutinasensores_v4(mstr-slv).h,929 :: 		}
L_esperaBT263:
;rutinasensores_v4(mstr-slv).h,930 :: 		}
L_esperaBT261:
;rutinasensores_v4(mstr-slv).h,931 :: 		}
L_end_esperaBT:
0x65F8	0x0012      	RETURN      0
; end of _esperaBT
_transicionEntB:
;rutinasensores_v4(mstr-slv).h,673 :: 		short transicionEntB(short estado){
;rutinasensores_v4(mstr-slv).h,674 :: 		if(estado == TRANENT){
0x65FA	0x0102      	MOVLB       2
0x65FC	0x5114      	MOVF        FARG_transicionEntB_estado, 0, 1
0x65FE	0x0A07      	XORLW       7
0x6600	0xE142      	BNZ         L_transicionEntB220
;rutinasensores_v4(mstr-slv).h,675 :: 		LCD_OUTCONST(3,1,"TRANSICION ENTRADA");
0x6602	0x0E03      	MOVLW       3
0x6604	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x6606	0x0E01      	MOVLW       1
0x6608	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x660A	0x0E9A      	MOVLW       ?lstr_18_MyProject
0x660C	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x660E	0x0ED5      	MOVLW       hi_addr(?lstr_18_MyProject)
0x6610	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x6612	0x0E00      	MOVLW       higher_addr(?lstr_18_MyProject)
0x6614	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x6616	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,676 :: 		if((!SENSOR3 & !SENSOR5)){
0x661A	0xB481      	BTFSC       PORTB, 2 
0x661C	0xD002      	BRA         L__transicionEntB1021
0x661E	0x8001      	BSF         R1, 0 
0x6620	0xD001      	BRA         L__transicionEntB1022
L__transicionEntB1021:
0x6622	0x9001      	BCF         R1, 0 
L__transicionEntB1022:
0x6624	0xB081      	BTFSC       PORTB, 0 
0x6626	0xD002      	BRA         L__transicionEntB1023
0x6628	0x80D8      	BSF         STATUS, 0 
0x662A	0xD001      	BRA         L__transicionEntB1024
L__transicionEntB1023:
0x662C	0x90D8      	BCF         STATUS, 0 
L__transicionEntB1024:
0x662E	0xA001      	BTFSS       R1, 0 
0x6630	0xD003      	BRA         L__transicionEntB1025
0x6632	0xE302      	BNC         L__transicionEntB1025
0x6634	0x8001      	BSF         R1, 0 
0x6636	0xD001      	BRA         L__transicionEntB1026
L__transicionEntB1025:
0x6638	0x9001      	BCF         R1, 0 
L__transicionEntB1026:
0x663A	0xA001      	BTFSS       R1, 0 
0x663C	0xD00A      	BRA         L_transicionEntB221
;rutinasensores_v4(mstr-slv).h,677 :: 		lcd_cmd(_LCD_CLEAR);
0x663E	0x0E01      	MOVLW       1
0x6640	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x6642	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,678 :: 		return debugEstadoB = TRANSICION;
0x6646	0x0E02      	MOVLW       2
0x6648	0x0101      	MOVLB       1
0x664A	0x6F3D      	MOVWF       _debugEstadoB, 1
0x664C	0x0E02      	MOVLW       2
0x664E	0x6E00      	MOVWF       R0 
0x6650	0xD01A      	BRA         L_end_transicionEntB
;rutinasensores_v4(mstr-slv).h,679 :: 		}
L_transicionEntB221:
;rutinasensores_v4(mstr-slv).h,680 :: 		if((SENSOR2 & SENSOR4 & SENSOR6)){
0x6652	0xA883      	BTFSS       PORTD, 4 
0x6654	0xD004      	BRA         L__transicionEntB1027
0x6656	0xA681      	BTFSS       PORTB, 3 
0x6658	0xD002      	BRA         L__transicionEntB1027
0x665A	0x80D8      	BSF         STATUS, 0 
0x665C	0xD001      	BRA         L__transicionEntB1028
L__transicionEntB1027:
0x665E	0x90D8      	BCF         STATUS, 0 
L__transicionEntB1028:
0x6660	0xE304      	BNC         L__transicionEntB1029
0x6662	0xA281      	BTFSS       PORTB, 1 
0x6664	0xD002      	BRA         L__transicionEntB1029
0x6666	0x8001      	BSF         R1, 0 
0x6668	0xD001      	BRA         L__transicionEntB1030
L__transicionEntB1029:
0x666A	0x9001      	BCF         R1, 0 
L__transicionEntB1030:
0x666C	0xA001      	BTFSS       R1, 0 
0x666E	0xD00B      	BRA         L_transicionEntB222
;rutinasensores_v4(mstr-slv).h,681 :: 		lcd_cmd(_LCD_CLEAR);
0x6670	0x0E01      	MOVLW       1
0x6672	0x0102      	MOVLB       2
0x6674	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x6676	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,682 :: 		return debugEstadoB = ENTRO;
0x667A	0x0E03      	MOVLW       3
0x667C	0x0101      	MOVLB       1
0x667E	0x6F3D      	MOVWF       _debugEstadoB, 1
0x6680	0x0E03      	MOVLW       3
0x6682	0x6E00      	MOVWF       R0 
0x6684	0xD000      	BRA         L_end_transicionEntB
;rutinasensores_v4(mstr-slv).h,683 :: 		}
L_transicionEntB222:
;rutinasensores_v4(mstr-slv).h,684 :: 		}
L_transicionEntB220:
;rutinasensores_v4(mstr-slv).h,685 :: 		}
L_end_transicionEntB:
0x6686	0x0012      	RETURN      0
; end of _transicionEntB
_UART1_Write:
;__Lib_UART_c67.c,58 :: 		
;__Lib_UART_c67.c,59 :: 		
L_UART1_Write3:
0x6688	0xB2AC      	BTFSC       TXSTA, 1 
0x668A	0xD002      	BRA         L_UART1_Write4
;__Lib_UART_c67.c,60 :: 		
0x668C	0x0000      	NOP
0x668E	0xD7FC      	BRA         L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67.c,61 :: 		
0x6690	0xFFADC214  	MOVFF       FARG_UART1_Write_data_, TXREG
;__Lib_UART_c67.c,62 :: 		
L_end_UART1_Write:
0x6694	0x0012      	RETURN      0
; end of _UART1_Write
_salioBD:
;rutinasensores_v4(mstr-slv).h,894 :: 		short salioBD(short estado){
;rutinasensores_v4(mstr-slv).h,895 :: 		if(estado == SALIO){
0x6696	0x0102      	MOVLB       2
0x6698	0x5114      	MOVF        FARG_salioBD_estado, 0, 1
0x669A	0x0A06      	XORLW       6
0x669C	0xA4D8      	BTFSS       STATUS, 2 
0x669E	0xD11A      	BRA         L_salioBD259
;rutinasensores_v4(mstr-slv).h,896 :: 		LCD_OUTCONST(3,1,"GRACIAS!");
0x66A0	0x0E03      	MOVLW       3
0x66A2	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x66A4	0x0E01      	MOVLW       1
0x66A6	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x66A8	0x0E61      	MOVLW       ?lstr_31_MyProject
0x66AA	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x66AC	0x0EDA      	MOVLW       hi_addr(?lstr_31_MyProject)
0x66AE	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x66B0	0x0E00      	MOVLW       higher_addr(?lstr_31_MyProject)
0x66B2	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x66B4	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,897 :: 		pSuben = eepromLeeNumero(0x0000, 2);
0x66B8	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x66BA	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x66BC	0x0E02      	MOVLW       2
0x66BE	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x66C0	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x66C4	0xF137C000  	MOVFF       R0, _pSuben
0x66C8	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,898 :: 		pBajan = eepromLeeNumero(0x0003, 2) + 1;
0x66CC	0x0E03      	MOVLW       3
0x66CE	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x66D0	0x0E00      	MOVLW       0
0x66D2	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x66D4	0x0E02      	MOVLW       2
0x66D6	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x66D8	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x66DC	0x4A00      	INFSNZ      R0, 1 
0x66DE	0x2A01      	INCF        R1, 1 
0x66E0	0xF135C000  	MOVFF       R0, _pBajan
0x66E4	0xF136C001  	MOVFF       R1, _pBajan+1
;rutinasensores_v4(mstr-slv).h,899 :: 		eepromEscribeNumero(0x0003 ,pBajan, 2);
0x66E8	0x0E03      	MOVLW       3
0x66EA	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x66EC	0x0E00      	MOVLW       0
0x66EE	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x66F0	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x66F4	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x66F8	0x0E00      	MOVLW       0
0x66FA	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x66FC	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x66FE	0x0E02      	MOVLW       2
0x6700	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x6702	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,900 :: 		pBajan = eepromLeeNumero(0x0003, 2);
0x6706	0x0E03      	MOVLW       3
0x6708	0x0102      	MOVLB       2
0x670A	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x670C	0x0E00      	MOVLW       0
0x670E	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x6710	0x0E02      	MOVLW       2
0x6712	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x6714	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x6718	0xF219C000  	MOVFF       R0, FLOC__salioBD+4
0x671C	0xF21AC001  	MOVFF       R1, FLOC__salioBD+5
0x6720	0xF21BC002  	MOVFF       R2, FLOC__salioBD+6
0x6724	0xF21CC003  	MOVFF       R3, FLOC__salioBD+7
0x6728	0xF135C219  	MOVFF       FLOC__salioBD+4, _pBajan
0x672C	0xF136C21A  	MOVFF       FLOC__salioBD+5, _pBajan+1
;rutinasensores_v4(mstr-slv).h,901 :: 		pasajerosVerdaderos = ((float)pSuben + (float)pBajan)/2;
0x6730	0xF000C137  	MOVFF       _pSuben, R0
0x6734	0xF001C138  	MOVFF       _pSuben+1, R1
0x6738	0xF008EC65  	CALL        _Word2Double, 0
0x673C	0xF215C000  	MOVFF       R0, FLOC__salioBD
0x6740	0xF216C001  	MOVFF       R1, FLOC__salioBD+1
0x6744	0xF217C002  	MOVFF       R2, FLOC__salioBD+2
0x6748	0xF218C003  	MOVFF       R3, FLOC__salioBD+3
0x674C	0xF000C219  	MOVFF       FLOC__salioBD+4, R0
0x6750	0xF001C21A  	MOVFF       FLOC__salioBD+5, R1
0x6754	0xF008EC65  	CALL        _Word2Double, 0
0x6758	0xF004C215  	MOVFF       FLOC__salioBD, R4
0x675C	0xF005C216  	MOVFF       FLOC__salioBD+1, R5
0x6760	0xF006C217  	MOVFF       FLOC__salioBD+2, R6
0x6764	0xF007C218  	MOVFF       FLOC__salioBD+3, R7
0x6768	0xF004EC8D  	CALL        _Add_32x32_FP, 0
0x676C	0x0E00      	MOVLW       0
0x676E	0x6E04      	MOVWF       R4 
0x6770	0x0E00      	MOVLW       0
0x6772	0x6E05      	MOVWF       R5 
0x6774	0x0E00      	MOVLW       0
0x6776	0x6E06      	MOVWF       R6 
0x6778	0x0E80      	MOVLW       128
0x677A	0x6E07      	MOVWF       R7 
0x677C	0xF007ECA7  	CALL        _Div_32x32_FP, 0
0x6780	0xF139C000  	MOVFF       R0, _pasajerosVerdaderos
0x6784	0xF13AC001  	MOVFF       R1, _pasajerosVerdaderos+1
0x6788	0xF13BC002  	MOVFF       R2, _pasajerosVerdaderos+2
0x678C	0xF13CC003  	MOVFF       R3, _pasajerosVerdaderos+3
;rutinasensores_v4(mstr-slv).h,902 :: 		eepromEscribeNumero(0x0009, (unsigned int)pasajerosVerdaderos, 2);
0x6790	0x0E09      	MOVLW       9
0x6792	0x0102      	MOVLB       2
0x6794	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x6796	0x0E00      	MOVLW       0
0x6798	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x679A	0xF006ECA0  	CALL        _Double2Word, 0
0x679E	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x67A2	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x67A6	0x0E00      	MOVLW       0
0x67A8	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x67AA	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x67AC	0x0E02      	MOVLW       2
0x67AE	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x67B0	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,903 :: 		if(MSTR){
0x67B4	0xA483      	BTFSS       PORTD, 2 
0x67B6	0xD085      	BRA         L_salioBD260
;rutinasensores_v4(mstr-slv).h,904 :: 		pVerdaderosMEntero = eepromLeeNumero(0x0009, 2);
0x67B8	0x0E09      	MOVLW       9
0x67BA	0x0102      	MOVLB       2
0x67BC	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x67BE	0x0E00      	MOVLW       0
0x67C0	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x67C2	0x0E02      	MOVLW       2
0x67C4	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x67C6	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x67CA	0xF12FC000  	MOVFF       R0, _pVerdaderosMEntero
0x67CE	0xF130C001  	MOVFF       R1, _pVerdaderosMEntero+1
;rutinasensores_v4(mstr-slv).h,905 :: 		pVerdaderosEEntero = eepromLeeNumero(0x0007, 2);
0x67D2	0x0E07      	MOVLW       7
0x67D4	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x67D6	0x0E00      	MOVLW       0
0x67D8	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x67DA	0x0E02      	MOVLW       2
0x67DC	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x67DE	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x67E2	0xF12DC000  	MOVFF       R0, _pVerdaderosEEntero
0x67E6	0xF12EC001  	MOVFF       R1, _pVerdaderosEEntero+1
;rutinasensores_v4(mstr-slv).h,906 :: 		pasajerosTotalesL = pVerdaderosMEntero + pVerdaderosEEntero;
0x67EA	0x5000      	MOVF        R0, 0 
0x67EC	0x0101      	MOVLB       1
0x67EE	0x252F      	ADDWF       _pVerdaderosMEntero, 0, 1
0x67F0	0x6F33      	MOVWF       _pasajerosTotalesL, 1
0x67F2	0x5001      	MOVF        R1, 0 
0x67F4	0x2130      	ADDWFC      _pVerdaderosMEntero+1, 0, 1
0x67F6	0x6F34      	MOVWF       _pasajerosTotalesL+1, 1
;rutinasensores_v4(mstr-slv).h,907 :: 		totalCalculado = (eepromLeeNumero(0x0000, 2)+eepromLeeNumero(0x0003, 2)+eepromLeeNumero(0x0900, 2)+eepromLeeNumero(0x0700, 2))/2;
0x67F8	0x0102      	MOVLB       2
0x67FA	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x67FC	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x67FE	0x0E02      	MOVLW       2
0x6800	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x6802	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x6806	0xF215C000  	MOVFF       R0, FLOC__salioBD
0x680A	0xF216C001  	MOVFF       R1, FLOC__salioBD+1
0x680E	0xF217C002  	MOVFF       R2, FLOC__salioBD+2
0x6812	0xF218C003  	MOVFF       R3, FLOC__salioBD+3
0x6816	0x0E03      	MOVLW       3
0x6818	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x681A	0x0E00      	MOVLW       0
0x681C	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x681E	0x0E02      	MOVLW       2
0x6820	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x6822	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x6826	0x5000      	MOVF        R0, 0 
0x6828	0x2715      	ADDWF       FLOC__salioBD, 1, 1
0x682A	0x5001      	MOVF        R1, 0 
0x682C	0x2316      	ADDWFC      FLOC__salioBD+1, 1, 1
0x682E	0x5002      	MOVF        R2, 0 
0x6830	0x2317      	ADDWFC      FLOC__salioBD+2, 1, 1
0x6832	0x5003      	MOVF        R3, 0 
0x6834	0x2318      	ADDWFC      FLOC__salioBD+3, 1, 1
0x6836	0x0E00      	MOVLW       0
0x6838	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x683A	0x0E09      	MOVLW       9
0x683C	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x683E	0x0E02      	MOVLW       2
0x6840	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x6842	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x6846	0x5000      	MOVF        R0, 0 
0x6848	0x2715      	ADDWF       FLOC__salioBD, 1, 1
0x684A	0x5001      	MOVF        R1, 0 
0x684C	0x2316      	ADDWFC      FLOC__salioBD+1, 1, 1
0x684E	0x5002      	MOVF        R2, 0 
0x6850	0x2317      	ADDWFC      FLOC__salioBD+2, 1, 1
0x6852	0x5003      	MOVF        R3, 0 
0x6854	0x2318      	ADDWFC      FLOC__salioBD+3, 1, 1
0x6856	0x0E00      	MOVLW       0
0x6858	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x685A	0x0E07      	MOVLW       7
0x685C	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x685E	0x0E02      	MOVLW       2
0x6860	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x6862	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x6866	0x5000      	MOVF        R0, 0 
0x6868	0x2515      	ADDWF       FLOC__salioBD, 0, 1
0x686A	0x6E05      	MOVWF       R5 
0x686C	0x5001      	MOVF        R1, 0 
0x686E	0x2116      	ADDWFC      FLOC__salioBD+1, 0, 1
0x6870	0x6E06      	MOVWF       R6 
0x6872	0x5002      	MOVF        R2, 0 
0x6874	0x2117      	ADDWFC      FLOC__salioBD+2, 0, 1
0x6876	0x6E07      	MOVWF       R7 
0x6878	0x5003      	MOVF        R3, 0 
0x687A	0x2118      	ADDWFC      FLOC__salioBD+3, 0, 1
0x687C	0x6E08      	MOVWF       R8 
0x687E	0xF000C005  	MOVFF       R5, R0
0x6882	0xF001C006  	MOVFF       R6, R1
0x6886	0xF002C007  	MOVFF       R7, R2
0x688A	0xF003C008  	MOVFF       R8, R3
0x688E	0x3203      	RRCF        R3, 1 
0x6890	0x3202      	RRCF        R2, 1 
0x6892	0x3201      	RRCF        R1, 1 
0x6894	0x3200      	RRCF        R0, 1 
0x6896	0x9E03      	BCF         R3, 7 
0x6898	0xBC03      	BTFSC       R3, 6 
0x689A	0x8E03      	BSF         R3, 7 
0x689C	0xF131C000  	MOVFF       R0, _totalCalculado
0x68A0	0xF132C001  	MOVFF       R1, _totalCalculado+1
;rutinasensores_v4(mstr-slv).h,908 :: 		eepromEscribeNumero(0x0005, totalCalculado, 2);
0x68A4	0x0E05      	MOVLW       5
0x68A6	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x68A8	0x0E00      	MOVLW       0
0x68AA	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x68AC	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x68B0	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x68B4	0x0E00      	MOVLW       0
0x68B6	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x68B8	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x68BA	0x0E02      	MOVLW       2
0x68BC	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x68BE	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,909 :: 		}
L_salioBD260:
;rutinasensores_v4(mstr-slv).h,910 :: 		lcd_cmd(_LCD_CLEAR);
0x68C2	0x0E01      	MOVLW       1
0x68C4	0x0102      	MOVLB       2
0x68C6	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x68C8	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,911 :: 		return debugEstadoB = ESPERA;
0x68CC	0x0101      	MOVLB       1
0x68CE	0x6B3D      	CLRF        _debugEstadoB, 1
0x68D0	0x6A00      	CLRF        R0 
0x68D2	0xD000      	BRA         L_end_salioBD
;rutinasensores_v4(mstr-slv).h,912 :: 		}
L_salioBD259:
;rutinasensores_v4(mstr-slv).h,913 :: 		}
L_end_salioBD:
0x68D4	0x0012      	RETURN      0
; end of _salioBD
_esperaBP6:
;rutinasensores_v4(mstr-slv).h,2079 :: 		short esperaBP6(short estado){
;rutinasensores_v4(mstr-slv).h,2080 :: 		if(estado == ESPERA){
0x68D6	0x0102      	MOVLB       2
0x68D8	0x5114      	MOVF        FARG_esperaBP6_estado, 0, 1
0x68DA	0x0A00      	XORLW       0
0x68DC	0xE136      	BNZ         L_esperaBP6465
;rutinasensores_v4(mstr-slv).h,2081 :: 		muestraEstatus();
0x68DE	0xF008EC8B  	CALL        _muestraEstatus, 0
;rutinasensores_v4(mstr-slv).h,2083 :: 		if(!SENSOR1){
0x68E2	0xB881      	BTFSC       PORTB, 4 
0x68E4	0xD00A      	BRA         L_esperaBP6466
;rutinasensores_v4(mstr-slv).h,2084 :: 		lcd_cmd(_LCD_CLEAR);
0x68E6	0x0E01      	MOVLW       1
0x68E8	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x68EA	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2085 :: 		return debugEstadoB = ENTRANDO;
0x68EE	0x0E01      	MOVLW       1
0x68F0	0x0101      	MOVLB       1
0x68F2	0x6F3D      	MOVWF       _debugEstadoB, 1
0x68F4	0x0E01      	MOVLW       1
0x68F6	0x6E00      	MOVWF       R0 
0x68F8	0xD028      	BRA         L_end_esperaBP6
;rutinasensores_v4(mstr-slv).h,2086 :: 		}
L_esperaBP6466:
;rutinasensores_v4(mstr-slv).h,2087 :: 		if((!SENSOR2 | !SENSOR4 | !SENSOR6)){
0x68FA	0xB883      	BTFSC       PORTD, 4 
0x68FC	0xD002      	BRA         L__esperaBP62094
0x68FE	0x8001      	BSF         R1, 0 
0x6900	0xD001      	BRA         L__esperaBP62095
L__esperaBP62094:
0x6902	0x9001      	BCF         R1, 0 
L__esperaBP62095:
0x6904	0xB681      	BTFSC       PORTB, 3 
0x6906	0xD002      	BRA         L__esperaBP62096
0x6908	0x80D8      	BSF         STATUS, 0 
0x690A	0xD001      	BRA         L__esperaBP62097
L__esperaBP62096:
0x690C	0x90D8      	BCF         STATUS, 0 
L__esperaBP62097:
0x690E	0xB001      	BTFSC       R1, 0 
0x6910	0xD003      	BRA         L__esperaBP62098
0x6912	0xE202      	BC          L__esperaBP62098
0x6914	0x9001      	BCF         R1, 0 
0x6916	0xD001      	BRA         L__esperaBP62099
L__esperaBP62098:
0x6918	0x8001      	BSF         R1, 0 
L__esperaBP62099:
0x691A	0xB281      	BTFSC       PORTB, 1 
0x691C	0xD002      	BRA         L__esperaBP62100
0x691E	0x80D8      	BSF         STATUS, 0 
0x6920	0xD001      	BRA         L__esperaBP62101
L__esperaBP62100:
0x6922	0x90D8      	BCF         STATUS, 0 
L__esperaBP62101:
0x6924	0xB001      	BTFSC       R1, 0 
0x6926	0xD003      	BRA         L__esperaBP62102
0x6928	0xE202      	BC          L__esperaBP62102
0x692A	0x9001      	BCF         R1, 0 
0x692C	0xD001      	BRA         L__esperaBP62103
L__esperaBP62102:
0x692E	0x8001      	BSF         R1, 0 
L__esperaBP62103:
0x6930	0xA001      	BTFSS       R1, 0 
0x6932	0xD00B      	BRA         L_esperaBP6467
;rutinasensores_v4(mstr-slv).h,2088 :: 		lcd_cmd(_LCD_CLEAR);
0x6934	0x0E01      	MOVLW       1
0x6936	0x0102      	MOVLB       2
0x6938	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x693A	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2089 :: 		return debugEstadoB = SALIENDO;
0x693E	0x0E04      	MOVLW       4
0x6940	0x0101      	MOVLB       1
0x6942	0x6F3D      	MOVWF       _debugEstadoB, 1
0x6944	0x0E04      	MOVLW       4
0x6946	0x6E00      	MOVWF       R0 
0x6948	0xD000      	BRA         L_end_esperaBP6
;rutinasensores_v4(mstr-slv).h,2090 :: 		}
L_esperaBP6467:
;rutinasensores_v4(mstr-slv).h,2091 :: 		}
L_esperaBP6465:
;rutinasensores_v4(mstr-slv).h,2092 :: 		}
L_end_esperaBP6:
0x694A	0x0012      	RETURN      0
; end of _esperaBP6
_transicionSalBT:
;rutinasensores_v4(mstr-slv).h,1024 :: 		short transicionSalBT(short estado){
;rutinasensores_v4(mstr-slv).h,1025 :: 		if(estado == TRANSAL){
0x694C	0x0102      	MOVLB       2
0x694E	0x5114      	MOVF        FARG_transicionSalBT_estado, 0, 1
0x6950	0x0A05      	XORLW       5
0x6952	0xE146      	BNZ         L_transicionSalBT281
;rutinasensores_v4(mstr-slv).h,1026 :: 		LCD_OUTCONST(3,1,"TRANSICION SALIDA");
0x6954	0x0E03      	MOVLW       3
0x6956	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x6958	0x0E01      	MOVLW       1
0x695A	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x695C	0x0ED4      	MOVLW       ?lstr_38_MyProject
0x695E	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x6960	0x0ED6      	MOVLW       hi_addr(?lstr_38_MyProject)
0x6962	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x6964	0x0E00      	MOVLW       higher_addr(?lstr_38_MyProject)
0x6966	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x6968	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1027 :: 		if(!SENSOR2 & !SENSOR4 & !SENSOR6){
0x696C	0xB883      	BTFSC       PORTD, 4 
0x696E	0xD002      	BRA         L__transicionSalBT1339
0x6970	0x8001      	BSF         R1, 0 
0x6972	0xD001      	BRA         L__transicionSalBT1340
L__transicionSalBT1339:
0x6974	0x9001      	BCF         R1, 0 
L__transicionSalBT1340:
0x6976	0xB681      	BTFSC       PORTB, 3 
0x6978	0xD002      	BRA         L__transicionSalBT1341
0x697A	0x80D8      	BSF         STATUS, 0 
0x697C	0xD001      	BRA         L__transicionSalBT1342
L__transicionSalBT1341:
0x697E	0x90D8      	BCF         STATUS, 0 
L__transicionSalBT1342:
0x6980	0xA001      	BTFSS       R1, 0 
0x6982	0xD003      	BRA         L__transicionSalBT1343
0x6984	0xE302      	BNC         L__transicionSalBT1343
0x6986	0x8001      	BSF         R1, 0 
0x6988	0xD001      	BRA         L__transicionSalBT1344
L__transicionSalBT1343:
0x698A	0x9001      	BCF         R1, 0 
L__transicionSalBT1344:
0x698C	0xB281      	BTFSC       PORTB, 1 
0x698E	0xD002      	BRA         L__transicionSalBT1345
0x6990	0x80D8      	BSF         STATUS, 0 
0x6992	0xD001      	BRA         L__transicionSalBT1346
L__transicionSalBT1345:
0x6994	0x90D8      	BCF         STATUS, 0 
L__transicionSalBT1346:
0x6996	0xA001      	BTFSS       R1, 0 
0x6998	0xD003      	BRA         L__transicionSalBT1347
0x699A	0xE302      	BNC         L__transicionSalBT1347
0x699C	0x8001      	BSF         R1, 0 
0x699E	0xD001      	BRA         L__transicionSalBT1348
L__transicionSalBT1347:
0x69A0	0x9001      	BCF         R1, 0 
L__transicionSalBT1348:
0x69A2	0xA001      	BTFSS       R1, 0 
0x69A4	0xD00A      	BRA         L_transicionSalBT282
;rutinasensores_v4(mstr-slv).h,1028 :: 		lcd_cmd(_LCD_CLEAR);
0x69A6	0x0E01      	MOVLW       1
0x69A8	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x69AA	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1029 :: 		return debugEstadoB = TRANSICIONS;
0x69AE	0x0E08      	MOVLW       8
0x69B0	0x0101      	MOVLB       1
0x69B2	0x6F3D      	MOVWF       _debugEstadoB, 1
0x69B4	0x0E08      	MOVLW       8
0x69B6	0x6E00      	MOVWF       R0 
0x69B8	0xD013      	BRA         L_end_transicionSalBT
;rutinasensores_v4(mstr-slv).h,1030 :: 		}
L_transicionSalBT282:
;rutinasensores_v4(mstr-slv).h,1031 :: 		if((SENSOR1 & SENSOR5)){
0x69BA	0xA881      	BTFSS       PORTB, 4 
0x69BC	0xD004      	BRA         L__transicionSalBT1349
0x69BE	0xA081      	BTFSS       PORTB, 0 
0x69C0	0xD002      	BRA         L__transicionSalBT1349
0x69C2	0x80D8      	BSF         STATUS, 0 
0x69C4	0xD001      	BRA         L__transicionSalBT1350
L__transicionSalBT1349:
0x69C6	0x90D8      	BCF         STATUS, 0 
L__transicionSalBT1350:
0x69C8	0xE30B      	BNC         L_transicionSalBT283
;rutinasensores_v4(mstr-slv).h,1032 :: 		lcd_cmd(_LCD_CLEAR);
0x69CA	0x0E01      	MOVLW       1
0x69CC	0x0102      	MOVLB       2
0x69CE	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x69D0	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1033 :: 		return debugEstadoB = SALIO;
0x69D4	0x0E06      	MOVLW       6
0x69D6	0x0101      	MOVLB       1
0x69D8	0x6F3D      	MOVWF       _debugEstadoB, 1
0x69DA	0x0E06      	MOVLW       6
0x69DC	0x6E00      	MOVWF       R0 
0x69DE	0xD000      	BRA         L_end_transicionSalBT
;rutinasensores_v4(mstr-slv).h,1034 :: 		}
L_transicionSalBT283:
;rutinasensores_v4(mstr-slv).h,1035 :: 		}
L_transicionSalBT281:
;rutinasensores_v4(mstr-slv).h,1036 :: 		}
L_end_transicionSalBT:
0x69E0	0x0012      	RETURN      0
; end of _transicionSalBT
_transicionSBT:
;rutinasensores_v4(mstr-slv).h,1010 :: 		short transicionSBT(short estado){
;rutinasensores_v4(mstr-slv).h,1011 :: 		if(estado == TRANSICIONS){
0x69E2	0x0102      	MOVLB       2
0x69E4	0x5114      	MOVF        FARG_transicionSBT_estado, 0, 1
0x69E6	0x0A08      	XORLW       8
0x69E8	0xA4D8      	BTFSS       STATUS, 2 
0x69EA	0xD085      	BRA         L_transicionSBT278
;rutinasensores_v4(mstr-slv).h,1012 :: 		lcd_outConst(3, 1, "TRANSICION");
0x69EC	0x0E03      	MOVLW       3
0x69EE	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x69F0	0x0E01      	MOVLW       1
0x69F2	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x69F4	0x0E13      	MOVLW       ?lstr_37_MyProject
0x69F6	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x69F8	0x0ED9      	MOVLW       hi_addr(?lstr_37_MyProject)
0x69FA	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x69FC	0x0E00      	MOVLW       higher_addr(?lstr_37_MyProject)
0x69FE	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x6A00	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1013 :: 		if((SENSOR2 & SENSOR4) | (SENSOR4 & SENSOR6) | (SENSOR2 & SENSOR6)){
0x6A04	0xA883      	BTFSS       PORTD, 4 
0x6A06	0xD004      	BRA         L__transicionSBT1306
0x6A08	0xA681      	BTFSS       PORTB, 3 
0x6A0A	0xD002      	BRA         L__transicionSBT1306
0x6A0C	0x8001      	BSF         R1, 0 
0x6A0E	0xD001      	BRA         L__transicionSBT1307
L__transicionSBT1306:
0x6A10	0x9001      	BCF         R1, 0 
L__transicionSBT1307:
0x6A12	0xA681      	BTFSS       PORTB, 3 
0x6A14	0xD004      	BRA         L__transicionSBT1308
0x6A16	0xA281      	BTFSS       PORTB, 1 
0x6A18	0xD002      	BRA         L__transicionSBT1308
0x6A1A	0x80D8      	BSF         STATUS, 0 
0x6A1C	0xD001      	BRA         L__transicionSBT1309
L__transicionSBT1308:
0x6A1E	0x90D8      	BCF         STATUS, 0 
L__transicionSBT1309:
0x6A20	0xB001      	BTFSC       R1, 0 
0x6A22	0xD003      	BRA         L__transicionSBT1310
0x6A24	0xE202      	BC          L__transicionSBT1310
0x6A26	0x9001      	BCF         R1, 0 
0x6A28	0xD001      	BRA         L__transicionSBT1311
L__transicionSBT1310:
0x6A2A	0x8001      	BSF         R1, 0 
L__transicionSBT1311:
0x6A2C	0xA883      	BTFSS       PORTD, 4 
0x6A2E	0xD004      	BRA         L__transicionSBT1312
0x6A30	0xA281      	BTFSS       PORTB, 1 
0x6A32	0xD002      	BRA         L__transicionSBT1312
0x6A34	0x80D8      	BSF         STATUS, 0 
0x6A36	0xD001      	BRA         L__transicionSBT1313
L__transicionSBT1312:
0x6A38	0x90D8      	BCF         STATUS, 0 
L__transicionSBT1313:
0x6A3A	0xB001      	BTFSC       R1, 0 
0x6A3C	0xD003      	BRA         L__transicionSBT1314
0x6A3E	0xE202      	BC          L__transicionSBT1314
0x6A40	0x9001      	BCF         R1, 0 
0x6A42	0xD001      	BRA         L__transicionSBT1315
L__transicionSBT1314:
0x6A44	0x8001      	BSF         R1, 0 
L__transicionSBT1315:
0x6A46	0xA001      	BTFSS       R1, 0 
0x6A48	0xD00A      	BRA         L_transicionSBT279
;rutinasensores_v4(mstr-slv).h,1014 :: 		lcd_cmd(_LCD_CLEAR);
0x6A4A	0x0E01      	MOVLW       1
0x6A4C	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x6A4E	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1015 :: 		return debugEstadoB = TRANSAL;
0x6A52	0x0E05      	MOVLW       5
0x6A54	0x0101      	MOVLB       1
0x6A56	0x6F3D      	MOVWF       _debugEstadoB, 1
0x6A58	0x0E05      	MOVLW       5
0x6A5A	0x6E00      	MOVWF       R0 
0x6A5C	0xD04C      	BRA         L_end_transicionSBT
;rutinasensores_v4(mstr-slv).h,1016 :: 		}
L_transicionSBT279:
;rutinasensores_v4(mstr-slv).h,1017 :: 		if((SENSOR1 & SENSOR5 & !SENSOR2) | (SENSOR1 & SENSOR5 & !SENSOR4) | (SENSOR1 & SENSOR5 & !SENSOR6)){
0x6A5E	0xA881      	BTFSS       PORTB, 4 
0x6A60	0xD004      	BRA         L__transicionSBT1316
0x6A62	0xA081      	BTFSS       PORTB, 0 
0x6A64	0xD002      	BRA         L__transicionSBT1316
0x6A66	0x8401      	BSF         R1, 2 
0x6A68	0xD001      	BRA         L__transicionSBT1317
L__transicionSBT1316:
0x6A6A	0x9401      	BCF         R1, 2 
L__transicionSBT1317:
0x6A6C	0xB883      	BTFSC       PORTD, 4 
0x6A6E	0xD002      	BRA         L__transicionSBT1318
0x6A70	0x80D8      	BSF         STATUS, 0 
0x6A72	0xD001      	BRA         L__transicionSBT1319
L__transicionSBT1318:
0x6A74	0x90D8      	BCF         STATUS, 0 
L__transicionSBT1319:
0x6A76	0xA401      	BTFSS       R1, 2 
0x6A78	0xD003      	BRA         L__transicionSBT1320
0x6A7A	0xE302      	BNC         L__transicionSBT1320
0x6A7C	0x8201      	BSF         R1, 1 
0x6A7E	0xD001      	BRA         L__transicionSBT1321
L__transicionSBT1320:
0x6A80	0x9201      	BCF         R1, 1 
L__transicionSBT1321:
0x6A82	0xB401      	BTFSC       R1, 2 
0x6A84	0xD002      	BRA         L__transicionSBT1322
0x6A86	0x9001      	BCF         R1, 0 
0x6A88	0xD001      	BRA         L__transicionSBT1323
L__transicionSBT1322:
0x6A8A	0x8001      	BSF         R1, 0 
L__transicionSBT1323:
0x6A8C	0xB681      	BTFSC       PORTB, 3 
0x6A8E	0xD002      	BRA         L__transicionSBT1324
0x6A90	0x80D8      	BSF         STATUS, 0 
0x6A92	0xD001      	BRA         L__transicionSBT1325
L__transicionSBT1324:
0x6A94	0x90D8      	BCF         STATUS, 0 
L__transicionSBT1325:
0x6A96	0xA001      	BTFSS       R1, 0 
0x6A98	0xD003      	BRA         L__transicionSBT1326
0x6A9A	0xE302      	BNC         L__transicionSBT1326
0x6A9C	0x8001      	BSF         R1, 0 
0x6A9E	0xD001      	BRA         L__transicionSBT1327
L__transicionSBT1326:
0x6AA0	0x9001      	BCF         R1, 0 
L__transicionSBT1327:
0x6AA2	0xB201      	BTFSC       R1, 1 
0x6AA4	0xD004      	BRA         L__transicionSBT1328
0x6AA6	0xB001      	BTFSC       R1, 0 
0x6AA8	0xD002      	BRA         L__transicionSBT1328
0x6AAA	0x9201      	BCF         R1, 1 
0x6AAC	0xD001      	BRA         L__transicionSBT1329
L__transicionSBT1328:
0x6AAE	0x8201      	BSF         R1, 1 
L__transicionSBT1329:
0x6AB0	0xB401      	BTFSC       R1, 2 
0x6AB2	0xD002      	BRA         L__transicionSBT1330
0x6AB4	0x9001      	BCF         R1, 0 
0x6AB6	0xD001      	BRA         L__transicionSBT1331
L__transicionSBT1330:
0x6AB8	0x8001      	BSF         R1, 0 
L__transicionSBT1331:
0x6ABA	0xB281      	BTFSC       PORTB, 1 
0x6ABC	0xD002      	BRA         L__transicionSBT1332
0x6ABE	0x80D8      	BSF         STATUS, 0 
0x6AC0	0xD001      	BRA         L__transicionSBT1333
L__transicionSBT1332:
0x6AC2	0x90D8      	BCF         STATUS, 0 
L__transicionSBT1333:
0x6AC4	0xA001      	BTFSS       R1, 0 
0x6AC6	0xD003      	BRA         L__transicionSBT1334
0x6AC8	0xE302      	BNC         L__transicionSBT1334
0x6ACA	0x8001      	BSF         R1, 0 
0x6ACC	0xD001      	BRA         L__transicionSBT1335
L__transicionSBT1334:
0x6ACE	0x9001      	BCF         R1, 0 
L__transicionSBT1335:
0x6AD0	0xB201      	BTFSC       R1, 1 
0x6AD2	0xD004      	BRA         L__transicionSBT1336
0x6AD4	0xB001      	BTFSC       R1, 0 
0x6AD6	0xD002      	BRA         L__transicionSBT1336
0x6AD8	0x90D8      	BCF         STATUS, 0 
0x6ADA	0xD001      	BRA         L__transicionSBT1337
L__transicionSBT1336:
0x6ADC	0x80D8      	BSF         STATUS, 0 
L__transicionSBT1337:
0x6ADE	0xE30B      	BNC         L_transicionSBT280
;rutinasensores_v4(mstr-slv).h,1018 :: 		lcd_cmd(_LCD_CLEAR);
0x6AE0	0x0E01      	MOVLW       1
0x6AE2	0x0102      	MOVLB       2
0x6AE4	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x6AE6	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1019 :: 		return debugEstadoB = SALIENDO;
0x6AEA	0x0E04      	MOVLW       4
0x6AEC	0x0101      	MOVLB       1
0x6AEE	0x6F3D      	MOVWF       _debugEstadoB, 1
0x6AF0	0x0E04      	MOVLW       4
0x6AF2	0x6E00      	MOVWF       R0 
0x6AF4	0xD000      	BRA         L_end_transicionSBT
;rutinasensores_v4(mstr-slv).h,1020 :: 		}
L_transicionSBT280:
;rutinasensores_v4(mstr-slv).h,1021 :: 		}
L_transicionSBT278:
;rutinasensores_v4(mstr-slv).h,1022 :: 		}
L_end_transicionSBT:
0x6AF6	0x0012      	RETURN      0
; end of _transicionSBT
_saliendoBT:
;rutinasensores_v4(mstr-slv).h,996 :: 		short saliendoBT(short estado){
;rutinasensores_v4(mstr-slv).h,997 :: 		if(estado == SALIENDO){
0x6AF8	0x0102      	MOVLB       2
0x6AFA	0x5114      	MOVF        FARG_saliendoBT_estado, 0, 1
0x6AFC	0x0A04      	XORLW       4
0x6AFE	0xE140      	BNZ         L_saliendoBT275
;rutinasensores_v4(mstr-slv).h,998 :: 		lcd_outConst(3, 1, "SALIENDO");
0x6B00	0x0E03      	MOVLW       3
0x6B02	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x6B04	0x0E01      	MOVLW       1
0x6B06	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x6B08	0x0EBF      	MOVLW       ?lstr_36_MyProject
0x6B0A	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x6B0C	0x0ED9      	MOVLW       hi_addr(?lstr_36_MyProject)
0x6B0E	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x6B10	0x0E00      	MOVLW       higher_addr(?lstr_36_MyProject)
0x6B12	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x6B14	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,999 :: 		if((!SENSOR1 & !SENSOR5)){
0x6B18	0xB881      	BTFSC       PORTB, 4 
0x6B1A	0xD002      	BRA         L__saliendoBT1295
0x6B1C	0x8001      	BSF         R1, 0 
0x6B1E	0xD001      	BRA         L__saliendoBT1296
L__saliendoBT1295:
0x6B20	0x9001      	BCF         R1, 0 
L__saliendoBT1296:
0x6B22	0xB081      	BTFSC       PORTB, 0 
0x6B24	0xD002      	BRA         L__saliendoBT1297
0x6B26	0x80D8      	BSF         STATUS, 0 
0x6B28	0xD001      	BRA         L__saliendoBT1298
L__saliendoBT1297:
0x6B2A	0x90D8      	BCF         STATUS, 0 
L__saliendoBT1298:
0x6B2C	0xA001      	BTFSS       R1, 0 
0x6B2E	0xD003      	BRA         L__saliendoBT1299
0x6B30	0xE302      	BNC         L__saliendoBT1299
0x6B32	0x8001      	BSF         R1, 0 
0x6B34	0xD001      	BRA         L__saliendoBT1300
L__saliendoBT1299:
0x6B36	0x9001      	BCF         R1, 0 
L__saliendoBT1300:
0x6B38	0xA001      	BTFSS       R1, 0 
0x6B3A	0xD00A      	BRA         L_saliendoBT276
;rutinasensores_v4(mstr-slv).h,1000 :: 		lcd_cmd(_LCD_CLEAR);
0x6B3C	0x0E01      	MOVLW       1
0x6B3E	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x6B40	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1001 :: 		return debugEstadoB = TRANSICIONS;
0x6B44	0x0E08      	MOVLW       8
0x6B46	0x0101      	MOVLB       1
0x6B48	0x6F3D      	MOVWF       _debugEstadoB, 1
0x6B4A	0x0E08      	MOVLW       8
0x6B4C	0x6E00      	MOVWF       R0 
0x6B4E	0xD018      	BRA         L_end_saliendoBT
;rutinasensores_v4(mstr-slv).h,1002 :: 		}
L_saliendoBT276:
;rutinasensores_v4(mstr-slv).h,1003 :: 		if((SENSOR2 & SENSOR4 & SENSOR6)){
0x6B50	0xA883      	BTFSS       PORTD, 4 
0x6B52	0xD004      	BRA         L__saliendoBT1301
0x6B54	0xA681      	BTFSS       PORTB, 3 
0x6B56	0xD002      	BRA         L__saliendoBT1301
0x6B58	0x80D8      	BSF         STATUS, 0 
0x6B5A	0xD001      	BRA         L__saliendoBT1302
L__saliendoBT1301:
0x6B5C	0x90D8      	BCF         STATUS, 0 
L__saliendoBT1302:
0x6B5E	0xE304      	BNC         L__saliendoBT1303
0x6B60	0xA281      	BTFSS       PORTB, 1 
0x6B62	0xD002      	BRA         L__saliendoBT1303
0x6B64	0x8001      	BSF         R1, 0 
0x6B66	0xD001      	BRA         L__saliendoBT1304
L__saliendoBT1303:
0x6B68	0x9001      	BCF         R1, 0 
L__saliendoBT1304:
0x6B6A	0xA001      	BTFSS       R1, 0 
0x6B6C	0xD009      	BRA         L_saliendoBT277
;rutinasensores_v4(mstr-slv).h,1004 :: 		lcd_cmd(_LCD_CLEAR);
0x6B6E	0x0E01      	MOVLW       1
0x6B70	0x0102      	MOVLB       2
0x6B72	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x6B74	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1005 :: 		return debugEstadoB = ESPERA;
0x6B78	0x0101      	MOVLB       1
0x6B7A	0x6B3D      	CLRF        _debugEstadoB, 1
0x6B7C	0x6A00      	CLRF        R0 
0x6B7E	0xD000      	BRA         L_end_saliendoBT
;rutinasensores_v4(mstr-slv).h,1006 :: 		}
L_saliendoBT277:
;rutinasensores_v4(mstr-slv).h,1007 :: 		}
L_saliendoBT275:
;rutinasensores_v4(mstr-slv).h,1008 :: 		}
L_end_saliendoBT:
0x6B80	0x0012      	RETURN      0
; end of _saliendoBT
_entrandoBP6:
;rutinasensores_v4(mstr-slv).h,2094 :: 		short entrandoBP6(short estado){
;rutinasensores_v4(mstr-slv).h,2095 :: 		if(estado == ENTRANDO){
0x6B82	0x0102      	MOVLB       2
0x6B84	0x5114      	MOVF        FARG_entrandoBP6_estado, 0, 1
0x6B86	0x0A01      	XORLW       1
0x6B88	0xE15C      	BNZ         L_entrandoBP6468
;rutinasensores_v4(mstr-slv).h,2096 :: 		LCD_OUTCONST(3,1,"ENTRANDO");
0x6B8A	0x0E03      	MOVLW       3
0x6B8C	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x6B8E	0x0E01      	MOVLW       1
0x6B90	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x6B92	0x0E6A      	MOVLW       ?lstr_96_MyProject
0x6B94	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x6B96	0x0EDA      	MOVLW       hi_addr(?lstr_96_MyProject)
0x6B98	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x6B9A	0x0E00      	MOVLW       higher_addr(?lstr_96_MyProject)
0x6B9C	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x6B9E	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,2097 :: 		if((SENSOR1)){
0x6BA2	0xA881      	BTFSS       PORTB, 4 
0x6BA4	0xD008      	BRA         L_entrandoBP6469
;rutinasensores_v4(mstr-slv).h,2098 :: 		lcd_cmd(_LCD_CLEAR);
0x6BA6	0x0E01      	MOVLW       1
0x6BA8	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x6BAA	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2099 :: 		return debugEstadoB = ESPERA;
0x6BAE	0x0101      	MOVLB       1
0x6BB0	0x6B3D      	CLRF        _debugEstadoB, 1
0x6BB2	0x6A00      	CLRF        R0 
0x6BB4	0xD046      	BRA         L_end_entrandoBP6
;rutinasensores_v4(mstr-slv).h,2100 :: 		}
L_entrandoBP6469:
;rutinasensores_v4(mstr-slv).h,2101 :: 		if((!SENSOR2 & !SENSOR4) | (!SENSOR4 & !SENSOR6) | (!SENSOR2 & !SENSOR6)){
0x6BB6	0xB883      	BTFSC       PORTD, 4 
0x6BB8	0xD002      	BRA         L__entrandoBP62105
0x6BBA	0x8601      	BSF         R1, 3 
0x6BBC	0xD001      	BRA         L__entrandoBP62106
L__entrandoBP62105:
0x6BBE	0x9601      	BCF         R1, 3 
L__entrandoBP62106:
0x6BC0	0xB681      	BTFSC       PORTB, 3 
0x6BC2	0xD002      	BRA         L__entrandoBP62107
0x6BC4	0x8001      	BSF         R1, 0 
0x6BC6	0xD001      	BRA         L__entrandoBP62108
L__entrandoBP62107:
0x6BC8	0x9001      	BCF         R1, 0 
L__entrandoBP62108:
0x6BCA	0xA601      	BTFSS       R1, 3 
0x6BCC	0xD004      	BRA         L__entrandoBP62109
0x6BCE	0xA001      	BTFSS       R1, 0 
0x6BD0	0xD002      	BRA         L__entrandoBP62109
0x6BD2	0x8201      	BSF         R1, 1 
0x6BD4	0xD001      	BRA         L__entrandoBP62110
L__entrandoBP62109:
0x6BD6	0x9201      	BCF         R1, 1 
L__entrandoBP62110:
0x6BD8	0xB281      	BTFSC       PORTB, 1 
0x6BDA	0xD002      	BRA         L__entrandoBP62111
0x6BDC	0x8401      	BSF         R1, 2 
0x6BDE	0xD001      	BRA         L__entrandoBP62112
L__entrandoBP62111:
0x6BE0	0x9401      	BCF         R1, 2 
L__entrandoBP62112:
0x6BE2	0xA001      	BTFSS       R1, 0 
0x6BE4	0xD004      	BRA         L__entrandoBP62113
0x6BE6	0xA401      	BTFSS       R1, 2 
0x6BE8	0xD002      	BRA         L__entrandoBP62113
0x6BEA	0x80D8      	BSF         STATUS, 0 
0x6BEC	0xD001      	BRA         L__entrandoBP62114
L__entrandoBP62113:
0x6BEE	0x90D8      	BCF         STATUS, 0 
L__entrandoBP62114:
0x6BF0	0xB201      	BTFSC       R1, 1 
0x6BF2	0xD003      	BRA         L__entrandoBP62115
0x6BF4	0xE202      	BC          L__entrandoBP62115
0x6BF6	0x9201      	BCF         R1, 1 
0x6BF8	0xD001      	BRA         L__entrandoBP62116
L__entrandoBP62115:
0x6BFA	0x8201      	BSF         R1, 1 
L__entrandoBP62116:
0x6BFC	0xB601      	BTFSC       R1, 3 
0x6BFE	0xD002      	BRA         L__entrandoBP62117
0x6C00	0x9001      	BCF         R1, 0 
0x6C02	0xD001      	BRA         L__entrandoBP62118
L__entrandoBP62117:
0x6C04	0x8001      	BSF         R1, 0 
L__entrandoBP62118:
0x6C06	0xB401      	BTFSC       R1, 2 
0x6C08	0xD002      	BRA         L__entrandoBP62119
0x6C0A	0x90D8      	BCF         STATUS, 0 
0x6C0C	0xD001      	BRA         L__entrandoBP62120
L__entrandoBP62119:
0x6C0E	0x80D8      	BSF         STATUS, 0 
L__entrandoBP62120:
0x6C10	0xA001      	BTFSS       R1, 0 
0x6C12	0xD003      	BRA         L__entrandoBP62121
0x6C14	0xE302      	BNC         L__entrandoBP62121
0x6C16	0x8001      	BSF         R1, 0 
0x6C18	0xD001      	BRA         L__entrandoBP62122
L__entrandoBP62121:
0x6C1A	0x9001      	BCF         R1, 0 
L__entrandoBP62122:
0x6C1C	0xB201      	BTFSC       R1, 1 
0x6C1E	0xD004      	BRA         L__entrandoBP62123
0x6C20	0xB001      	BTFSC       R1, 0 
0x6C22	0xD002      	BRA         L__entrandoBP62123
0x6C24	0x90D8      	BCF         STATUS, 0 
0x6C26	0xD001      	BRA         L__entrandoBP62124
L__entrandoBP62123:
0x6C28	0x80D8      	BSF         STATUS, 0 
L__entrandoBP62124:
0x6C2A	0xE30B      	BNC         L_entrandoBP6470
;rutinasensores_v4(mstr-slv).h,2102 :: 		lcd_cmd(_LCD_CLEAR);
0x6C2C	0x0E01      	MOVLW       1
0x6C2E	0x0102      	MOVLB       2
0x6C30	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x6C32	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2103 :: 		return debugEstadoB = TRANSICION;
0x6C36	0x0E02      	MOVLW       2
0x6C38	0x0101      	MOVLB       1
0x6C3A	0x6F3D      	MOVWF       _debugEstadoB, 1
0x6C3C	0x0E02      	MOVLW       2
0x6C3E	0x6E00      	MOVWF       R0 
0x6C40	0xD000      	BRA         L_end_entrandoBP6
;rutinasensores_v4(mstr-slv).h,2104 :: 		}
L_entrandoBP6470:
;rutinasensores_v4(mstr-slv).h,2105 :: 		}
L_entrandoBP6468:
;rutinasensores_v4(mstr-slv).h,2106 :: 		}
L_end_entrandoBP6:
0x6C42	0x0012      	RETURN      0
; end of _entrandoBP6
_transicionEBP6:
;rutinasensores_v4(mstr-slv).h,2108 :: 		short transicionEBP6(short estado){
;rutinasensores_v4(mstr-slv).h,2109 :: 		if(estado == TRANSICION){
0x6C44	0x0102      	MOVLB       2
0x6C46	0x5114      	MOVF        FARG_transicionEBP6_estado, 0, 1
0x6C48	0x0A02      	XORLW       2
0x6C4A	0xA4D8      	BTFSS       STATUS, 2 
0x6C4C	0xD077      	BRA         L_transicionEBP6471
;rutinasensores_v4(mstr-slv).h,2110 :: 		LCD_OUTCONST(3,1,"TRANSICION");
0x6C4E	0x0E03      	MOVLW       3
0x6C50	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x6C52	0x0E01      	MOVLW       1
0x6C54	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x6C56	0x0EFD      	MOVLW       ?lstr_97_MyProject
0x6C58	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x6C5A	0x0ED8      	MOVLW       hi_addr(?lstr_97_MyProject)
0x6C5C	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x6C5E	0x0E00      	MOVLW       higher_addr(?lstr_97_MyProject)
0x6C60	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x6C62	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,2111 :: 		if(SENSOR1){
0x6C66	0xA881      	BTFSS       PORTB, 4 
0x6C68	0xD00A      	BRA         L_transicionEBP6472
;rutinasensores_v4(mstr-slv).h,2112 :: 		lcd_cmd(_LCD_CLEAR);
0x6C6A	0x0E01      	MOVLW       1
0x6C6C	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x6C6E	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2113 :: 		return debugEstadoB = TRANENT;
0x6C72	0x0E07      	MOVLW       7
0x6C74	0x0101      	MOVLB       1
0x6C76	0x6F3D      	MOVWF       _debugEstadoB, 1
0x6C78	0x0E07      	MOVLW       7
0x6C7A	0x6E00      	MOVWF       R0 
0x6C7C	0xD05F      	BRA         L_end_transicionEBP6
;rutinasensores_v4(mstr-slv).h,2114 :: 		}
L_transicionEBP6472:
;rutinasensores_v4(mstr-slv).h,2115 :: 		if((SENSOR2 & SENSOR4 & SENSOR6 & !SENSOR1) | (SENSOR2 & SENSOR4 & SENSOR6 & !SENSOR3) | (SENSOR2 & SENSOR4 & SENSOR6 & !SENSOR5)){
0x6C7E	0xA883      	BTFSS       PORTD, 4 
0x6C80	0xD004      	BRA         L__transicionEBP62126
0x6C82	0xA681      	BTFSS       PORTB, 3 
0x6C84	0xD002      	BRA         L__transicionEBP62126
0x6C86	0x8401      	BSF         R1, 2 
0x6C88	0xD001      	BRA         L__transicionEBP62127
L__transicionEBP62126:
0x6C8A	0x9401      	BCF         R1, 2 
L__transicionEBP62127:
0x6C8C	0xA401      	BTFSS       R1, 2 
0x6C8E	0xD004      	BRA         L__transicionEBP62128
0x6C90	0xA281      	BTFSS       PORTB, 1 
0x6C92	0xD002      	BRA         L__transicionEBP62128
0x6C94	0x8001      	BSF         R1, 0 
0x6C96	0xD001      	BRA         L__transicionEBP62129
L__transicionEBP62128:
0x6C98	0x9001      	BCF         R1, 0 
L__transicionEBP62129:
0x6C9A	0xB881      	BTFSC       PORTB, 4 
0x6C9C	0xD002      	BRA         L__transicionEBP62130
0x6C9E	0x80D8      	BSF         STATUS, 0 
0x6CA0	0xD001      	BRA         L__transicionEBP62131
L__transicionEBP62130:
0x6CA2	0x90D8      	BCF         STATUS, 0 
L__transicionEBP62131:
0x6CA4	0xA001      	BTFSS       R1, 0 
0x6CA6	0xD003      	BRA         L__transicionEBP62132
0x6CA8	0xE302      	BNC         L__transicionEBP62132
0x6CAA	0x8201      	BSF         R1, 1 
0x6CAC	0xD001      	BRA         L__transicionEBP62133
L__transicionEBP62132:
0x6CAE	0x9201      	BCF         R1, 1 
L__transicionEBP62133:
0x6CB0	0xB401      	BTFSC       R1, 2 
0x6CB2	0xD002      	BRA         L__transicionEBP62134
0x6CB4	0x90D8      	BCF         STATUS, 0 
0x6CB6	0xD001      	BRA         L__transicionEBP62135
L__transicionEBP62134:
0x6CB8	0x80D8      	BSF         STATUS, 0 
L__transicionEBP62135:
0x6CBA	0xE304      	BNC         L__transicionEBP62136
0x6CBC	0xA281      	BTFSS       PORTB, 1 
0x6CBE	0xD002      	BRA         L__transicionEBP62136
0x6CC0	0x8001      	BSF         R1, 0 
0x6CC2	0xD001      	BRA         L__transicionEBP62137
L__transicionEBP62136:
0x6CC4	0x9001      	BCF         R1, 0 
L__transicionEBP62137:
0x6CC6	0xB481      	BTFSC       PORTB, 2 
0x6CC8	0xD002      	BRA         L__transicionEBP62138
0x6CCA	0x80D8      	BSF         STATUS, 0 
0x6CCC	0xD001      	BRA         L__transicionEBP62139
L__transicionEBP62138:
0x6CCE	0x90D8      	BCF         STATUS, 0 
L__transicionEBP62139:
0x6CD0	0xA001      	BTFSS       R1, 0 
0x6CD2	0xD003      	BRA         L__transicionEBP62140
0x6CD4	0xE302      	BNC         L__transicionEBP62140
0x6CD6	0x8001      	BSF         R1, 0 
0x6CD8	0xD001      	BRA         L__transicionEBP62141
L__transicionEBP62140:
0x6CDA	0x9001      	BCF         R1, 0 
L__transicionEBP62141:
0x6CDC	0xB201      	BTFSC       R1, 1 
0x6CDE	0xD004      	BRA         L__transicionEBP62142
0x6CE0	0xB001      	BTFSC       R1, 0 
0x6CE2	0xD002      	BRA         L__transicionEBP62142
0x6CE4	0x9201      	BCF         R1, 1 
0x6CE6	0xD001      	BRA         L__transicionEBP62143
L__transicionEBP62142:
0x6CE8	0x8201      	BSF         R1, 1 
L__transicionEBP62143:
0x6CEA	0xB401      	BTFSC       R1, 2 
0x6CEC	0xD002      	BRA         L__transicionEBP62144
0x6CEE	0x90D8      	BCF         STATUS, 0 
0x6CF0	0xD001      	BRA         L__transicionEBP62145
L__transicionEBP62144:
0x6CF2	0x80D8      	BSF         STATUS, 0 
L__transicionEBP62145:
0x6CF4	0xE304      	BNC         L__transicionEBP62146
0x6CF6	0xA281      	BTFSS       PORTB, 1 
0x6CF8	0xD002      	BRA         L__transicionEBP62146
0x6CFA	0x8001      	BSF         R1, 0 
0x6CFC	0xD001      	BRA         L__transicionEBP62147
L__transicionEBP62146:
0x6CFE	0x9001      	BCF         R1, 0 
L__transicionEBP62147:
0x6D00	0xB081      	BTFSC       PORTB, 0 
0x6D02	0xD002      	BRA         L__transicionEBP62148
0x6D04	0x80D8      	BSF         STATUS, 0 
0x6D06	0xD001      	BRA         L__transicionEBP62149
L__transicionEBP62148:
0x6D08	0x90D8      	BCF         STATUS, 0 
L__transicionEBP62149:
0x6D0A	0xA001      	BTFSS       R1, 0 
0x6D0C	0xD003      	BRA         L__transicionEBP62150
0x6D0E	0xE302      	BNC         L__transicionEBP62150
0x6D10	0x8001      	BSF         R1, 0 
0x6D12	0xD001      	BRA         L__transicionEBP62151
L__transicionEBP62150:
0x6D14	0x9001      	BCF         R1, 0 
L__transicionEBP62151:
0x6D16	0xB201      	BTFSC       R1, 1 
0x6D18	0xD004      	BRA         L__transicionEBP62152
0x6D1A	0xB001      	BTFSC       R1, 0 
0x6D1C	0xD002      	BRA         L__transicionEBP62152
0x6D1E	0x90D8      	BCF         STATUS, 0 
0x6D20	0xD001      	BRA         L__transicionEBP62153
L__transicionEBP62152:
0x6D22	0x80D8      	BSF         STATUS, 0 
L__transicionEBP62153:
0x6D24	0xE30B      	BNC         L_transicionEBP6473
;rutinasensores_v4(mstr-slv).h,2116 :: 		lcd_cmd(_LCD_CLEAR);
0x6D26	0x0E01      	MOVLW       1
0x6D28	0x0102      	MOVLB       2
0x6D2A	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x6D2C	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2117 :: 		return debugEstadoB = ENTRANDO;
0x6D30	0x0E01      	MOVLW       1
0x6D32	0x0101      	MOVLB       1
0x6D34	0x6F3D      	MOVWF       _debugEstadoB, 1
0x6D36	0x0E01      	MOVLW       1
0x6D38	0x6E00      	MOVWF       R0 
0x6D3A	0xD000      	BRA         L_end_transicionEBP6
;rutinasensores_v4(mstr-slv).h,2118 :: 		}
L_transicionEBP6473:
;rutinasensores_v4(mstr-slv).h,2119 :: 		}
L_transicionEBP6471:
;rutinasensores_v4(mstr-slv).h,2120 :: 		}
L_end_transicionEBP6:
0x6D3C	0x0012      	RETURN      0
; end of _transicionEBP6
_transicionEntBP6:
;rutinasensores_v4(mstr-slv).h,2122 :: 		short transicionEntBP6(short estado){
;rutinasensores_v4(mstr-slv).h,2123 :: 		if(estado == TRANENT){
0x6D3E	0x0102      	MOVLB       2
0x6D40	0x5114      	MOVF        FARG_transicionEntBP6_estado, 0, 1
0x6D42	0x0A07      	XORLW       7
0x6D44	0xE138      	BNZ         L_transicionEntBP6474
;rutinasensores_v4(mstr-slv).h,2124 :: 		LCD_OUTCONST(3,1,"TRANSICION ENTRADA");
0x6D46	0x0E03      	MOVLW       3
0x6D48	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x6D4A	0x0E01      	MOVLW       1
0x6D4C	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x6D4E	0x0E0C      	MOVLW       ?lstr_98_MyProject
0x6D50	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x6D52	0x0ED6      	MOVLW       hi_addr(?lstr_98_MyProject)
0x6D54	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x6D56	0x0E00      	MOVLW       higher_addr(?lstr_98_MyProject)
0x6D58	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x6D5A	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,2125 :: 		if((!SENSOR1)/*(!SENSOR1 | !SENSOR3) | (!SENSOR3 | !SENSOR5) | (!SENSOR1 | !SENSOR5)*/){
0x6D5E	0xB881      	BTFSC       PORTB, 4 
0x6D60	0xD00A      	BRA         L_transicionEntBP6475
;rutinasensores_v4(mstr-slv).h,2126 :: 		lcd_cmd(_LCD_CLEAR);
0x6D62	0x0E01      	MOVLW       1
0x6D64	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x6D66	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2127 :: 		return debugEstadoB = TRANSICION;
0x6D6A	0x0E02      	MOVLW       2
0x6D6C	0x0101      	MOVLB       1
0x6D6E	0x6F3D      	MOVWF       _debugEstadoB, 1
0x6D70	0x0E02      	MOVLW       2
0x6D72	0x6E00      	MOVWF       R0 
0x6D74	0xD020      	BRA         L_end_transicionEntBP6
;rutinasensores_v4(mstr-slv).h,2128 :: 		}
L_transicionEntBP6475:
;rutinasensores_v4(mstr-slv).h,2129 :: 		if(SENSOR2 & SENSOR4 & SENSOR6 & SENSOR1){
0x6D76	0xA883      	BTFSS       PORTD, 4 
0x6D78	0xD004      	BRA         L__transicionEntBP62155
0x6D7A	0xA681      	BTFSS       PORTB, 3 
0x6D7C	0xD002      	BRA         L__transicionEntBP62155
0x6D7E	0x80D8      	BSF         STATUS, 0 
0x6D80	0xD001      	BRA         L__transicionEntBP62156
L__transicionEntBP62155:
0x6D82	0x90D8      	BCF         STATUS, 0 
L__transicionEntBP62156:
0x6D84	0xE304      	BNC         L__transicionEntBP62157
0x6D86	0xA281      	BTFSS       PORTB, 1 
0x6D88	0xD002      	BRA         L__transicionEntBP62157
0x6D8A	0x8001      	BSF         R1, 0 
0x6D8C	0xD001      	BRA         L__transicionEntBP62158
L__transicionEntBP62157:
0x6D8E	0x9001      	BCF         R1, 0 
L__transicionEntBP62158:
0x6D90	0xA001      	BTFSS       R1, 0 
0x6D92	0xD004      	BRA         L__transicionEntBP62159
0x6D94	0xA881      	BTFSS       PORTB, 4 
0x6D96	0xD002      	BRA         L__transicionEntBP62159
0x6D98	0x80D8      	BSF         STATUS, 0 
0x6D9A	0xD001      	BRA         L__transicionEntBP62160
L__transicionEntBP62159:
0x6D9C	0x90D8      	BCF         STATUS, 0 
L__transicionEntBP62160:
0x6D9E	0xE30B      	BNC         L_transicionEntBP6476
;rutinasensores_v4(mstr-slv).h,2130 :: 		lcd_cmd(_LCD_CLEAR);
0x6DA0	0x0E01      	MOVLW       1
0x6DA2	0x0102      	MOVLB       2
0x6DA4	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x6DA6	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,2131 :: 		return debugEstadoB = ENTRO;
0x6DAA	0x0E03      	MOVLW       3
0x6DAC	0x0101      	MOVLB       1
0x6DAE	0x6F3D      	MOVWF       _debugEstadoB, 1
0x6DB0	0x0E03      	MOVLW       3
0x6DB2	0x6E00      	MOVWF       R0 
0x6DB4	0xD000      	BRA         L_end_transicionEntBP6
;rutinasensores_v4(mstr-slv).h,2132 :: 		}
L_transicionEntBP6476:
;rutinasensores_v4(mstr-slv).h,2133 :: 		}
L_transicionEntBP6474:
;rutinasensores_v4(mstr-slv).h,2134 :: 		}
L_end_transicionEntBP6:
0x6DB6	0x0012      	RETURN      0
; end of _transicionEntBP6
_SDIV3232L:
;__Lib_Math.c,553 :: 		
;__Lib_Math.c,563 :: 		
0x6DB8	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,564 :: 		
0x6DBA	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,565 :: 		
0x6DBC	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,566 :: 		
0x6DBE	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,567 :: 		
0x6DC0	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,568 :: 		
0x6DC2	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,569 :: 		
0x6DC4	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,570 :: 		
0x6DC6	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,571 :: 		
0x6DC8	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,572 :: 		
0x6DCA	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,573 :: 		
0x6DCC	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,574 :: 		
0x6DCE	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,575 :: 		
0x6DD0	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,576 :: 		
0x6DD2	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,577 :: 		
0x6DD4	0x3603      	RLCF        R3, 1, 0
;__Lib_Math.c,579 :: 		
0x6DD6	0x0E07      	MOVLW       7
;__Lib_Math.c,580 :: 		
0x6DD8	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,582 :: 		
LOOPS3232A:
;__Lib_Math.c,583 :: 		
0x6DDA	0x3403      	RLCF        R3, 0, 0
;__Lib_Math.c,584 :: 		
0x6DDC	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,585 :: 		
0x6DDE	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,586 :: 		
0x6DE0	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,587 :: 		
0x6DE2	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,588 :: 		
0x6DE4	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,589 :: 		
0x6DE6	0xA003      	BTFSS       R3, 0, 0
;__Lib_Math.c,590 :: 		
0x6DE8	0xD00E      	BRA         SADD22LA
;__Lib_Math.c,592 :: 		
0x6DEA	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,593 :: 		
0x6DEC	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,594 :: 		
0x6DEE	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,595 :: 		
0x6DF0	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,596 :: 		
0x6DF2	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,597 :: 		
0x6DF4	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,598 :: 		
0x6DF6	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,599 :: 		
0x6DF8	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,600 :: 		
0x6DFA	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,601 :: 		
0x6DFC	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,602 :: 		
0x6DFE	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,603 :: 		
0x6E00	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,604 :: 		
0x6E02	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,605 :: 		
0x6E04	0xD00D      	BRA         SOK22LA
;__Lib_Math.c,607 :: 		
SADD22LA:
;__Lib_Math.c,608 :: 		
0x6E06	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,609 :: 		
0x6E08	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,610 :: 		
0x6E0A	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,611 :: 		
0x6E0C	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,612 :: 		
0x6E0E	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,613 :: 		
0x6E10	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,614 :: 		
0x6E12	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,615 :: 		
0x6E14	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,616 :: 		
0x6E16	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,617 :: 		
0x6E18	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,618 :: 		
0x6E1A	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,619 :: 		
0x6E1C	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,620 :: 		
0x6E1E	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,622 :: 		
SOK22LA:
;__Lib_Math.c,623 :: 		
0x6E20	0x3603      	RLCF        R3, 1, 0
;__Lib_Math.c,625 :: 		
0x6E22	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,626 :: 		
0x6E24	0xD7DA      	BRA         LOOPS3232A
;__Lib_Math.c,628 :: 		
0x6E26	0x3402      	RLCF        R2, 0, 0
;__Lib_Math.c,629 :: 		
0x6E28	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,630 :: 		
0x6E2A	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,631 :: 		
0x6E2C	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,632 :: 		
0x6E2E	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,633 :: 		
0x6E30	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,634 :: 		
0x6E32	0xA003      	BTFSS       R3, 0, 0
;__Lib_Math.c,635 :: 		
0x6E34	0xD00E      	BRA         SADD22L8
;__Lib_Math.c,637 :: 		
0x6E36	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,638 :: 		
0x6E38	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,639 :: 		
0x6E3A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,640 :: 		
0x6E3C	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,641 :: 		
0x6E3E	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,642 :: 		
0x6E40	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,643 :: 		
0x6E42	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,644 :: 		
0x6E44	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,645 :: 		
0x6E46	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,646 :: 		
0x6E48	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,647 :: 		
0x6E4A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,648 :: 		
0x6E4C	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,649 :: 		
0x6E4E	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,650 :: 		
0x6E50	0xD00D      	BRA         SOK22L8
;__Lib_Math.c,652 :: 		
SADD22L8:
;__Lib_Math.c,653 :: 		
0x6E52	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,654 :: 		
0x6E54	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,655 :: 		
0x6E56	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,656 :: 		
0x6E58	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,657 :: 		
0x6E5A	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,658 :: 		
0x6E5C	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,659 :: 		
0x6E5E	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,660 :: 		
0x6E60	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,661 :: 		
0x6E62	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,662 :: 		
0x6E64	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,663 :: 		
0x6E66	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,664 :: 		
0x6E68	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,665 :: 		
0x6E6A	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,667 :: 		
SOK22L8:
;__Lib_Math.c,668 :: 		
0x6E6C	0x3602      	RLCF        R2, 1, 0
;__Lib_Math.c,670 :: 		
0x6E6E	0x0E07      	MOVLW       7
;__Lib_Math.c,671 :: 		
0x6E70	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,673 :: 		
LOOPS3232B:
;__Lib_Math.c,674 :: 		
0x6E72	0x3402      	RLCF        R2, 0, 0
;__Lib_Math.c,675 :: 		
0x6E74	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,676 :: 		
0x6E76	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,677 :: 		
0x6E78	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,678 :: 		
0x6E7A	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,679 :: 		
0x6E7C	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,680 :: 		
0x6E7E	0xA002      	BTFSS       R2, 0, 0
;__Lib_Math.c,681 :: 		
0x6E80	0xD00E      	BRA         SADD22LB
;__Lib_Math.c,683 :: 		
0x6E82	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,684 :: 		
0x6E84	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,685 :: 		
0x6E86	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,686 :: 		
0x6E88	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,687 :: 		
0x6E8A	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,688 :: 		
0x6E8C	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,689 :: 		
0x6E8E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,690 :: 		
0x6E90	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,691 :: 		
0x6E92	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,692 :: 		
0x6E94	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,693 :: 		
0x6E96	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,694 :: 		
0x6E98	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,695 :: 		
0x6E9A	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,696 :: 		
0x6E9C	0xD00D      	BRA         SOK22LB
;__Lib_Math.c,698 :: 		
SADD22LB:
;__Lib_Math.c,699 :: 		
0x6E9E	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,700 :: 		
0x6EA0	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,701 :: 		
0x6EA2	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,702 :: 		
0x6EA4	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,703 :: 		
0x6EA6	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,704 :: 		
0x6EA8	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,705 :: 		
0x6EAA	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,706 :: 		
0x6EAC	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,707 :: 		
0x6EAE	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,708 :: 		
0x6EB0	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,709 :: 		
0x6EB2	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,710 :: 		
0x6EB4	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,711 :: 		
0x6EB6	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,713 :: 		
SOK22LB:
;__Lib_Math.c,714 :: 		
0x6EB8	0x3602      	RLCF        R2, 1, 0
;__Lib_Math.c,716 :: 		
0x6EBA	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,717 :: 		
0x6EBC	0xD7DA      	BRA         LOOPS3232B
;__Lib_Math.c,719 :: 		
0x6EBE	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,720 :: 		
0x6EC0	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,721 :: 		
0x6EC2	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,722 :: 		
0x6EC4	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,723 :: 		
0x6EC6	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,724 :: 		
0x6EC8	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,725 :: 		
0x6ECA	0xA002      	BTFSS       R2, 0, 0
;__Lib_Math.c,726 :: 		
0x6ECC	0xD00E      	BRA         SADD22L16
;__Lib_Math.c,728 :: 		
0x6ECE	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,729 :: 		
0x6ED0	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,730 :: 		
0x6ED2	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,731 :: 		
0x6ED4	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,732 :: 		
0x6ED6	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,733 :: 		
0x6ED8	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,734 :: 		
0x6EDA	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,735 :: 		
0x6EDC	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,736 :: 		
0x6EDE	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,737 :: 		
0x6EE0	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,738 :: 		
0x6EE2	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,739 :: 		
0x6EE4	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,740 :: 		
0x6EE6	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,741 :: 		
0x6EE8	0xD00D      	BRA         SOK22L16
;__Lib_Math.c,743 :: 		
SADD22L16:
;__Lib_Math.c,744 :: 		
0x6EEA	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,745 :: 		
0x6EEC	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,746 :: 		
0x6EEE	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,747 :: 		
0x6EF0	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,748 :: 		
0x6EF2	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,749 :: 		
0x6EF4	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,750 :: 		
0x6EF6	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,751 :: 		
0x6EF8	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,752 :: 		
0x6EFA	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,753 :: 		
0x6EFC	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,754 :: 		
0x6EFE	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,755 :: 		
0x6F00	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,756 :: 		
0x6F02	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,758 :: 		
SOK22L16:
;__Lib_Math.c,759 :: 		
0x6F04	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,761 :: 		
0x6F06	0x0E07      	MOVLW       7
;__Lib_Math.c,762 :: 		
0x6F08	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,764 :: 		
LOOPS3232C:
;__Lib_Math.c,765 :: 		
0x6F0A	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,766 :: 		
0x6F0C	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,767 :: 		
0x6F0E	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,768 :: 		
0x6F10	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,769 :: 		
0x6F12	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,770 :: 		
0x6F14	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,771 :: 		
0x6F16	0xA001      	BTFSS       R1, 0, 0
;__Lib_Math.c,772 :: 		
0x6F18	0xD00E      	BRA         SADD22LC
;__Lib_Math.c,774 :: 		
0x6F1A	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,775 :: 		
0x6F1C	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,776 :: 		
0x6F1E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,777 :: 		
0x6F20	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,778 :: 		
0x6F22	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,779 :: 		
0x6F24	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,780 :: 		
0x6F26	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,781 :: 		
0x6F28	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,782 :: 		
0x6F2A	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,783 :: 		
0x6F2C	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,784 :: 		
0x6F2E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,785 :: 		
0x6F30	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,786 :: 		
0x6F32	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,787 :: 		
0x6F34	0xD00D      	BRA         SOK22LC
;__Lib_Math.c,789 :: 		
SADD22LC:
;__Lib_Math.c,790 :: 		
0x6F36	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,791 :: 		
0x6F38	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,792 :: 		
0x6F3A	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,793 :: 		
0x6F3C	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,794 :: 		
0x6F3E	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,795 :: 		
0x6F40	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,796 :: 		
0x6F42	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,797 :: 		
0x6F44	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,798 :: 		
0x6F46	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,799 :: 		
0x6F48	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,800 :: 		
0x6F4A	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,801 :: 		
0x6F4C	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,802 :: 		
0x6F4E	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,804 :: 		
SOK22LC:
;__Lib_Math.c,805 :: 		
0x6F50	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,807 :: 		
0x6F52	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,808 :: 		
0x6F54	0xD7DA      	BRA         LOOPS3232C
;__Lib_Math.c,810 :: 		
0x6F56	0x3400      	RLCF        R0, 0, 0
;__Lib_Math.c,811 :: 		
0x6F58	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,812 :: 		
0x6F5A	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,813 :: 		
0x6F5C	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,814 :: 		
0x6F5E	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,815 :: 		
0x6F60	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,816 :: 		
0x6F62	0xA001      	BTFSS       R1, 0, 0
;__Lib_Math.c,817 :: 		
0x6F64	0xD00E      	BRA         SADD22L24
;__Lib_Math.c,819 :: 		
0x6F66	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,820 :: 		
0x6F68	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,821 :: 		
0x6F6A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,822 :: 		
0x6F6C	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,823 :: 		
0x6F6E	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,824 :: 		
0x6F70	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,825 :: 		
0x6F72	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,826 :: 		
0x6F74	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,827 :: 		
0x6F76	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,828 :: 		
0x6F78	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,829 :: 		
0x6F7A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,830 :: 		
0x6F7C	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,831 :: 		
0x6F7E	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,832 :: 		
0x6F80	0xD00D      	BRA         SOK22L24
;__Lib_Math.c,834 :: 		
SADD22L24:
;__Lib_Math.c,835 :: 		
0x6F82	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,836 :: 		
0x6F84	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,837 :: 		
0x6F86	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,838 :: 		
0x6F88	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,839 :: 		
0x6F8A	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,840 :: 		
0x6F8C	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,841 :: 		
0x6F8E	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,842 :: 		
0x6F90	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,843 :: 		
0x6F92	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,844 :: 		
0x6F94	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,845 :: 		
0x6F96	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,846 :: 		
0x6F98	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,847 :: 		
0x6F9A	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,849 :: 		
SOK22L24:
;__Lib_Math.c,850 :: 		
0x6F9C	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,852 :: 		
0x6F9E	0x0E07      	MOVLW       7
;__Lib_Math.c,853 :: 		
0x6FA0	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,855 :: 		
LOOPS3232D:
;__Lib_Math.c,856 :: 		
0x6FA2	0x3400      	RLCF        R0, 0, 0
;__Lib_Math.c,857 :: 		
0x6FA4	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,858 :: 		
0x6FA6	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,859 :: 		
0x6FA8	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,860 :: 		
0x6FAA	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,861 :: 		
0x6FAC	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,862 :: 		
0x6FAE	0xA000      	BTFSS       R0, 0, 0
;__Lib_Math.c,863 :: 		
0x6FB0	0xD00E      	BRA         SADD22LD
;__Lib_Math.c,865 :: 		
0x6FB2	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,866 :: 		
0x6FB4	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,867 :: 		
0x6FB6	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,868 :: 		
0x6FB8	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,869 :: 		
0x6FBA	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,870 :: 		
0x6FBC	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,871 :: 		
0x6FBE	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,872 :: 		
0x6FC0	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,873 :: 		
0x6FC2	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,874 :: 		
0x6FC4	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,875 :: 		
0x6FC6	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,876 :: 		
0x6FC8	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,877 :: 		
0x6FCA	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,878 :: 		
0x6FCC	0xD00D      	BRA         SOK22LD
;__Lib_Math.c,880 :: 		
SADD22LD:
;__Lib_Math.c,881 :: 		
0x6FCE	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,882 :: 		
0x6FD0	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,883 :: 		
0x6FD2	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,884 :: 		
0x6FD4	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,885 :: 		
0x6FD6	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,886 :: 		
0x6FD8	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,887 :: 		
0x6FDA	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,888 :: 		
0x6FDC	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,889 :: 		
0x6FDE	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,890 :: 		
0x6FE0	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,891 :: 		
0x6FE2	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,893 :: 		
0x6FE4	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,894 :: 		
0x6FE6	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,896 :: 		
SOK22LD:
;__Lib_Math.c,897 :: 		
0x6FE8	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,899 :: 		
0x6FEA	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,900 :: 		
0x6FEC	0xD7DA      	BRA         LOOPS3232D
;__Lib_Math.c,902 :: 		
0x6FEE	0xB000      	BTFSC       R0, 0, 0
;__Lib_Math.c,903 :: 		
0x6FF0	0xD00E      	BRA         SOK22L
;__Lib_Math.c,904 :: 		
0x6FF2	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,905 :: 		
0x6FF4	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,906 :: 		
0x6FF6	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,907 :: 		
0x6FF8	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,908 :: 		
0x6FFA	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,909 :: 		
0x6FFC	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,910 :: 		
0x6FFE	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,911 :: 		
0x7000	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,912 :: 		
0x7002	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,913 :: 		
0x7004	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,914 :: 		
0x7006	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,915 :: 		
0x7008	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,916 :: 		
0x700A	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,917 :: 		
0x700C	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,918 :: 		
SOK22L:
;__Lib_Math.c,920 :: 		
L_end_SDIV3232L:
0x700E	0x0012      	RETURN      0
; end of _SDIV3232L
_transicionEB:
;rutinasensores_v4(mstr-slv).h,659 :: 		short transicionEB(short estado){
;rutinasensores_v4(mstr-slv).h,660 :: 		if(estado == TRANSICION){
0x7010	0x0102      	MOVLB       2
0x7012	0x5114      	MOVF        FARG_transicionEB_estado, 0, 1
0x7014	0x0A02      	XORLW       2
0x7016	0xA4D8      	BTFSS       STATUS, 2 
0x7018	0xD060      	BRA         L_transicionEB217
;rutinasensores_v4(mstr-slv).h,661 :: 		LCD_OUTCONST(3,1,"TRANSICION");
0x701A	0x0E03      	MOVLW       3
0x701C	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x701E	0x0E01      	MOVLW       1
0x7020	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x7022	0x0EF2      	MOVLW       ?lstr_17_MyProject
0x7024	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x7026	0x0ED8      	MOVLW       hi_addr(?lstr_17_MyProject)
0x7028	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x702A	0x0E00      	MOVLW       higher_addr(?lstr_17_MyProject)
0x702C	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x702E	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,662 :: 		if((SENSOR3 & SENSOR5)){
0x7032	0xA481      	BTFSS       PORTB, 2 
0x7034	0xD004      	BRA         L__transicionEB1000
0x7036	0xA081      	BTFSS       PORTB, 0 
0x7038	0xD002      	BRA         L__transicionEB1000
0x703A	0x80D8      	BSF         STATUS, 0 
0x703C	0xD001      	BRA         L__transicionEB1001
L__transicionEB1000:
0x703E	0x90D8      	BCF         STATUS, 0 
L__transicionEB1001:
0x7040	0xE30A      	BNC         L_transicionEB218
;rutinasensores_v4(mstr-slv).h,663 :: 		lcd_cmd(_LCD_CLEAR);
0x7042	0x0E01      	MOVLW       1
0x7044	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x7046	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,664 :: 		return debugEstadoB = TRANENT;
0x704A	0x0E07      	MOVLW       7
0x704C	0x0101      	MOVLB       1
0x704E	0x6F3D      	MOVWF       _debugEstadoB, 1
0x7050	0x0E07      	MOVLW       7
0x7052	0x6E00      	MOVWF       R0 
0x7054	0xD042      	BRA         L_end_transicionEB
;rutinasensores_v4(mstr-slv).h,665 :: 		}
L_transicionEB218:
;rutinasensores_v4(mstr-slv).h,666 :: 		if((SENSOR2 & SENSOR4 & SENSOR6 & !SENSOR3) | (SENSOR2 & SENSOR4 & SENSOR6 & !SENSOR5)){
0x7056	0xA883      	BTFSS       PORTD, 4 
0x7058	0xD004      	BRA         L__transicionEB1002
0x705A	0xA681      	BTFSS       PORTB, 3 
0x705C	0xD002      	BRA         L__transicionEB1002
0x705E	0x8401      	BSF         R1, 2 
0x7060	0xD001      	BRA         L__transicionEB1003
L__transicionEB1002:
0x7062	0x9401      	BCF         R1, 2 
L__transicionEB1003:
0x7064	0xA401      	BTFSS       R1, 2 
0x7066	0xD004      	BRA         L__transicionEB1004
0x7068	0xA281      	BTFSS       PORTB, 1 
0x706A	0xD002      	BRA         L__transicionEB1004
0x706C	0x8001      	BSF         R1, 0 
0x706E	0xD001      	BRA         L__transicionEB1005
L__transicionEB1004:
0x7070	0x9001      	BCF         R1, 0 
L__transicionEB1005:
0x7072	0xB481      	BTFSC       PORTB, 2 
0x7074	0xD002      	BRA         L__transicionEB1006
0x7076	0x80D8      	BSF         STATUS, 0 
0x7078	0xD001      	BRA         L__transicionEB1007
L__transicionEB1006:
0x707A	0x90D8      	BCF         STATUS, 0 
L__transicionEB1007:
0x707C	0xA001      	BTFSS       R1, 0 
0x707E	0xD003      	BRA         L__transicionEB1008
0x7080	0xE302      	BNC         L__transicionEB1008
0x7082	0x8201      	BSF         R1, 1 
0x7084	0xD001      	BRA         L__transicionEB1009
L__transicionEB1008:
0x7086	0x9201      	BCF         R1, 1 
L__transicionEB1009:
0x7088	0xB401      	BTFSC       R1, 2 
0x708A	0xD002      	BRA         L__transicionEB1010
0x708C	0x90D8      	BCF         STATUS, 0 
0x708E	0xD001      	BRA         L__transicionEB1011
L__transicionEB1010:
0x7090	0x80D8      	BSF         STATUS, 0 
L__transicionEB1011:
0x7092	0xE304      	BNC         L__transicionEB1012
0x7094	0xA281      	BTFSS       PORTB, 1 
0x7096	0xD002      	BRA         L__transicionEB1012
0x7098	0x8001      	BSF         R1, 0 
0x709A	0xD001      	BRA         L__transicionEB1013
L__transicionEB1012:
0x709C	0x9001      	BCF         R1, 0 
L__transicionEB1013:
0x709E	0xB081      	BTFSC       PORTB, 0 
0x70A0	0xD002      	BRA         L__transicionEB1014
0x70A2	0x80D8      	BSF         STATUS, 0 
0x70A4	0xD001      	BRA         L__transicionEB1015
L__transicionEB1014:
0x70A6	0x90D8      	BCF         STATUS, 0 
L__transicionEB1015:
0x70A8	0xA001      	BTFSS       R1, 0 
0x70AA	0xD003      	BRA         L__transicionEB1016
0x70AC	0xE302      	BNC         L__transicionEB1016
0x70AE	0x8001      	BSF         R1, 0 
0x70B0	0xD001      	BRA         L__transicionEB1017
L__transicionEB1016:
0x70B2	0x9001      	BCF         R1, 0 
L__transicionEB1017:
0x70B4	0xB201      	BTFSC       R1, 1 
0x70B6	0xD004      	BRA         L__transicionEB1018
0x70B8	0xB001      	BTFSC       R1, 0 
0x70BA	0xD002      	BRA         L__transicionEB1018
0x70BC	0x90D8      	BCF         STATUS, 0 
0x70BE	0xD001      	BRA         L__transicionEB1019
L__transicionEB1018:
0x70C0	0x80D8      	BSF         STATUS, 0 
L__transicionEB1019:
0x70C2	0xE30B      	BNC         L_transicionEB219
;rutinasensores_v4(mstr-slv).h,667 :: 		lcd_cmd(_LCD_CLEAR);
0x70C4	0x0E01      	MOVLW       1
0x70C6	0x0102      	MOVLB       2
0x70C8	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x70CA	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,668 :: 		return debugEstadoB = ENTRANDO;
0x70CE	0x0E01      	MOVLW       1
0x70D0	0x0101      	MOVLB       1
0x70D2	0x6F3D      	MOVWF       _debugEstadoB, 1
0x70D4	0x0E01      	MOVLW       1
0x70D6	0x6E00      	MOVWF       R0 
0x70D8	0xD000      	BRA         L_end_transicionEB
;rutinasensores_v4(mstr-slv).h,669 :: 		}
L_transicionEB219:
;rutinasensores_v4(mstr-slv).h,670 :: 		}
L_transicionEB217:
;rutinasensores_v4(mstr-slv).h,671 :: 		}
L_end_transicionEB:
0x70DA	0x0012      	RETURN      0
; end of _transicionEB
_transicionEntBT:
;rutinasensores_v4(mstr-slv).h,961 :: 		short transicionEntBT(short estado){
;rutinasensores_v4(mstr-slv).h,962 :: 		if(estado == TRANENT){
0x70DC	0x0102      	MOVLB       2
0x70DE	0x5114      	MOVF        FARG_transicionEntBT_estado, 0, 1
0x70E0	0x0A07      	XORLW       7
0x70E2	0xE142      	BNZ         L_transicionEntBT270
;rutinasensores_v4(mstr-slv).h,963 :: 		LCD_OUTCONST(3,1,"TRANSICION ENTRADA");
0x70E4	0x0E03      	MOVLW       3
0x70E6	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x70E8	0x0E01      	MOVLW       1
0x70EA	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x70EC	0x0E28      	MOVLW       ?lstr_34_MyProject
0x70EE	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x70F0	0x0ED5      	MOVLW       hi_addr(?lstr_34_MyProject)
0x70F2	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x70F4	0x0E00      	MOVLW       higher_addr(?lstr_34_MyProject)
0x70F6	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x70F8	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,964 :: 		if((!SENSOR1 & !SENSOR5)/*(!SENSOR1 | !SENSOR3) | (!SENSOR3 | !SENSOR5) | (!SENSOR1 | !SENSOR5)*/){
0x70FC	0xB881      	BTFSC       PORTB, 4 
0x70FE	0xD002      	BRA         L__transicionEntBT1283
0x7100	0x8001      	BSF         R1, 0 
0x7102	0xD001      	BRA         L__transicionEntBT1284
L__transicionEntBT1283:
0x7104	0x9001      	BCF         R1, 0 
L__transicionEntBT1284:
0x7106	0xB081      	BTFSC       PORTB, 0 
0x7108	0xD002      	BRA         L__transicionEntBT1285
0x710A	0x80D8      	BSF         STATUS, 0 
0x710C	0xD001      	BRA         L__transicionEntBT1286
L__transicionEntBT1285:
0x710E	0x90D8      	BCF         STATUS, 0 
L__transicionEntBT1286:
0x7110	0xA001      	BTFSS       R1, 0 
0x7112	0xD003      	BRA         L__transicionEntBT1287
0x7114	0xE302      	BNC         L__transicionEntBT1287
0x7116	0x8001      	BSF         R1, 0 
0x7118	0xD001      	BRA         L__transicionEntBT1288
L__transicionEntBT1287:
0x711A	0x9001      	BCF         R1, 0 
L__transicionEntBT1288:
0x711C	0xA001      	BTFSS       R1, 0 
0x711E	0xD00A      	BRA         L_transicionEntBT271
;rutinasensores_v4(mstr-slv).h,965 :: 		lcd_cmd(_LCD_CLEAR);
0x7120	0x0E01      	MOVLW       1
0x7122	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x7124	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,966 :: 		return debugEstadoB = TRANSICION;
0x7128	0x0E02      	MOVLW       2
0x712A	0x0101      	MOVLB       1
0x712C	0x6F3D      	MOVWF       _debugEstadoB, 1
0x712E	0x0E02      	MOVLW       2
0x7130	0x6E00      	MOVWF       R0 
0x7132	0xD01A      	BRA         L_end_transicionEntBT
;rutinasensores_v4(mstr-slv).h,967 :: 		}
L_transicionEntBT271:
;rutinasensores_v4(mstr-slv).h,968 :: 		if(/*(SENSOR2 & SENSOR4) | (SENSOR4 & SENSOR6) | (SENSOR2 & SENSOR6) | */(SENSOR2 & SENSOR4 & SENSOR6)){
0x7134	0xA883      	BTFSS       PORTD, 4 
0x7136	0xD004      	BRA         L__transicionEntBT1289
0x7138	0xA681      	BTFSS       PORTB, 3 
0x713A	0xD002      	BRA         L__transicionEntBT1289
0x713C	0x80D8      	BSF         STATUS, 0 
0x713E	0xD001      	BRA         L__transicionEntBT1290
L__transicionEntBT1289:
0x7140	0x90D8      	BCF         STATUS, 0 
L__transicionEntBT1290:
0x7142	0xE304      	BNC         L__transicionEntBT1291
0x7144	0xA281      	BTFSS       PORTB, 1 
0x7146	0xD002      	BRA         L__transicionEntBT1291
0x7148	0x8001      	BSF         R1, 0 
0x714A	0xD001      	BRA         L__transicionEntBT1292
L__transicionEntBT1291:
0x714C	0x9001      	BCF         R1, 0 
L__transicionEntBT1292:
0x714E	0xA001      	BTFSS       R1, 0 
0x7150	0xD00B      	BRA         L_transicionEntBT272
;rutinasensores_v4(mstr-slv).h,969 :: 		lcd_cmd(_LCD_CLEAR);
0x7152	0x0E01      	MOVLW       1
0x7154	0x0102      	MOVLB       2
0x7156	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x7158	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,970 :: 		return debugEstadoB = ENTRO;
0x715C	0x0E03      	MOVLW       3
0x715E	0x0101      	MOVLB       1
0x7160	0x6F3D      	MOVWF       _debugEstadoB, 1
0x7162	0x0E03      	MOVLW       3
0x7164	0x6E00      	MOVWF       R0 
0x7166	0xD000      	BRA         L_end_transicionEntBT
;rutinasensores_v4(mstr-slv).h,971 :: 		}
L_transicionEntBT272:
;rutinasensores_v4(mstr-slv).h,972 :: 		}
L_transicionEntBT270:
;rutinasensores_v4(mstr-slv).h,973 :: 		}
L_end_transicionEntBT:
0x7168	0x0012      	RETURN      0
; end of _transicionEntBT
_transicionEBT:
;rutinasensores_v4(mstr-slv).h,947 :: 		short transicionEBT(short estado){
;rutinasensores_v4(mstr-slv).h,948 :: 		if(estado == TRANSICION){
0x716A	0x0102      	MOVLB       2
0x716C	0x5114      	MOVF        FARG_transicionEBT_estado, 0, 1
0x716E	0x0A02      	XORLW       2
0x7170	0xA4D8      	BTFSS       STATUS, 2 
0x7172	0xD060      	BRA         L_transicionEBT267
;rutinasensores_v4(mstr-slv).h,949 :: 		LCD_OUTCONST(3,1,"TRANSICION");
0x7174	0x0E03      	MOVLW       3
0x7176	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x7178	0x0E01      	MOVLW       1
0x717A	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x717C	0x0E08      	MOVLW       ?lstr_33_MyProject
0x717E	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x7180	0x0ED9      	MOVLW       hi_addr(?lstr_33_MyProject)
0x7182	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x7184	0x0E00      	MOVLW       higher_addr(?lstr_33_MyProject)
0x7186	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x7188	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,950 :: 		if((SENSOR1 & SENSOR5)){
0x718C	0xA881      	BTFSS       PORTB, 4 
0x718E	0xD004      	BRA         L__transicionEBT1262
0x7190	0xA081      	BTFSS       PORTB, 0 
0x7192	0xD002      	BRA         L__transicionEBT1262
0x7194	0x80D8      	BSF         STATUS, 0 
0x7196	0xD001      	BRA         L__transicionEBT1263
L__transicionEBT1262:
0x7198	0x90D8      	BCF         STATUS, 0 
L__transicionEBT1263:
0x719A	0xE30A      	BNC         L_transicionEBT268
;rutinasensores_v4(mstr-slv).h,951 :: 		lcd_cmd(_LCD_CLEAR);
0x719C	0x0E01      	MOVLW       1
0x719E	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x71A0	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,952 :: 		return debugEstadoB = TRANENT;
0x71A4	0x0E07      	MOVLW       7
0x71A6	0x0101      	MOVLB       1
0x71A8	0x6F3D      	MOVWF       _debugEstadoB, 1
0x71AA	0x0E07      	MOVLW       7
0x71AC	0x6E00      	MOVWF       R0 
0x71AE	0xD042      	BRA         L_end_transicionEBT
;rutinasensores_v4(mstr-slv).h,953 :: 		}
L_transicionEBT268:
;rutinasensores_v4(mstr-slv).h,954 :: 		if((SENSOR2 & SENSOR4 & SENSOR6 & !SENSOR1) | (SENSOR2 & SENSOR4 & SENSOR6 & !SENSOR5)){
0x71B0	0xA883      	BTFSS       PORTD, 4 
0x71B2	0xD004      	BRA         L__transicionEBT1264
0x71B4	0xA681      	BTFSS       PORTB, 3 
0x71B6	0xD002      	BRA         L__transicionEBT1264
0x71B8	0x8401      	BSF         R1, 2 
0x71BA	0xD001      	BRA         L__transicionEBT1265
L__transicionEBT1264:
0x71BC	0x9401      	BCF         R1, 2 
L__transicionEBT1265:
0x71BE	0xA401      	BTFSS       R1, 2 
0x71C0	0xD004      	BRA         L__transicionEBT1266
0x71C2	0xA281      	BTFSS       PORTB, 1 
0x71C4	0xD002      	BRA         L__transicionEBT1266
0x71C6	0x8001      	BSF         R1, 0 
0x71C8	0xD001      	BRA         L__transicionEBT1267
L__transicionEBT1266:
0x71CA	0x9001      	BCF         R1, 0 
L__transicionEBT1267:
0x71CC	0xB881      	BTFSC       PORTB, 4 
0x71CE	0xD002      	BRA         L__transicionEBT1268
0x71D0	0x80D8      	BSF         STATUS, 0 
0x71D2	0xD001      	BRA         L__transicionEBT1269
L__transicionEBT1268:
0x71D4	0x90D8      	BCF         STATUS, 0 
L__transicionEBT1269:
0x71D6	0xA001      	BTFSS       R1, 0 
0x71D8	0xD003      	BRA         L__transicionEBT1270
0x71DA	0xE302      	BNC         L__transicionEBT1270
0x71DC	0x8201      	BSF         R1, 1 
0x71DE	0xD001      	BRA         L__transicionEBT1271
L__transicionEBT1270:
0x71E0	0x9201      	BCF         R1, 1 
L__transicionEBT1271:
0x71E2	0xB401      	BTFSC       R1, 2 
0x71E4	0xD002      	BRA         L__transicionEBT1272
0x71E6	0x90D8      	BCF         STATUS, 0 
0x71E8	0xD001      	BRA         L__transicionEBT1273
L__transicionEBT1272:
0x71EA	0x80D8      	BSF         STATUS, 0 
L__transicionEBT1273:
0x71EC	0xE304      	BNC         L__transicionEBT1274
0x71EE	0xA281      	BTFSS       PORTB, 1 
0x71F0	0xD002      	BRA         L__transicionEBT1274
0x71F2	0x8001      	BSF         R1, 0 
0x71F4	0xD001      	BRA         L__transicionEBT1275
L__transicionEBT1274:
0x71F6	0x9001      	BCF         R1, 0 
L__transicionEBT1275:
0x71F8	0xB081      	BTFSC       PORTB, 0 
0x71FA	0xD002      	BRA         L__transicionEBT1276
0x71FC	0x80D8      	BSF         STATUS, 0 
0x71FE	0xD001      	BRA         L__transicionEBT1277
L__transicionEBT1276:
0x7200	0x90D8      	BCF         STATUS, 0 
L__transicionEBT1277:
0x7202	0xA001      	BTFSS       R1, 0 
0x7204	0xD003      	BRA         L__transicionEBT1278
0x7206	0xE302      	BNC         L__transicionEBT1278
0x7208	0x8001      	BSF         R1, 0 
0x720A	0xD001      	BRA         L__transicionEBT1279
L__transicionEBT1278:
0x720C	0x9001      	BCF         R1, 0 
L__transicionEBT1279:
0x720E	0xB201      	BTFSC       R1, 1 
0x7210	0xD004      	BRA         L__transicionEBT1280
0x7212	0xB001      	BTFSC       R1, 0 
0x7214	0xD002      	BRA         L__transicionEBT1280
0x7216	0x90D8      	BCF         STATUS, 0 
0x7218	0xD001      	BRA         L__transicionEBT1281
L__transicionEBT1280:
0x721A	0x80D8      	BSF         STATUS, 0 
L__transicionEBT1281:
0x721C	0xE30B      	BNC         L_transicionEBT269
;rutinasensores_v4(mstr-slv).h,955 :: 		lcd_cmd(_LCD_CLEAR);
0x721E	0x0E01      	MOVLW       1
0x7220	0x0102      	MOVLB       2
0x7222	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x7224	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,956 :: 		return debugEstadoB = ENTRANDO;
0x7228	0x0E01      	MOVLW       1
0x722A	0x0101      	MOVLB       1
0x722C	0x6F3D      	MOVWF       _debugEstadoB, 1
0x722E	0x0E01      	MOVLW       1
0x7230	0x6E00      	MOVWF       R0 
0x7232	0xD000      	BRA         L_end_transicionEBT
;rutinasensores_v4(mstr-slv).h,957 :: 		}
L_transicionEBT269:
;rutinasensores_v4(mstr-slv).h,958 :: 		}
L_transicionEBT267:
;rutinasensores_v4(mstr-slv).h,959 :: 		}
L_end_transicionEBT:
0x7234	0x0012      	RETURN      0
; end of _transicionEBT
_entrandoB:
;rutinasensores_v4(mstr-slv).h,645 :: 		short entrandoB(short estado){
;rutinasensores_v4(mstr-slv).h,646 :: 		if(estado == ENTRANDO){
0x7236	0x0102      	MOVLB       2
0x7238	0x5114      	MOVF        FARG_entrandoB_estado, 0, 1
0x723A	0x0A01      	XORLW       1
0x723C	0xA4D8      	BTFSS       STATUS, 2 
0x723E	0xD062      	BRA         L_entrandoB214
;rutinasensores_v4(mstr-slv).h,647 :: 		LCD_OUTCONST(3,1,"ENTRANDO");
0x7240	0x0E03      	MOVLW       3
0x7242	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x7244	0x0E01      	MOVLW       1
0x7246	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x7248	0x0EB2      	MOVLW       ?lstr_16_MyProject
0x724A	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x724C	0x0EDA      	MOVLW       hi_addr(?lstr_16_MyProject)
0x724E	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x7250	0x0E00      	MOVLW       higher_addr(?lstr_16_MyProject)
0x7252	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x7254	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,648 :: 		if((SENSOR3 & SENSOR5)){
0x7258	0xA481      	BTFSS       PORTB, 2 
0x725A	0xD004      	BRA         L__entrandoB977
0x725C	0xA081      	BTFSS       PORTB, 0 
0x725E	0xD002      	BRA         L__entrandoB977
0x7260	0x80D8      	BSF         STATUS, 0 
0x7262	0xD001      	BRA         L__entrandoB978
L__entrandoB977:
0x7264	0x90D8      	BCF         STATUS, 0 
L__entrandoB978:
0x7266	0xE308      	BNC         L_entrandoB215
;rutinasensores_v4(mstr-slv).h,649 :: 		lcd_cmd(_LCD_CLEAR);
0x7268	0x0E01      	MOVLW       1
0x726A	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x726C	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,650 :: 		return debugEstadoB = ESPERA;
0x7270	0x0101      	MOVLB       1
0x7272	0x6B3D      	CLRF        _debugEstadoB, 1
0x7274	0x6A00      	CLRF        R0 
0x7276	0xD046      	BRA         L_end_entrandoB
;rutinasensores_v4(mstr-slv).h,651 :: 		}
L_entrandoB215:
;rutinasensores_v4(mstr-slv).h,652 :: 		if((!SENSOR2 & !SENSOR4) | (!SENSOR4 & !SENSOR6) | (!SENSOR2 & !SENSOR6)){
0x7278	0xB883      	BTFSC       PORTD, 4 
0x727A	0xD002      	BRA         L__entrandoB979
0x727C	0x8601      	BSF         R1, 3 
0x727E	0xD001      	BRA         L__entrandoB980
L__entrandoB979:
0x7280	0x9601      	BCF         R1, 3 
L__entrandoB980:
0x7282	0xB681      	BTFSC       PORTB, 3 
0x7284	0xD002      	BRA         L__entrandoB981
0x7286	0x8001      	BSF         R1, 0 
0x7288	0xD001      	BRA         L__entrandoB982
L__entrandoB981:
0x728A	0x9001      	BCF         R1, 0 
L__entrandoB982:
0x728C	0xA601      	BTFSS       R1, 3 
0x728E	0xD004      	BRA         L__entrandoB983
0x7290	0xA001      	BTFSS       R1, 0 
0x7292	0xD002      	BRA         L__entrandoB983
0x7294	0x8201      	BSF         R1, 1 
0x7296	0xD001      	BRA         L__entrandoB984
L__entrandoB983:
0x7298	0x9201      	BCF         R1, 1 
L__entrandoB984:
0x729A	0xB281      	BTFSC       PORTB, 1 
0x729C	0xD002      	BRA         L__entrandoB985
0x729E	0x8401      	BSF         R1, 2 
0x72A0	0xD001      	BRA         L__entrandoB986
L__entrandoB985:
0x72A2	0x9401      	BCF         R1, 2 
L__entrandoB986:
0x72A4	0xA001      	BTFSS       R1, 0 
0x72A6	0xD004      	BRA         L__entrandoB987
0x72A8	0xA401      	BTFSS       R1, 2 
0x72AA	0xD002      	BRA         L__entrandoB987
0x72AC	0x80D8      	BSF         STATUS, 0 
0x72AE	0xD001      	BRA         L__entrandoB988
L__entrandoB987:
0x72B0	0x90D8      	BCF         STATUS, 0 
L__entrandoB988:
0x72B2	0xB201      	BTFSC       R1, 1 
0x72B4	0xD003      	BRA         L__entrandoB989
0x72B6	0xE202      	BC          L__entrandoB989
0x72B8	0x9201      	BCF         R1, 1 
0x72BA	0xD001      	BRA         L__entrandoB990
L__entrandoB989:
0x72BC	0x8201      	BSF         R1, 1 
L__entrandoB990:
0x72BE	0xB601      	BTFSC       R1, 3 
0x72C0	0xD002      	BRA         L__entrandoB991
0x72C2	0x9001      	BCF         R1, 0 
0x72C4	0xD001      	BRA         L__entrandoB992
L__entrandoB991:
0x72C6	0x8001      	BSF         R1, 0 
L__entrandoB992:
0x72C8	0xB401      	BTFSC       R1, 2 
0x72CA	0xD002      	BRA         L__entrandoB993
0x72CC	0x90D8      	BCF         STATUS, 0 
0x72CE	0xD001      	BRA         L__entrandoB994
L__entrandoB993:
0x72D0	0x80D8      	BSF         STATUS, 0 
L__entrandoB994:
0x72D2	0xA001      	BTFSS       R1, 0 
0x72D4	0xD003      	BRA         L__entrandoB995
0x72D6	0xE302      	BNC         L__entrandoB995
0x72D8	0x8001      	BSF         R1, 0 
0x72DA	0xD001      	BRA         L__entrandoB996
L__entrandoB995:
0x72DC	0x9001      	BCF         R1, 0 
L__entrandoB996:
0x72DE	0xB201      	BTFSC       R1, 1 
0x72E0	0xD004      	BRA         L__entrandoB997
0x72E2	0xB001      	BTFSC       R1, 0 
0x72E4	0xD002      	BRA         L__entrandoB997
0x72E6	0x90D8      	BCF         STATUS, 0 
0x72E8	0xD001      	BRA         L__entrandoB998
L__entrandoB997:
0x72EA	0x80D8      	BSF         STATUS, 0 
L__entrandoB998:
0x72EC	0xE30B      	BNC         L_entrandoB216
;rutinasensores_v4(mstr-slv).h,653 :: 		lcd_cmd(_LCD_CLEAR);
0x72EE	0x0E01      	MOVLW       1
0x72F0	0x0102      	MOVLB       2
0x72F2	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x72F4	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,654 :: 		return debugEstadoB = TRANSICION;
0x72F8	0x0E02      	MOVLW       2
0x72FA	0x0101      	MOVLB       1
0x72FC	0x6F3D      	MOVWF       _debugEstadoB, 1
0x72FE	0x0E02      	MOVLW       2
0x7300	0x6E00      	MOVWF       R0 
0x7302	0xD000      	BRA         L_end_entrandoB
;rutinasensores_v4(mstr-slv).h,655 :: 		}
L_entrandoB216:
;rutinasensores_v4(mstr-slv).h,656 :: 		}
L_entrandoB214:
;rutinasensores_v4(mstr-slv).h,657 :: 		}
L_end_entrandoB:
0x7304	0x0012      	RETURN      0
; end of _entrandoB
_esperaB:
;rutinasensores_v4(mstr-slv).h,629 :: 		short esperaB(short estado){
;rutinasensores_v4(mstr-slv).h,630 :: 		if(estado == ESPERA){
0x7306	0x0102      	MOVLB       2
0x7308	0x5114      	MOVF        FARG_esperaB_estado, 0, 1
0x730A	0x0A00      	XORLW       0
0x730C	0xE146      	BNZ         L_esperaB211
;rutinasensores_v4(mstr-slv).h,632 :: 		muestraEstatus();
0x730E	0xF008EC8B  	CALL        _muestraEstatus, 0
;rutinasensores_v4(mstr-slv).h,634 :: 		if((!SENSOR3 | !SENSOR5)){
0x7312	0xB481      	BTFSC       PORTB, 2 
0x7314	0xD002      	BRA         L__esperaB960
0x7316	0x8001      	BSF         R1, 0 
0x7318	0xD001      	BRA         L__esperaB961
L__esperaB960:
0x731A	0x9001      	BCF         R1, 0 
L__esperaB961:
0x731C	0xB081      	BTFSC       PORTB, 0 
0x731E	0xD002      	BRA         L__esperaB962
0x7320	0x80D8      	BSF         STATUS, 0 
0x7322	0xD001      	BRA         L__esperaB963
L__esperaB962:
0x7324	0x90D8      	BCF         STATUS, 0 
L__esperaB963:
0x7326	0xB001      	BTFSC       R1, 0 
0x7328	0xD003      	BRA         L__esperaB964
0x732A	0xE202      	BC          L__esperaB964
0x732C	0x9001      	BCF         R1, 0 
0x732E	0xD001      	BRA         L__esperaB965
L__esperaB964:
0x7330	0x8001      	BSF         R1, 0 
L__esperaB965:
0x7332	0xA001      	BTFSS       R1, 0 
0x7334	0xD00A      	BRA         L_esperaB212
;rutinasensores_v4(mstr-slv).h,635 :: 		lcd_cmd(_LCD_CLEAR);
0x7336	0x0E01      	MOVLW       1
0x7338	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x733A	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,636 :: 		return debugEstadoB = ENTRANDO;
0x733E	0x0E01      	MOVLW       1
0x7340	0x0101      	MOVLB       1
0x7342	0x6F3D      	MOVWF       _debugEstadoB, 1
0x7344	0x0E01      	MOVLW       1
0x7346	0x6E00      	MOVWF       R0 
0x7348	0xD028      	BRA         L_end_esperaB
;rutinasensores_v4(mstr-slv).h,637 :: 		}
L_esperaB212:
;rutinasensores_v4(mstr-slv).h,638 :: 		if((!SENSOR2 | !SENSOR4 | !SENSOR6)){
0x734A	0xB883      	BTFSC       PORTD, 4 
0x734C	0xD002      	BRA         L__esperaB966
0x734E	0x8001      	BSF         R1, 0 
0x7350	0xD001      	BRA         L__esperaB967
L__esperaB966:
0x7352	0x9001      	BCF         R1, 0 
L__esperaB967:
0x7354	0xB681      	BTFSC       PORTB, 3 
0x7356	0xD002      	BRA         L__esperaB968
0x7358	0x80D8      	BSF         STATUS, 0 
0x735A	0xD001      	BRA         L__esperaB969
L__esperaB968:
0x735C	0x90D8      	BCF         STATUS, 0 
L__esperaB969:
0x735E	0xB001      	BTFSC       R1, 0 
0x7360	0xD003      	BRA         L__esperaB970
0x7362	0xE202      	BC          L__esperaB970
0x7364	0x9001      	BCF         R1, 0 
0x7366	0xD001      	BRA         L__esperaB971
L__esperaB970:
0x7368	0x8001      	BSF         R1, 0 
L__esperaB971:
0x736A	0xB281      	BTFSC       PORTB, 1 
0x736C	0xD002      	BRA         L__esperaB972
0x736E	0x80D8      	BSF         STATUS, 0 
0x7370	0xD001      	BRA         L__esperaB973
L__esperaB972:
0x7372	0x90D8      	BCF         STATUS, 0 
L__esperaB973:
0x7374	0xB001      	BTFSC       R1, 0 
0x7376	0xD003      	BRA         L__esperaB974
0x7378	0xE202      	BC          L__esperaB974
0x737A	0x9001      	BCF         R1, 0 
0x737C	0xD001      	BRA         L__esperaB975
L__esperaB974:
0x737E	0x8001      	BSF         R1, 0 
L__esperaB975:
0x7380	0xA001      	BTFSS       R1, 0 
0x7382	0xD00B      	BRA         L_esperaB213
;rutinasensores_v4(mstr-slv).h,639 :: 		lcd_cmd(_LCD_CLEAR);
0x7384	0x0E01      	MOVLW       1
0x7386	0x0102      	MOVLB       2
0x7388	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x738A	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,640 :: 		return debugEstadoB = SALIENDO;
0x738E	0x0E04      	MOVLW       4
0x7390	0x0101      	MOVLB       1
0x7392	0x6F3D      	MOVWF       _debugEstadoB, 1
0x7394	0x0E04      	MOVLW       4
0x7396	0x6E00      	MOVWF       R0 
0x7398	0xD000      	BRA         L_end_esperaB
;rutinasensores_v4(mstr-slv).h,641 :: 		}
L_esperaB213:
;rutinasensores_v4(mstr-slv).h,642 :: 		}
L_esperaB211:
;rutinasensores_v4(mstr-slv).h,643 :: 		}
L_end_esperaB:
0x739A	0x0012      	RETURN      0
; end of _esperaB
_Delay_Cyc:
;__Lib_Delays.c,105 :: 		void Delay_Cyc(char cycles_div_by_10)  { // Cycles_div_by_10: min 3, max 255
;__Lib_Delays.c,106 :: 		--cycles_div_by_10;
0x739C	0x0102      	MOVLB       2
0x739E	0x0714      	DECF        FARG_Delay_Cyc_cycles_div_by_10, 1, 1
;__Lib_Delays.c,107 :: 		--cycles_div_by_10;
0x73A0	0x0714      	DECF        FARG_Delay_Cyc_cycles_div_by_10, 1, 1
;__Lib_Delays.c,108 :: 		while (cycles_div_by_10-- > 0) {
L_Delay_Cyc21:
0x73A2	0xF001C214  	MOVFF       FARG_Delay_Cyc_cycles_div_by_10, R1
0x73A6	0x0714      	DECF        FARG_Delay_Cyc_cycles_div_by_10, 1, 1
0x73A8	0x5001      	MOVF        R1, 0 
0x73AA	0x0800      	SUBLW       0
0x73AC	0xE203      	BC          L_Delay_Cyc22
;__Lib_Delays.c,110 :: 		NOP
0x73AE	0x0000      	NOP
;__Lib_Delays.c,111 :: 		NOP
0x73B0	0x0000      	NOP
;__Lib_Delays.c,113 :: 		}
0x73B2	0xD7F7      	BRA         L_Delay_Cyc21
L_Delay_Cyc22:
;__Lib_Delays.c,115 :: 		NOP
0x73B4	0x0000      	NOP
;__Lib_Delays.c,116 :: 		NOP
0x73B6	0x0000      	NOP
;__Lib_Delays.c,117 :: 		NOP
0x73B8	0x0000      	NOP
;__Lib_Delays.c,118 :: 		NOP
0x73BA	0x0000      	NOP
;__Lib_Delays.c,119 :: 		NOP
0x73BC	0x0000      	NOP
;__Lib_Delays.c,121 :: 		}
L_end_Delay_Cyc:
0x73BE	0x0012      	RETURN      0
; end of _Delay_Cyc
_transicionEBD:
;rutinasensores_v4(mstr-slv).h,803 :: 		short transicionEBD(short estado){
;rutinasensores_v4(mstr-slv).h,804 :: 		if(estado == TRANSICION){
0x73C0	0x0102      	MOVLB       2
0x73C2	0x5114      	MOVF        FARG_transicionEBD_estado, 0, 1
0x73C4	0x0A02      	XORLW       2
0x73C6	0xA4D8      	BTFSS       STATUS, 2 
0x73C8	0xD085      	BRA         L_transicionEBD242
;rutinasensores_v4(mstr-slv).h,805 :: 		LCD_OUTCONST(3,1,"TRANSICION");
0x73CA	0x0E03      	MOVLW       3
0x73CC	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x73CE	0x0E01      	MOVLW       1
0x73D0	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x73D2	0x0ED1      	MOVLW       ?lstr_25_MyProject
0x73D4	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x73D6	0x0ED8      	MOVLW       hi_addr(?lstr_25_MyProject)
0x73D8	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x73DA	0x0E00      	MOVLW       higher_addr(?lstr_25_MyProject)
0x73DC	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x73DE	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,806 :: 		if((SENSOR1 & SENSOR3) | (SENSOR3 & SENSOR5) | (SENSOR1 & SENSOR5)){
0x73E2	0xA881      	BTFSS       PORTB, 4 
0x73E4	0xD004      	BRA         L__transicionEBD1119
0x73E6	0xA481      	BTFSS       PORTB, 2 
0x73E8	0xD002      	BRA         L__transicionEBD1119
0x73EA	0x8001      	BSF         R1, 0 
0x73EC	0xD001      	BRA         L__transicionEBD1120
L__transicionEBD1119:
0x73EE	0x9001      	BCF         R1, 0 
L__transicionEBD1120:
0x73F0	0xA481      	BTFSS       PORTB, 2 
0x73F2	0xD004      	BRA         L__transicionEBD1121
0x73F4	0xA081      	BTFSS       PORTB, 0 
0x73F6	0xD002      	BRA         L__transicionEBD1121
0x73F8	0x80D8      	BSF         STATUS, 0 
0x73FA	0xD001      	BRA         L__transicionEBD1122
L__transicionEBD1121:
0x73FC	0x90D8      	BCF         STATUS, 0 
L__transicionEBD1122:
0x73FE	0xB001      	BTFSC       R1, 0 
0x7400	0xD003      	BRA         L__transicionEBD1123
0x7402	0xE202      	BC          L__transicionEBD1123
0x7404	0x9001      	BCF         R1, 0 
0x7406	0xD001      	BRA         L__transicionEBD1124
L__transicionEBD1123:
0x7408	0x8001      	BSF         R1, 0 
L__transicionEBD1124:
0x740A	0xA881      	BTFSS       PORTB, 4 
0x740C	0xD004      	BRA         L__transicionEBD1125
0x740E	0xA081      	BTFSS       PORTB, 0 
0x7410	0xD002      	BRA         L__transicionEBD1125
0x7412	0x80D8      	BSF         STATUS, 0 
0x7414	0xD001      	BRA         L__transicionEBD1126
L__transicionEBD1125:
0x7416	0x90D8      	BCF         STATUS, 0 
L__transicionEBD1126:
0x7418	0xB001      	BTFSC       R1, 0 
0x741A	0xD003      	BRA         L__transicionEBD1127
0x741C	0xE202      	BC          L__transicionEBD1127
0x741E	0x9001      	BCF         R1, 0 
0x7420	0xD001      	BRA         L__transicionEBD1128
L__transicionEBD1127:
0x7422	0x8001      	BSF         R1, 0 
L__transicionEBD1128:
0x7424	0xA001      	BTFSS       R1, 0 
0x7426	0xD00A      	BRA         L_transicionEBD243
;rutinasensores_v4(mstr-slv).h,807 :: 		lcd_cmd(_LCD_CLEAR);
0x7428	0x0E01      	MOVLW       1
0x742A	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x742C	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,808 :: 		return debugEstadoB = TRANENT;
0x7430	0x0E07      	MOVLW       7
0x7432	0x0101      	MOVLB       1
0x7434	0x6F3D      	MOVWF       _debugEstadoB, 1
0x7436	0x0E07      	MOVLW       7
0x7438	0x6E00      	MOVWF       R0 
0x743A	0xD04C      	BRA         L_end_transicionEBD
;rutinasensores_v4(mstr-slv).h,809 :: 		}
L_transicionEBD243:
;rutinasensores_v4(mstr-slv).h,810 :: 		if((SENSOR4 & SENSOR6 & !SENSOR1) | (SENSOR4 & SENSOR6 & !SENSOR3) | (SENSOR4 & SENSOR6 & !SENSOR5)){
0x743C	0xA681      	BTFSS       PORTB, 3 
0x743E	0xD004      	BRA         L__transicionEBD1129
0x7440	0xA281      	BTFSS       PORTB, 1 
0x7442	0xD002      	BRA         L__transicionEBD1129
0x7444	0x8401      	BSF         R1, 2 
0x7446	0xD001      	BRA         L__transicionEBD1130
L__transicionEBD1129:
0x7448	0x9401      	BCF         R1, 2 
L__transicionEBD1130:
0x744A	0xB881      	BTFSC       PORTB, 4 
0x744C	0xD002      	BRA         L__transicionEBD1131
0x744E	0x80D8      	BSF         STATUS, 0 
0x7450	0xD001      	BRA         L__transicionEBD1132
L__transicionEBD1131:
0x7452	0x90D8      	BCF         STATUS, 0 
L__transicionEBD1132:
0x7454	0xA401      	BTFSS       R1, 2 
0x7456	0xD003      	BRA         L__transicionEBD1133
0x7458	0xE302      	BNC         L__transicionEBD1133
0x745A	0x8201      	BSF         R1, 1 
0x745C	0xD001      	BRA         L__transicionEBD1134
L__transicionEBD1133:
0x745E	0x9201      	BCF         R1, 1 
L__transicionEBD1134:
0x7460	0xB401      	BTFSC       R1, 2 
0x7462	0xD002      	BRA         L__transicionEBD1135
0x7464	0x9001      	BCF         R1, 0 
0x7466	0xD001      	BRA         L__transicionEBD1136
L__transicionEBD1135:
0x7468	0x8001      	BSF         R1, 0 
L__transicionEBD1136:
0x746A	0xB481      	BTFSC       PORTB, 2 
0x746C	0xD002      	BRA         L__transicionEBD1137
0x746E	0x80D8      	BSF         STATUS, 0 
0x7470	0xD001      	BRA         L__transicionEBD1138
L__transicionEBD1137:
0x7472	0x90D8      	BCF         STATUS, 0 
L__transicionEBD1138:
0x7474	0xA001      	BTFSS       R1, 0 
0x7476	0xD003      	BRA         L__transicionEBD1139
0x7478	0xE302      	BNC         L__transicionEBD1139
0x747A	0x8001      	BSF         R1, 0 
0x747C	0xD001      	BRA         L__transicionEBD1140
L__transicionEBD1139:
0x747E	0x9001      	BCF         R1, 0 
L__transicionEBD1140:
0x7480	0xB201      	BTFSC       R1, 1 
0x7482	0xD004      	BRA         L__transicionEBD1141
0x7484	0xB001      	BTFSC       R1, 0 
0x7486	0xD002      	BRA         L__transicionEBD1141
0x7488	0x9201      	BCF         R1, 1 
0x748A	0xD001      	BRA         L__transicionEBD1142
L__transicionEBD1141:
0x748C	0x8201      	BSF         R1, 1 
L__transicionEBD1142:
0x748E	0xB401      	BTFSC       R1, 2 
0x7490	0xD002      	BRA         L__transicionEBD1143
0x7492	0x9001      	BCF         R1, 0 
0x7494	0xD001      	BRA         L__transicionEBD1144
L__transicionEBD1143:
0x7496	0x8001      	BSF         R1, 0 
L__transicionEBD1144:
0x7498	0xB081      	BTFSC       PORTB, 0 
0x749A	0xD002      	BRA         L__transicionEBD1145
0x749C	0x80D8      	BSF         STATUS, 0 
0x749E	0xD001      	BRA         L__transicionEBD1146
L__transicionEBD1145:
0x74A0	0x90D8      	BCF         STATUS, 0 
L__transicionEBD1146:
0x74A2	0xA001      	BTFSS       R1, 0 
0x74A4	0xD003      	BRA         L__transicionEBD1147
0x74A6	0xE302      	BNC         L__transicionEBD1147
0x74A8	0x8001      	BSF         R1, 0 
0x74AA	0xD001      	BRA         L__transicionEBD1148
L__transicionEBD1147:
0x74AC	0x9001      	BCF         R1, 0 
L__transicionEBD1148:
0x74AE	0xB201      	BTFSC       R1, 1 
0x74B0	0xD004      	BRA         L__transicionEBD1149
0x74B2	0xB001      	BTFSC       R1, 0 
0x74B4	0xD002      	BRA         L__transicionEBD1149
0x74B6	0x90D8      	BCF         STATUS, 0 
0x74B8	0xD001      	BRA         L__transicionEBD1150
L__transicionEBD1149:
0x74BA	0x80D8      	BSF         STATUS, 0 
L__transicionEBD1150:
0x74BC	0xE30B      	BNC         L_transicionEBD244
;rutinasensores_v4(mstr-slv).h,811 :: 		lcd_cmd(_LCD_CLEAR);
0x74BE	0x0E01      	MOVLW       1
0x74C0	0x0102      	MOVLB       2
0x74C2	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x74C4	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,812 :: 		return debugEstadoB = ENTRANDO;
0x74C8	0x0E01      	MOVLW       1
0x74CA	0x0101      	MOVLB       1
0x74CC	0x6F3D      	MOVWF       _debugEstadoB, 1
0x74CE	0x0E01      	MOVLW       1
0x74D0	0x6E00      	MOVWF       R0 
0x74D2	0xD000      	BRA         L_end_transicionEBD
;rutinasensores_v4(mstr-slv).h,813 :: 		}
L_transicionEBD244:
;rutinasensores_v4(mstr-slv).h,814 :: 		}
L_transicionEBD242:
;rutinasensores_v4(mstr-slv).h,815 :: 		}
L_end_transicionEBD:
0x74D4	0x0012      	RETURN      0
; end of _transicionEBD
_transicionSalB:
;rutinasensores_v4(mstr-slv).h,736 :: 		short transicionSalB(short estado){
;rutinasensores_v4(mstr-slv).h,737 :: 		if(estado == TRANSAL){
0x74D6	0x0102      	MOVLB       2
0x74D8	0x5114      	MOVF        FARG_transicionSalB_estado, 0, 1
0x74DA	0x0A05      	XORLW       5
0x74DC	0xE146      	BNZ         L_transicionSalB231
;rutinasensores_v4(mstr-slv).h,738 :: 		LCD_OUTCONST(3,1,"TRANSICION SALIDA");
0x74DE	0x0E03      	MOVLW       3
0x74E0	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x74E2	0x0E01      	MOVLW       1
0x74E4	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x74E6	0x0E8C      	MOVLW       ?lstr_22_MyProject
0x74E8	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x74EA	0x0ED6      	MOVLW       hi_addr(?lstr_22_MyProject)
0x74EC	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x74EE	0x0E00      	MOVLW       higher_addr(?lstr_22_MyProject)
0x74F0	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x74F2	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,739 :: 		if(!SENSOR2 & !SENSOR4 & !SENSOR6){
0x74F6	0xB883      	BTFSC       PORTD, 4 
0x74F8	0xD002      	BRA         L__transicionSalB1077
0x74FA	0x8001      	BSF         R1, 0 
0x74FC	0xD001      	BRA         L__transicionSalB1078
L__transicionSalB1077:
0x74FE	0x9001      	BCF         R1, 0 
L__transicionSalB1078:
0x7500	0xB681      	BTFSC       PORTB, 3 
0x7502	0xD002      	BRA         L__transicionSalB1079
0x7504	0x80D8      	BSF         STATUS, 0 
0x7506	0xD001      	BRA         L__transicionSalB1080
L__transicionSalB1079:
0x7508	0x90D8      	BCF         STATUS, 0 
L__transicionSalB1080:
0x750A	0xA001      	BTFSS       R1, 0 
0x750C	0xD003      	BRA         L__transicionSalB1081
0x750E	0xE302      	BNC         L__transicionSalB1081
0x7510	0x8001      	BSF         R1, 0 
0x7512	0xD001      	BRA         L__transicionSalB1082
L__transicionSalB1081:
0x7514	0x9001      	BCF         R1, 0 
L__transicionSalB1082:
0x7516	0xB281      	BTFSC       PORTB, 1 
0x7518	0xD002      	BRA         L__transicionSalB1083
0x751A	0x80D8      	BSF         STATUS, 0 
0x751C	0xD001      	BRA         L__transicionSalB1084
L__transicionSalB1083:
0x751E	0x90D8      	BCF         STATUS, 0 
L__transicionSalB1084:
0x7520	0xA001      	BTFSS       R1, 0 
0x7522	0xD003      	BRA         L__transicionSalB1085
0x7524	0xE302      	BNC         L__transicionSalB1085
0x7526	0x8001      	BSF         R1, 0 
0x7528	0xD001      	BRA         L__transicionSalB1086
L__transicionSalB1085:
0x752A	0x9001      	BCF         R1, 0 
L__transicionSalB1086:
0x752C	0xA001      	BTFSS       R1, 0 
0x752E	0xD00A      	BRA         L_transicionSalB232
;rutinasensores_v4(mstr-slv).h,740 :: 		lcd_cmd(_LCD_CLEAR);
0x7530	0x0E01      	MOVLW       1
0x7532	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x7534	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,741 :: 		return debugEstadoB = TRANSICIONS;
0x7538	0x0E08      	MOVLW       8
0x753A	0x0101      	MOVLB       1
0x753C	0x6F3D      	MOVWF       _debugEstadoB, 1
0x753E	0x0E08      	MOVLW       8
0x7540	0x6E00      	MOVWF       R0 
0x7542	0xD013      	BRA         L_end_transicionSalB
;rutinasensores_v4(mstr-slv).h,742 :: 		}
L_transicionSalB232:
;rutinasensores_v4(mstr-slv).h,743 :: 		if((SENSOR3 & SENSOR5)){
0x7544	0xA481      	BTFSS       PORTB, 2 
0x7546	0xD004      	BRA         L__transicionSalB1087
0x7548	0xA081      	BTFSS       PORTB, 0 
0x754A	0xD002      	BRA         L__transicionSalB1087
0x754C	0x80D8      	BSF         STATUS, 0 
0x754E	0xD001      	BRA         L__transicionSalB1088
L__transicionSalB1087:
0x7550	0x90D8      	BCF         STATUS, 0 
L__transicionSalB1088:
0x7552	0xE30B      	BNC         L_transicionSalB233
;rutinasensores_v4(mstr-slv).h,744 :: 		lcd_cmd(_LCD_CLEAR);
0x7554	0x0E01      	MOVLW       1
0x7556	0x0102      	MOVLB       2
0x7558	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x755A	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,745 :: 		return debugEstadoB = SALIO;
0x755E	0x0E06      	MOVLW       6
0x7560	0x0101      	MOVLB       1
0x7562	0x6F3D      	MOVWF       _debugEstadoB, 1
0x7564	0x0E06      	MOVLW       6
0x7566	0x6E00      	MOVWF       R0 
0x7568	0xD000      	BRA         L_end_transicionSalB
;rutinasensores_v4(mstr-slv).h,746 :: 		}
L_transicionSalB233:
;rutinasensores_v4(mstr-slv).h,747 :: 		}
L_transicionSalB231:
;rutinasensores_v4(mstr-slv).h,748 :: 		}
L_end_transicionSalB:
0x756A	0x0012      	RETURN      0
; end of _transicionSalB
_entrandoBD:
;rutinasensores_v4(mstr-slv).h,789 :: 		short entrandoBD(short estado){
;rutinasensores_v4(mstr-slv).h,790 :: 		if(estado == ENTRANDO){
0x756C	0x0102      	MOVLB       2
0x756E	0x5114      	MOVF        FARG_entrandoBD_estado, 0, 1
0x7570	0x0A01      	XORLW       1
0x7572	0xE140      	BNZ         L_entrandoBD239
;rutinasensores_v4(mstr-slv).h,791 :: 		LCD_OUTCONST(3,1,"ENTRANDO");
0x7574	0x0E03      	MOVLW       3
0x7576	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x7578	0x0E01      	MOVLW       1
0x757A	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x757C	0x0EDF      	MOVLW       ?lstr_24_MyProject
0x757E	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x7580	0x0EDA      	MOVLW       hi_addr(?lstr_24_MyProject)
0x7582	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x7584	0x0E00      	MOVLW       higher_addr(?lstr_24_MyProject)
0x7586	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x7588	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,792 :: 		if((SENSOR1 & SENSOR3 & SENSOR5)){
0x758C	0xA881      	BTFSS       PORTB, 4 
0x758E	0xD004      	BRA         L__entrandoBD1108
0x7590	0xA481      	BTFSS       PORTB, 2 
0x7592	0xD002      	BRA         L__entrandoBD1108
0x7594	0x80D8      	BSF         STATUS, 0 
0x7596	0xD001      	BRA         L__entrandoBD1109
L__entrandoBD1108:
0x7598	0x90D8      	BCF         STATUS, 0 
L__entrandoBD1109:
0x759A	0xE304      	BNC         L__entrandoBD1110
0x759C	0xA081      	BTFSS       PORTB, 0 
0x759E	0xD002      	BRA         L__entrandoBD1110
0x75A0	0x8001      	BSF         R1, 0 
0x75A2	0xD001      	BRA         L__entrandoBD1111
L__entrandoBD1110:
0x75A4	0x9001      	BCF         R1, 0 
L__entrandoBD1111:
0x75A6	0xA001      	BTFSS       R1, 0 
0x75A8	0xD008      	BRA         L_entrandoBD240
;rutinasensores_v4(mstr-slv).h,793 :: 		lcd_cmd(_LCD_CLEAR);
0x75AA	0x0E01      	MOVLW       1
0x75AC	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x75AE	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,794 :: 		return debugEstadoB = ESPERA;
0x75B2	0x0101      	MOVLB       1
0x75B4	0x6B3D      	CLRF        _debugEstadoB, 1
0x75B6	0x6A00      	CLRF        R0 
0x75B8	0xD01D      	BRA         L_end_entrandoBD
;rutinasensores_v4(mstr-slv).h,795 :: 		}
L_entrandoBD240:
;rutinasensores_v4(mstr-slv).h,796 :: 		if((!SENSOR4 & !SENSOR6)){
0x75BA	0xB681      	BTFSC       PORTB, 3 
0x75BC	0xD002      	BRA         L__entrandoBD1112
0x75BE	0x8001      	BSF         R1, 0 
0x75C0	0xD001      	BRA         L__entrandoBD1113
L__entrandoBD1112:
0x75C2	0x9001      	BCF         R1, 0 
L__entrandoBD1113:
0x75C4	0xB281      	BTFSC       PORTB, 1 
0x75C6	0xD002      	BRA         L__entrandoBD1114
0x75C8	0x80D8      	BSF         STATUS, 0 
0x75CA	0xD001      	BRA         L__entrandoBD1115
L__entrandoBD1114:
0x75CC	0x90D8      	BCF         STATUS, 0 
L__entrandoBD1115:
0x75CE	0xA001      	BTFSS       R1, 0 
0x75D0	0xD003      	BRA         L__entrandoBD1116
0x75D2	0xE302      	BNC         L__entrandoBD1116
0x75D4	0x8001      	BSF         R1, 0 
0x75D6	0xD001      	BRA         L__entrandoBD1117
L__entrandoBD1116:
0x75D8	0x9001      	BCF         R1, 0 
L__entrandoBD1117:
0x75DA	0xA001      	BTFSS       R1, 0 
0x75DC	0xD00B      	BRA         L_entrandoBD241
;rutinasensores_v4(mstr-slv).h,797 :: 		lcd_cmd(_LCD_CLEAR);
0x75DE	0x0E01      	MOVLW       1
0x75E0	0x0102      	MOVLB       2
0x75E2	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x75E4	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,798 :: 		return debugEstadoB = TRANSICION;
0x75E8	0x0E02      	MOVLW       2
0x75EA	0x0101      	MOVLB       1
0x75EC	0x6F3D      	MOVWF       _debugEstadoB, 1
0x75EE	0x0E02      	MOVLW       2
0x75F0	0x6E00      	MOVWF       R0 
0x75F2	0xD000      	BRA         L_end_entrandoBD
;rutinasensores_v4(mstr-slv).h,799 :: 		}
L_entrandoBD241:
;rutinasensores_v4(mstr-slv).h,800 :: 		}
L_entrandoBD239:
;rutinasensores_v4(mstr-slv).h,801 :: 		}
L_end_entrandoBD:
0x75F4	0x0012      	RETURN      0
; end of _entrandoBD
_COMFREM:
;__Lib_Math.c,922 :: 		
;__Lib_Math.c,927 :: 		
0x75F6	0x1E0B      	COMF        R11, 1, 0
;__Lib_Math.c,928 :: 		
0x75F8	0x1E0A      	COMF        R10, 1, 0
;__Lib_Math.c,929 :: 		
0x75FA	0x1E09      	COMF        R9, 1, 0
;__Lib_Math.c,930 :: 		
0x75FC	0x1E08      	COMF        R8, 1, 0
;__Lib_Math.c,931 :: 		
0x75FE	0x2A08      	INCF        R8, 1, 0
;__Lib_Math.c,932 :: 		
0x7600	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,933 :: 		
0x7602	0x2A09      	INCF        R9, 1, 0
;__Lib_Math.c,934 :: 		
0x7604	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,935 :: 		
0x7606	0x2A0A      	INCF        R10, 1, 0
;__Lib_Math.c,936 :: 		
0x7608	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,937 :: 		
0x760A	0x2A0B      	INCF        R11, 1, 0
;__Lib_Math.c,939 :: 		
L_end_COMFREM:
0x760C	0x0012      	RETURN      0
; end of _COMFREM
_entroBT:
;rutinasensores_v4(mstr-slv).h,975 :: 		short entroBT(short estado){
;rutinasensores_v4(mstr-slv).h,976 :: 		if(estado == ENTRO){
0x760E	0x0102      	MOVLB       2
0x7610	0x5114      	MOVF        FARG_entroBT_estado, 0, 1
0x7612	0x0A03      	XORLW       3
0x7614	0xA4D8      	BTFSS       STATUS, 2 
0x7616	0xD10A      	BRA         L_entroBT273
;rutinasensores_v4(mstr-slv).h,977 :: 		LCD_OUTCONST(3,1,"BIENVENIDO: $6.00");
0x7618	0x0E03      	MOVLW       3
0x761A	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x761C	0x0E01      	MOVLW       1
0x761E	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x7620	0x0E1C      	MOVLW       ?lstr_35_MyProject
0x7622	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x7624	0x0ED7      	MOVLW       hi_addr(?lstr_35_MyProject)
0x7626	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x7628	0x0E00      	MOVLW       higher_addr(?lstr_35_MyProject)
0x762A	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x762C	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,978 :: 		pBajan = eepromLeeNumero(0x0003,2);
0x7630	0x0E03      	MOVLW       3
0x7632	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x7634	0x0E00      	MOVLW       0
0x7636	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x7638	0x0E02      	MOVLW       2
0x763A	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x763C	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x7640	0xF135C000  	MOVFF       R0, _pBajan
0x7644	0xF136C001  	MOVFF       R1, _pBajan+1
;rutinasensores_v4(mstr-slv).h,979 :: 		pSuben = eepromLeeNumero(0x0000,2) + 1;
0x7648	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x764A	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x764C	0x0E02      	MOVLW       2
0x764E	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x7650	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x7654	0x4A00      	INFSNZ      R0, 1 
0x7656	0x2A01      	INCF        R1, 1 
0x7658	0xF137C000  	MOVFF       R0, _pSuben
0x765C	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,980 :: 		eepromEscribeNumero(0x0000,pSuben,2);
0x7660	0x6B1D      	CLRF        FARG_eepromEscribeNumero_Registro, 1
0x7662	0x6B1E      	CLRF        FARG_eepromEscribeNumero_Registro+1, 1
0x7664	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x7668	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x766C	0x0E00      	MOVLW       0
0x766E	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x7670	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x7672	0x0E02      	MOVLW       2
0x7674	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x7676	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,981 :: 		pSuben = eepromLeeNumero(0x0000, 2);
0x767A	0x0102      	MOVLB       2
0x767C	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x767E	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x7680	0x0E02      	MOVLW       2
0x7682	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x7684	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x7688	0xF137C000  	MOVFF       R0, _pSuben
0x768C	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,982 :: 		pasajerosVerdaderos = ((float)pSuben + (float)pBajan)/2;
0x7690	0xF008EC65  	CALL        _Word2Double, 0
0x7694	0xF215C000  	MOVFF       R0, FLOC__entroBT
0x7698	0xF216C001  	MOVFF       R1, FLOC__entroBT+1
0x769C	0xF217C002  	MOVFF       R2, FLOC__entroBT+2
0x76A0	0xF218C003  	MOVFF       R3, FLOC__entroBT+3
0x76A4	0xF000C135  	MOVFF       _pBajan, R0
0x76A8	0xF001C136  	MOVFF       _pBajan+1, R1
0x76AC	0xF008EC65  	CALL        _Word2Double, 0
0x76B0	0xF004C215  	MOVFF       FLOC__entroBT, R4
0x76B4	0xF005C216  	MOVFF       FLOC__entroBT+1, R5
0x76B8	0xF006C217  	MOVFF       FLOC__entroBT+2, R6
0x76BC	0xF007C218  	MOVFF       FLOC__entroBT+3, R7
0x76C0	0xF004EC8D  	CALL        _Add_32x32_FP, 0
0x76C4	0x0E00      	MOVLW       0
0x76C6	0x6E04      	MOVWF       R4 
0x76C8	0x0E00      	MOVLW       0
0x76CA	0x6E05      	MOVWF       R5 
0x76CC	0x0E00      	MOVLW       0
0x76CE	0x6E06      	MOVWF       R6 
0x76D0	0x0E80      	MOVLW       128
0x76D2	0x6E07      	MOVWF       R7 
0x76D4	0xF007ECA7  	CALL        _Div_32x32_FP, 0
0x76D8	0xF139C000  	MOVFF       R0, _pasajerosVerdaderos
0x76DC	0xF13AC001  	MOVFF       R1, _pasajerosVerdaderos+1
0x76E0	0xF13BC002  	MOVFF       R2, _pasajerosVerdaderos+2
0x76E4	0xF13CC003  	MOVFF       R3, _pasajerosVerdaderos+3
;rutinasensores_v4(mstr-slv).h,983 :: 		eepromEscribeNumero(0x0009, (unsigned int)pasajerosVerdaderos, 2);
0x76E8	0x0E09      	MOVLW       9
0x76EA	0x0102      	MOVLB       2
0x76EC	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x76EE	0x0E00      	MOVLW       0
0x76F0	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x76F2	0xF006ECA0  	CALL        _Double2Word, 0
0x76F6	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x76FA	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x76FE	0x0E00      	MOVLW       0
0x7700	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x7702	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x7704	0x0E02      	MOVLW       2
0x7706	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x7708	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,984 :: 		if(MSTR){
0x770C	0xA483      	BTFSS       PORTD, 2 
0x770E	0xD085      	BRA         L_entroBT274
;rutinasensores_v4(mstr-slv).h,985 :: 		pVerdaderosMEntero = eepromLeeNumero(0x0009, 2);
0x7710	0x0E09      	MOVLW       9
0x7712	0x0102      	MOVLB       2
0x7714	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x7716	0x0E00      	MOVLW       0
0x7718	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x771A	0x0E02      	MOVLW       2
0x771C	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x771E	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x7722	0xF12FC000  	MOVFF       R0, _pVerdaderosMEntero
0x7726	0xF130C001  	MOVFF       R1, _pVerdaderosMEntero+1
;rutinasensores_v4(mstr-slv).h,986 :: 		pVerdaderosEEntero = eepromLeeNumero(0x0007, 2);
0x772A	0x0E07      	MOVLW       7
0x772C	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x772E	0x0E00      	MOVLW       0
0x7730	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x7732	0x0E02      	MOVLW       2
0x7734	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x7736	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x773A	0xF12DC000  	MOVFF       R0, _pVerdaderosEEntero
0x773E	0xF12EC001  	MOVFF       R1, _pVerdaderosEEntero+1
;rutinasensores_v4(mstr-slv).h,987 :: 		pasajerosTotalesL = pVerdaderosMEntero + pVerdaderosEEntero;
0x7742	0x5000      	MOVF        R0, 0 
0x7744	0x0101      	MOVLB       1
0x7746	0x252F      	ADDWF       _pVerdaderosMEntero, 0, 1
0x7748	0x6F33      	MOVWF       _pasajerosTotalesL, 1
0x774A	0x5001      	MOVF        R1, 0 
0x774C	0x2130      	ADDWFC      _pVerdaderosMEntero+1, 0, 1
0x774E	0x6F34      	MOVWF       _pasajerosTotalesL+1, 1
;rutinasensores_v4(mstr-slv).h,988 :: 		totalCalculado = (eepromLeeNumero(0x0000, 2)+eepromLeeNumero(0x0003, 2)+eepromLeeNumero(0x0900, 2)+eepromLeeNumero(0x0700, 2))/2;
0x7750	0x0102      	MOVLB       2
0x7752	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x7754	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x7756	0x0E02      	MOVLW       2
0x7758	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x775A	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x775E	0xF215C000  	MOVFF       R0, FLOC__entroBT
0x7762	0xF216C001  	MOVFF       R1, FLOC__entroBT+1
0x7766	0xF217C002  	MOVFF       R2, FLOC__entroBT+2
0x776A	0xF218C003  	MOVFF       R3, FLOC__entroBT+3
0x776E	0x0E03      	MOVLW       3
0x7770	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x7772	0x0E00      	MOVLW       0
0x7774	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x7776	0x0E02      	MOVLW       2
0x7778	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x777A	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x777E	0x5000      	MOVF        R0, 0 
0x7780	0x2715      	ADDWF       FLOC__entroBT, 1, 1
0x7782	0x5001      	MOVF        R1, 0 
0x7784	0x2316      	ADDWFC      FLOC__entroBT+1, 1, 1
0x7786	0x5002      	MOVF        R2, 0 
0x7788	0x2317      	ADDWFC      FLOC__entroBT+2, 1, 1
0x778A	0x5003      	MOVF        R3, 0 
0x778C	0x2318      	ADDWFC      FLOC__entroBT+3, 1, 1
0x778E	0x0E00      	MOVLW       0
0x7790	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x7792	0x0E09      	MOVLW       9
0x7794	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x7796	0x0E02      	MOVLW       2
0x7798	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x779A	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x779E	0x5000      	MOVF        R0, 0 
0x77A0	0x2715      	ADDWF       FLOC__entroBT, 1, 1
0x77A2	0x5001      	MOVF        R1, 0 
0x77A4	0x2316      	ADDWFC      FLOC__entroBT+1, 1, 1
0x77A6	0x5002      	MOVF        R2, 0 
0x77A8	0x2317      	ADDWFC      FLOC__entroBT+2, 1, 1
0x77AA	0x5003      	MOVF        R3, 0 
0x77AC	0x2318      	ADDWFC      FLOC__entroBT+3, 1, 1
0x77AE	0x0E00      	MOVLW       0
0x77B0	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x77B2	0x0E07      	MOVLW       7
0x77B4	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x77B6	0x0E02      	MOVLW       2
0x77B8	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x77BA	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x77BE	0x5000      	MOVF        R0, 0 
0x77C0	0x2515      	ADDWF       FLOC__entroBT, 0, 1
0x77C2	0x6E05      	MOVWF       R5 
0x77C4	0x5001      	MOVF        R1, 0 
0x77C6	0x2116      	ADDWFC      FLOC__entroBT+1, 0, 1
0x77C8	0x6E06      	MOVWF       R6 
0x77CA	0x5002      	MOVF        R2, 0 
0x77CC	0x2117      	ADDWFC      FLOC__entroBT+2, 0, 1
0x77CE	0x6E07      	MOVWF       R7 
0x77D0	0x5003      	MOVF        R3, 0 
0x77D2	0x2118      	ADDWFC      FLOC__entroBT+3, 0, 1
0x77D4	0x6E08      	MOVWF       R8 
0x77D6	0xF000C005  	MOVFF       R5, R0
0x77DA	0xF001C006  	MOVFF       R6, R1
0x77DE	0xF002C007  	MOVFF       R7, R2
0x77E2	0xF003C008  	MOVFF       R8, R3
0x77E6	0x3203      	RRCF        R3, 1 
0x77E8	0x3202      	RRCF        R2, 1 
0x77EA	0x3201      	RRCF        R1, 1 
0x77EC	0x3200      	RRCF        R0, 1 
0x77EE	0x9E03      	BCF         R3, 7 
0x77F0	0xBC03      	BTFSC       R3, 6 
0x77F2	0x8E03      	BSF         R3, 7 
0x77F4	0xF131C000  	MOVFF       R0, _totalCalculado
0x77F8	0xF132C001  	MOVFF       R1, _totalCalculado+1
;rutinasensores_v4(mstr-slv).h,989 :: 		eepromEscribeNumero(0x0005, totalCalculado, 2);
0x77FC	0x0E05      	MOVLW       5
0x77FE	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x7800	0x0E00      	MOVLW       0
0x7802	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x7804	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x7808	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x780C	0x0E00      	MOVLW       0
0x780E	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x7810	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x7812	0x0E02      	MOVLW       2
0x7814	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x7816	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,990 :: 		}
L_entroBT274:
;rutinasensores_v4(mstr-slv).h,991 :: 		lcd_cmd(_LCD_CLEAR);
0x781A	0x0E01      	MOVLW       1
0x781C	0x0102      	MOVLB       2
0x781E	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x7820	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,992 :: 		return debugEstadoB = ESPERA;
0x7824	0x0101      	MOVLB       1
0x7826	0x6B3D      	CLRF        _debugEstadoB, 1
0x7828	0x6A00      	CLRF        R0 
0x782A	0xD000      	BRA         L_end_entroBT
;rutinasensores_v4(mstr-slv).h,993 :: 		}
L_entroBT273:
;rutinasensores_v4(mstr-slv).h,994 :: 		}
L_end_entroBT:
0x782C	0x0012      	RETURN      0
; end of _entroBT
_esperaBD:
;rutinasensores_v4(mstr-slv).h,775 :: 		short esperaBD(short estado){
;rutinasensores_v4(mstr-slv).h,776 :: 		if(estado == ESPERA){
0x782E	0x0102      	MOVLB       2
0x7830	0x5114      	MOVF        FARG_esperaBD_estado, 0, 1
0x7832	0x0A00      	XORLW       0
0x7834	0xE146      	BNZ         L_esperaBD236
;rutinasensores_v4(mstr-slv).h,777 :: 		muestraEstatus();
0x7836	0xF008EC8B  	CALL        _muestraEstatus, 0
;rutinasensores_v4(mstr-slv).h,778 :: 		if((!SENSOR1 | !SENSOR3 | !SENSOR5)){
0x783A	0xB881      	BTFSC       PORTB, 4 
0x783C	0xD002      	BRA         L__esperaBD1091
0x783E	0x8001      	BSF         R1, 0 
0x7840	0xD001      	BRA         L__esperaBD1092
L__esperaBD1091:
0x7842	0x9001      	BCF         R1, 0 
L__esperaBD1092:
0x7844	0xB481      	BTFSC       PORTB, 2 
0x7846	0xD002      	BRA         L__esperaBD1093
0x7848	0x80D8      	BSF         STATUS, 0 
0x784A	0xD001      	BRA         L__esperaBD1094
L__esperaBD1093:
0x784C	0x90D8      	BCF         STATUS, 0 
L__esperaBD1094:
0x784E	0xB001      	BTFSC       R1, 0 
0x7850	0xD003      	BRA         L__esperaBD1095
0x7852	0xE202      	BC          L__esperaBD1095
0x7854	0x9001      	BCF         R1, 0 
0x7856	0xD001      	BRA         L__esperaBD1096
L__esperaBD1095:
0x7858	0x8001      	BSF         R1, 0 
L__esperaBD1096:
0x785A	0xB081      	BTFSC       PORTB, 0 
0x785C	0xD002      	BRA         L__esperaBD1097
0x785E	0x80D8      	BSF         STATUS, 0 
0x7860	0xD001      	BRA         L__esperaBD1098
L__esperaBD1097:
0x7862	0x90D8      	BCF         STATUS, 0 
L__esperaBD1098:
0x7864	0xB001      	BTFSC       R1, 0 
0x7866	0xD003      	BRA         L__esperaBD1099
0x7868	0xE202      	BC          L__esperaBD1099
0x786A	0x9001      	BCF         R1, 0 
0x786C	0xD001      	BRA         L__esperaBD1100
L__esperaBD1099:
0x786E	0x8001      	BSF         R1, 0 
L__esperaBD1100:
0x7870	0xA001      	BTFSS       R1, 0 
0x7872	0xD00A      	BRA         L_esperaBD237
;rutinasensores_v4(mstr-slv).h,779 :: 		lcd_cmd(_LCD_CLEAR);
0x7874	0x0E01      	MOVLW       1
0x7876	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x7878	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,780 :: 		return debugEstadoB = ENTRANDO;
0x787C	0x0E01      	MOVLW       1
0x787E	0x0101      	MOVLB       1
0x7880	0x6F3D      	MOVWF       _debugEstadoB, 1
0x7882	0x0E01      	MOVLW       1
0x7884	0x6E00      	MOVWF       R0 
0x7886	0xD01D      	BRA         L_end_esperaBD
;rutinasensores_v4(mstr-slv).h,781 :: 		}
L_esperaBD237:
;rutinasensores_v4(mstr-slv).h,782 :: 		if((!SENSOR4 | !SENSOR6)){
0x7888	0xB681      	BTFSC       PORTB, 3 
0x788A	0xD002      	BRA         L__esperaBD1101
0x788C	0x8001      	BSF         R1, 0 
0x788E	0xD001      	BRA         L__esperaBD1102
L__esperaBD1101:
0x7890	0x9001      	BCF         R1, 0 
L__esperaBD1102:
0x7892	0xB281      	BTFSC       PORTB, 1 
0x7894	0xD002      	BRA         L__esperaBD1103
0x7896	0x80D8      	BSF         STATUS, 0 
0x7898	0xD001      	BRA         L__esperaBD1104
L__esperaBD1103:
0x789A	0x90D8      	BCF         STATUS, 0 
L__esperaBD1104:
0x789C	0xB001      	BTFSC       R1, 0 
0x789E	0xD003      	BRA         L__esperaBD1105
0x78A0	0xE202      	BC          L__esperaBD1105
0x78A2	0x9001      	BCF         R1, 0 
0x78A4	0xD001      	BRA         L__esperaBD1106
L__esperaBD1105:
0x78A6	0x8001      	BSF         R1, 0 
L__esperaBD1106:
0x78A8	0xA001      	BTFSS       R1, 0 
0x78AA	0xD00B      	BRA         L_esperaBD238
;rutinasensores_v4(mstr-slv).h,783 :: 		lcd_cmd(_LCD_CLEAR);
0x78AC	0x0E01      	MOVLW       1
0x78AE	0x0102      	MOVLB       2
0x78B0	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x78B2	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,784 :: 		return debugEstadoB = SALIENDO;
0x78B6	0x0E04      	MOVLW       4
0x78B8	0x0101      	MOVLB       1
0x78BA	0x6F3D      	MOVWF       _debugEstadoB, 1
0x78BC	0x0E04      	MOVLW       4
0x78BE	0x6E00      	MOVWF       R0 
0x78C0	0xD000      	BRA         L_end_esperaBD
;rutinasensores_v4(mstr-slv).h,785 :: 		}
L_esperaBD238:
;rutinasensores_v4(mstr-slv).h,786 :: 		}
L_esperaBD236:
;rutinasensores_v4(mstr-slv).h,787 :: 		}
L_end_esperaBD:
0x78C2	0x0012      	RETURN      0
; end of _esperaBD
_salioB:
;rutinasensores_v4(mstr-slv).h,750 :: 		short salioB(short estado){
;rutinasensores_v4(mstr-slv).h,751 :: 		if(estado == SALIO){
0x78C4	0x0102      	MOVLB       2
0x78C6	0x5114      	MOVF        FARG_salioB_estado, 0, 1
0x78C8	0x0A06      	XORLW       6
0x78CA	0xA4D8      	BTFSS       STATUS, 2 
0x78CC	0xD11A      	BRA         L_salioB234
;rutinasensores_v4(mstr-slv).h,752 :: 		LCD_OUTCONST(3,1,"GRACIAS!");
0x78CE	0x0E03      	MOVLW       3
0x78D0	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x78D2	0x0E01      	MOVLW       1
0x78D4	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x78D6	0x0EFA      	MOVLW       ?lstr_23_MyProject
0x78D8	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x78DA	0x0EDA      	MOVLW       hi_addr(?lstr_23_MyProject)
0x78DC	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x78DE	0x0E00      	MOVLW       higher_addr(?lstr_23_MyProject)
0x78E0	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x78E2	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,753 :: 		pSuben = eepromLeeNumero(0x0000, 2);
0x78E6	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x78E8	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x78EA	0x0E02      	MOVLW       2
0x78EC	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x78EE	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x78F2	0xF137C000  	MOVFF       R0, _pSuben
0x78F6	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,754 :: 		pBajan = eepromLeeNumero(0x0003, 2) + 1;
0x78FA	0x0E03      	MOVLW       3
0x78FC	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x78FE	0x0E00      	MOVLW       0
0x7900	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x7902	0x0E02      	MOVLW       2
0x7904	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x7906	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x790A	0x4A00      	INFSNZ      R0, 1 
0x790C	0x2A01      	INCF        R1, 1 
0x790E	0xF135C000  	MOVFF       R0, _pBajan
0x7912	0xF136C001  	MOVFF       R1, _pBajan+1
;rutinasensores_v4(mstr-slv).h,755 :: 		eepromEscribeNumero(0x0003 ,pBajan, 2);
0x7916	0x0E03      	MOVLW       3
0x7918	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x791A	0x0E00      	MOVLW       0
0x791C	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x791E	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x7922	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x7926	0x0E00      	MOVLW       0
0x7928	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x792A	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x792C	0x0E02      	MOVLW       2
0x792E	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x7930	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,756 :: 		pBajan = eepromLeeNumero(0x0003, 2);
0x7934	0x0E03      	MOVLW       3
0x7936	0x0102      	MOVLB       2
0x7938	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x793A	0x0E00      	MOVLW       0
0x793C	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x793E	0x0E02      	MOVLW       2
0x7940	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x7942	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x7946	0xF219C000  	MOVFF       R0, FLOC__salioB+4
0x794A	0xF21AC001  	MOVFF       R1, FLOC__salioB+5
0x794E	0xF21BC002  	MOVFF       R2, FLOC__salioB+6
0x7952	0xF21CC003  	MOVFF       R3, FLOC__salioB+7
0x7956	0xF135C219  	MOVFF       FLOC__salioB+4, _pBajan
0x795A	0xF136C21A  	MOVFF       FLOC__salioB+5, _pBajan+1
;rutinasensores_v4(mstr-slv).h,757 :: 		pasajerosVerdaderos = ((float)pSuben + (float)pBajan)/2;
0x795E	0xF000C137  	MOVFF       _pSuben, R0
0x7962	0xF001C138  	MOVFF       _pSuben+1, R1
0x7966	0xF008EC65  	CALL        _Word2Double, 0
0x796A	0xF215C000  	MOVFF       R0, FLOC__salioB
0x796E	0xF216C001  	MOVFF       R1, FLOC__salioB+1
0x7972	0xF217C002  	MOVFF       R2, FLOC__salioB+2
0x7976	0xF218C003  	MOVFF       R3, FLOC__salioB+3
0x797A	0xF000C219  	MOVFF       FLOC__salioB+4, R0
0x797E	0xF001C21A  	MOVFF       FLOC__salioB+5, R1
0x7982	0xF008EC65  	CALL        _Word2Double, 0
0x7986	0xF004C215  	MOVFF       FLOC__salioB, R4
0x798A	0xF005C216  	MOVFF       FLOC__salioB+1, R5
0x798E	0xF006C217  	MOVFF       FLOC__salioB+2, R6
0x7992	0xF007C218  	MOVFF       FLOC__salioB+3, R7
0x7996	0xF004EC8D  	CALL        _Add_32x32_FP, 0
0x799A	0x0E00      	MOVLW       0
0x799C	0x6E04      	MOVWF       R4 
0x799E	0x0E00      	MOVLW       0
0x79A0	0x6E05      	MOVWF       R5 
0x79A2	0x0E00      	MOVLW       0
0x79A4	0x6E06      	MOVWF       R6 
0x79A6	0x0E80      	MOVLW       128
0x79A8	0x6E07      	MOVWF       R7 
0x79AA	0xF007ECA7  	CALL        _Div_32x32_FP, 0
0x79AE	0xF139C000  	MOVFF       R0, _pasajerosVerdaderos
0x79B2	0xF13AC001  	MOVFF       R1, _pasajerosVerdaderos+1
0x79B6	0xF13BC002  	MOVFF       R2, _pasajerosVerdaderos+2
0x79BA	0xF13CC003  	MOVFF       R3, _pasajerosVerdaderos+3
;rutinasensores_v4(mstr-slv).h,758 :: 		eepromEscribeNumero(0x0009, (unsigned int)pasajerosVerdaderos, 2);
0x79BE	0x0E09      	MOVLW       9
0x79C0	0x0102      	MOVLB       2
0x79C2	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x79C4	0x0E00      	MOVLW       0
0x79C6	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x79C8	0xF006ECA0  	CALL        _Double2Word, 0
0x79CC	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x79D0	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x79D4	0x0E00      	MOVLW       0
0x79D6	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x79D8	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x79DA	0x0E02      	MOVLW       2
0x79DC	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x79DE	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,759 :: 		if(MSTR){
0x79E2	0xA483      	BTFSS       PORTD, 2 
0x79E4	0xD085      	BRA         L_salioB235
;rutinasensores_v4(mstr-slv).h,760 :: 		pVerdaderosMEntero = eepromLeeNumero(0x0009, 2);
0x79E6	0x0E09      	MOVLW       9
0x79E8	0x0102      	MOVLB       2
0x79EA	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x79EC	0x0E00      	MOVLW       0
0x79EE	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x79F0	0x0E02      	MOVLW       2
0x79F2	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x79F4	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x79F8	0xF12FC000  	MOVFF       R0, _pVerdaderosMEntero
0x79FC	0xF130C001  	MOVFF       R1, _pVerdaderosMEntero+1
;rutinasensores_v4(mstr-slv).h,761 :: 		pVerdaderosEEntero = eepromLeeNumero(0x0007, 2);
0x7A00	0x0E07      	MOVLW       7
0x7A02	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x7A04	0x0E00      	MOVLW       0
0x7A06	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x7A08	0x0E02      	MOVLW       2
0x7A0A	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x7A0C	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x7A10	0xF12DC000  	MOVFF       R0, _pVerdaderosEEntero
0x7A14	0xF12EC001  	MOVFF       R1, _pVerdaderosEEntero+1
;rutinasensores_v4(mstr-slv).h,762 :: 		pasajerosTotalesL = pVerdaderosMEntero + pVerdaderosEEntero;
0x7A18	0x5000      	MOVF        R0, 0 
0x7A1A	0x0101      	MOVLB       1
0x7A1C	0x252F      	ADDWF       _pVerdaderosMEntero, 0, 1
0x7A1E	0x6F33      	MOVWF       _pasajerosTotalesL, 1
0x7A20	0x5001      	MOVF        R1, 0 
0x7A22	0x2130      	ADDWFC      _pVerdaderosMEntero+1, 0, 1
0x7A24	0x6F34      	MOVWF       _pasajerosTotalesL+1, 1
;rutinasensores_v4(mstr-slv).h,763 :: 		totalCalculado = (eepromLeeNumero(0x0000, 2)+eepromLeeNumero(0x0003, 2)+eepromLeeNumero(0x0900, 2)+eepromLeeNumero(0x0700, 2))/2;
0x7A26	0x0102      	MOVLB       2
0x7A28	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x7A2A	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x7A2C	0x0E02      	MOVLW       2
0x7A2E	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x7A30	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x7A34	0xF215C000  	MOVFF       R0, FLOC__salioB
0x7A38	0xF216C001  	MOVFF       R1, FLOC__salioB+1
0x7A3C	0xF217C002  	MOVFF       R2, FLOC__salioB+2
0x7A40	0xF218C003  	MOVFF       R3, FLOC__salioB+3
0x7A44	0x0E03      	MOVLW       3
0x7A46	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x7A48	0x0E00      	MOVLW       0
0x7A4A	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x7A4C	0x0E02      	MOVLW       2
0x7A4E	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x7A50	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x7A54	0x5000      	MOVF        R0, 0 
0x7A56	0x2715      	ADDWF       FLOC__salioB, 1, 1
0x7A58	0x5001      	MOVF        R1, 0 
0x7A5A	0x2316      	ADDWFC      FLOC__salioB+1, 1, 1
0x7A5C	0x5002      	MOVF        R2, 0 
0x7A5E	0x2317      	ADDWFC      FLOC__salioB+2, 1, 1
0x7A60	0x5003      	MOVF        R3, 0 
0x7A62	0x2318      	ADDWFC      FLOC__salioB+3, 1, 1
0x7A64	0x0E00      	MOVLW       0
0x7A66	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x7A68	0x0E09      	MOVLW       9
0x7A6A	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x7A6C	0x0E02      	MOVLW       2
0x7A6E	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x7A70	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x7A74	0x5000      	MOVF        R0, 0 
0x7A76	0x2715      	ADDWF       FLOC__salioB, 1, 1
0x7A78	0x5001      	MOVF        R1, 0 
0x7A7A	0x2316      	ADDWFC      FLOC__salioB+1, 1, 1
0x7A7C	0x5002      	MOVF        R2, 0 
0x7A7E	0x2317      	ADDWFC      FLOC__salioB+2, 1, 1
0x7A80	0x5003      	MOVF        R3, 0 
0x7A82	0x2318      	ADDWFC      FLOC__salioB+3, 1, 1
0x7A84	0x0E00      	MOVLW       0
0x7A86	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x7A88	0x0E07      	MOVLW       7
0x7A8A	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x7A8C	0x0E02      	MOVLW       2
0x7A8E	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x7A90	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x7A94	0x5000      	MOVF        R0, 0 
0x7A96	0x2515      	ADDWF       FLOC__salioB, 0, 1
0x7A98	0x6E05      	MOVWF       R5 
0x7A9A	0x5001      	MOVF        R1, 0 
0x7A9C	0x2116      	ADDWFC      FLOC__salioB+1, 0, 1
0x7A9E	0x6E06      	MOVWF       R6 
0x7AA0	0x5002      	MOVF        R2, 0 
0x7AA2	0x2117      	ADDWFC      FLOC__salioB+2, 0, 1
0x7AA4	0x6E07      	MOVWF       R7 
0x7AA6	0x5003      	MOVF        R3, 0 
0x7AA8	0x2118      	ADDWFC      FLOC__salioB+3, 0, 1
0x7AAA	0x6E08      	MOVWF       R8 
0x7AAC	0xF000C005  	MOVFF       R5, R0
0x7AB0	0xF001C006  	MOVFF       R6, R1
0x7AB4	0xF002C007  	MOVFF       R7, R2
0x7AB8	0xF003C008  	MOVFF       R8, R3
0x7ABC	0x3203      	RRCF        R3, 1 
0x7ABE	0x3202      	RRCF        R2, 1 
0x7AC0	0x3201      	RRCF        R1, 1 
0x7AC2	0x3200      	RRCF        R0, 1 
0x7AC4	0x9E03      	BCF         R3, 7 
0x7AC6	0xBC03      	BTFSC       R3, 6 
0x7AC8	0x8E03      	BSF         R3, 7 
0x7ACA	0xF131C000  	MOVFF       R0, _totalCalculado
0x7ACE	0xF132C001  	MOVFF       R1, _totalCalculado+1
;rutinasensores_v4(mstr-slv).h,764 :: 		eepromEscribeNumero(0x0005, totalCalculado, 2);
0x7AD2	0x0E05      	MOVLW       5
0x7AD4	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x7AD6	0x0E00      	MOVLW       0
0x7AD8	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x7ADA	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x7ADE	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x7AE2	0x0E00      	MOVLW       0
0x7AE4	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x7AE6	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x7AE8	0x0E02      	MOVLW       2
0x7AEA	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x7AEC	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,765 :: 		}
L_salioB235:
;rutinasensores_v4(mstr-slv).h,766 :: 		lcd_cmd(_LCD_CLEAR);
0x7AF0	0x0E01      	MOVLW       1
0x7AF2	0x0102      	MOVLB       2
0x7AF4	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x7AF6	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,767 :: 		return debugEstadoB = ESPERA;
0x7AFA	0x0101      	MOVLB       1
0x7AFC	0x6B3D      	CLRF        _debugEstadoB, 1
0x7AFE	0x6A00      	CLRF        R0 
0x7B00	0xD000      	BRA         L_end_salioB
;rutinasensores_v4(mstr-slv).h,768 :: 		}
L_salioB234:
;rutinasensores_v4(mstr-slv).h,769 :: 		}
L_end_salioB:
0x7B02	0x0012      	RETURN      0
; end of _salioB
_salioBT:
;rutinasensores_v4(mstr-slv).h,1038 :: 		short salioBT(short estado){
;rutinasensores_v4(mstr-slv).h,1039 :: 		if(estado == SALIO){
0x7B04	0x0102      	MOVLB       2
0x7B06	0x5114      	MOVF        FARG_salioBT_estado, 0, 1
0x7B08	0x0A06      	XORLW       6
0x7B0A	0xA4D8      	BTFSS       STATUS, 2 
0x7B0C	0xD11A      	BRA         L_salioBT284
;rutinasensores_v4(mstr-slv).h,1040 :: 		LCD_OUTCONST(3,1,"GRACIAS!");
0x7B0E	0x0E03      	MOVLW       3
0x7B10	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x7B12	0x0E01      	MOVLW       1
0x7B14	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x7B16	0x0EDA      	MOVLW       ?lstr_39_MyProject
0x7B18	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x7B1A	0x0ED9      	MOVLW       hi_addr(?lstr_39_MyProject)
0x7B1C	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x7B1E	0x0E00      	MOVLW       higher_addr(?lstr_39_MyProject)
0x7B20	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x7B22	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1041 :: 		pSuben = eepromLeeNumero(0x0000, 2);
0x7B26	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x7B28	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x7B2A	0x0E02      	MOVLW       2
0x7B2C	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x7B2E	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x7B32	0xF137C000  	MOVFF       R0, _pSuben
0x7B36	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,1042 :: 		pBajan = eepromLeeNumero(0x0003, 2) + 1;
0x7B3A	0x0E03      	MOVLW       3
0x7B3C	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x7B3E	0x0E00      	MOVLW       0
0x7B40	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x7B42	0x0E02      	MOVLW       2
0x7B44	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x7B46	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x7B4A	0x4A00      	INFSNZ      R0, 1 
0x7B4C	0x2A01      	INCF        R1, 1 
0x7B4E	0xF135C000  	MOVFF       R0, _pBajan
0x7B52	0xF136C001  	MOVFF       R1, _pBajan+1
;rutinasensores_v4(mstr-slv).h,1043 :: 		eepromEscribeNumero(0x0003 ,pBajan, 2);
0x7B56	0x0E03      	MOVLW       3
0x7B58	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x7B5A	0x0E00      	MOVLW       0
0x7B5C	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x7B5E	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x7B62	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x7B66	0x0E00      	MOVLW       0
0x7B68	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x7B6A	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x7B6C	0x0E02      	MOVLW       2
0x7B6E	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x7B70	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,1044 :: 		pBajan = eepromLeeNumero(0x0003, 2);
0x7B74	0x0E03      	MOVLW       3
0x7B76	0x0102      	MOVLB       2
0x7B78	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x7B7A	0x0E00      	MOVLW       0
0x7B7C	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x7B7E	0x0E02      	MOVLW       2
0x7B80	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x7B82	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x7B86	0xF219C000  	MOVFF       R0, FLOC__salioBT+4
0x7B8A	0xF21AC001  	MOVFF       R1, FLOC__salioBT+5
0x7B8E	0xF21BC002  	MOVFF       R2, FLOC__salioBT+6
0x7B92	0xF21CC003  	MOVFF       R3, FLOC__salioBT+7
0x7B96	0xF135C219  	MOVFF       FLOC__salioBT+4, _pBajan
0x7B9A	0xF136C21A  	MOVFF       FLOC__salioBT+5, _pBajan+1
;rutinasensores_v4(mstr-slv).h,1045 :: 		pasajerosVerdaderos = ((float)pSuben + (float)pBajan)/2;
0x7B9E	0xF000C137  	MOVFF       _pSuben, R0
0x7BA2	0xF001C138  	MOVFF       _pSuben+1, R1
0x7BA6	0xF008EC65  	CALL        _Word2Double, 0
0x7BAA	0xF215C000  	MOVFF       R0, FLOC__salioBT
0x7BAE	0xF216C001  	MOVFF       R1, FLOC__salioBT+1
0x7BB2	0xF217C002  	MOVFF       R2, FLOC__salioBT+2
0x7BB6	0xF218C003  	MOVFF       R3, FLOC__salioBT+3
0x7BBA	0xF000C219  	MOVFF       FLOC__salioBT+4, R0
0x7BBE	0xF001C21A  	MOVFF       FLOC__salioBT+5, R1
0x7BC2	0xF008EC65  	CALL        _Word2Double, 0
0x7BC6	0xF004C215  	MOVFF       FLOC__salioBT, R4
0x7BCA	0xF005C216  	MOVFF       FLOC__salioBT+1, R5
0x7BCE	0xF006C217  	MOVFF       FLOC__salioBT+2, R6
0x7BD2	0xF007C218  	MOVFF       FLOC__salioBT+3, R7
0x7BD6	0xF004EC8D  	CALL        _Add_32x32_FP, 0
0x7BDA	0x0E00      	MOVLW       0
0x7BDC	0x6E04      	MOVWF       R4 
0x7BDE	0x0E00      	MOVLW       0
0x7BE0	0x6E05      	MOVWF       R5 
0x7BE2	0x0E00      	MOVLW       0
0x7BE4	0x6E06      	MOVWF       R6 
0x7BE6	0x0E80      	MOVLW       128
0x7BE8	0x6E07      	MOVWF       R7 
0x7BEA	0xF007ECA7  	CALL        _Div_32x32_FP, 0
0x7BEE	0xF139C000  	MOVFF       R0, _pasajerosVerdaderos
0x7BF2	0xF13AC001  	MOVFF       R1, _pasajerosVerdaderos+1
0x7BF6	0xF13BC002  	MOVFF       R2, _pasajerosVerdaderos+2
0x7BFA	0xF13CC003  	MOVFF       R3, _pasajerosVerdaderos+3
;rutinasensores_v4(mstr-slv).h,1046 :: 		eepromEscribeNumero(0x0009, (unsigned int)pasajerosVerdaderos, 2);
0x7BFE	0x0E09      	MOVLW       9
0x7C00	0x0102      	MOVLB       2
0x7C02	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x7C04	0x0E00      	MOVLW       0
0x7C06	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x7C08	0xF006ECA0  	CALL        _Double2Word, 0
0x7C0C	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x7C10	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x7C14	0x0E00      	MOVLW       0
0x7C16	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x7C18	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x7C1A	0x0E02      	MOVLW       2
0x7C1C	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x7C1E	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,1047 :: 		if(MSTR){
0x7C22	0xA483      	BTFSS       PORTD, 2 
0x7C24	0xD085      	BRA         L_salioBT285
;rutinasensores_v4(mstr-slv).h,1048 :: 		pVerdaderosMEntero = eepromLeeNumero(0x0009, 2);
0x7C26	0x0E09      	MOVLW       9
0x7C28	0x0102      	MOVLB       2
0x7C2A	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x7C2C	0x0E00      	MOVLW       0
0x7C2E	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x7C30	0x0E02      	MOVLW       2
0x7C32	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x7C34	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x7C38	0xF12FC000  	MOVFF       R0, _pVerdaderosMEntero
0x7C3C	0xF130C001  	MOVFF       R1, _pVerdaderosMEntero+1
;rutinasensores_v4(mstr-slv).h,1049 :: 		pVerdaderosEEntero = eepromLeeNumero(0x0007, 2);
0x7C40	0x0E07      	MOVLW       7
0x7C42	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x7C44	0x0E00      	MOVLW       0
0x7C46	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x7C48	0x0E02      	MOVLW       2
0x7C4A	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x7C4C	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x7C50	0xF12DC000  	MOVFF       R0, _pVerdaderosEEntero
0x7C54	0xF12EC001  	MOVFF       R1, _pVerdaderosEEntero+1
;rutinasensores_v4(mstr-slv).h,1050 :: 		pasajerosTotalesL = pVerdaderosMEntero + pVerdaderosEEntero;
0x7C58	0x5000      	MOVF        R0, 0 
0x7C5A	0x0101      	MOVLB       1
0x7C5C	0x252F      	ADDWF       _pVerdaderosMEntero, 0, 1
0x7C5E	0x6F33      	MOVWF       _pasajerosTotalesL, 1
0x7C60	0x5001      	MOVF        R1, 0 
0x7C62	0x2130      	ADDWFC      _pVerdaderosMEntero+1, 0, 1
0x7C64	0x6F34      	MOVWF       _pasajerosTotalesL+1, 1
;rutinasensores_v4(mstr-slv).h,1051 :: 		totalCalculado = (eepromLeeNumero(0x0000, 2)+eepromLeeNumero(0x0003, 2)+eepromLeeNumero(0x0900, 2)+eepromLeeNumero(0x0700, 2))/2;
0x7C66	0x0102      	MOVLB       2
0x7C68	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x7C6A	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x7C6C	0x0E02      	MOVLW       2
0x7C6E	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x7C70	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x7C74	0xF215C000  	MOVFF       R0, FLOC__salioBT
0x7C78	0xF216C001  	MOVFF       R1, FLOC__salioBT+1
0x7C7C	0xF217C002  	MOVFF       R2, FLOC__salioBT+2
0x7C80	0xF218C003  	MOVFF       R3, FLOC__salioBT+3
0x7C84	0x0E03      	MOVLW       3
0x7C86	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x7C88	0x0E00      	MOVLW       0
0x7C8A	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x7C8C	0x0E02      	MOVLW       2
0x7C8E	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x7C90	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x7C94	0x5000      	MOVF        R0, 0 
0x7C96	0x2715      	ADDWF       FLOC__salioBT, 1, 1
0x7C98	0x5001      	MOVF        R1, 0 
0x7C9A	0x2316      	ADDWFC      FLOC__salioBT+1, 1, 1
0x7C9C	0x5002      	MOVF        R2, 0 
0x7C9E	0x2317      	ADDWFC      FLOC__salioBT+2, 1, 1
0x7CA0	0x5003      	MOVF        R3, 0 
0x7CA2	0x2318      	ADDWFC      FLOC__salioBT+3, 1, 1
0x7CA4	0x0E00      	MOVLW       0
0x7CA6	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x7CA8	0x0E09      	MOVLW       9
0x7CAA	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x7CAC	0x0E02      	MOVLW       2
0x7CAE	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x7CB0	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x7CB4	0x5000      	MOVF        R0, 0 
0x7CB6	0x2715      	ADDWF       FLOC__salioBT, 1, 1
0x7CB8	0x5001      	MOVF        R1, 0 
0x7CBA	0x2316      	ADDWFC      FLOC__salioBT+1, 1, 1
0x7CBC	0x5002      	MOVF        R2, 0 
0x7CBE	0x2317      	ADDWFC      FLOC__salioBT+2, 1, 1
0x7CC0	0x5003      	MOVF        R3, 0 
0x7CC2	0x2318      	ADDWFC      FLOC__salioBT+3, 1, 1
0x7CC4	0x0E00      	MOVLW       0
0x7CC6	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x7CC8	0x0E07      	MOVLW       7
0x7CCA	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x7CCC	0x0E02      	MOVLW       2
0x7CCE	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x7CD0	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x7CD4	0x5000      	MOVF        R0, 0 
0x7CD6	0x2515      	ADDWF       FLOC__salioBT, 0, 1
0x7CD8	0x6E05      	MOVWF       R5 
0x7CDA	0x5001      	MOVF        R1, 0 
0x7CDC	0x2116      	ADDWFC      FLOC__salioBT+1, 0, 1
0x7CDE	0x6E06      	MOVWF       R6 
0x7CE0	0x5002      	MOVF        R2, 0 
0x7CE2	0x2117      	ADDWFC      FLOC__salioBT+2, 0, 1
0x7CE4	0x6E07      	MOVWF       R7 
0x7CE6	0x5003      	MOVF        R3, 0 
0x7CE8	0x2118      	ADDWFC      FLOC__salioBT+3, 0, 1
0x7CEA	0x6E08      	MOVWF       R8 
0x7CEC	0xF000C005  	MOVFF       R5, R0
0x7CF0	0xF001C006  	MOVFF       R6, R1
0x7CF4	0xF002C007  	MOVFF       R7, R2
0x7CF8	0xF003C008  	MOVFF       R8, R3
0x7CFC	0x3203      	RRCF        R3, 1 
0x7CFE	0x3202      	RRCF        R2, 1 
0x7D00	0x3201      	RRCF        R1, 1 
0x7D02	0x3200      	RRCF        R0, 1 
0x7D04	0x9E03      	BCF         R3, 7 
0x7D06	0xBC03      	BTFSC       R3, 6 
0x7D08	0x8E03      	BSF         R3, 7 
0x7D0A	0xF131C000  	MOVFF       R0, _totalCalculado
0x7D0E	0xF132C001  	MOVFF       R1, _totalCalculado+1
;rutinasensores_v4(mstr-slv).h,1052 :: 		eepromEscribeNumero(0x0005, totalCalculado, 2);
0x7D12	0x0E05      	MOVLW       5
0x7D14	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x7D16	0x0E00      	MOVLW       0
0x7D18	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x7D1A	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x7D1E	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x7D22	0x0E00      	MOVLW       0
0x7D24	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x7D26	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x7D28	0x0E02      	MOVLW       2
0x7D2A	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x7D2C	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,1053 :: 		}
L_salioBT285:
;rutinasensores_v4(mstr-slv).h,1054 :: 		lcd_cmd(_LCD_CLEAR);
0x7D30	0x0E01      	MOVLW       1
0x7D32	0x0102      	MOVLB       2
0x7D34	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x7D36	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1055 :: 		return debugEstadoB = ESPERA;
0x7D3A	0x0101      	MOVLB       1
0x7D3C	0x6B3D      	CLRF        _debugEstadoB, 1
0x7D3E	0x6A00      	CLRF        R0 
0x7D40	0xD000      	BRA         L_end_salioBT
;rutinasensores_v4(mstr-slv).h,1056 :: 		}
L_salioBT284:
;rutinasensores_v4(mstr-slv).h,1057 :: 		}
L_end_salioBT:
0x7D42	0x0012      	RETURN      0
; end of _salioBT
_transicionEBC:
;rutinasensores_v4(mstr-slv).h,1091 :: 		short transicionEBC(short estado){
;rutinasensores_v4(mstr-slv).h,1092 :: 		if(estado == TRANSICION){
0x7D44	0x0102      	MOVLB       2
0x7D46	0x5114      	MOVF        FARG_transicionEBC_estado, 0, 1
0x7D48	0x0A02      	XORLW       2
0x7D4A	0xA4D8      	BTFSS       STATUS, 2 
0x7D4C	0xD085      	BRA         L_transicionEBC292
;rutinasensores_v4(mstr-slv).h,1093 :: 		LCD_OUTCONST(3,1,"TRANSICION");
0x7D4E	0x0E03      	MOVLW       3
0x7D50	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x7D52	0x0E01      	MOVLW       1
0x7D54	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x7D56	0x0EB0      	MOVLW       ?lstr_41_MyProject
0x7D58	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x7D5A	0x0ED8      	MOVLW       hi_addr(?lstr_41_MyProject)
0x7D5C	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x7D5E	0x0E00      	MOVLW       higher_addr(?lstr_41_MyProject)
0x7D60	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x7D62	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1094 :: 		if((SENSOR1 & SENSOR3) | (SENSOR3 & SENSOR5) | (SENSOR1 & SENSOR5)){
0x7D66	0xA881      	BTFSS       PORTB, 4 
0x7D68	0xD004      	BRA         L__transicionEBC1381
0x7D6A	0xA481      	BTFSS       PORTB, 2 
0x7D6C	0xD002      	BRA         L__transicionEBC1381
0x7D6E	0x8001      	BSF         R1, 0 
0x7D70	0xD001      	BRA         L__transicionEBC1382
L__transicionEBC1381:
0x7D72	0x9001      	BCF         R1, 0 
L__transicionEBC1382:
0x7D74	0xA481      	BTFSS       PORTB, 2 
0x7D76	0xD004      	BRA         L__transicionEBC1383
0x7D78	0xA081      	BTFSS       PORTB, 0 
0x7D7A	0xD002      	BRA         L__transicionEBC1383
0x7D7C	0x80D8      	BSF         STATUS, 0 
0x7D7E	0xD001      	BRA         L__transicionEBC1384
L__transicionEBC1383:
0x7D80	0x90D8      	BCF         STATUS, 0 
L__transicionEBC1384:
0x7D82	0xB001      	BTFSC       R1, 0 
0x7D84	0xD003      	BRA         L__transicionEBC1385
0x7D86	0xE202      	BC          L__transicionEBC1385
0x7D88	0x9001      	BCF         R1, 0 
0x7D8A	0xD001      	BRA         L__transicionEBC1386
L__transicionEBC1385:
0x7D8C	0x8001      	BSF         R1, 0 
L__transicionEBC1386:
0x7D8E	0xA881      	BTFSS       PORTB, 4 
0x7D90	0xD004      	BRA         L__transicionEBC1387
0x7D92	0xA081      	BTFSS       PORTB, 0 
0x7D94	0xD002      	BRA         L__transicionEBC1387
0x7D96	0x80D8      	BSF         STATUS, 0 
0x7D98	0xD001      	BRA         L__transicionEBC1388
L__transicionEBC1387:
0x7D9A	0x90D8      	BCF         STATUS, 0 
L__transicionEBC1388:
0x7D9C	0xB001      	BTFSC       R1, 0 
0x7D9E	0xD003      	BRA         L__transicionEBC1389
0x7DA0	0xE202      	BC          L__transicionEBC1389
0x7DA2	0x9001      	BCF         R1, 0 
0x7DA4	0xD001      	BRA         L__transicionEBC1390
L__transicionEBC1389:
0x7DA6	0x8001      	BSF         R1, 0 
L__transicionEBC1390:
0x7DA8	0xA001      	BTFSS       R1, 0 
0x7DAA	0xD00A      	BRA         L_transicionEBC293
;rutinasensores_v4(mstr-slv).h,1095 :: 		lcd_cmd(_LCD_CLEAR);
0x7DAC	0x0E01      	MOVLW       1
0x7DAE	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x7DB0	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1096 :: 		return debugEstadoB = TRANENT;
0x7DB4	0x0E07      	MOVLW       7
0x7DB6	0x0101      	MOVLB       1
0x7DB8	0x6F3D      	MOVWF       _debugEstadoB, 1
0x7DBA	0x0E07      	MOVLW       7
0x7DBC	0x6E00      	MOVWF       R0 
0x7DBE	0xD04C      	BRA         L_end_transicionEBC
;rutinasensores_v4(mstr-slv).h,1097 :: 		}
L_transicionEBC293:
;rutinasensores_v4(mstr-slv).h,1098 :: 		if((SENSOR2 & SENSOR6 & !SENSOR1) | (SENSOR2 & SENSOR6 & !SENSOR3) | (SENSOR2 & SENSOR6 & !SENSOR5)){
0x7DC0	0xA883      	BTFSS       PORTD, 4 
0x7DC2	0xD004      	BRA         L__transicionEBC1391
0x7DC4	0xA281      	BTFSS       PORTB, 1 
0x7DC6	0xD002      	BRA         L__transicionEBC1391
0x7DC8	0x8401      	BSF         R1, 2 
0x7DCA	0xD001      	BRA         L__transicionEBC1392
L__transicionEBC1391:
0x7DCC	0x9401      	BCF         R1, 2 
L__transicionEBC1392:
0x7DCE	0xB881      	BTFSC       PORTB, 4 
0x7DD0	0xD002      	BRA         L__transicionEBC1393
0x7DD2	0x80D8      	BSF         STATUS, 0 
0x7DD4	0xD001      	BRA         L__transicionEBC1394
L__transicionEBC1393:
0x7DD6	0x90D8      	BCF         STATUS, 0 
L__transicionEBC1394:
0x7DD8	0xA401      	BTFSS       R1, 2 
0x7DDA	0xD003      	BRA         L__transicionEBC1395
0x7DDC	0xE302      	BNC         L__transicionEBC1395
0x7DDE	0x8201      	BSF         R1, 1 
0x7DE0	0xD001      	BRA         L__transicionEBC1396
L__transicionEBC1395:
0x7DE2	0x9201      	BCF         R1, 1 
L__transicionEBC1396:
0x7DE4	0xB401      	BTFSC       R1, 2 
0x7DE6	0xD002      	BRA         L__transicionEBC1397
0x7DE8	0x9001      	BCF         R1, 0 
0x7DEA	0xD001      	BRA         L__transicionEBC1398
L__transicionEBC1397:
0x7DEC	0x8001      	BSF         R1, 0 
L__transicionEBC1398:
0x7DEE	0xB481      	BTFSC       PORTB, 2 
0x7DF0	0xD002      	BRA         L__transicionEBC1399
0x7DF2	0x80D8      	BSF         STATUS, 0 
0x7DF4	0xD001      	BRA         L__transicionEBC1400
L__transicionEBC1399:
0x7DF6	0x90D8      	BCF         STATUS, 0 
L__transicionEBC1400:
0x7DF8	0xA001      	BTFSS       R1, 0 
0x7DFA	0xD003      	BRA         L__transicionEBC1401
0x7DFC	0xE302      	BNC         L__transicionEBC1401
0x7DFE	0x8001      	BSF         R1, 0 
0x7E00	0xD001      	BRA         L__transicionEBC1402
L__transicionEBC1401:
0x7E02	0x9001      	BCF         R1, 0 
L__transicionEBC1402:
0x7E04	0xB201      	BTFSC       R1, 1 
0x7E06	0xD004      	BRA         L__transicionEBC1403
0x7E08	0xB001      	BTFSC       R1, 0 
0x7E0A	0xD002      	BRA         L__transicionEBC1403
0x7E0C	0x9201      	BCF         R1, 1 
0x7E0E	0xD001      	BRA         L__transicionEBC1404
L__transicionEBC1403:
0x7E10	0x8201      	BSF         R1, 1 
L__transicionEBC1404:
0x7E12	0xB401      	BTFSC       R1, 2 
0x7E14	0xD002      	BRA         L__transicionEBC1405
0x7E16	0x9001      	BCF         R1, 0 
0x7E18	0xD001      	BRA         L__transicionEBC1406
L__transicionEBC1405:
0x7E1A	0x8001      	BSF         R1, 0 
L__transicionEBC1406:
0x7E1C	0xB081      	BTFSC       PORTB, 0 
0x7E1E	0xD002      	BRA         L__transicionEBC1407
0x7E20	0x80D8      	BSF         STATUS, 0 
0x7E22	0xD001      	BRA         L__transicionEBC1408
L__transicionEBC1407:
0x7E24	0x90D8      	BCF         STATUS, 0 
L__transicionEBC1408:
0x7E26	0xA001      	BTFSS       R1, 0 
0x7E28	0xD003      	BRA         L__transicionEBC1409
0x7E2A	0xE302      	BNC         L__transicionEBC1409
0x7E2C	0x8001      	BSF         R1, 0 
0x7E2E	0xD001      	BRA         L__transicionEBC1410
L__transicionEBC1409:
0x7E30	0x9001      	BCF         R1, 0 
L__transicionEBC1410:
0x7E32	0xB201      	BTFSC       R1, 1 
0x7E34	0xD004      	BRA         L__transicionEBC1411
0x7E36	0xB001      	BTFSC       R1, 0 
0x7E38	0xD002      	BRA         L__transicionEBC1411
0x7E3A	0x90D8      	BCF         STATUS, 0 
0x7E3C	0xD001      	BRA         L__transicionEBC1412
L__transicionEBC1411:
0x7E3E	0x80D8      	BSF         STATUS, 0 
L__transicionEBC1412:
0x7E40	0xE30B      	BNC         L_transicionEBC294
;rutinasensores_v4(mstr-slv).h,1099 :: 		lcd_cmd(_LCD_CLEAR);
0x7E42	0x0E01      	MOVLW       1
0x7E44	0x0102      	MOVLB       2
0x7E46	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x7E48	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1100 :: 		return debugEstadoB = ENTRANDO;
0x7E4C	0x0E01      	MOVLW       1
0x7E4E	0x0101      	MOVLB       1
0x7E50	0x6F3D      	MOVWF       _debugEstadoB, 1
0x7E52	0x0E01      	MOVLW       1
0x7E54	0x6E00      	MOVWF       R0 
0x7E56	0xD000      	BRA         L_end_transicionEBC
;rutinasensores_v4(mstr-slv).h,1101 :: 		}
L_transicionEBC294:
;rutinasensores_v4(mstr-slv).h,1102 :: 		}
L_transicionEBC292:
;rutinasensores_v4(mstr-slv).h,1103 :: 		}
L_end_transicionEBC:
0x7E58	0x0012      	RETURN      0
; end of _transicionEBC
_transicionEntBC:
;rutinasensores_v4(mstr-slv).h,1105 :: 		short transicionEntBC(short estado){
;rutinasensores_v4(mstr-slv).h,1106 :: 		if(estado == TRANENT){
0x7E5A	0x0102      	MOVLB       2
0x7E5C	0x5114      	MOVF        FARG_transicionEntBC_estado, 0, 1
0x7E5E	0x0A07      	XORLW       7
0x7E60	0xE146      	BNZ         L_transicionEntBC295
;rutinasensores_v4(mstr-slv).h,1107 :: 		LCD_OUTCONST(3,1,"TRANSICION ENTRADA");
0x7E62	0x0E03      	MOVLW       3
0x7E64	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x7E66	0x0E01      	MOVLW       1
0x7E68	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x7E6A	0x0E4E      	MOVLW       ?lstr_42_MyProject
0x7E6C	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x7E6E	0x0ED5      	MOVLW       hi_addr(?lstr_42_MyProject)
0x7E70	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x7E72	0x0E00      	MOVLW       higher_addr(?lstr_42_MyProject)
0x7E74	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x7E76	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1108 :: 		if((!SENSOR3 & !SENSOR1 & !SENSOR5)/*(!SENSOR1 | !SENSOR3) | (!SENSOR3 | !SENSOR5) | (!SENSOR1 | !SENSOR5)*/){
0x7E7A	0xB481      	BTFSC       PORTB, 2 
0x7E7C	0xD002      	BRA         L__transicionEntBC1414
0x7E7E	0x8001      	BSF         R1, 0 
0x7E80	0xD001      	BRA         L__transicionEntBC1415
L__transicionEntBC1414:
0x7E82	0x9001      	BCF         R1, 0 
L__transicionEntBC1415:
0x7E84	0xB881      	BTFSC       PORTB, 4 
0x7E86	0xD002      	BRA         L__transicionEntBC1416
0x7E88	0x80D8      	BSF         STATUS, 0 
0x7E8A	0xD001      	BRA         L__transicionEntBC1417
L__transicionEntBC1416:
0x7E8C	0x90D8      	BCF         STATUS, 0 
L__transicionEntBC1417:
0x7E8E	0xA001      	BTFSS       R1, 0 
0x7E90	0xD003      	BRA         L__transicionEntBC1418
0x7E92	0xE302      	BNC         L__transicionEntBC1418
0x7E94	0x8001      	BSF         R1, 0 
0x7E96	0xD001      	BRA         L__transicionEntBC1419
L__transicionEntBC1418:
0x7E98	0x9001      	BCF         R1, 0 
L__transicionEntBC1419:
0x7E9A	0xB081      	BTFSC       PORTB, 0 
0x7E9C	0xD002      	BRA         L__transicionEntBC1420
0x7E9E	0x80D8      	BSF         STATUS, 0 
0x7EA0	0xD001      	BRA         L__transicionEntBC1421
L__transicionEntBC1420:
0x7EA2	0x90D8      	BCF         STATUS, 0 
L__transicionEntBC1421:
0x7EA4	0xA001      	BTFSS       R1, 0 
0x7EA6	0xD003      	BRA         L__transicionEntBC1422
0x7EA8	0xE302      	BNC         L__transicionEntBC1422
0x7EAA	0x8001      	BSF         R1, 0 
0x7EAC	0xD001      	BRA         L__transicionEntBC1423
L__transicionEntBC1422:
0x7EAE	0x9001      	BCF         R1, 0 
L__transicionEntBC1423:
0x7EB0	0xA001      	BTFSS       R1, 0 
0x7EB2	0xD00A      	BRA         L_transicionEntBC296
;rutinasensores_v4(mstr-slv).h,1109 :: 		lcd_cmd(_LCD_CLEAR);
0x7EB4	0x0E01      	MOVLW       1
0x7EB6	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x7EB8	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1110 :: 		return debugEstadoB = TRANSICION;
0x7EBC	0x0E02      	MOVLW       2
0x7EBE	0x0101      	MOVLB       1
0x7EC0	0x6F3D      	MOVWF       _debugEstadoB, 1
0x7EC2	0x0E02      	MOVLW       2
0x7EC4	0x6E00      	MOVWF       R0 
0x7EC6	0xD013      	BRA         L_end_transicionEntBC
;rutinasensores_v4(mstr-slv).h,1111 :: 		}
L_transicionEntBC296:
;rutinasensores_v4(mstr-slv).h,1112 :: 		if(/*(SENSOR2 & SENSOR4) | (SENSOR4 & SENSOR6) | (SENSOR2 & SENSOR6) | */(SENSOR2 & SENSOR6)){
0x7EC8	0xA883      	BTFSS       PORTD, 4 
0x7ECA	0xD004      	BRA         L__transicionEntBC1424
0x7ECC	0xA281      	BTFSS       PORTB, 1 
0x7ECE	0xD002      	BRA         L__transicionEntBC1424
0x7ED0	0x80D8      	BSF         STATUS, 0 
0x7ED2	0xD001      	BRA         L__transicionEntBC1425
L__transicionEntBC1424:
0x7ED4	0x90D8      	BCF         STATUS, 0 
L__transicionEntBC1425:
0x7ED6	0xE30B      	BNC         L_transicionEntBC297
;rutinasensores_v4(mstr-slv).h,1113 :: 		lcd_cmd(_LCD_CLEAR);
0x7ED8	0x0E01      	MOVLW       1
0x7EDA	0x0102      	MOVLB       2
0x7EDC	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x7EDE	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1114 :: 		return debugEstadoB = ENTRO;
0x7EE2	0x0E03      	MOVLW       3
0x7EE4	0x0101      	MOVLB       1
0x7EE6	0x6F3D      	MOVWF       _debugEstadoB, 1
0x7EE8	0x0E03      	MOVLW       3
0x7EEA	0x6E00      	MOVWF       R0 
0x7EEC	0xD000      	BRA         L_end_transicionEntBC
;rutinasensores_v4(mstr-slv).h,1115 :: 		}
L_transicionEntBC297:
;rutinasensores_v4(mstr-slv).h,1116 :: 		}
L_transicionEntBC295:
;rutinasensores_v4(mstr-slv).h,1117 :: 		}
L_end_transicionEntBC:
0x7EEE	0x0012      	RETURN      0
; end of _transicionEntBC
_transicionEntBO:
;rutinasensores_v4(mstr-slv).h,1249 :: 		short transicionEntBO(short estado){
;rutinasensores_v4(mstr-slv).h,1250 :: 		if(estado == TRANENT){
0x7EF0	0x0102      	MOVLB       2
0x7EF2	0x5114      	MOVF        FARG_transicionEntBO_estado, 0, 1
0x7EF4	0x0A07      	XORLW       7
0x7EF6	0xE142      	BNZ         L_transicionEntBO320
;rutinasensores_v4(mstr-slv).h,1251 :: 		LCD_OUTCONST(3,1,"TRANSICION ENTRADA");
0x7EF8	0x0E03      	MOVLW       3
0x7EFA	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x7EFC	0x0E01      	MOVLW       1
0x7EFE	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x7F00	0x0EAD      	MOVLW       ?lstr_50_MyProject
0x7F02	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x7F04	0x0ED5      	MOVLW       hi_addr(?lstr_50_MyProject)
0x7F06	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x7F08	0x0E00      	MOVLW       higher_addr(?lstr_50_MyProject)
0x7F0A	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x7F0C	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1252 :: 		if((!SENSOR3 & !SENSOR1)/*(!SENSOR1 | !SENSOR3) | (!SENSOR3 | !SENSOR5) | (!SENSOR1 | !SENSOR5)*/){
0x7F10	0xB481      	BTFSC       PORTB, 2 
0x7F12	0xD002      	BRA         L__transicionEntBO1545
0x7F14	0x8001      	BSF         R1, 0 
0x7F16	0xD001      	BRA         L__transicionEntBO1546
L__transicionEntBO1545:
0x7F18	0x9001      	BCF         R1, 0 
L__transicionEntBO1546:
0x7F1A	0xB881      	BTFSC       PORTB, 4 
0x7F1C	0xD002      	BRA         L__transicionEntBO1547
0x7F1E	0x80D8      	BSF         STATUS, 0 
0x7F20	0xD001      	BRA         L__transicionEntBO1548
L__transicionEntBO1547:
0x7F22	0x90D8      	BCF         STATUS, 0 
L__transicionEntBO1548:
0x7F24	0xA001      	BTFSS       R1, 0 
0x7F26	0xD003      	BRA         L__transicionEntBO1549
0x7F28	0xE302      	BNC         L__transicionEntBO1549
0x7F2A	0x8001      	BSF         R1, 0 
0x7F2C	0xD001      	BRA         L__transicionEntBO1550
L__transicionEntBO1549:
0x7F2E	0x9001      	BCF         R1, 0 
L__transicionEntBO1550:
0x7F30	0xA001      	BTFSS       R1, 0 
0x7F32	0xD00A      	BRA         L_transicionEntBO321
;rutinasensores_v4(mstr-slv).h,1253 :: 		lcd_cmd(_LCD_CLEAR);
0x7F34	0x0E01      	MOVLW       1
0x7F36	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x7F38	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1254 :: 		return debugEstadoB = TRANSICION;
0x7F3C	0x0E02      	MOVLW       2
0x7F3E	0x0101      	MOVLB       1
0x7F40	0x6F3D      	MOVWF       _debugEstadoB, 1
0x7F42	0x0E02      	MOVLW       2
0x7F44	0x6E00      	MOVWF       R0 
0x7F46	0xD01A      	BRA         L_end_transicionEntBO
;rutinasensores_v4(mstr-slv).h,1255 :: 		}
L_transicionEntBO321:
;rutinasensores_v4(mstr-slv).h,1256 :: 		if(/*(SENSOR2 & SENSOR4) | (SENSOR4 & SENSOR6) | (SENSOR2 & SENSOR6) | */(SENSOR2 & SENSOR4 & SENSOR6)){
0x7F48	0xA883      	BTFSS       PORTD, 4 
0x7F4A	0xD004      	BRA         L__transicionEntBO1551
0x7F4C	0xA681      	BTFSS       PORTB, 3 
0x7F4E	0xD002      	BRA         L__transicionEntBO1551
0x7F50	0x80D8      	BSF         STATUS, 0 
0x7F52	0xD001      	BRA         L__transicionEntBO1552
L__transicionEntBO1551:
0x7F54	0x90D8      	BCF         STATUS, 0 
L__transicionEntBO1552:
0x7F56	0xE304      	BNC         L__transicionEntBO1553
0x7F58	0xA281      	BTFSS       PORTB, 1 
0x7F5A	0xD002      	BRA         L__transicionEntBO1553
0x7F5C	0x8001      	BSF         R1, 0 
0x7F5E	0xD001      	BRA         L__transicionEntBO1554
L__transicionEntBO1553:
0x7F60	0x9001      	BCF         R1, 0 
L__transicionEntBO1554:
0x7F62	0xA001      	BTFSS       R1, 0 
0x7F64	0xD00B      	BRA         L_transicionEntBO322
;rutinasensores_v4(mstr-slv).h,1257 :: 		lcd_cmd(_LCD_CLEAR);
0x7F66	0x0E01      	MOVLW       1
0x7F68	0x0102      	MOVLB       2
0x7F6A	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x7F6C	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1258 :: 		return debugEstadoB = ENTRO;
0x7F70	0x0E03      	MOVLW       3
0x7F72	0x0101      	MOVLB       1
0x7F74	0x6F3D      	MOVWF       _debugEstadoB, 1
0x7F76	0x0E03      	MOVLW       3
0x7F78	0x6E00      	MOVWF       R0 
0x7F7A	0xD000      	BRA         L_end_transicionEntBO
;rutinasensores_v4(mstr-slv).h,1259 :: 		}
L_transicionEntBO322:
;rutinasensores_v4(mstr-slv).h,1260 :: 		}
L_transicionEntBO320:
;rutinasensores_v4(mstr-slv).h,1261 :: 		}
L_end_transicionEntBO:
0x7F7C	0x0012      	RETURN      0
; end of _transicionEntBO
_entroBO:
;rutinasensores_v4(mstr-slv).h,1263 :: 		short entroBO(short estado){
;rutinasensores_v4(mstr-slv).h,1264 :: 		if(estado == ENTRO){
0x7F7E	0x0102      	MOVLB       2
0x7F80	0x5114      	MOVF        FARG_entroBO_estado, 0, 1
0x7F82	0x0A03      	XORLW       3
0x7F84	0xA4D8      	BTFSS       STATUS, 2 
0x7F86	0xD10A      	BRA         L_entroBO323
;rutinasensores_v4(mstr-slv).h,1265 :: 		LCD_OUTCONST(3,1,"BIENVENIDO: $6.00");
0x7F88	0x0E03      	MOVLW       3
0x7F8A	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x7F8C	0x0E01      	MOVLW       1
0x7F8E	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x7F90	0x0EB0      	MOVLW       ?lstr_51_MyProject
0x7F92	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x7F94	0x0ED6      	MOVLW       hi_addr(?lstr_51_MyProject)
0x7F96	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x7F98	0x0E00      	MOVLW       higher_addr(?lstr_51_MyProject)
0x7F9A	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x7F9C	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1266 :: 		pBajan = eepromLeeNumero(0x0003,2);
0x7FA0	0x0E03      	MOVLW       3
0x7FA2	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x7FA4	0x0E00      	MOVLW       0
0x7FA6	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x7FA8	0x0E02      	MOVLW       2
0x7FAA	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x7FAC	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x7FB0	0xF135C000  	MOVFF       R0, _pBajan
0x7FB4	0xF136C001  	MOVFF       R1, _pBajan+1
;rutinasensores_v4(mstr-slv).h,1267 :: 		pSuben = eepromLeeNumero(0x0000,2) + 1;
0x7FB8	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x7FBA	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x7FBC	0x0E02      	MOVLW       2
0x7FBE	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x7FC0	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x7FC4	0x4A00      	INFSNZ      R0, 1 
0x7FC6	0x2A01      	INCF        R1, 1 
0x7FC8	0xF137C000  	MOVFF       R0, _pSuben
0x7FCC	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,1268 :: 		eepromEscribeNumero(0x0000,pSuben,2);
0x7FD0	0x6B1D      	CLRF        FARG_eepromEscribeNumero_Registro, 1
0x7FD2	0x6B1E      	CLRF        FARG_eepromEscribeNumero_Registro+1, 1
0x7FD4	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x7FD8	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x7FDC	0x0E00      	MOVLW       0
0x7FDE	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x7FE0	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x7FE2	0x0E02      	MOVLW       2
0x7FE4	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x7FE6	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,1269 :: 		pSuben = eepromLeeNumero(0x0000, 2);
0x7FEA	0x0102      	MOVLB       2
0x7FEC	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x7FEE	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x7FF0	0x0E02      	MOVLW       2
0x7FF2	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x7FF4	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x7FF8	0xF137C000  	MOVFF       R0, _pSuben
0x7FFC	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,1270 :: 		pasajerosVerdaderos = ((float)pSuben + (float)pBajan)/2;
0x8000	0xF008EC65  	CALL        _Word2Double, 0
0x8004	0xF215C000  	MOVFF       R0, FLOC__entroBO
0x8008	0xF216C001  	MOVFF       R1, FLOC__entroBO+1
0x800C	0xF217C002  	MOVFF       R2, FLOC__entroBO+2
0x8010	0xF218C003  	MOVFF       R3, FLOC__entroBO+3
0x8014	0xF000C135  	MOVFF       _pBajan, R0
0x8018	0xF001C136  	MOVFF       _pBajan+1, R1
0x801C	0xF008EC65  	CALL        _Word2Double, 0
0x8020	0xF004C215  	MOVFF       FLOC__entroBO, R4
0x8024	0xF005C216  	MOVFF       FLOC__entroBO+1, R5
0x8028	0xF006C217  	MOVFF       FLOC__entroBO+2, R6
0x802C	0xF007C218  	MOVFF       FLOC__entroBO+3, R7
0x8030	0xF004EC8D  	CALL        _Add_32x32_FP, 0
0x8034	0x0E00      	MOVLW       0
0x8036	0x6E04      	MOVWF       R4 
0x8038	0x0E00      	MOVLW       0
0x803A	0x6E05      	MOVWF       R5 
0x803C	0x0E00      	MOVLW       0
0x803E	0x6E06      	MOVWF       R6 
0x8040	0x0E80      	MOVLW       128
0x8042	0x6E07      	MOVWF       R7 
0x8044	0xF007ECA7  	CALL        _Div_32x32_FP, 0
0x8048	0xF139C000  	MOVFF       R0, _pasajerosVerdaderos
0x804C	0xF13AC001  	MOVFF       R1, _pasajerosVerdaderos+1
0x8050	0xF13BC002  	MOVFF       R2, _pasajerosVerdaderos+2
0x8054	0xF13CC003  	MOVFF       R3, _pasajerosVerdaderos+3
;rutinasensores_v4(mstr-slv).h,1271 :: 		eepromEscribeNumero(0x0009, (unsigned int)pasajerosVerdaderos, 2);
0x8058	0x0E09      	MOVLW       9
0x805A	0x0102      	MOVLB       2
0x805C	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x805E	0x0E00      	MOVLW       0
0x8060	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x8062	0xF006ECA0  	CALL        _Double2Word, 0
0x8066	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x806A	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x806E	0x0E00      	MOVLW       0
0x8070	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x8072	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x8074	0x0E02      	MOVLW       2
0x8076	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x8078	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,1272 :: 		if(MSTR){
0x807C	0xA483      	BTFSS       PORTD, 2 
0x807E	0xD085      	BRA         L_entroBO324
;rutinasensores_v4(mstr-slv).h,1273 :: 		pVerdaderosMEntero = eepromLeeNumero(0x0009, 2);
0x8080	0x0E09      	MOVLW       9
0x8082	0x0102      	MOVLB       2
0x8084	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x8086	0x0E00      	MOVLW       0
0x8088	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x808A	0x0E02      	MOVLW       2
0x808C	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x808E	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x8092	0xF12FC000  	MOVFF       R0, _pVerdaderosMEntero
0x8096	0xF130C001  	MOVFF       R1, _pVerdaderosMEntero+1
;rutinasensores_v4(mstr-slv).h,1274 :: 		pVerdaderosEEntero = eepromLeeNumero(0x0007, 2);
0x809A	0x0E07      	MOVLW       7
0x809C	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x809E	0x0E00      	MOVLW       0
0x80A0	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x80A2	0x0E02      	MOVLW       2
0x80A4	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x80A6	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x80AA	0xF12DC000  	MOVFF       R0, _pVerdaderosEEntero
0x80AE	0xF12EC001  	MOVFF       R1, _pVerdaderosEEntero+1
;rutinasensores_v4(mstr-slv).h,1275 :: 		pasajerosTotalesL = pVerdaderosMEntero + pVerdaderosEEntero;
0x80B2	0x5000      	MOVF        R0, 0 
0x80B4	0x0101      	MOVLB       1
0x80B6	0x252F      	ADDWF       _pVerdaderosMEntero, 0, 1
0x80B8	0x6F33      	MOVWF       _pasajerosTotalesL, 1
0x80BA	0x5001      	MOVF        R1, 0 
0x80BC	0x2130      	ADDWFC      _pVerdaderosMEntero+1, 0, 1
0x80BE	0x6F34      	MOVWF       _pasajerosTotalesL+1, 1
;rutinasensores_v4(mstr-slv).h,1276 :: 		totalCalculado = (eepromLeeNumero(0x0000, 2)+eepromLeeNumero(0x0003, 2)+eepromLeeNumero(0x0900, 2)+eepromLeeNumero(0x0700, 2))/2;
0x80C0	0x0102      	MOVLB       2
0x80C2	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x80C4	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x80C6	0x0E02      	MOVLW       2
0x80C8	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x80CA	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x80CE	0xF215C000  	MOVFF       R0, FLOC__entroBO
0x80D2	0xF216C001  	MOVFF       R1, FLOC__entroBO+1
0x80D6	0xF217C002  	MOVFF       R2, FLOC__entroBO+2
0x80DA	0xF218C003  	MOVFF       R3, FLOC__entroBO+3
0x80DE	0x0E03      	MOVLW       3
0x80E0	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x80E2	0x0E00      	MOVLW       0
0x80E4	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x80E6	0x0E02      	MOVLW       2
0x80E8	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x80EA	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x80EE	0x5000      	MOVF        R0, 0 
0x80F0	0x2715      	ADDWF       FLOC__entroBO, 1, 1
0x80F2	0x5001      	MOVF        R1, 0 
0x80F4	0x2316      	ADDWFC      FLOC__entroBO+1, 1, 1
0x80F6	0x5002      	MOVF        R2, 0 
0x80F8	0x2317      	ADDWFC      FLOC__entroBO+2, 1, 1
0x80FA	0x5003      	MOVF        R3, 0 
0x80FC	0x2318      	ADDWFC      FLOC__entroBO+3, 1, 1
0x80FE	0x0E00      	MOVLW       0
0x8100	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x8102	0x0E09      	MOVLW       9
0x8104	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x8106	0x0E02      	MOVLW       2
0x8108	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x810A	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x810E	0x5000      	MOVF        R0, 0 
0x8110	0x2715      	ADDWF       FLOC__entroBO, 1, 1
0x8112	0x5001      	MOVF        R1, 0 
0x8114	0x2316      	ADDWFC      FLOC__entroBO+1, 1, 1
0x8116	0x5002      	MOVF        R2, 0 
0x8118	0x2317      	ADDWFC      FLOC__entroBO+2, 1, 1
0x811A	0x5003      	MOVF        R3, 0 
0x811C	0x2318      	ADDWFC      FLOC__entroBO+3, 1, 1
0x811E	0x0E00      	MOVLW       0
0x8120	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x8122	0x0E07      	MOVLW       7
0x8124	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x8126	0x0E02      	MOVLW       2
0x8128	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x812A	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x812E	0x5000      	MOVF        R0, 0 
0x8130	0x2515      	ADDWF       FLOC__entroBO, 0, 1
0x8132	0x6E05      	MOVWF       R5 
0x8134	0x5001      	MOVF        R1, 0 
0x8136	0x2116      	ADDWFC      FLOC__entroBO+1, 0, 1
0x8138	0x6E06      	MOVWF       R6 
0x813A	0x5002      	MOVF        R2, 0 
0x813C	0x2117      	ADDWFC      FLOC__entroBO+2, 0, 1
0x813E	0x6E07      	MOVWF       R7 
0x8140	0x5003      	MOVF        R3, 0 
0x8142	0x2118      	ADDWFC      FLOC__entroBO+3, 0, 1
0x8144	0x6E08      	MOVWF       R8 
0x8146	0xF000C005  	MOVFF       R5, R0
0x814A	0xF001C006  	MOVFF       R6, R1
0x814E	0xF002C007  	MOVFF       R7, R2
0x8152	0xF003C008  	MOVFF       R8, R3
0x8156	0x3203      	RRCF        R3, 1 
0x8158	0x3202      	RRCF        R2, 1 
0x815A	0x3201      	RRCF        R1, 1 
0x815C	0x3200      	RRCF        R0, 1 
0x815E	0x9E03      	BCF         R3, 7 
0x8160	0xBC03      	BTFSC       R3, 6 
0x8162	0x8E03      	BSF         R3, 7 
0x8164	0xF131C000  	MOVFF       R0, _totalCalculado
0x8168	0xF132C001  	MOVFF       R1, _totalCalculado+1
;rutinasensores_v4(mstr-slv).h,1277 :: 		eepromEscribeNumero(0x0005, totalCalculado, 2);
0x816C	0x0E05      	MOVLW       5
0x816E	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x8170	0x0E00      	MOVLW       0
0x8172	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x8174	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x8178	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x817C	0x0E00      	MOVLW       0
0x817E	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x8180	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x8182	0x0E02      	MOVLW       2
0x8184	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x8186	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,1278 :: 		}
L_entroBO324:
;rutinasensores_v4(mstr-slv).h,1279 :: 		lcd_cmd(_LCD_CLEAR);
0x818A	0x0E01      	MOVLW       1
0x818C	0x0102      	MOVLB       2
0x818E	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x8190	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1280 :: 		return debugEstadoB = ESPERA;
0x8194	0x0101      	MOVLB       1
0x8196	0x6B3D      	CLRF        _debugEstadoB, 1
0x8198	0x6A00      	CLRF        R0 
0x819A	0xD000      	BRA         L_end_entroBO
;rutinasensores_v4(mstr-slv).h,1281 :: 		}
L_entroBO323:
;rutinasensores_v4(mstr-slv).h,1282 :: 		}
L_end_entroBO:
0x819C	0x0012      	RETURN      0
; end of _entroBO
_esperaBO:
;rutinasensores_v4(mstr-slv).h,1207 :: 		short esperaBO(short estado){
;rutinasensores_v4(mstr-slv).h,1208 :: 		if(estado == ESPERA){
0x819E	0x0102      	MOVLB       2
0x81A0	0x5114      	MOVF        FARG_esperaBO_estado, 0, 1
0x81A2	0x0A00      	XORLW       0
0x81A4	0xE146      	BNZ         L_esperaBO311
;rutinasensores_v4(mstr-slv).h,1209 :: 		muestraEstatus();
0x81A6	0xF008EC8B  	CALL        _muestraEstatus, 0
;rutinasensores_v4(mstr-slv).h,1210 :: 		if((!SENSOR1 | !SENSOR3)){
0x81AA	0xB881      	BTFSC       PORTB, 4 
0x81AC	0xD002      	BRA         L__esperaBO1484
0x81AE	0x8001      	BSF         R1, 0 
0x81B0	0xD001      	BRA         L__esperaBO1485
L__esperaBO1484:
0x81B2	0x9001      	BCF         R1, 0 
L__esperaBO1485:
0x81B4	0xB481      	BTFSC       PORTB, 2 
0x81B6	0xD002      	BRA         L__esperaBO1486
0x81B8	0x80D8      	BSF         STATUS, 0 
0x81BA	0xD001      	BRA         L__esperaBO1487
L__esperaBO1486:
0x81BC	0x90D8      	BCF         STATUS, 0 
L__esperaBO1487:
0x81BE	0xB001      	BTFSC       R1, 0 
0x81C0	0xD003      	BRA         L__esperaBO1488
0x81C2	0xE202      	BC          L__esperaBO1488
0x81C4	0x9001      	BCF         R1, 0 
0x81C6	0xD001      	BRA         L__esperaBO1489
L__esperaBO1488:
0x81C8	0x8001      	BSF         R1, 0 
L__esperaBO1489:
0x81CA	0xA001      	BTFSS       R1, 0 
0x81CC	0xD00A      	BRA         L_esperaBO312
;rutinasensores_v4(mstr-slv).h,1211 :: 		lcd_cmd(_LCD_CLEAR);
0x81CE	0x0E01      	MOVLW       1
0x81D0	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x81D2	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1212 :: 		return debugEstadoB = ENTRANDO;
0x81D6	0x0E01      	MOVLW       1
0x81D8	0x0101      	MOVLB       1
0x81DA	0x6F3D      	MOVWF       _debugEstadoB, 1
0x81DC	0x0E01      	MOVLW       1
0x81DE	0x6E00      	MOVWF       R0 
0x81E0	0xD028      	BRA         L_end_esperaBO
;rutinasensores_v4(mstr-slv).h,1213 :: 		}
L_esperaBO312:
;rutinasensores_v4(mstr-slv).h,1214 :: 		if((!SENSOR2 | !SENSOR4 | !SENSOR6)){
0x81E2	0xB883      	BTFSC       PORTD, 4 
0x81E4	0xD002      	BRA         L__esperaBO1490
0x81E6	0x8001      	BSF         R1, 0 
0x81E8	0xD001      	BRA         L__esperaBO1491
L__esperaBO1490:
0x81EA	0x9001      	BCF         R1, 0 
L__esperaBO1491:
0x81EC	0xB681      	BTFSC       PORTB, 3 
0x81EE	0xD002      	BRA         L__esperaBO1492
0x81F0	0x80D8      	BSF         STATUS, 0 
0x81F2	0xD001      	BRA         L__esperaBO1493
L__esperaBO1492:
0x81F4	0x90D8      	BCF         STATUS, 0 
L__esperaBO1493:
0x81F6	0xB001      	BTFSC       R1, 0 
0x81F8	0xD003      	BRA         L__esperaBO1494
0x81FA	0xE202      	BC          L__esperaBO1494
0x81FC	0x9001      	BCF         R1, 0 
0x81FE	0xD001      	BRA         L__esperaBO1495
L__esperaBO1494:
0x8200	0x8001      	BSF         R1, 0 
L__esperaBO1495:
0x8202	0xB281      	BTFSC       PORTB, 1 
0x8204	0xD002      	BRA         L__esperaBO1496
0x8206	0x80D8      	BSF         STATUS, 0 
0x8208	0xD001      	BRA         L__esperaBO1497
L__esperaBO1496:
0x820A	0x90D8      	BCF         STATUS, 0 
L__esperaBO1497:
0x820C	0xB001      	BTFSC       R1, 0 
0x820E	0xD003      	BRA         L__esperaBO1498
0x8210	0xE202      	BC          L__esperaBO1498
0x8212	0x9001      	BCF         R1, 0 
0x8214	0xD001      	BRA         L__esperaBO1499
L__esperaBO1498:
0x8216	0x8001      	BSF         R1, 0 
L__esperaBO1499:
0x8218	0xA001      	BTFSS       R1, 0 
0x821A	0xD00B      	BRA         L_esperaBO313
;rutinasensores_v4(mstr-slv).h,1215 :: 		lcd_cmd(_LCD_CLEAR);
0x821C	0x0E01      	MOVLW       1
0x821E	0x0102      	MOVLB       2
0x8220	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x8222	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1216 :: 		return debugEstadoB = SALIENDO;
0x8226	0x0E04      	MOVLW       4
0x8228	0x0101      	MOVLB       1
0x822A	0x6F3D      	MOVWF       _debugEstadoB, 1
0x822C	0x0E04      	MOVLW       4
0x822E	0x6E00      	MOVWF       R0 
0x8230	0xD000      	BRA         L_end_esperaBO
;rutinasensores_v4(mstr-slv).h,1217 :: 		}
L_esperaBO313:
;rutinasensores_v4(mstr-slv).h,1218 :: 		}
L_esperaBO311:
;rutinasensores_v4(mstr-slv).h,1219 :: 		}
L_end_esperaBO:
0x8232	0x0012      	RETURN      0
; end of _esperaBO
_salioBC:
;rutinasensores_v4(mstr-slv).h,1182 :: 		short salioBC(short estado){
;rutinasensores_v4(mstr-slv).h,1183 :: 		if(estado == SALIO){
0x8234	0x0102      	MOVLB       2
0x8236	0x5114      	MOVF        FARG_salioBC_estado, 0, 1
0x8238	0x0A06      	XORLW       6
0x823A	0xA4D8      	BTFSS       STATUS, 2 
0x823C	0xD11A      	BRA         L_salioBC309
;rutinasensores_v4(mstr-slv).h,1184 :: 		LCD_OUTCONST(3,1,"GRACIAS!");
0x823E	0x0E03      	MOVLW       3
0x8240	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x8242	0x0E01      	MOVLW       1
0x8244	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x8246	0x0E07      	MOVLW       ?lstr_47_MyProject
0x8248	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x824A	0x0EDA      	MOVLW       hi_addr(?lstr_47_MyProject)
0x824C	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x824E	0x0E00      	MOVLW       higher_addr(?lstr_47_MyProject)
0x8250	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x8252	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1185 :: 		pSuben = eepromLeeNumero(0x0000, 2);
0x8256	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x8258	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x825A	0x0E02      	MOVLW       2
0x825C	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x825E	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x8262	0xF137C000  	MOVFF       R0, _pSuben
0x8266	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,1186 :: 		pBajan = eepromLeeNumero(0x0003, 2) + 1;
0x826A	0x0E03      	MOVLW       3
0x826C	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x826E	0x0E00      	MOVLW       0
0x8270	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x8272	0x0E02      	MOVLW       2
0x8274	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x8276	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x827A	0x4A00      	INFSNZ      R0, 1 
0x827C	0x2A01      	INCF        R1, 1 
0x827E	0xF135C000  	MOVFF       R0, _pBajan
0x8282	0xF136C001  	MOVFF       R1, _pBajan+1
;rutinasensores_v4(mstr-slv).h,1187 :: 		eepromEscribeNumero(0x0003 ,pBajan, 2);
0x8286	0x0E03      	MOVLW       3
0x8288	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x828A	0x0E00      	MOVLW       0
0x828C	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x828E	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x8292	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x8296	0x0E00      	MOVLW       0
0x8298	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x829A	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x829C	0x0E02      	MOVLW       2
0x829E	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x82A0	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,1188 :: 		pBajan = eepromLeeNumero(0x0003, 2);
0x82A4	0x0E03      	MOVLW       3
0x82A6	0x0102      	MOVLB       2
0x82A8	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x82AA	0x0E00      	MOVLW       0
0x82AC	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x82AE	0x0E02      	MOVLW       2
0x82B0	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x82B2	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x82B6	0xF219C000  	MOVFF       R0, FLOC__salioBC+4
0x82BA	0xF21AC001  	MOVFF       R1, FLOC__salioBC+5
0x82BE	0xF21BC002  	MOVFF       R2, FLOC__salioBC+6
0x82C2	0xF21CC003  	MOVFF       R3, FLOC__salioBC+7
0x82C6	0xF135C219  	MOVFF       FLOC__salioBC+4, _pBajan
0x82CA	0xF136C21A  	MOVFF       FLOC__salioBC+5, _pBajan+1
;rutinasensores_v4(mstr-slv).h,1189 :: 		pasajerosVerdaderos = ((float)pSuben + (float)pBajan)/2;
0x82CE	0xF000C137  	MOVFF       _pSuben, R0
0x82D2	0xF001C138  	MOVFF       _pSuben+1, R1
0x82D6	0xF008EC65  	CALL        _Word2Double, 0
0x82DA	0xF215C000  	MOVFF       R0, FLOC__salioBC
0x82DE	0xF216C001  	MOVFF       R1, FLOC__salioBC+1
0x82E2	0xF217C002  	MOVFF       R2, FLOC__salioBC+2
0x82E6	0xF218C003  	MOVFF       R3, FLOC__salioBC+3
0x82EA	0xF000C219  	MOVFF       FLOC__salioBC+4, R0
0x82EE	0xF001C21A  	MOVFF       FLOC__salioBC+5, R1
0x82F2	0xF008EC65  	CALL        _Word2Double, 0
0x82F6	0xF004C215  	MOVFF       FLOC__salioBC, R4
0x82FA	0xF005C216  	MOVFF       FLOC__salioBC+1, R5
0x82FE	0xF006C217  	MOVFF       FLOC__salioBC+2, R6
0x8302	0xF007C218  	MOVFF       FLOC__salioBC+3, R7
0x8306	0xF004EC8D  	CALL        _Add_32x32_FP, 0
0x830A	0x0E00      	MOVLW       0
0x830C	0x6E04      	MOVWF       R4 
0x830E	0x0E00      	MOVLW       0
0x8310	0x6E05      	MOVWF       R5 
0x8312	0x0E00      	MOVLW       0
0x8314	0x6E06      	MOVWF       R6 
0x8316	0x0E80      	MOVLW       128
0x8318	0x6E07      	MOVWF       R7 
0x831A	0xF007ECA7  	CALL        _Div_32x32_FP, 0
0x831E	0xF139C000  	MOVFF       R0, _pasajerosVerdaderos
0x8322	0xF13AC001  	MOVFF       R1, _pasajerosVerdaderos+1
0x8326	0xF13BC002  	MOVFF       R2, _pasajerosVerdaderos+2
0x832A	0xF13CC003  	MOVFF       R3, _pasajerosVerdaderos+3
;rutinasensores_v4(mstr-slv).h,1190 :: 		eepromEscribeNumero(0x0009, (unsigned int)pasajerosVerdaderos, 2);
0x832E	0x0E09      	MOVLW       9
0x8330	0x0102      	MOVLB       2
0x8332	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x8334	0x0E00      	MOVLW       0
0x8336	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x8338	0xF006ECA0  	CALL        _Double2Word, 0
0x833C	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x8340	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x8344	0x0E00      	MOVLW       0
0x8346	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x8348	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x834A	0x0E02      	MOVLW       2
0x834C	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x834E	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,1191 :: 		if(MSTR){
0x8352	0xA483      	BTFSS       PORTD, 2 
0x8354	0xD085      	BRA         L_salioBC310
;rutinasensores_v4(mstr-slv).h,1192 :: 		pVerdaderosMEntero = eepromLeeNumero(0x0009, 2);
0x8356	0x0E09      	MOVLW       9
0x8358	0x0102      	MOVLB       2
0x835A	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x835C	0x0E00      	MOVLW       0
0x835E	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x8360	0x0E02      	MOVLW       2
0x8362	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x8364	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x8368	0xF12FC000  	MOVFF       R0, _pVerdaderosMEntero
0x836C	0xF130C001  	MOVFF       R1, _pVerdaderosMEntero+1
;rutinasensores_v4(mstr-slv).h,1193 :: 		pVerdaderosEEntero = eepromLeeNumero(0x0007, 2);
0x8370	0x0E07      	MOVLW       7
0x8372	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x8374	0x0E00      	MOVLW       0
0x8376	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x8378	0x0E02      	MOVLW       2
0x837A	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x837C	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x8380	0xF12DC000  	MOVFF       R0, _pVerdaderosEEntero
0x8384	0xF12EC001  	MOVFF       R1, _pVerdaderosEEntero+1
;rutinasensores_v4(mstr-slv).h,1194 :: 		pasajerosTotalesL = pVerdaderosMEntero + pVerdaderosEEntero;
0x8388	0x5000      	MOVF        R0, 0 
0x838A	0x0101      	MOVLB       1
0x838C	0x252F      	ADDWF       _pVerdaderosMEntero, 0, 1
0x838E	0x6F33      	MOVWF       _pasajerosTotalesL, 1
0x8390	0x5001      	MOVF        R1, 0 
0x8392	0x2130      	ADDWFC      _pVerdaderosMEntero+1, 0, 1
0x8394	0x6F34      	MOVWF       _pasajerosTotalesL+1, 1
;rutinasensores_v4(mstr-slv).h,1195 :: 		totalCalculado = (eepromLeeNumero(0x0000, 2)+eepromLeeNumero(0x0003, 2)+eepromLeeNumero(0x0900, 2)+eepromLeeNumero(0x0700, 2))/2;
0x8396	0x0102      	MOVLB       2
0x8398	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x839A	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x839C	0x0E02      	MOVLW       2
0x839E	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x83A0	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x83A4	0xF215C000  	MOVFF       R0, FLOC__salioBC
0x83A8	0xF216C001  	MOVFF       R1, FLOC__salioBC+1
0x83AC	0xF217C002  	MOVFF       R2, FLOC__salioBC+2
0x83B0	0xF218C003  	MOVFF       R3, FLOC__salioBC+3
0x83B4	0x0E03      	MOVLW       3
0x83B6	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x83B8	0x0E00      	MOVLW       0
0x83BA	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x83BC	0x0E02      	MOVLW       2
0x83BE	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x83C0	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x83C4	0x5000      	MOVF        R0, 0 
0x83C6	0x2715      	ADDWF       FLOC__salioBC, 1, 1
0x83C8	0x5001      	MOVF        R1, 0 
0x83CA	0x2316      	ADDWFC      FLOC__salioBC+1, 1, 1
0x83CC	0x5002      	MOVF        R2, 0 
0x83CE	0x2317      	ADDWFC      FLOC__salioBC+2, 1, 1
0x83D0	0x5003      	MOVF        R3, 0 
0x83D2	0x2318      	ADDWFC      FLOC__salioBC+3, 1, 1
0x83D4	0x0E00      	MOVLW       0
0x83D6	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x83D8	0x0E09      	MOVLW       9
0x83DA	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x83DC	0x0E02      	MOVLW       2
0x83DE	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x83E0	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x83E4	0x5000      	MOVF        R0, 0 
0x83E6	0x2715      	ADDWF       FLOC__salioBC, 1, 1
0x83E8	0x5001      	MOVF        R1, 0 
0x83EA	0x2316      	ADDWFC      FLOC__salioBC+1, 1, 1
0x83EC	0x5002      	MOVF        R2, 0 
0x83EE	0x2317      	ADDWFC      FLOC__salioBC+2, 1, 1
0x83F0	0x5003      	MOVF        R3, 0 
0x83F2	0x2318      	ADDWFC      FLOC__salioBC+3, 1, 1
0x83F4	0x0E00      	MOVLW       0
0x83F6	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x83F8	0x0E07      	MOVLW       7
0x83FA	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x83FC	0x0E02      	MOVLW       2
0x83FE	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x8400	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x8404	0x5000      	MOVF        R0, 0 
0x8406	0x2515      	ADDWF       FLOC__salioBC, 0, 1
0x8408	0x6E05      	MOVWF       R5 
0x840A	0x5001      	MOVF        R1, 0 
0x840C	0x2116      	ADDWFC      FLOC__salioBC+1, 0, 1
0x840E	0x6E06      	MOVWF       R6 
0x8410	0x5002      	MOVF        R2, 0 
0x8412	0x2117      	ADDWFC      FLOC__salioBC+2, 0, 1
0x8414	0x6E07      	MOVWF       R7 
0x8416	0x5003      	MOVF        R3, 0 
0x8418	0x2118      	ADDWFC      FLOC__salioBC+3, 0, 1
0x841A	0x6E08      	MOVWF       R8 
0x841C	0xF000C005  	MOVFF       R5, R0
0x8420	0xF001C006  	MOVFF       R6, R1
0x8424	0xF002C007  	MOVFF       R7, R2
0x8428	0xF003C008  	MOVFF       R8, R3
0x842C	0x3203      	RRCF        R3, 1 
0x842E	0x3202      	RRCF        R2, 1 
0x8430	0x3201      	RRCF        R1, 1 
0x8432	0x3200      	RRCF        R0, 1 
0x8434	0x9E03      	BCF         R3, 7 
0x8436	0xBC03      	BTFSC       R3, 6 
0x8438	0x8E03      	BSF         R3, 7 
0x843A	0xF131C000  	MOVFF       R0, _totalCalculado
0x843E	0xF132C001  	MOVFF       R1, _totalCalculado+1
;rutinasensores_v4(mstr-slv).h,1196 :: 		eepromEscribeNumero(0x0005, totalCalculado, 2);
0x8442	0x0E05      	MOVLW       5
0x8444	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x8446	0x0E00      	MOVLW       0
0x8448	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x844A	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x844E	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x8452	0x0E00      	MOVLW       0
0x8454	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x8456	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x8458	0x0E02      	MOVLW       2
0x845A	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x845C	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,1197 :: 		}
L_salioBC310:
;rutinasensores_v4(mstr-slv).h,1198 :: 		lcd_cmd(_LCD_CLEAR);
0x8460	0x0E01      	MOVLW       1
0x8462	0x0102      	MOVLB       2
0x8464	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x8466	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1199 :: 		return debugEstadoB = ESPERA;
0x846A	0x0101      	MOVLB       1
0x846C	0x6B3D      	CLRF        _debugEstadoB, 1
0x846E	0x6A00      	CLRF        R0 
0x8470	0xD000      	BRA         L_end_salioBC
;rutinasensores_v4(mstr-slv).h,1200 :: 		}
L_salioBC309:
;rutinasensores_v4(mstr-slv).h,1201 :: 		}
L_end_salioBC:
0x8472	0x0012      	RETURN      0
; end of _salioBC
_transicionEBO:
;rutinasensores_v4(mstr-slv).h,1235 :: 		short transicionEBO(short estado){
;rutinasensores_v4(mstr-slv).h,1236 :: 		if(estado == TRANSICION){
0x8474	0x0102      	MOVLB       2
0x8476	0x5114      	MOVF        FARG_transicionEBO_estado, 0, 1
0x8478	0x0A02      	XORLW       2
0x847A	0xA4D8      	BTFSS       STATUS, 2 
0x847C	0xD060      	BRA         L_transicionEBO317
;rutinasensores_v4(mstr-slv).h,1237 :: 		LCD_OUTCONST(3,1,"TRANSICION");
0x847E	0x0E03      	MOVLW       3
0x8480	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x8482	0x0E01      	MOVLW       1
0x8484	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x8486	0x0EA5      	MOVLW       ?lstr_49_MyProject
0x8488	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x848A	0x0ED8      	MOVLW       hi_addr(?lstr_49_MyProject)
0x848C	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x848E	0x0E00      	MOVLW       higher_addr(?lstr_49_MyProject)
0x8490	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x8492	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1238 :: 		if((SENSOR1 & SENSOR3)){
0x8496	0xA881      	BTFSS       PORTB, 4 
0x8498	0xD004      	BRA         L__transicionEBO1524
0x849A	0xA481      	BTFSS       PORTB, 2 
0x849C	0xD002      	BRA         L__transicionEBO1524
0x849E	0x80D8      	BSF         STATUS, 0 
0x84A0	0xD001      	BRA         L__transicionEBO1525
L__transicionEBO1524:
0x84A2	0x90D8      	BCF         STATUS, 0 
L__transicionEBO1525:
0x84A4	0xE30A      	BNC         L_transicionEBO318
;rutinasensores_v4(mstr-slv).h,1239 :: 		lcd_cmd(_LCD_CLEAR);
0x84A6	0x0E01      	MOVLW       1
0x84A8	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x84AA	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1240 :: 		return debugEstadoB = TRANENT;
0x84AE	0x0E07      	MOVLW       7
0x84B0	0x0101      	MOVLB       1
0x84B2	0x6F3D      	MOVWF       _debugEstadoB, 1
0x84B4	0x0E07      	MOVLW       7
0x84B6	0x6E00      	MOVWF       R0 
0x84B8	0xD042      	BRA         L_end_transicionEBO
;rutinasensores_v4(mstr-slv).h,1241 :: 		}
L_transicionEBO318:
;rutinasensores_v4(mstr-slv).h,1242 :: 		if((SENSOR2 & SENSOR4 & SENSOR6 & !SENSOR1) | (SENSOR2 & SENSOR4 & SENSOR6 & !SENSOR3)){
0x84BA	0xA883      	BTFSS       PORTD, 4 
0x84BC	0xD004      	BRA         L__transicionEBO1526
0x84BE	0xA681      	BTFSS       PORTB, 3 
0x84C0	0xD002      	BRA         L__transicionEBO1526
0x84C2	0x8401      	BSF         R1, 2 
0x84C4	0xD001      	BRA         L__transicionEBO1527
L__transicionEBO1526:
0x84C6	0x9401      	BCF         R1, 2 
L__transicionEBO1527:
0x84C8	0xA401      	BTFSS       R1, 2 
0x84CA	0xD004      	BRA         L__transicionEBO1528
0x84CC	0xA281      	BTFSS       PORTB, 1 
0x84CE	0xD002      	BRA         L__transicionEBO1528
0x84D0	0x8001      	BSF         R1, 0 
0x84D2	0xD001      	BRA         L__transicionEBO1529
L__transicionEBO1528:
0x84D4	0x9001      	BCF         R1, 0 
L__transicionEBO1529:
0x84D6	0xB881      	BTFSC       PORTB, 4 
0x84D8	0xD002      	BRA         L__transicionEBO1530
0x84DA	0x80D8      	BSF         STATUS, 0 
0x84DC	0xD001      	BRA         L__transicionEBO1531
L__transicionEBO1530:
0x84DE	0x90D8      	BCF         STATUS, 0 
L__transicionEBO1531:
0x84E0	0xA001      	BTFSS       R1, 0 
0x84E2	0xD003      	BRA         L__transicionEBO1532
0x84E4	0xE302      	BNC         L__transicionEBO1532
0x84E6	0x8201      	BSF         R1, 1 
0x84E8	0xD001      	BRA         L__transicionEBO1533
L__transicionEBO1532:
0x84EA	0x9201      	BCF         R1, 1 
L__transicionEBO1533:
0x84EC	0xB401      	BTFSC       R1, 2 
0x84EE	0xD002      	BRA         L__transicionEBO1534
0x84F0	0x90D8      	BCF         STATUS, 0 
0x84F2	0xD001      	BRA         L__transicionEBO1535
L__transicionEBO1534:
0x84F4	0x80D8      	BSF         STATUS, 0 
L__transicionEBO1535:
0x84F6	0xE304      	BNC         L__transicionEBO1536
0x84F8	0xA281      	BTFSS       PORTB, 1 
0x84FA	0xD002      	BRA         L__transicionEBO1536
0x84FC	0x8001      	BSF         R1, 0 
0x84FE	0xD001      	BRA         L__transicionEBO1537
L__transicionEBO1536:
0x8500	0x9001      	BCF         R1, 0 
L__transicionEBO1537:
0x8502	0xB481      	BTFSC       PORTB, 2 
0x8504	0xD002      	BRA         L__transicionEBO1538
0x8506	0x80D8      	BSF         STATUS, 0 
0x8508	0xD001      	BRA         L__transicionEBO1539
L__transicionEBO1538:
0x850A	0x90D8      	BCF         STATUS, 0 
L__transicionEBO1539:
0x850C	0xA001      	BTFSS       R1, 0 
0x850E	0xD003      	BRA         L__transicionEBO1540
0x8510	0xE302      	BNC         L__transicionEBO1540
0x8512	0x8001      	BSF         R1, 0 
0x8514	0xD001      	BRA         L__transicionEBO1541
L__transicionEBO1540:
0x8516	0x9001      	BCF         R1, 0 
L__transicionEBO1541:
0x8518	0xB201      	BTFSC       R1, 1 
0x851A	0xD004      	BRA         L__transicionEBO1542
0x851C	0xB001      	BTFSC       R1, 0 
0x851E	0xD002      	BRA         L__transicionEBO1542
0x8520	0x90D8      	BCF         STATUS, 0 
0x8522	0xD001      	BRA         L__transicionEBO1543
L__transicionEBO1542:
0x8524	0x80D8      	BSF         STATUS, 0 
L__transicionEBO1543:
0x8526	0xE30B      	BNC         L_transicionEBO319
;rutinasensores_v4(mstr-slv).h,1243 :: 		lcd_cmd(_LCD_CLEAR);
0x8528	0x0E01      	MOVLW       1
0x852A	0x0102      	MOVLB       2
0x852C	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x852E	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1244 :: 		return debugEstadoB = ENTRANDO;
0x8532	0x0E01      	MOVLW       1
0x8534	0x0101      	MOVLB       1
0x8536	0x6F3D      	MOVWF       _debugEstadoB, 1
0x8538	0x0E01      	MOVLW       1
0x853A	0x6E00      	MOVWF       R0 
0x853C	0xD000      	BRA         L_end_transicionEBO
;rutinasensores_v4(mstr-slv).h,1245 :: 		}
L_transicionEBO319:
;rutinasensores_v4(mstr-slv).h,1246 :: 		}
L_transicionEBO317:
;rutinasensores_v4(mstr-slv).h,1247 :: 		}
L_end_transicionEBO:
0x853E	0x0012      	RETURN      0
; end of _transicionEBO
_transicionSBO:
;rutinasensores_v4(mstr-slv).h,1298 :: 		short transicionSBO(short estado){
;rutinasensores_v4(mstr-slv).h,1299 :: 		if(estado == TRANSICIONS){
0x8540	0x0102      	MOVLB       2
0x8542	0x5114      	MOVF        FARG_transicionSBO_estado, 0, 1
0x8544	0x0A08      	XORLW       8
0x8546	0xA4D8      	BTFSS       STATUS, 2 
0x8548	0xD085      	BRA         L_transicionSBO328
;rutinasensores_v4(mstr-slv).h,1300 :: 		lcd_outConst(3, 1, "TRANSICION");
0x854A	0x0E03      	MOVLW       3
0x854C	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x854E	0x0E01      	MOVLW       1
0x8550	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x8552	0x0E81      	MOVLW       ?lstr_53_MyProject
0x8554	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x8556	0x0ED9      	MOVLW       hi_addr(?lstr_53_MyProject)
0x8558	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x855A	0x0E00      	MOVLW       higher_addr(?lstr_53_MyProject)
0x855C	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x855E	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1301 :: 		if((SENSOR2 & SENSOR4) | (SENSOR4 & SENSOR6) | (SENSOR2 & SENSOR6)){
0x8562	0xA883      	BTFSS       PORTD, 4 
0x8564	0xD004      	BRA         L__transicionSBO1568
0x8566	0xA681      	BTFSS       PORTB, 3 
0x8568	0xD002      	BRA         L__transicionSBO1568
0x856A	0x8001      	BSF         R1, 0 
0x856C	0xD001      	BRA         L__transicionSBO1569
L__transicionSBO1568:
0x856E	0x9001      	BCF         R1, 0 
L__transicionSBO1569:
0x8570	0xA681      	BTFSS       PORTB, 3 
0x8572	0xD004      	BRA         L__transicionSBO1570
0x8574	0xA281      	BTFSS       PORTB, 1 
0x8576	0xD002      	BRA         L__transicionSBO1570
0x8578	0x80D8      	BSF         STATUS, 0 
0x857A	0xD001      	BRA         L__transicionSBO1571
L__transicionSBO1570:
0x857C	0x90D8      	BCF         STATUS, 0 
L__transicionSBO1571:
0x857E	0xB001      	BTFSC       R1, 0 
0x8580	0xD003      	BRA         L__transicionSBO1572
0x8582	0xE202      	BC          L__transicionSBO1572
0x8584	0x9001      	BCF         R1, 0 
0x8586	0xD001      	BRA         L__transicionSBO1573
L__transicionSBO1572:
0x8588	0x8001      	BSF         R1, 0 
L__transicionSBO1573:
0x858A	0xA883      	BTFSS       PORTD, 4 
0x858C	0xD004      	BRA         L__transicionSBO1574
0x858E	0xA281      	BTFSS       PORTB, 1 
0x8590	0xD002      	BRA         L__transicionSBO1574
0x8592	0x80D8      	BSF         STATUS, 0 
0x8594	0xD001      	BRA         L__transicionSBO1575
L__transicionSBO1574:
0x8596	0x90D8      	BCF         STATUS, 0 
L__transicionSBO1575:
0x8598	0xB001      	BTFSC       R1, 0 
0x859A	0xD003      	BRA         L__transicionSBO1576
0x859C	0xE202      	BC          L__transicionSBO1576
0x859E	0x9001      	BCF         R1, 0 
0x85A0	0xD001      	BRA         L__transicionSBO1577
L__transicionSBO1576:
0x85A2	0x8001      	BSF         R1, 0 
L__transicionSBO1577:
0x85A4	0xA001      	BTFSS       R1, 0 
0x85A6	0xD00A      	BRA         L_transicionSBO329
;rutinasensores_v4(mstr-slv).h,1302 :: 		lcd_cmd(_LCD_CLEAR);
0x85A8	0x0E01      	MOVLW       1
0x85AA	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x85AC	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1303 :: 		return debugEstadoB = TRANSAL;
0x85B0	0x0E05      	MOVLW       5
0x85B2	0x0101      	MOVLB       1
0x85B4	0x6F3D      	MOVWF       _debugEstadoB, 1
0x85B6	0x0E05      	MOVLW       5
0x85B8	0x6E00      	MOVWF       R0 
0x85BA	0xD04C      	BRA         L_end_transicionSBO
;rutinasensores_v4(mstr-slv).h,1304 :: 		}
L_transicionSBO329:
;rutinasensores_v4(mstr-slv).h,1305 :: 		if((SENSOR1 & SENSOR3 & !SENSOR2) | (SENSOR1 & SENSOR3 & !SENSOR4) | (SENSOR1 & SENSOR3 & !SENSOR6)){
0x85BC	0xA881      	BTFSS       PORTB, 4 
0x85BE	0xD004      	BRA         L__transicionSBO1578
0x85C0	0xA481      	BTFSS       PORTB, 2 
0x85C2	0xD002      	BRA         L__transicionSBO1578
0x85C4	0x8401      	BSF         R1, 2 
0x85C6	0xD001      	BRA         L__transicionSBO1579
L__transicionSBO1578:
0x85C8	0x9401      	BCF         R1, 2 
L__transicionSBO1579:
0x85CA	0xB883      	BTFSC       PORTD, 4 
0x85CC	0xD002      	BRA         L__transicionSBO1580
0x85CE	0x80D8      	BSF         STATUS, 0 
0x85D0	0xD001      	BRA         L__transicionSBO1581
L__transicionSBO1580:
0x85D2	0x90D8      	BCF         STATUS, 0 
L__transicionSBO1581:
0x85D4	0xA401      	BTFSS       R1, 2 
0x85D6	0xD003      	BRA         L__transicionSBO1582
0x85D8	0xE302      	BNC         L__transicionSBO1582
0x85DA	0x8201      	BSF         R1, 1 
0x85DC	0xD001      	BRA         L__transicionSBO1583
L__transicionSBO1582:
0x85DE	0x9201      	BCF         R1, 1 
L__transicionSBO1583:
0x85E0	0xB401      	BTFSC       R1, 2 
0x85E2	0xD002      	BRA         L__transicionSBO1584
0x85E4	0x9001      	BCF         R1, 0 
0x85E6	0xD001      	BRA         L__transicionSBO1585
L__transicionSBO1584:
0x85E8	0x8001      	BSF         R1, 0 
L__transicionSBO1585:
0x85EA	0xB681      	BTFSC       PORTB, 3 
0x85EC	0xD002      	BRA         L__transicionSBO1586
0x85EE	0x80D8      	BSF         STATUS, 0 
0x85F0	0xD001      	BRA         L__transicionSBO1587
L__transicionSBO1586:
0x85F2	0x90D8      	BCF         STATUS, 0 
L__transicionSBO1587:
0x85F4	0xA001      	BTFSS       R1, 0 
0x85F6	0xD003      	BRA         L__transicionSBO1588
0x85F8	0xE302      	BNC         L__transicionSBO1588
0x85FA	0x8001      	BSF         R1, 0 
0x85FC	0xD001      	BRA         L__transicionSBO1589
L__transicionSBO1588:
0x85FE	0x9001      	BCF         R1, 0 
L__transicionSBO1589:
0x8600	0xB201      	BTFSC       R1, 1 
0x8602	0xD004      	BRA         L__transicionSBO1590
0x8604	0xB001      	BTFSC       R1, 0 
0x8606	0xD002      	BRA         L__transicionSBO1590
0x8608	0x9201      	BCF         R1, 1 
0x860A	0xD001      	BRA         L__transicionSBO1591
L__transicionSBO1590:
0x860C	0x8201      	BSF         R1, 1 
L__transicionSBO1591:
0x860E	0xB401      	BTFSC       R1, 2 
0x8610	0xD002      	BRA         L__transicionSBO1592
0x8612	0x9001      	BCF         R1, 0 
0x8614	0xD001      	BRA         L__transicionSBO1593
L__transicionSBO1592:
0x8616	0x8001      	BSF         R1, 0 
L__transicionSBO1593:
0x8618	0xB281      	BTFSC       PORTB, 1 
0x861A	0xD002      	BRA         L__transicionSBO1594
0x861C	0x80D8      	BSF         STATUS, 0 
0x861E	0xD001      	BRA         L__transicionSBO1595
L__transicionSBO1594:
0x8620	0x90D8      	BCF         STATUS, 0 
L__transicionSBO1595:
0x8622	0xA001      	BTFSS       R1, 0 
0x8624	0xD003      	BRA         L__transicionSBO1596
0x8626	0xE302      	BNC         L__transicionSBO1596
0x8628	0x8001      	BSF         R1, 0 
0x862A	0xD001      	BRA         L__transicionSBO1597
L__transicionSBO1596:
0x862C	0x9001      	BCF         R1, 0 
L__transicionSBO1597:
0x862E	0xB201      	BTFSC       R1, 1 
0x8630	0xD004      	BRA         L__transicionSBO1598
0x8632	0xB001      	BTFSC       R1, 0 
0x8634	0xD002      	BRA         L__transicionSBO1598
0x8636	0x90D8      	BCF         STATUS, 0 
0x8638	0xD001      	BRA         L__transicionSBO1599
L__transicionSBO1598:
0x863A	0x80D8      	BSF         STATUS, 0 
L__transicionSBO1599:
0x863C	0xE30B      	BNC         L_transicionSBO330
;rutinasensores_v4(mstr-slv).h,1306 :: 		lcd_cmd(_LCD_CLEAR);
0x863E	0x0E01      	MOVLW       1
0x8640	0x0102      	MOVLB       2
0x8642	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x8644	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1307 :: 		return debugEstadoB = SALIENDO;
0x8648	0x0E04      	MOVLW       4
0x864A	0x0101      	MOVLB       1
0x864C	0x6F3D      	MOVWF       _debugEstadoB, 1
0x864E	0x0E04      	MOVLW       4
0x8650	0x6E00      	MOVWF       R0 
0x8652	0xD000      	BRA         L_end_transicionSBO
;rutinasensores_v4(mstr-slv).h,1308 :: 		}
L_transicionSBO330:
;rutinasensores_v4(mstr-slv).h,1309 :: 		}
L_transicionSBO328:
;rutinasensores_v4(mstr-slv).h,1310 :: 		}
L_end_transicionSBO:
0x8654	0x0012      	RETURN      0
; end of _transicionSBO
_transicionSB:
;rutinasensores_v4(mstr-slv).h,722 :: 		short transicionSB(short estado){
;rutinasensores_v4(mstr-slv).h,723 :: 		if(estado == TRANSICIONS){
0x8656	0x0102      	MOVLB       2
0x8658	0x5114      	MOVF        FARG_transicionSB_estado, 0, 1
0x865A	0x0A08      	XORLW       8
0x865C	0xA4D8      	BTFSS       STATUS, 2 
0x865E	0xD085      	BRA         L_transicionSB228
;rutinasensores_v4(mstr-slv).h,724 :: 		lcd_outConst(3, 1, "TRANSICION");
0x8660	0x0E03      	MOVLW       3
0x8662	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x8664	0x0E01      	MOVLW       1
0x8666	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x8668	0x0EE7      	MOVLW       ?lstr_21_MyProject
0x866A	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x866C	0x0ED8      	MOVLW       hi_addr(?lstr_21_MyProject)
0x866E	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x8670	0x0E00      	MOVLW       higher_addr(?lstr_21_MyProject)
0x8672	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x8674	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,725 :: 		if((SENSOR2 & SENSOR4) | (SENSOR4 & SENSOR6) | (SENSOR2 & SENSOR6)){
0x8678	0xA883      	BTFSS       PORTD, 4 
0x867A	0xD004      	BRA         L__transicionSB1044
0x867C	0xA681      	BTFSS       PORTB, 3 
0x867E	0xD002      	BRA         L__transicionSB1044
0x8680	0x8001      	BSF         R1, 0 
0x8682	0xD001      	BRA         L__transicionSB1045
L__transicionSB1044:
0x8684	0x9001      	BCF         R1, 0 
L__transicionSB1045:
0x8686	0xA681      	BTFSS       PORTB, 3 
0x8688	0xD004      	BRA         L__transicionSB1046
0x868A	0xA281      	BTFSS       PORTB, 1 
0x868C	0xD002      	BRA         L__transicionSB1046
0x868E	0x80D8      	BSF         STATUS, 0 
0x8690	0xD001      	BRA         L__transicionSB1047
L__transicionSB1046:
0x8692	0x90D8      	BCF         STATUS, 0 
L__transicionSB1047:
0x8694	0xB001      	BTFSC       R1, 0 
0x8696	0xD003      	BRA         L__transicionSB1048
0x8698	0xE202      	BC          L__transicionSB1048
0x869A	0x9001      	BCF         R1, 0 
0x869C	0xD001      	BRA         L__transicionSB1049
L__transicionSB1048:
0x869E	0x8001      	BSF         R1, 0 
L__transicionSB1049:
0x86A0	0xA883      	BTFSS       PORTD, 4 
0x86A2	0xD004      	BRA         L__transicionSB1050
0x86A4	0xA281      	BTFSS       PORTB, 1 
0x86A6	0xD002      	BRA         L__transicionSB1050
0x86A8	0x80D8      	BSF         STATUS, 0 
0x86AA	0xD001      	BRA         L__transicionSB1051
L__transicionSB1050:
0x86AC	0x90D8      	BCF         STATUS, 0 
L__transicionSB1051:
0x86AE	0xB001      	BTFSC       R1, 0 
0x86B0	0xD003      	BRA         L__transicionSB1052
0x86B2	0xE202      	BC          L__transicionSB1052
0x86B4	0x9001      	BCF         R1, 0 
0x86B6	0xD001      	BRA         L__transicionSB1053
L__transicionSB1052:
0x86B8	0x8001      	BSF         R1, 0 
L__transicionSB1053:
0x86BA	0xA001      	BTFSS       R1, 0 
0x86BC	0xD00A      	BRA         L_transicionSB229
;rutinasensores_v4(mstr-slv).h,726 :: 		lcd_cmd(_LCD_CLEAR);
0x86BE	0x0E01      	MOVLW       1
0x86C0	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x86C2	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,727 :: 		return debugEstadoB = TRANSAL;
0x86C6	0x0E05      	MOVLW       5
0x86C8	0x0101      	MOVLB       1
0x86CA	0x6F3D      	MOVWF       _debugEstadoB, 1
0x86CC	0x0E05      	MOVLW       5
0x86CE	0x6E00      	MOVWF       R0 
0x86D0	0xD04C      	BRA         L_end_transicionSB
;rutinasensores_v4(mstr-slv).h,728 :: 		}
L_transicionSB229:
;rutinasensores_v4(mstr-slv).h,729 :: 		if((SENSOR3 & SENSOR5 & !SENSOR4) | (SENSOR3 & SENSOR5 & !SENSOR2) | (SENSOR3 & SENSOR5 & !SENSOR6)){
0x86D2	0xA481      	BTFSS       PORTB, 2 
0x86D4	0xD004      	BRA         L__transicionSB1054
0x86D6	0xA081      	BTFSS       PORTB, 0 
0x86D8	0xD002      	BRA         L__transicionSB1054
0x86DA	0x8401      	BSF         R1, 2 
0x86DC	0xD001      	BRA         L__transicionSB1055
L__transicionSB1054:
0x86DE	0x9401      	BCF         R1, 2 
L__transicionSB1055:
0x86E0	0xB681      	BTFSC       PORTB, 3 
0x86E2	0xD002      	BRA         L__transicionSB1056
0x86E4	0x80D8      	BSF         STATUS, 0 
0x86E6	0xD001      	BRA         L__transicionSB1057
L__transicionSB1056:
0x86E8	0x90D8      	BCF         STATUS, 0 
L__transicionSB1057:
0x86EA	0xA401      	BTFSS       R1, 2 
0x86EC	0xD003      	BRA         L__transicionSB1058
0x86EE	0xE302      	BNC         L__transicionSB1058
0x86F0	0x8201      	BSF         R1, 1 
0x86F2	0xD001      	BRA         L__transicionSB1059
L__transicionSB1058:
0x86F4	0x9201      	BCF         R1, 1 
L__transicionSB1059:
0x86F6	0xB401      	BTFSC       R1, 2 
0x86F8	0xD002      	BRA         L__transicionSB1060
0x86FA	0x9001      	BCF         R1, 0 
0x86FC	0xD001      	BRA         L__transicionSB1061
L__transicionSB1060:
0x86FE	0x8001      	BSF         R1, 0 
L__transicionSB1061:
0x8700	0xB883      	BTFSC       PORTD, 4 
0x8702	0xD002      	BRA         L__transicionSB1062
0x8704	0x80D8      	BSF         STATUS, 0 
0x8706	0xD001      	BRA         L__transicionSB1063
L__transicionSB1062:
0x8708	0x90D8      	BCF         STATUS, 0 
L__transicionSB1063:
0x870A	0xA001      	BTFSS       R1, 0 
0x870C	0xD003      	BRA         L__transicionSB1064
0x870E	0xE302      	BNC         L__transicionSB1064
0x8710	0x8001      	BSF         R1, 0 
0x8712	0xD001      	BRA         L__transicionSB1065
L__transicionSB1064:
0x8714	0x9001      	BCF         R1, 0 
L__transicionSB1065:
0x8716	0xB201      	BTFSC       R1, 1 
0x8718	0xD004      	BRA         L__transicionSB1066
0x871A	0xB001      	BTFSC       R1, 0 
0x871C	0xD002      	BRA         L__transicionSB1066
0x871E	0x9201      	BCF         R1, 1 
0x8720	0xD001      	BRA         L__transicionSB1067
L__transicionSB1066:
0x8722	0x8201      	BSF         R1, 1 
L__transicionSB1067:
0x8724	0xB401      	BTFSC       R1, 2 
0x8726	0xD002      	BRA         L__transicionSB1068
0x8728	0x9001      	BCF         R1, 0 
0x872A	0xD001      	BRA         L__transicionSB1069
L__transicionSB1068:
0x872C	0x8001      	BSF         R1, 0 
L__transicionSB1069:
0x872E	0xB281      	BTFSC       PORTB, 1 
0x8730	0xD002      	BRA         L__transicionSB1070
0x8732	0x80D8      	BSF         STATUS, 0 
0x8734	0xD001      	BRA         L__transicionSB1071
L__transicionSB1070:
0x8736	0x90D8      	BCF         STATUS, 0 
L__transicionSB1071:
0x8738	0xA001      	BTFSS       R1, 0 
0x873A	0xD003      	BRA         L__transicionSB1072
0x873C	0xE302      	BNC         L__transicionSB1072
0x873E	0x8001      	BSF         R1, 0 
0x8740	0xD001      	BRA         L__transicionSB1073
L__transicionSB1072:
0x8742	0x9001      	BCF         R1, 0 
L__transicionSB1073:
0x8744	0xB201      	BTFSC       R1, 1 
0x8746	0xD004      	BRA         L__transicionSB1074
0x8748	0xB001      	BTFSC       R1, 0 
0x874A	0xD002      	BRA         L__transicionSB1074
0x874C	0x90D8      	BCF         STATUS, 0 
0x874E	0xD001      	BRA         L__transicionSB1075
L__transicionSB1074:
0x8750	0x80D8      	BSF         STATUS, 0 
L__transicionSB1075:
0x8752	0xE30B      	BNC         L_transicionSB230
;rutinasensores_v4(mstr-slv).h,730 :: 		lcd_cmd(_LCD_CLEAR);
0x8754	0x0E01      	MOVLW       1
0x8756	0x0102      	MOVLB       2
0x8758	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x875A	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,731 :: 		return debugEstadoB = SALIENDO;
0x875E	0x0E04      	MOVLW       4
0x8760	0x0101      	MOVLB       1
0x8762	0x6F3D      	MOVWF       _debugEstadoB, 1
0x8764	0x0E04      	MOVLW       4
0x8766	0x6E00      	MOVWF       R0 
0x8768	0xD000      	BRA         L_end_transicionSB
;rutinasensores_v4(mstr-slv).h,732 :: 		}
L_transicionSB230:
;rutinasensores_v4(mstr-slv).h,733 :: 		}
L_transicionSB228:
;rutinasensores_v4(mstr-slv).h,734 :: 		}
L_end_transicionSB:
0x876A	0x0012      	RETURN      0
; end of _transicionSB
_saliendoB:
;rutinasensores_v4(mstr-slv).h,708 :: 		short saliendoB(short estado){
;rutinasensores_v4(mstr-slv).h,709 :: 		if(estado == SALIENDO){
0x876C	0x0102      	MOVLB       2
0x876E	0x5114      	MOVF        FARG_saliendoB_estado, 0, 1
0x8770	0x0A04      	XORLW       4
0x8772	0xE140      	BNZ         L_saliendoB225
;rutinasensores_v4(mstr-slv).h,710 :: 		lcd_outConst(3, 1, "SALIENDO");
0x8774	0x0E03      	MOVLW       3
0x8776	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x8778	0x0E01      	MOVLW       1
0x877A	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x877C	0x0EC4      	MOVLW       ?lstr_20_MyProject
0x877E	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x8780	0x0EDA      	MOVLW       hi_addr(?lstr_20_MyProject)
0x8782	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x8784	0x0E00      	MOVLW       higher_addr(?lstr_20_MyProject)
0x8786	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x8788	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,711 :: 		if((!SENSOR3 & !SENSOR5)){
0x878C	0xB481      	BTFSC       PORTB, 2 
0x878E	0xD002      	BRA         L__saliendoB1033
0x8790	0x8001      	BSF         R1, 0 
0x8792	0xD001      	BRA         L__saliendoB1034
L__saliendoB1033:
0x8794	0x9001      	BCF         R1, 0 
L__saliendoB1034:
0x8796	0xB081      	BTFSC       PORTB, 0 
0x8798	0xD002      	BRA         L__saliendoB1035
0x879A	0x80D8      	BSF         STATUS, 0 
0x879C	0xD001      	BRA         L__saliendoB1036
L__saliendoB1035:
0x879E	0x90D8      	BCF         STATUS, 0 
L__saliendoB1036:
0x87A0	0xA001      	BTFSS       R1, 0 
0x87A2	0xD003      	BRA         L__saliendoB1037
0x87A4	0xE302      	BNC         L__saliendoB1037
0x87A6	0x8001      	BSF         R1, 0 
0x87A8	0xD001      	BRA         L__saliendoB1038
L__saliendoB1037:
0x87AA	0x9001      	BCF         R1, 0 
L__saliendoB1038:
0x87AC	0xA001      	BTFSS       R1, 0 
0x87AE	0xD00A      	BRA         L_saliendoB226
;rutinasensores_v4(mstr-slv).h,712 :: 		lcd_cmd(_LCD_CLEAR);
0x87B0	0x0E01      	MOVLW       1
0x87B2	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x87B4	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,713 :: 		return debugEstadoB = TRANSICIONS;
0x87B8	0x0E08      	MOVLW       8
0x87BA	0x0101      	MOVLB       1
0x87BC	0x6F3D      	MOVWF       _debugEstadoB, 1
0x87BE	0x0E08      	MOVLW       8
0x87C0	0x6E00      	MOVWF       R0 
0x87C2	0xD018      	BRA         L_end_saliendoB
;rutinasensores_v4(mstr-slv).h,714 :: 		}
L_saliendoB226:
;rutinasensores_v4(mstr-slv).h,715 :: 		if((SENSOR2 & SENSOR4 & SENSOR6)){
0x87C4	0xA883      	BTFSS       PORTD, 4 
0x87C6	0xD004      	BRA         L__saliendoB1039
0x87C8	0xA681      	BTFSS       PORTB, 3 
0x87CA	0xD002      	BRA         L__saliendoB1039
0x87CC	0x80D8      	BSF         STATUS, 0 
0x87CE	0xD001      	BRA         L__saliendoB1040
L__saliendoB1039:
0x87D0	0x90D8      	BCF         STATUS, 0 
L__saliendoB1040:
0x87D2	0xE304      	BNC         L__saliendoB1041
0x87D4	0xA281      	BTFSS       PORTB, 1 
0x87D6	0xD002      	BRA         L__saliendoB1041
0x87D8	0x8001      	BSF         R1, 0 
0x87DA	0xD001      	BRA         L__saliendoB1042
L__saliendoB1041:
0x87DC	0x9001      	BCF         R1, 0 
L__saliendoB1042:
0x87DE	0xA001      	BTFSS       R1, 0 
0x87E0	0xD009      	BRA         L_saliendoB227
;rutinasensores_v4(mstr-slv).h,716 :: 		lcd_cmd(_LCD_CLEAR);
0x87E2	0x0E01      	MOVLW       1
0x87E4	0x0102      	MOVLB       2
0x87E6	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x87E8	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,717 :: 		return debugEstadoB = ESPERA;
0x87EC	0x0101      	MOVLB       1
0x87EE	0x6B3D      	CLRF        _debugEstadoB, 1
0x87F0	0x6A00      	CLRF        R0 
0x87F2	0xD000      	BRA         L_end_saliendoB
;rutinasensores_v4(mstr-slv).h,718 :: 		}
L_saliendoB227:
;rutinasensores_v4(mstr-slv).h,719 :: 		}
L_saliendoB225:
;rutinasensores_v4(mstr-slv).h,720 :: 		}
L_end_saliendoB:
0x87F4	0x0012      	RETURN      0
; end of _saliendoB
_esperaBS:
;rutinasensores_v4(mstr-slv).h,1351 :: 		short esperaBS(short estado){
;rutinasensores_v4(mstr-slv).h,1352 :: 		if(estado == ESPERA){
0x87F6	0x0102      	MOVLB       2
0x87F8	0x5114      	MOVF        FARG_esperaBS_estado, 0, 1
0x87FA	0x0A00      	XORLW       0
0x87FC	0xE146      	BNZ         L_esperaBS336
;rutinasensores_v4(mstr-slv).h,1353 :: 		muestraEstatus();
0x87FE	0xF008EC8B  	CALL        _muestraEstatus, 0
;rutinasensores_v4(mstr-slv).h,1354 :: 		if((!SENSOR1 | !SENSOR3 | !SENSOR5)){
0x8802	0xB881      	BTFSC       PORTB, 4 
0x8804	0xD002      	BRA         L__esperaBS1615
0x8806	0x8001      	BSF         R1, 0 
0x8808	0xD001      	BRA         L__esperaBS1616
L__esperaBS1615:
0x880A	0x9001      	BCF         R1, 0 
L__esperaBS1616:
0x880C	0xB481      	BTFSC       PORTB, 2 
0x880E	0xD002      	BRA         L__esperaBS1617
0x8810	0x80D8      	BSF         STATUS, 0 
0x8812	0xD001      	BRA         L__esperaBS1618
L__esperaBS1617:
0x8814	0x90D8      	BCF         STATUS, 0 
L__esperaBS1618:
0x8816	0xB001      	BTFSC       R1, 0 
0x8818	0xD003      	BRA         L__esperaBS1619
0x881A	0xE202      	BC          L__esperaBS1619
0x881C	0x9001      	BCF         R1, 0 
0x881E	0xD001      	BRA         L__esperaBS1620
L__esperaBS1619:
0x8820	0x8001      	BSF         R1, 0 
L__esperaBS1620:
0x8822	0xB081      	BTFSC       PORTB, 0 
0x8824	0xD002      	BRA         L__esperaBS1621
0x8826	0x80D8      	BSF         STATUS, 0 
0x8828	0xD001      	BRA         L__esperaBS1622
L__esperaBS1621:
0x882A	0x90D8      	BCF         STATUS, 0 
L__esperaBS1622:
0x882C	0xB001      	BTFSC       R1, 0 
0x882E	0xD003      	BRA         L__esperaBS1623
0x8830	0xE202      	BC          L__esperaBS1623
0x8832	0x9001      	BCF         R1, 0 
0x8834	0xD001      	BRA         L__esperaBS1624
L__esperaBS1623:
0x8836	0x8001      	BSF         R1, 0 
L__esperaBS1624:
0x8838	0xA001      	BTFSS       R1, 0 
0x883A	0xD00A      	BRA         L_esperaBS337
;rutinasensores_v4(mstr-slv).h,1355 :: 		lcd_cmd(_LCD_CLEAR);
0x883C	0x0E01      	MOVLW       1
0x883E	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x8840	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1356 :: 		return debugEstadoB = ENTRANDO;
0x8844	0x0E01      	MOVLW       1
0x8846	0x0101      	MOVLB       1
0x8848	0x6F3D      	MOVWF       _debugEstadoB, 1
0x884A	0x0E01      	MOVLW       1
0x884C	0x6E00      	MOVWF       R0 
0x884E	0xD01D      	BRA         L_end_esperaBS
;rutinasensores_v4(mstr-slv).h,1357 :: 		}
L_esperaBS337:
;rutinasensores_v4(mstr-slv).h,1358 :: 		if((!SENSOR2 | !SENSOR4)){
0x8850	0xB883      	BTFSC       PORTD, 4 
0x8852	0xD002      	BRA         L__esperaBS1625
0x8854	0x8001      	BSF         R1, 0 
0x8856	0xD001      	BRA         L__esperaBS1626
L__esperaBS1625:
0x8858	0x9001      	BCF         R1, 0 
L__esperaBS1626:
0x885A	0xB681      	BTFSC       PORTB, 3 
0x885C	0xD002      	BRA         L__esperaBS1627
0x885E	0x80D8      	BSF         STATUS, 0 
0x8860	0xD001      	BRA         L__esperaBS1628
L__esperaBS1627:
0x8862	0x90D8      	BCF         STATUS, 0 
L__esperaBS1628:
0x8864	0xB001      	BTFSC       R1, 0 
0x8866	0xD003      	BRA         L__esperaBS1629
0x8868	0xE202      	BC          L__esperaBS1629
0x886A	0x9001      	BCF         R1, 0 
0x886C	0xD001      	BRA         L__esperaBS1630
L__esperaBS1629:
0x886E	0x8001      	BSF         R1, 0 
L__esperaBS1630:
0x8870	0xA001      	BTFSS       R1, 0 
0x8872	0xD00B      	BRA         L_esperaBS338
;rutinasensores_v4(mstr-slv).h,1359 :: 		lcd_cmd(_LCD_CLEAR);
0x8874	0x0E01      	MOVLW       1
0x8876	0x0102      	MOVLB       2
0x8878	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x887A	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1360 :: 		return debugEstadoB = SALIENDO;
0x887E	0x0E04      	MOVLW       4
0x8880	0x0101      	MOVLB       1
0x8882	0x6F3D      	MOVWF       _debugEstadoB, 1
0x8884	0x0E04      	MOVLW       4
0x8886	0x6E00      	MOVWF       R0 
0x8888	0xD000      	BRA         L_end_esperaBS
;rutinasensores_v4(mstr-slv).h,1361 :: 		}
L_esperaBS338:
;rutinasensores_v4(mstr-slv).h,1362 :: 		}
L_esperaBS336:
;rutinasensores_v4(mstr-slv).h,1363 :: 		}
L_end_esperaBS:
0x888A	0x0012      	RETURN      0
; end of _esperaBS
_transicionSalBS:
;rutinasensores_v4(mstr-slv).h,1456 :: 		short transicionSalBS(short estado){
;rutinasensores_v4(mstr-slv).h,1457 :: 		if(estado == TRANSAL){
0x888C	0x0102      	MOVLB       2
0x888E	0x5114      	MOVF        FARG_transicionSalBS_estado, 0, 1
0x8890	0x0A05      	XORLW       5
0x8892	0xE142      	BNZ         L_transicionSalBS356
;rutinasensores_v4(mstr-slv).h,1458 :: 		LCD_OUTCONST(3,1,"TRANSICION SALIDA");
0x8894	0x0E03      	MOVLW       3
0x8896	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x8898	0x0E01      	MOVLW       1
0x889A	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x889C	0x0E56      	MOVLW       ?lstr_62_MyProject
0x889E	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x88A0	0x0ED6      	MOVLW       hi_addr(?lstr_62_MyProject)
0x88A2	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x88A4	0x0E00      	MOVLW       higher_addr(?lstr_62_MyProject)
0x88A6	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x88A8	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1459 :: 		if(!SENSOR2 & !SENSOR4){
0x88AC	0xB883      	BTFSC       PORTD, 4 
0x88AE	0xD002      	BRA         L__transicionSalBS1736
0x88B0	0x8001      	BSF         R1, 0 
0x88B2	0xD001      	BRA         L__transicionSalBS1737
L__transicionSalBS1736:
0x88B4	0x9001      	BCF         R1, 0 
L__transicionSalBS1737:
0x88B6	0xB681      	BTFSC       PORTB, 3 
0x88B8	0xD002      	BRA         L__transicionSalBS1738
0x88BA	0x80D8      	BSF         STATUS, 0 
0x88BC	0xD001      	BRA         L__transicionSalBS1739
L__transicionSalBS1738:
0x88BE	0x90D8      	BCF         STATUS, 0 
L__transicionSalBS1739:
0x88C0	0xA001      	BTFSS       R1, 0 
0x88C2	0xD003      	BRA         L__transicionSalBS1740
0x88C4	0xE302      	BNC         L__transicionSalBS1740
0x88C6	0x8001      	BSF         R1, 0 
0x88C8	0xD001      	BRA         L__transicionSalBS1741
L__transicionSalBS1740:
0x88CA	0x9001      	BCF         R1, 0 
L__transicionSalBS1741:
0x88CC	0xA001      	BTFSS       R1, 0 
0x88CE	0xD00A      	BRA         L_transicionSalBS357
;rutinasensores_v4(mstr-slv).h,1460 :: 		lcd_cmd(_LCD_CLEAR);
0x88D0	0x0E01      	MOVLW       1
0x88D2	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x88D4	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1461 :: 		return debugEstadoB = TRANSICIONS;
0x88D8	0x0E08      	MOVLW       8
0x88DA	0x0101      	MOVLB       1
0x88DC	0x6F3D      	MOVWF       _debugEstadoB, 1
0x88DE	0x0E08      	MOVLW       8
0x88E0	0x6E00      	MOVWF       R0 
0x88E2	0xD01A      	BRA         L_end_transicionSalBS
;rutinasensores_v4(mstr-slv).h,1462 :: 		}
L_transicionSalBS357:
;rutinasensores_v4(mstr-slv).h,1463 :: 		if((SENSOR1 & SENSOR3 & SENSOR5)){
0x88E4	0xA881      	BTFSS       PORTB, 4 
0x88E6	0xD004      	BRA         L__transicionSalBS1742
0x88E8	0xA481      	BTFSS       PORTB, 2 
0x88EA	0xD002      	BRA         L__transicionSalBS1742
0x88EC	0x80D8      	BSF         STATUS, 0 
0x88EE	0xD001      	BRA         L__transicionSalBS1743
L__transicionSalBS1742:
0x88F0	0x90D8      	BCF         STATUS, 0 
L__transicionSalBS1743:
0x88F2	0xE304      	BNC         L__transicionSalBS1744
0x88F4	0xA081      	BTFSS       PORTB, 0 
0x88F6	0xD002      	BRA         L__transicionSalBS1744
0x88F8	0x8001      	BSF         R1, 0 
0x88FA	0xD001      	BRA         L__transicionSalBS1745
L__transicionSalBS1744:
0x88FC	0x9001      	BCF         R1, 0 
L__transicionSalBS1745:
0x88FE	0xA001      	BTFSS       R1, 0 
0x8900	0xD00B      	BRA         L_transicionSalBS358
;rutinasensores_v4(mstr-slv).h,1464 :: 		lcd_cmd(_LCD_CLEAR);
0x8902	0x0E01      	MOVLW       1
0x8904	0x0102      	MOVLB       2
0x8906	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x8908	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1465 :: 		return debugEstadoB = SALIO;
0x890C	0x0E06      	MOVLW       6
0x890E	0x0101      	MOVLB       1
0x8910	0x6F3D      	MOVWF       _debugEstadoB, 1
0x8912	0x0E06      	MOVLW       6
0x8914	0x6E00      	MOVWF       R0 
0x8916	0xD000      	BRA         L_end_transicionSalBS
;rutinasensores_v4(mstr-slv).h,1466 :: 		}
L_transicionSalBS358:
;rutinasensores_v4(mstr-slv).h,1467 :: 		}
L_transicionSalBS356:
;rutinasensores_v4(mstr-slv).h,1468 :: 		}
L_end_transicionSalBS:
0x8918	0x0012      	RETURN      0
; end of _transicionSalBS
_transicionSalBO:
;rutinasensores_v4(mstr-slv).h,1312 :: 		short transicionSalBO(short estado){
;rutinasensores_v4(mstr-slv).h,1313 :: 		if(estado == TRANSAL){
0x891A	0x0102      	MOVLB       2
0x891C	0x5114      	MOVF        FARG_transicionSalBO_estado, 0, 1
0x891E	0x0A05      	XORLW       5
0x8920	0xE146      	BNZ         L_transicionSalBO331
;rutinasensores_v4(mstr-slv).h,1314 :: 		LCD_OUTCONST(3,1,"TRANSICION SALIDA");
0x8922	0x0E03      	MOVLW       3
0x8924	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x8926	0x0E01      	MOVLW       1
0x8928	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x892A	0x0ED0      	MOVLW       ?lstr_54_MyProject
0x892C	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x892E	0x0ED7      	MOVLW       hi_addr(?lstr_54_MyProject)
0x8930	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x8932	0x0E00      	MOVLW       higher_addr(?lstr_54_MyProject)
0x8934	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x8936	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1315 :: 		if(!SENSOR2 & !SENSOR4 & !SENSOR6){
0x893A	0xB883      	BTFSC       PORTD, 4 
0x893C	0xD002      	BRA         L__transicionSalBO1601
0x893E	0x8001      	BSF         R1, 0 
0x8940	0xD001      	BRA         L__transicionSalBO1602
L__transicionSalBO1601:
0x8942	0x9001      	BCF         R1, 0 
L__transicionSalBO1602:
0x8944	0xB681      	BTFSC       PORTB, 3 
0x8946	0xD002      	BRA         L__transicionSalBO1603
0x8948	0x80D8      	BSF         STATUS, 0 
0x894A	0xD001      	BRA         L__transicionSalBO1604
L__transicionSalBO1603:
0x894C	0x90D8      	BCF         STATUS, 0 
L__transicionSalBO1604:
0x894E	0xA001      	BTFSS       R1, 0 
0x8950	0xD003      	BRA         L__transicionSalBO1605
0x8952	0xE302      	BNC         L__transicionSalBO1605
0x8954	0x8001      	BSF         R1, 0 
0x8956	0xD001      	BRA         L__transicionSalBO1606
L__transicionSalBO1605:
0x8958	0x9001      	BCF         R1, 0 
L__transicionSalBO1606:
0x895A	0xB281      	BTFSC       PORTB, 1 
0x895C	0xD002      	BRA         L__transicionSalBO1607
0x895E	0x80D8      	BSF         STATUS, 0 
0x8960	0xD001      	BRA         L__transicionSalBO1608
L__transicionSalBO1607:
0x8962	0x90D8      	BCF         STATUS, 0 
L__transicionSalBO1608:
0x8964	0xA001      	BTFSS       R1, 0 
0x8966	0xD003      	BRA         L__transicionSalBO1609
0x8968	0xE302      	BNC         L__transicionSalBO1609
0x896A	0x8001      	BSF         R1, 0 
0x896C	0xD001      	BRA         L__transicionSalBO1610
L__transicionSalBO1609:
0x896E	0x9001      	BCF         R1, 0 
L__transicionSalBO1610:
0x8970	0xA001      	BTFSS       R1, 0 
0x8972	0xD00A      	BRA         L_transicionSalBO332
;rutinasensores_v4(mstr-slv).h,1316 :: 		lcd_cmd(_LCD_CLEAR);
0x8974	0x0E01      	MOVLW       1
0x8976	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x8978	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1317 :: 		return debugEstadoB = TRANSICIONS;
0x897C	0x0E08      	MOVLW       8
0x897E	0x0101      	MOVLB       1
0x8980	0x6F3D      	MOVWF       _debugEstadoB, 1
0x8982	0x0E08      	MOVLW       8
0x8984	0x6E00      	MOVWF       R0 
0x8986	0xD013      	BRA         L_end_transicionSalBO
;rutinasensores_v4(mstr-slv).h,1318 :: 		}
L_transicionSalBO332:
;rutinasensores_v4(mstr-slv).h,1319 :: 		if((SENSOR1 & SENSOR3)){
0x8988	0xA881      	BTFSS       PORTB, 4 
0x898A	0xD004      	BRA         L__transicionSalBO1611
0x898C	0xA481      	BTFSS       PORTB, 2 
0x898E	0xD002      	BRA         L__transicionSalBO1611
0x8990	0x80D8      	BSF         STATUS, 0 
0x8992	0xD001      	BRA         L__transicionSalBO1612
L__transicionSalBO1611:
0x8994	0x90D8      	BCF         STATUS, 0 
L__transicionSalBO1612:
0x8996	0xE30B      	BNC         L_transicionSalBO333
;rutinasensores_v4(mstr-slv).h,1320 :: 		lcd_cmd(_LCD_CLEAR);
0x8998	0x0E01      	MOVLW       1
0x899A	0x0102      	MOVLB       2
0x899C	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x899E	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1321 :: 		return debugEstadoB = SALIO;
0x89A2	0x0E06      	MOVLW       6
0x89A4	0x0101      	MOVLB       1
0x89A6	0x6F3D      	MOVWF       _debugEstadoB, 1
0x89A8	0x0E06      	MOVLW       6
0x89AA	0x6E00      	MOVWF       R0 
0x89AC	0xD000      	BRA         L_end_transicionSalBO
;rutinasensores_v4(mstr-slv).h,1322 :: 		}
L_transicionSalBO333:
;rutinasensores_v4(mstr-slv).h,1323 :: 		}
L_transicionSalBO331:
;rutinasensores_v4(mstr-slv).h,1324 :: 		}
L_end_transicionSalBO:
0x89AE	0x0012      	RETURN      0
; end of _transicionSalBO
_entrandoBO:
;rutinasensores_v4(mstr-slv).h,1221 :: 		short entrandoBO(short estado){
;rutinasensores_v4(mstr-slv).h,1222 :: 		if(estado == ENTRANDO){
0x89B0	0x0102      	MOVLB       2
0x89B2	0x5114      	MOVF        FARG_entrandoBO_estado, 0, 1
0x89B4	0x0A01      	XORLW       1
0x89B6	0xA4D8      	BTFSS       STATUS, 2 
0x89B8	0xD062      	BRA         L_entrandoBO314
;rutinasensores_v4(mstr-slv).h,1223 :: 		LCD_OUTCONST(3,1,"ENTRANDO");
0x89BA	0x0E03      	MOVLW       3
0x89BC	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x89BE	0x0E01      	MOVLW       1
0x89C0	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x89C2	0x0E3D      	MOVLW       ?lstr_48_MyProject
0x89C4	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x89C6	0x0EDA      	MOVLW       hi_addr(?lstr_48_MyProject)
0x89C8	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x89CA	0x0E00      	MOVLW       higher_addr(?lstr_48_MyProject)
0x89CC	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x89CE	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1224 :: 		if((SENSOR1 & SENSOR3)){
0x89D2	0xA881      	BTFSS       PORTB, 4 
0x89D4	0xD004      	BRA         L__entrandoBO1501
0x89D6	0xA481      	BTFSS       PORTB, 2 
0x89D8	0xD002      	BRA         L__entrandoBO1501
0x89DA	0x80D8      	BSF         STATUS, 0 
0x89DC	0xD001      	BRA         L__entrandoBO1502
L__entrandoBO1501:
0x89DE	0x90D8      	BCF         STATUS, 0 
L__entrandoBO1502:
0x89E0	0xE308      	BNC         L_entrandoBO315
;rutinasensores_v4(mstr-slv).h,1225 :: 		lcd_cmd(_LCD_CLEAR);
0x89E2	0x0E01      	MOVLW       1
0x89E4	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x89E6	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1226 :: 		return debugEstadoB = ESPERA;
0x89EA	0x0101      	MOVLB       1
0x89EC	0x6B3D      	CLRF        _debugEstadoB, 1
0x89EE	0x6A00      	CLRF        R0 
0x89F0	0xD046      	BRA         L_end_entrandoBO
;rutinasensores_v4(mstr-slv).h,1227 :: 		}
L_entrandoBO315:
;rutinasensores_v4(mstr-slv).h,1228 :: 		if((!SENSOR2 & !SENSOR4) | (!SENSOR4 & !SENSOR6) | (!SENSOR2 & !SENSOR6)){
0x89F2	0xB883      	BTFSC       PORTD, 4 
0x89F4	0xD002      	BRA         L__entrandoBO1503
0x89F6	0x8601      	BSF         R1, 3 
0x89F8	0xD001      	BRA         L__entrandoBO1504
L__entrandoBO1503:
0x89FA	0x9601      	BCF         R1, 3 
L__entrandoBO1504:
0x89FC	0xB681      	BTFSC       PORTB, 3 
0x89FE	0xD002      	BRA         L__entrandoBO1505
0x8A00	0x8001      	BSF         R1, 0 
0x8A02	0xD001      	BRA         L__entrandoBO1506
L__entrandoBO1505:
0x8A04	0x9001      	BCF         R1, 0 
L__entrandoBO1506:
0x8A06	0xA601      	BTFSS       R1, 3 
0x8A08	0xD004      	BRA         L__entrandoBO1507
0x8A0A	0xA001      	BTFSS       R1, 0 
0x8A0C	0xD002      	BRA         L__entrandoBO1507
0x8A0E	0x8201      	BSF         R1, 1 
0x8A10	0xD001      	BRA         L__entrandoBO1508
L__entrandoBO1507:
0x8A12	0x9201      	BCF         R1, 1 
L__entrandoBO1508:
0x8A14	0xB281      	BTFSC       PORTB, 1 
0x8A16	0xD002      	BRA         L__entrandoBO1509
0x8A18	0x8401      	BSF         R1, 2 
0x8A1A	0xD001      	BRA         L__entrandoBO1510
L__entrandoBO1509:
0x8A1C	0x9401      	BCF         R1, 2 
L__entrandoBO1510:
0x8A1E	0xA001      	BTFSS       R1, 0 
0x8A20	0xD004      	BRA         L__entrandoBO1511
0x8A22	0xA401      	BTFSS       R1, 2 
0x8A24	0xD002      	BRA         L__entrandoBO1511
0x8A26	0x80D8      	BSF         STATUS, 0 
0x8A28	0xD001      	BRA         L__entrandoBO1512
L__entrandoBO1511:
0x8A2A	0x90D8      	BCF         STATUS, 0 
L__entrandoBO1512:
0x8A2C	0xB201      	BTFSC       R1, 1 
0x8A2E	0xD003      	BRA         L__entrandoBO1513
0x8A30	0xE202      	BC          L__entrandoBO1513
0x8A32	0x9201      	BCF         R1, 1 
0x8A34	0xD001      	BRA         L__entrandoBO1514
L__entrandoBO1513:
0x8A36	0x8201      	BSF         R1, 1 
L__entrandoBO1514:
0x8A38	0xB601      	BTFSC       R1, 3 
0x8A3A	0xD002      	BRA         L__entrandoBO1515
0x8A3C	0x9001      	BCF         R1, 0 
0x8A3E	0xD001      	BRA         L__entrandoBO1516
L__entrandoBO1515:
0x8A40	0x8001      	BSF         R1, 0 
L__entrandoBO1516:
0x8A42	0xB401      	BTFSC       R1, 2 
0x8A44	0xD002      	BRA         L__entrandoBO1517
0x8A46	0x90D8      	BCF         STATUS, 0 
0x8A48	0xD001      	BRA         L__entrandoBO1518
L__entrandoBO1517:
0x8A4A	0x80D8      	BSF         STATUS, 0 
L__entrandoBO1518:
0x8A4C	0xA001      	BTFSS       R1, 0 
0x8A4E	0xD003      	BRA         L__entrandoBO1519
0x8A50	0xE302      	BNC         L__entrandoBO1519
0x8A52	0x8001      	BSF         R1, 0 
0x8A54	0xD001      	BRA         L__entrandoBO1520
L__entrandoBO1519:
0x8A56	0x9001      	BCF         R1, 0 
L__entrandoBO1520:
0x8A58	0xB201      	BTFSC       R1, 1 
0x8A5A	0xD004      	BRA         L__entrandoBO1521
0x8A5C	0xB001      	BTFSC       R1, 0 
0x8A5E	0xD002      	BRA         L__entrandoBO1521
0x8A60	0x90D8      	BCF         STATUS, 0 
0x8A62	0xD001      	BRA         L__entrandoBO1522
L__entrandoBO1521:
0x8A64	0x80D8      	BSF         STATUS, 0 
L__entrandoBO1522:
0x8A66	0xE30B      	BNC         L_entrandoBO316
;rutinasensores_v4(mstr-slv).h,1229 :: 		lcd_cmd(_LCD_CLEAR);
0x8A68	0x0E01      	MOVLW       1
0x8A6A	0x0102      	MOVLB       2
0x8A6C	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x8A6E	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1230 :: 		return debugEstadoB = TRANSICION;
0x8A72	0x0E02      	MOVLW       2
0x8A74	0x0101      	MOVLB       1
0x8A76	0x6F3D      	MOVWF       _debugEstadoB, 1
0x8A78	0x0E02      	MOVLW       2
0x8A7A	0x6E00      	MOVWF       R0 
0x8A7C	0xD000      	BRA         L_end_entrandoBO
;rutinasensores_v4(mstr-slv).h,1231 :: 		}
L_entrandoBO316:
;rutinasensores_v4(mstr-slv).h,1232 :: 		}
L_entrandoBO314:
;rutinasensores_v4(mstr-slv).h,1233 :: 		}
L_end_entrandoBO:
0x8A7E	0x0012      	RETURN      0
; end of _entrandoBO
_saliendoBD:
;rutinasensores_v4(mstr-slv).h,852 :: 		short saliendoBD(short estado){
;rutinasensores_v4(mstr-slv).h,853 :: 		if(estado == SALIENDO){
0x8A80	0x0102      	MOVLB       2
0x8A82	0x5114      	MOVF        FARG_saliendoBD_estado, 0, 1
0x8A84	0x0A04      	XORLW       4
0x8A86	0xA4D8      	BTFSS       STATUS, 2 
0x8A88	0xD062      	BRA         L_saliendoBD250
;rutinasensores_v4(mstr-slv).h,854 :: 		lcd_outConst(3, 1, "SALIENDO");
0x8A8A	0x0E03      	MOVLW       3
0x8A8C	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x8A8E	0x0E01      	MOVLW       1
0x8A90	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x8A92	0x0EE3      	MOVLW       ?lstr_28_MyProject
0x8A94	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x8A96	0x0ED9      	MOVLW       hi_addr(?lstr_28_MyProject)
0x8A98	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x8A9A	0x0E00      	MOVLW       higher_addr(?lstr_28_MyProject)
0x8A9C	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x8A9E	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,855 :: 		if((!SENSOR1 & !SENSOR3) | (!SENSOR3 & !SENSOR5) | (!SENSOR1 & !SENSOR5)){
0x8AA2	0xB881      	BTFSC       PORTB, 4 
0x8AA4	0xD002      	BRA         L__saliendoBD1166
0x8AA6	0x8601      	BSF         R1, 3 
0x8AA8	0xD001      	BRA         L__saliendoBD1167
L__saliendoBD1166:
0x8AAA	0x9601      	BCF         R1, 3 
L__saliendoBD1167:
0x8AAC	0xB481      	BTFSC       PORTB, 2 
0x8AAE	0xD002      	BRA         L__saliendoBD1168
0x8AB0	0x8001      	BSF         R1, 0 
0x8AB2	0xD001      	BRA         L__saliendoBD1169
L__saliendoBD1168:
0x8AB4	0x9001      	BCF         R1, 0 
L__saliendoBD1169:
0x8AB6	0xA601      	BTFSS       R1, 3 
0x8AB8	0xD004      	BRA         L__saliendoBD1170
0x8ABA	0xA001      	BTFSS       R1, 0 
0x8ABC	0xD002      	BRA         L__saliendoBD1170
0x8ABE	0x8201      	BSF         R1, 1 
0x8AC0	0xD001      	BRA         L__saliendoBD1171
L__saliendoBD1170:
0x8AC2	0x9201      	BCF         R1, 1 
L__saliendoBD1171:
0x8AC4	0xB081      	BTFSC       PORTB, 0 
0x8AC6	0xD002      	BRA         L__saliendoBD1172
0x8AC8	0x8401      	BSF         R1, 2 
0x8ACA	0xD001      	BRA         L__saliendoBD1173
L__saliendoBD1172:
0x8ACC	0x9401      	BCF         R1, 2 
L__saliendoBD1173:
0x8ACE	0xA001      	BTFSS       R1, 0 
0x8AD0	0xD004      	BRA         L__saliendoBD1174
0x8AD2	0xA401      	BTFSS       R1, 2 
0x8AD4	0xD002      	BRA         L__saliendoBD1174
0x8AD6	0x80D8      	BSF         STATUS, 0 
0x8AD8	0xD001      	BRA         L__saliendoBD1175
L__saliendoBD1174:
0x8ADA	0x90D8      	BCF         STATUS, 0 
L__saliendoBD1175:
0x8ADC	0xB201      	BTFSC       R1, 1 
0x8ADE	0xD003      	BRA         L__saliendoBD1176
0x8AE0	0xE202      	BC          L__saliendoBD1176
0x8AE2	0x9201      	BCF         R1, 1 
0x8AE4	0xD001      	BRA         L__saliendoBD1177
L__saliendoBD1176:
0x8AE6	0x8201      	BSF         R1, 1 
L__saliendoBD1177:
0x8AE8	0xB601      	BTFSC       R1, 3 
0x8AEA	0xD002      	BRA         L__saliendoBD1178
0x8AEC	0x9001      	BCF         R1, 0 
0x8AEE	0xD001      	BRA         L__saliendoBD1179
L__saliendoBD1178:
0x8AF0	0x8001      	BSF         R1, 0 
L__saliendoBD1179:
0x8AF2	0xB401      	BTFSC       R1, 2 
0x8AF4	0xD002      	BRA         L__saliendoBD1180
0x8AF6	0x90D8      	BCF         STATUS, 0 
0x8AF8	0xD001      	BRA         L__saliendoBD1181
L__saliendoBD1180:
0x8AFA	0x80D8      	BSF         STATUS, 0 
L__saliendoBD1181:
0x8AFC	0xA001      	BTFSS       R1, 0 
0x8AFE	0xD003      	BRA         L__saliendoBD1182
0x8B00	0xE302      	BNC         L__saliendoBD1182
0x8B02	0x8001      	BSF         R1, 0 
0x8B04	0xD001      	BRA         L__saliendoBD1183
L__saliendoBD1182:
0x8B06	0x9001      	BCF         R1, 0 
L__saliendoBD1183:
0x8B08	0xB201      	BTFSC       R1, 1 
0x8B0A	0xD004      	BRA         L__saliendoBD1184
0x8B0C	0xB001      	BTFSC       R1, 0 
0x8B0E	0xD002      	BRA         L__saliendoBD1184
0x8B10	0x90D8      	BCF         STATUS, 0 
0x8B12	0xD001      	BRA         L__saliendoBD1185
L__saliendoBD1184:
0x8B14	0x80D8      	BSF         STATUS, 0 
L__saliendoBD1185:
0x8B16	0xE30A      	BNC         L_saliendoBD251
;rutinasensores_v4(mstr-slv).h,856 :: 		lcd_cmd(_LCD_CLEAR);
0x8B18	0x0E01      	MOVLW       1
0x8B1A	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x8B1C	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,857 :: 		return debugEstadoB = TRANSICIONS;
0x8B20	0x0E08      	MOVLW       8
0x8B22	0x0101      	MOVLB       1
0x8B24	0x6F3D      	MOVWF       _debugEstadoB, 1
0x8B26	0x0E08      	MOVLW       8
0x8B28	0x6E00      	MOVWF       R0 
0x8B2A	0xD011      	BRA         L_end_saliendoBD
;rutinasensores_v4(mstr-slv).h,858 :: 		}
L_saliendoBD251:
;rutinasensores_v4(mstr-slv).h,859 :: 		if((SENSOR4 & SENSOR6)){
0x8B2C	0xA681      	BTFSS       PORTB, 3 
0x8B2E	0xD004      	BRA         L__saliendoBD1186
0x8B30	0xA281      	BTFSS       PORTB, 1 
0x8B32	0xD002      	BRA         L__saliendoBD1186
0x8B34	0x80D8      	BSF         STATUS, 0 
0x8B36	0xD001      	BRA         L__saliendoBD1187
L__saliendoBD1186:
0x8B38	0x90D8      	BCF         STATUS, 0 
L__saliendoBD1187:
0x8B3A	0xE309      	BNC         L_saliendoBD252
;rutinasensores_v4(mstr-slv).h,860 :: 		lcd_cmd(_LCD_CLEAR);
0x8B3C	0x0E01      	MOVLW       1
0x8B3E	0x0102      	MOVLB       2
0x8B40	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x8B42	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,861 :: 		return debugEstadoB = ESPERA;
0x8B46	0x0101      	MOVLB       1
0x8B48	0x6B3D      	CLRF        _debugEstadoB, 1
0x8B4A	0x6A00      	CLRF        R0 
0x8B4C	0xD000      	BRA         L_end_saliendoBD
;rutinasensores_v4(mstr-slv).h,862 :: 		}
L_saliendoBD252:
;rutinasensores_v4(mstr-slv).h,863 :: 		}
L_saliendoBD250:
;rutinasensores_v4(mstr-slv).h,864 :: 		}
L_end_saliendoBD:
0x8B4E	0x0012      	RETURN      0
; end of _saliendoBD
_entroB:
;rutinasensores_v4(mstr-slv).h,687 :: 		short entroB(short estado){
;rutinasensores_v4(mstr-slv).h,688 :: 		if(estado == ENTRO){
0x8B50	0x0102      	MOVLB       2
0x8B52	0x5114      	MOVF        FARG_entroB_estado, 0, 1
0x8B54	0x0A03      	XORLW       3
0x8B56	0xA4D8      	BTFSS       STATUS, 2 
0x8B58	0xD10A      	BRA         L_entroB223
;rutinasensores_v4(mstr-slv).h,689 :: 		LCD_OUTCONST(3,1,"BIENVENIDO: $6.00");
0x8B5A	0x0E03      	MOVLW       3
0x8B5C	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x8B5E	0x0E01      	MOVLW       1
0x8B60	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x8B62	0x0EF8      	MOVLW       ?lstr_19_MyProject
0x8B64	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x8B66	0x0ED6      	MOVLW       hi_addr(?lstr_19_MyProject)
0x8B68	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x8B6A	0x0E00      	MOVLW       higher_addr(?lstr_19_MyProject)
0x8B6C	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x8B6E	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,690 :: 		pBajan = eepromLeeNumero(0x0003,2);
0x8B72	0x0E03      	MOVLW       3
0x8B74	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x8B76	0x0E00      	MOVLW       0
0x8B78	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x8B7A	0x0E02      	MOVLW       2
0x8B7C	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x8B7E	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x8B82	0xF135C000  	MOVFF       R0, _pBajan
0x8B86	0xF136C001  	MOVFF       R1, _pBajan+1
;rutinasensores_v4(mstr-slv).h,691 :: 		pSuben = eepromLeeNumero(0x0000,2) + 1;
0x8B8A	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x8B8C	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x8B8E	0x0E02      	MOVLW       2
0x8B90	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x8B92	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x8B96	0x4A00      	INFSNZ      R0, 1 
0x8B98	0x2A01      	INCF        R1, 1 
0x8B9A	0xF137C000  	MOVFF       R0, _pSuben
0x8B9E	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,692 :: 		eepromEscribeNumero(0x0000,pSuben,2);
0x8BA2	0x6B1D      	CLRF        FARG_eepromEscribeNumero_Registro, 1
0x8BA4	0x6B1E      	CLRF        FARG_eepromEscribeNumero_Registro+1, 1
0x8BA6	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x8BAA	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x8BAE	0x0E00      	MOVLW       0
0x8BB0	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x8BB2	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x8BB4	0x0E02      	MOVLW       2
0x8BB6	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x8BB8	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,693 :: 		pSuben = eepromLeeNumero(0x0000, 2);
0x8BBC	0x0102      	MOVLB       2
0x8BBE	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x8BC0	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x8BC2	0x0E02      	MOVLW       2
0x8BC4	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x8BC6	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x8BCA	0xF137C000  	MOVFF       R0, _pSuben
0x8BCE	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,694 :: 		pasajerosVerdaderos = ((float)pSuben + (float)pBajan)/2;
0x8BD2	0xF008EC65  	CALL        _Word2Double, 0
0x8BD6	0xF215C000  	MOVFF       R0, FLOC__entroB
0x8BDA	0xF216C001  	MOVFF       R1, FLOC__entroB+1
0x8BDE	0xF217C002  	MOVFF       R2, FLOC__entroB+2
0x8BE2	0xF218C003  	MOVFF       R3, FLOC__entroB+3
0x8BE6	0xF000C135  	MOVFF       _pBajan, R0
0x8BEA	0xF001C136  	MOVFF       _pBajan+1, R1
0x8BEE	0xF008EC65  	CALL        _Word2Double, 0
0x8BF2	0xF004C215  	MOVFF       FLOC__entroB, R4
0x8BF6	0xF005C216  	MOVFF       FLOC__entroB+1, R5
0x8BFA	0xF006C217  	MOVFF       FLOC__entroB+2, R6
0x8BFE	0xF007C218  	MOVFF       FLOC__entroB+3, R7
0x8C02	0xF004EC8D  	CALL        _Add_32x32_FP, 0
0x8C06	0x0E00      	MOVLW       0
0x8C08	0x6E04      	MOVWF       R4 
0x8C0A	0x0E00      	MOVLW       0
0x8C0C	0x6E05      	MOVWF       R5 
0x8C0E	0x0E00      	MOVLW       0
0x8C10	0x6E06      	MOVWF       R6 
0x8C12	0x0E80      	MOVLW       128
0x8C14	0x6E07      	MOVWF       R7 
0x8C16	0xF007ECA7  	CALL        _Div_32x32_FP, 0
0x8C1A	0xF139C000  	MOVFF       R0, _pasajerosVerdaderos
0x8C1E	0xF13AC001  	MOVFF       R1, _pasajerosVerdaderos+1
0x8C22	0xF13BC002  	MOVFF       R2, _pasajerosVerdaderos+2
0x8C26	0xF13CC003  	MOVFF       R3, _pasajerosVerdaderos+3
;rutinasensores_v4(mstr-slv).h,695 :: 		eepromEscribeNumero(0x0009, (unsigned int)pasajerosVerdaderos, 2);
0x8C2A	0x0E09      	MOVLW       9
0x8C2C	0x0102      	MOVLB       2
0x8C2E	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x8C30	0x0E00      	MOVLW       0
0x8C32	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x8C34	0xF006ECA0  	CALL        _Double2Word, 0
0x8C38	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x8C3C	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x8C40	0x0E00      	MOVLW       0
0x8C42	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x8C44	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x8C46	0x0E02      	MOVLW       2
0x8C48	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x8C4A	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,696 :: 		if(MSTR){
0x8C4E	0xA483      	BTFSS       PORTD, 2 
0x8C50	0xD085      	BRA         L_entroB224
;rutinasensores_v4(mstr-slv).h,697 :: 		pVerdaderosMEntero = eepromLeeNumero(0x0009, 2);
0x8C52	0x0E09      	MOVLW       9
0x8C54	0x0102      	MOVLB       2
0x8C56	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x8C58	0x0E00      	MOVLW       0
0x8C5A	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x8C5C	0x0E02      	MOVLW       2
0x8C5E	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x8C60	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x8C64	0xF12FC000  	MOVFF       R0, _pVerdaderosMEntero
0x8C68	0xF130C001  	MOVFF       R1, _pVerdaderosMEntero+1
;rutinasensores_v4(mstr-slv).h,698 :: 		pVerdaderosEEntero = eepromLeeNumero(0x0007, 2);
0x8C6C	0x0E07      	MOVLW       7
0x8C6E	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x8C70	0x0E00      	MOVLW       0
0x8C72	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x8C74	0x0E02      	MOVLW       2
0x8C76	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x8C78	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x8C7C	0xF12DC000  	MOVFF       R0, _pVerdaderosEEntero
0x8C80	0xF12EC001  	MOVFF       R1, _pVerdaderosEEntero+1
;rutinasensores_v4(mstr-slv).h,699 :: 		pasajerosTotalesL = pVerdaderosMEntero + pVerdaderosEEntero;
0x8C84	0x5000      	MOVF        R0, 0 
0x8C86	0x0101      	MOVLB       1
0x8C88	0x252F      	ADDWF       _pVerdaderosMEntero, 0, 1
0x8C8A	0x6F33      	MOVWF       _pasajerosTotalesL, 1
0x8C8C	0x5001      	MOVF        R1, 0 
0x8C8E	0x2130      	ADDWFC      _pVerdaderosMEntero+1, 0, 1
0x8C90	0x6F34      	MOVWF       _pasajerosTotalesL+1, 1
;rutinasensores_v4(mstr-slv).h,700 :: 		totalCalculado = (eepromLeeNumero(0x0000, 2)+eepromLeeNumero(0x0003, 2)+eepromLeeNumero(0x0900, 2)+eepromLeeNumero(0x0700, 2))/2;
0x8C92	0x0102      	MOVLB       2
0x8C94	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x8C96	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x8C98	0x0E02      	MOVLW       2
0x8C9A	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x8C9C	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x8CA0	0xF215C000  	MOVFF       R0, FLOC__entroB
0x8CA4	0xF216C001  	MOVFF       R1, FLOC__entroB+1
0x8CA8	0xF217C002  	MOVFF       R2, FLOC__entroB+2
0x8CAC	0xF218C003  	MOVFF       R3, FLOC__entroB+3
0x8CB0	0x0E03      	MOVLW       3
0x8CB2	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x8CB4	0x0E00      	MOVLW       0
0x8CB6	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x8CB8	0x0E02      	MOVLW       2
0x8CBA	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x8CBC	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x8CC0	0x5000      	MOVF        R0, 0 
0x8CC2	0x2715      	ADDWF       FLOC__entroB, 1, 1
0x8CC4	0x5001      	MOVF        R1, 0 
0x8CC6	0x2316      	ADDWFC      FLOC__entroB+1, 1, 1
0x8CC8	0x5002      	MOVF        R2, 0 
0x8CCA	0x2317      	ADDWFC      FLOC__entroB+2, 1, 1
0x8CCC	0x5003      	MOVF        R3, 0 
0x8CCE	0x2318      	ADDWFC      FLOC__entroB+3, 1, 1
0x8CD0	0x0E00      	MOVLW       0
0x8CD2	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x8CD4	0x0E09      	MOVLW       9
0x8CD6	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x8CD8	0x0E02      	MOVLW       2
0x8CDA	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x8CDC	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x8CE0	0x5000      	MOVF        R0, 0 
0x8CE2	0x2715      	ADDWF       FLOC__entroB, 1, 1
0x8CE4	0x5001      	MOVF        R1, 0 
0x8CE6	0x2316      	ADDWFC      FLOC__entroB+1, 1, 1
0x8CE8	0x5002      	MOVF        R2, 0 
0x8CEA	0x2317      	ADDWFC      FLOC__entroB+2, 1, 1
0x8CEC	0x5003      	MOVF        R3, 0 
0x8CEE	0x2318      	ADDWFC      FLOC__entroB+3, 1, 1
0x8CF0	0x0E00      	MOVLW       0
0x8CF2	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x8CF4	0x0E07      	MOVLW       7
0x8CF6	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x8CF8	0x0E02      	MOVLW       2
0x8CFA	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x8CFC	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x8D00	0x5000      	MOVF        R0, 0 
0x8D02	0x2515      	ADDWF       FLOC__entroB, 0, 1
0x8D04	0x6E05      	MOVWF       R5 
0x8D06	0x5001      	MOVF        R1, 0 
0x8D08	0x2116      	ADDWFC      FLOC__entroB+1, 0, 1
0x8D0A	0x6E06      	MOVWF       R6 
0x8D0C	0x5002      	MOVF        R2, 0 
0x8D0E	0x2117      	ADDWFC      FLOC__entroB+2, 0, 1
0x8D10	0x6E07      	MOVWF       R7 
0x8D12	0x5003      	MOVF        R3, 0 
0x8D14	0x2118      	ADDWFC      FLOC__entroB+3, 0, 1
0x8D16	0x6E08      	MOVWF       R8 
0x8D18	0xF000C005  	MOVFF       R5, R0
0x8D1C	0xF001C006  	MOVFF       R6, R1
0x8D20	0xF002C007  	MOVFF       R7, R2
0x8D24	0xF003C008  	MOVFF       R8, R3
0x8D28	0x3203      	RRCF        R3, 1 
0x8D2A	0x3202      	RRCF        R2, 1 
0x8D2C	0x3201      	RRCF        R1, 1 
0x8D2E	0x3200      	RRCF        R0, 1 
0x8D30	0x9E03      	BCF         R3, 7 
0x8D32	0xBC03      	BTFSC       R3, 6 
0x8D34	0x8E03      	BSF         R3, 7 
0x8D36	0xF131C000  	MOVFF       R0, _totalCalculado
0x8D3A	0xF132C001  	MOVFF       R1, _totalCalculado+1
;rutinasensores_v4(mstr-slv).h,701 :: 		eepromEscribeNumero(0x0005, totalCalculado, 2);
0x8D3E	0x0E05      	MOVLW       5
0x8D40	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x8D42	0x0E00      	MOVLW       0
0x8D44	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x8D46	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x8D4A	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x8D4E	0x0E00      	MOVLW       0
0x8D50	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x8D52	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x8D54	0x0E02      	MOVLW       2
0x8D56	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x8D58	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,702 :: 		}
L_entroB224:
;rutinasensores_v4(mstr-slv).h,703 :: 		lcd_cmd(_LCD_CLEAR);
0x8D5C	0x0E01      	MOVLW       1
0x8D5E	0x0102      	MOVLB       2
0x8D60	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x8D62	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,704 :: 		return debugEstadoB = ESPERA;
0x8D66	0x0101      	MOVLB       1
0x8D68	0x6B3D      	CLRF        _debugEstadoB, 1
0x8D6A	0x6A00      	CLRF        R0 
0x8D6C	0xD000      	BRA         L_end_entroB
;rutinasensores_v4(mstr-slv).h,705 :: 		}
L_entroB223:
;rutinasensores_v4(mstr-slv).h,706 :: 		}
L_end_entroB:
0x8D6E	0x0012      	RETURN      0
; end of _entroB
_transicionSBC:
;rutinasensores_v4(mstr-slv).h,1154 :: 		short transicionSBC(short estado){
;rutinasensores_v4(mstr-slv).h,1155 :: 		if(estado == TRANSICIONS){
0x8D70	0x0102      	MOVLB       2
0x8D72	0x5114      	MOVF        FARG_transicionSBC_estado, 0, 1
0x8D74	0x0A08      	XORLW       8
0x8D76	0xA4D8      	BTFSS       STATUS, 2 
0x8D78	0xD060      	BRA         L_transicionSBC303
;rutinasensores_v4(mstr-slv).h,1156 :: 		lcd_outConst(3, 1, "TRANSICION");
0x8D7A	0x0E03      	MOVLW       3
0x8D7C	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x8D7E	0x0E01      	MOVLW       1
0x8D80	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x8D82	0x0EDC      	MOVLW       ?lstr_45_MyProject
0x8D84	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x8D86	0x0ED8      	MOVLW       hi_addr(?lstr_45_MyProject)
0x8D88	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x8D8A	0x0E00      	MOVLW       higher_addr(?lstr_45_MyProject)
0x8D8C	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x8D8E	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1157 :: 		if((SENSOR2 & SENSOR6)){
0x8D92	0xA883      	BTFSS       PORTD, 4 
0x8D94	0xD004      	BRA         L__transicionSBC1451
0x8D96	0xA281      	BTFSS       PORTB, 1 
0x8D98	0xD002      	BRA         L__transicionSBC1451
0x8D9A	0x80D8      	BSF         STATUS, 0 
0x8D9C	0xD001      	BRA         L__transicionSBC1452
L__transicionSBC1451:
0x8D9E	0x90D8      	BCF         STATUS, 0 
L__transicionSBC1452:
0x8DA0	0xE30A      	BNC         L_transicionSBC304
;rutinasensores_v4(mstr-slv).h,1158 :: 		lcd_cmd(_LCD_CLEAR);
0x8DA2	0x0E01      	MOVLW       1
0x8DA4	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x8DA6	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1159 :: 		return debugEstadoB = TRANSAL;
0x8DAA	0x0E05      	MOVLW       5
0x8DAC	0x0101      	MOVLB       1
0x8DAE	0x6F3D      	MOVWF       _debugEstadoB, 1
0x8DB0	0x0E05      	MOVLW       5
0x8DB2	0x6E00      	MOVWF       R0 
0x8DB4	0xD042      	BRA         L_end_transicionSBC
;rutinasensores_v4(mstr-slv).h,1160 :: 		}
L_transicionSBC304:
;rutinasensores_v4(mstr-slv).h,1161 :: 		if((SENSOR1 & SENSOR3 & SENSOR5 & !SENSOR2) | (SENSOR1 & SENSOR3 & SENSOR5 & !SENSOR6)){
0x8DB6	0xA881      	BTFSS       PORTB, 4 
0x8DB8	0xD004      	BRA         L__transicionSBC1453
0x8DBA	0xA481      	BTFSS       PORTB, 2 
0x8DBC	0xD002      	BRA         L__transicionSBC1453
0x8DBE	0x8401      	BSF         R1, 2 
0x8DC0	0xD001      	BRA         L__transicionSBC1454
L__transicionSBC1453:
0x8DC2	0x9401      	BCF         R1, 2 
L__transicionSBC1454:
0x8DC4	0xA401      	BTFSS       R1, 2 
0x8DC6	0xD004      	BRA         L__transicionSBC1455
0x8DC8	0xA081      	BTFSS       PORTB, 0 
0x8DCA	0xD002      	BRA         L__transicionSBC1455
0x8DCC	0x8001      	BSF         R1, 0 
0x8DCE	0xD001      	BRA         L__transicionSBC1456
L__transicionSBC1455:
0x8DD0	0x9001      	BCF         R1, 0 
L__transicionSBC1456:
0x8DD2	0xB883      	BTFSC       PORTD, 4 
0x8DD4	0xD002      	BRA         L__transicionSBC1457
0x8DD6	0x80D8      	BSF         STATUS, 0 
0x8DD8	0xD001      	BRA         L__transicionSBC1458
L__transicionSBC1457:
0x8DDA	0x90D8      	BCF         STATUS, 0 
L__transicionSBC1458:
0x8DDC	0xA001      	BTFSS       R1, 0 
0x8DDE	0xD003      	BRA         L__transicionSBC1459
0x8DE0	0xE302      	BNC         L__transicionSBC1459
0x8DE2	0x8201      	BSF         R1, 1 
0x8DE4	0xD001      	BRA         L__transicionSBC1460
L__transicionSBC1459:
0x8DE6	0x9201      	BCF         R1, 1 
L__transicionSBC1460:
0x8DE8	0xB401      	BTFSC       R1, 2 
0x8DEA	0xD002      	BRA         L__transicionSBC1461
0x8DEC	0x90D8      	BCF         STATUS, 0 
0x8DEE	0xD001      	BRA         L__transicionSBC1462
L__transicionSBC1461:
0x8DF0	0x80D8      	BSF         STATUS, 0 
L__transicionSBC1462:
0x8DF2	0xE304      	BNC         L__transicionSBC1463
0x8DF4	0xA081      	BTFSS       PORTB, 0 
0x8DF6	0xD002      	BRA         L__transicionSBC1463
0x8DF8	0x8001      	BSF         R1, 0 
0x8DFA	0xD001      	BRA         L__transicionSBC1464
L__transicionSBC1463:
0x8DFC	0x9001      	BCF         R1, 0 
L__transicionSBC1464:
0x8DFE	0xB281      	BTFSC       PORTB, 1 
0x8E00	0xD002      	BRA         L__transicionSBC1465
0x8E02	0x80D8      	BSF         STATUS, 0 
0x8E04	0xD001      	BRA         L__transicionSBC1466
L__transicionSBC1465:
0x8E06	0x90D8      	BCF         STATUS, 0 
L__transicionSBC1466:
0x8E08	0xA001      	BTFSS       R1, 0 
0x8E0A	0xD003      	BRA         L__transicionSBC1467
0x8E0C	0xE302      	BNC         L__transicionSBC1467
0x8E0E	0x8001      	BSF         R1, 0 
0x8E10	0xD001      	BRA         L__transicionSBC1468
L__transicionSBC1467:
0x8E12	0x9001      	BCF         R1, 0 
L__transicionSBC1468:
0x8E14	0xB201      	BTFSC       R1, 1 
0x8E16	0xD004      	BRA         L__transicionSBC1469
0x8E18	0xB001      	BTFSC       R1, 0 
0x8E1A	0xD002      	BRA         L__transicionSBC1469
0x8E1C	0x90D8      	BCF         STATUS, 0 
0x8E1E	0xD001      	BRA         L__transicionSBC1470
L__transicionSBC1469:
0x8E20	0x80D8      	BSF         STATUS, 0 
L__transicionSBC1470:
0x8E22	0xE30B      	BNC         L_transicionSBC305
;rutinasensores_v4(mstr-slv).h,1162 :: 		lcd_cmd(_LCD_CLEAR);
0x8E24	0x0E01      	MOVLW       1
0x8E26	0x0102      	MOVLB       2
0x8E28	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x8E2A	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1163 :: 		return debugEstadoB = SALIENDO;
0x8E2E	0x0E04      	MOVLW       4
0x8E30	0x0101      	MOVLB       1
0x8E32	0x6F3D      	MOVWF       _debugEstadoB, 1
0x8E34	0x0E04      	MOVLW       4
0x8E36	0x6E00      	MOVWF       R0 
0x8E38	0xD000      	BRA         L_end_transicionSBC
;rutinasensores_v4(mstr-slv).h,1164 :: 		}
L_transicionSBC305:
;rutinasensores_v4(mstr-slv).h,1165 :: 		}
L_transicionSBC303:
;rutinasensores_v4(mstr-slv).h,1166 :: 		}
L_end_transicionSBC:
0x8E3A	0x0012      	RETURN      0
; end of _transicionSBC
_entroBD:
;rutinasensores_v4(mstr-slv).h,831 :: 		short entroBD(short estado){
;rutinasensores_v4(mstr-slv).h,832 :: 		if(estado == ENTRO){
0x8E3C	0x0102      	MOVLB       2
0x8E3E	0x5114      	MOVF        FARG_entroBD_estado, 0, 1
0x8E40	0x0A03      	XORLW       3
0x8E42	0xA4D8      	BTFSS       STATUS, 2 
0x8E44	0xD10A      	BRA         L_entroBD248
;rutinasensores_v4(mstr-slv).h,833 :: 		LCD_OUTCONST(3,1,"BIENVENIDO: $6.00");
0x8E46	0x0E03      	MOVLW       3
0x8E48	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x8E4A	0x0E01      	MOVLW       1
0x8E4C	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x8E4E	0x0E2E      	MOVLW       ?lstr_27_MyProject
0x8E50	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x8E52	0x0ED7      	MOVLW       hi_addr(?lstr_27_MyProject)
0x8E54	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x8E56	0x0E00      	MOVLW       higher_addr(?lstr_27_MyProject)
0x8E58	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x8E5A	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,834 :: 		pBajan = eepromLeeNumero(0x0003,2);
0x8E5E	0x0E03      	MOVLW       3
0x8E60	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x8E62	0x0E00      	MOVLW       0
0x8E64	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x8E66	0x0E02      	MOVLW       2
0x8E68	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x8E6A	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x8E6E	0xF135C000  	MOVFF       R0, _pBajan
0x8E72	0xF136C001  	MOVFF       R1, _pBajan+1
;rutinasensores_v4(mstr-slv).h,835 :: 		pSuben = eepromLeeNumero(0x0000,2) + 1;
0x8E76	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x8E78	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x8E7A	0x0E02      	MOVLW       2
0x8E7C	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x8E7E	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x8E82	0x4A00      	INFSNZ      R0, 1 
0x8E84	0x2A01      	INCF        R1, 1 
0x8E86	0xF137C000  	MOVFF       R0, _pSuben
0x8E8A	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,836 :: 		eepromEscribeNumero(0x0000,pSuben,2);
0x8E8E	0x6B1D      	CLRF        FARG_eepromEscribeNumero_Registro, 1
0x8E90	0x6B1E      	CLRF        FARG_eepromEscribeNumero_Registro+1, 1
0x8E92	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x8E96	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x8E9A	0x0E00      	MOVLW       0
0x8E9C	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x8E9E	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x8EA0	0x0E02      	MOVLW       2
0x8EA2	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x8EA4	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,837 :: 		pSuben = eepromLeeNumero(0x0000, 2);
0x8EA8	0x0102      	MOVLB       2
0x8EAA	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x8EAC	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x8EAE	0x0E02      	MOVLW       2
0x8EB0	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x8EB2	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x8EB6	0xF137C000  	MOVFF       R0, _pSuben
0x8EBA	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,838 :: 		pasajerosVerdaderos = ((float)pSuben + (float)pBajan)/2;
0x8EBE	0xF008EC65  	CALL        _Word2Double, 0
0x8EC2	0xF215C000  	MOVFF       R0, FLOC__entroBD
0x8EC6	0xF216C001  	MOVFF       R1, FLOC__entroBD+1
0x8ECA	0xF217C002  	MOVFF       R2, FLOC__entroBD+2
0x8ECE	0xF218C003  	MOVFF       R3, FLOC__entroBD+3
0x8ED2	0xF000C135  	MOVFF       _pBajan, R0
0x8ED6	0xF001C136  	MOVFF       _pBajan+1, R1
0x8EDA	0xF008EC65  	CALL        _Word2Double, 0
0x8EDE	0xF004C215  	MOVFF       FLOC__entroBD, R4
0x8EE2	0xF005C216  	MOVFF       FLOC__entroBD+1, R5
0x8EE6	0xF006C217  	MOVFF       FLOC__entroBD+2, R6
0x8EEA	0xF007C218  	MOVFF       FLOC__entroBD+3, R7
0x8EEE	0xF004EC8D  	CALL        _Add_32x32_FP, 0
0x8EF2	0x0E00      	MOVLW       0
0x8EF4	0x6E04      	MOVWF       R4 
0x8EF6	0x0E00      	MOVLW       0
0x8EF8	0x6E05      	MOVWF       R5 
0x8EFA	0x0E00      	MOVLW       0
0x8EFC	0x6E06      	MOVWF       R6 
0x8EFE	0x0E80      	MOVLW       128
0x8F00	0x6E07      	MOVWF       R7 
0x8F02	0xF007ECA7  	CALL        _Div_32x32_FP, 0
0x8F06	0xF139C000  	MOVFF       R0, _pasajerosVerdaderos
0x8F0A	0xF13AC001  	MOVFF       R1, _pasajerosVerdaderos+1
0x8F0E	0xF13BC002  	MOVFF       R2, _pasajerosVerdaderos+2
0x8F12	0xF13CC003  	MOVFF       R3, _pasajerosVerdaderos+3
;rutinasensores_v4(mstr-slv).h,839 :: 		eepromEscribeNumero(0x0009, (unsigned int)pasajerosVerdaderos, 2);
0x8F16	0x0E09      	MOVLW       9
0x8F18	0x0102      	MOVLB       2
0x8F1A	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x8F1C	0x0E00      	MOVLW       0
0x8F1E	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x8F20	0xF006ECA0  	CALL        _Double2Word, 0
0x8F24	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x8F28	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x8F2C	0x0E00      	MOVLW       0
0x8F2E	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x8F30	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x8F32	0x0E02      	MOVLW       2
0x8F34	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x8F36	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,840 :: 		if(MSTR){
0x8F3A	0xA483      	BTFSS       PORTD, 2 
0x8F3C	0xD085      	BRA         L_entroBD249
;rutinasensores_v4(mstr-slv).h,841 :: 		pVerdaderosMEntero = eepromLeeNumero(0x0009, 2);
0x8F3E	0x0E09      	MOVLW       9
0x8F40	0x0102      	MOVLB       2
0x8F42	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x8F44	0x0E00      	MOVLW       0
0x8F46	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x8F48	0x0E02      	MOVLW       2
0x8F4A	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x8F4C	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x8F50	0xF12FC000  	MOVFF       R0, _pVerdaderosMEntero
0x8F54	0xF130C001  	MOVFF       R1, _pVerdaderosMEntero+1
;rutinasensores_v4(mstr-slv).h,842 :: 		pVerdaderosEEntero = eepromLeeNumero(0x0007, 2);
0x8F58	0x0E07      	MOVLW       7
0x8F5A	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x8F5C	0x0E00      	MOVLW       0
0x8F5E	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x8F60	0x0E02      	MOVLW       2
0x8F62	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x8F64	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x8F68	0xF12DC000  	MOVFF       R0, _pVerdaderosEEntero
0x8F6C	0xF12EC001  	MOVFF       R1, _pVerdaderosEEntero+1
;rutinasensores_v4(mstr-slv).h,843 :: 		pasajerosTotalesL = pVerdaderosMEntero + pVerdaderosEEntero;
0x8F70	0x5000      	MOVF        R0, 0 
0x8F72	0x0101      	MOVLB       1
0x8F74	0x252F      	ADDWF       _pVerdaderosMEntero, 0, 1
0x8F76	0x6F33      	MOVWF       _pasajerosTotalesL, 1
0x8F78	0x5001      	MOVF        R1, 0 
0x8F7A	0x2130      	ADDWFC      _pVerdaderosMEntero+1, 0, 1
0x8F7C	0x6F34      	MOVWF       _pasajerosTotalesL+1, 1
;rutinasensores_v4(mstr-slv).h,844 :: 		totalCalculado = (eepromLeeNumero(0x0000, 2)+eepromLeeNumero(0x0003, 2)+eepromLeeNumero(0x0900, 2)+eepromLeeNumero(0x0700, 2))/2;
0x8F7E	0x0102      	MOVLB       2
0x8F80	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x8F82	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x8F84	0x0E02      	MOVLW       2
0x8F86	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x8F88	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x8F8C	0xF215C000  	MOVFF       R0, FLOC__entroBD
0x8F90	0xF216C001  	MOVFF       R1, FLOC__entroBD+1
0x8F94	0xF217C002  	MOVFF       R2, FLOC__entroBD+2
0x8F98	0xF218C003  	MOVFF       R3, FLOC__entroBD+3
0x8F9C	0x0E03      	MOVLW       3
0x8F9E	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x8FA0	0x0E00      	MOVLW       0
0x8FA2	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x8FA4	0x0E02      	MOVLW       2
0x8FA6	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x8FA8	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x8FAC	0x5000      	MOVF        R0, 0 
0x8FAE	0x2715      	ADDWF       FLOC__entroBD, 1, 1
0x8FB0	0x5001      	MOVF        R1, 0 
0x8FB2	0x2316      	ADDWFC      FLOC__entroBD+1, 1, 1
0x8FB4	0x5002      	MOVF        R2, 0 
0x8FB6	0x2317      	ADDWFC      FLOC__entroBD+2, 1, 1
0x8FB8	0x5003      	MOVF        R3, 0 
0x8FBA	0x2318      	ADDWFC      FLOC__entroBD+3, 1, 1
0x8FBC	0x0E00      	MOVLW       0
0x8FBE	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x8FC0	0x0E09      	MOVLW       9
0x8FC2	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x8FC4	0x0E02      	MOVLW       2
0x8FC6	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x8FC8	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x8FCC	0x5000      	MOVF        R0, 0 
0x8FCE	0x2715      	ADDWF       FLOC__entroBD, 1, 1
0x8FD0	0x5001      	MOVF        R1, 0 
0x8FD2	0x2316      	ADDWFC      FLOC__entroBD+1, 1, 1
0x8FD4	0x5002      	MOVF        R2, 0 
0x8FD6	0x2317      	ADDWFC      FLOC__entroBD+2, 1, 1
0x8FD8	0x5003      	MOVF        R3, 0 
0x8FDA	0x2318      	ADDWFC      FLOC__entroBD+3, 1, 1
0x8FDC	0x0E00      	MOVLW       0
0x8FDE	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x8FE0	0x0E07      	MOVLW       7
0x8FE2	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x8FE4	0x0E02      	MOVLW       2
0x8FE6	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x8FE8	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x8FEC	0x5000      	MOVF        R0, 0 
0x8FEE	0x2515      	ADDWF       FLOC__entroBD, 0, 1
0x8FF0	0x6E05      	MOVWF       R5 
0x8FF2	0x5001      	MOVF        R1, 0 
0x8FF4	0x2116      	ADDWFC      FLOC__entroBD+1, 0, 1
0x8FF6	0x6E06      	MOVWF       R6 
0x8FF8	0x5002      	MOVF        R2, 0 
0x8FFA	0x2117      	ADDWFC      FLOC__entroBD+2, 0, 1
0x8FFC	0x6E07      	MOVWF       R7 
0x8FFE	0x5003      	MOVF        R3, 0 
0x9000	0x2118      	ADDWFC      FLOC__entroBD+3, 0, 1
0x9002	0x6E08      	MOVWF       R8 
0x9004	0xF000C005  	MOVFF       R5, R0
0x9008	0xF001C006  	MOVFF       R6, R1
0x900C	0xF002C007  	MOVFF       R7, R2
0x9010	0xF003C008  	MOVFF       R8, R3
0x9014	0x3203      	RRCF        R3, 1 
0x9016	0x3202      	RRCF        R2, 1 
0x9018	0x3201      	RRCF        R1, 1 
0x901A	0x3200      	RRCF        R0, 1 
0x901C	0x9E03      	BCF         R3, 7 
0x901E	0xBC03      	BTFSC       R3, 6 
0x9020	0x8E03      	BSF         R3, 7 
0x9022	0xF131C000  	MOVFF       R0, _totalCalculado
0x9026	0xF132C001  	MOVFF       R1, _totalCalculado+1
;rutinasensores_v4(mstr-slv).h,845 :: 		eepromEscribeNumero(0x0005, totalCalculado, 2);
0x902A	0x0E05      	MOVLW       5
0x902C	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x902E	0x0E00      	MOVLW       0
0x9030	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x9032	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x9036	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x903A	0x0E00      	MOVLW       0
0x903C	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x903E	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x9040	0x0E02      	MOVLW       2
0x9042	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x9044	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,846 :: 		}
L_entroBD249:
;rutinasensores_v4(mstr-slv).h,847 :: 		lcd_cmd(_LCD_CLEAR);
0x9048	0x0E01      	MOVLW       1
0x904A	0x0102      	MOVLB       2
0x904C	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x904E	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,848 :: 		return debugEstadoB = ESPERA;
0x9052	0x0101      	MOVLB       1
0x9054	0x6B3D      	CLRF        _debugEstadoB, 1
0x9056	0x6A00      	CLRF        R0 
0x9058	0xD000      	BRA         L_end_entroBD
;rutinasensores_v4(mstr-slv).h,849 :: 		}
L_entroBD248:
;rutinasensores_v4(mstr-slv).h,850 :: 		}
L_end_entroBD:
0x905A	0x0012      	RETURN      0
; end of _entroBD
_transicionEntBD:
;rutinasensores_v4(mstr-slv).h,817 :: 		short transicionEntBD(short estado){
;rutinasensores_v4(mstr-slv).h,818 :: 		if(estado == TRANENT){
0x905C	0x0102      	MOVLB       2
0x905E	0x5114      	MOVF        FARG_transicionEntBD_estado, 0, 1
0x9060	0x0A07      	XORLW       7
0x9062	0xE146      	BNZ         L_transicionEntBD245
;rutinasensores_v4(mstr-slv).h,819 :: 		LCD_OUTCONST(3,1,"TRANSICION ENTRADA");
0x9064	0x0E03      	MOVLW       3
0x9066	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x9068	0x0E01      	MOVLW       1
0x906A	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x906C	0x0EE6      	MOVLW       ?lstr_26_MyProject
0x906E	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x9070	0x0ED5      	MOVLW       hi_addr(?lstr_26_MyProject)
0x9072	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x9074	0x0E00      	MOVLW       higher_addr(?lstr_26_MyProject)
0x9076	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x9078	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,820 :: 		if((!SENSOR3 & !SENSOR1 & !SENSOR5)/*(!SENSOR1 | !SENSOR3) | (!SENSOR3 | !SENSOR5) | (!SENSOR1 | !SENSOR5)*/){
0x907C	0xB481      	BTFSC       PORTB, 2 
0x907E	0xD002      	BRA         L__transicionEntBD1152
0x9080	0x8001      	BSF         R1, 0 
0x9082	0xD001      	BRA         L__transicionEntBD1153
L__transicionEntBD1152:
0x9084	0x9001      	BCF         R1, 0 
L__transicionEntBD1153:
0x9086	0xB881      	BTFSC       PORTB, 4 
0x9088	0xD002      	BRA         L__transicionEntBD1154
0x908A	0x80D8      	BSF         STATUS, 0 
0x908C	0xD001      	BRA         L__transicionEntBD1155
L__transicionEntBD1154:
0x908E	0x90D8      	BCF         STATUS, 0 
L__transicionEntBD1155:
0x9090	0xA001      	BTFSS       R1, 0 
0x9092	0xD003      	BRA         L__transicionEntBD1156
0x9094	0xE302      	BNC         L__transicionEntBD1156
0x9096	0x8001      	BSF         R1, 0 
0x9098	0xD001      	BRA         L__transicionEntBD1157
L__transicionEntBD1156:
0x909A	0x9001      	BCF         R1, 0 
L__transicionEntBD1157:
0x909C	0xB081      	BTFSC       PORTB, 0 
0x909E	0xD002      	BRA         L__transicionEntBD1158
0x90A0	0x80D8      	BSF         STATUS, 0 
0x90A2	0xD001      	BRA         L__transicionEntBD1159
L__transicionEntBD1158:
0x90A4	0x90D8      	BCF         STATUS, 0 
L__transicionEntBD1159:
0x90A6	0xA001      	BTFSS       R1, 0 
0x90A8	0xD003      	BRA         L__transicionEntBD1160
0x90AA	0xE302      	BNC         L__transicionEntBD1160
0x90AC	0x8001      	BSF         R1, 0 
0x90AE	0xD001      	BRA         L__transicionEntBD1161
L__transicionEntBD1160:
0x90B0	0x9001      	BCF         R1, 0 
L__transicionEntBD1161:
0x90B2	0xA001      	BTFSS       R1, 0 
0x90B4	0xD00A      	BRA         L_transicionEntBD246
;rutinasensores_v4(mstr-slv).h,821 :: 		lcd_cmd(_LCD_CLEAR);
0x90B6	0x0E01      	MOVLW       1
0x90B8	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x90BA	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,822 :: 		return debugEstadoB = TRANSICION;
0x90BE	0x0E02      	MOVLW       2
0x90C0	0x0101      	MOVLB       1
0x90C2	0x6F3D      	MOVWF       _debugEstadoB, 1
0x90C4	0x0E02      	MOVLW       2
0x90C6	0x6E00      	MOVWF       R0 
0x90C8	0xD013      	BRA         L_end_transicionEntBD
;rutinasensores_v4(mstr-slv).h,823 :: 		}
L_transicionEntBD246:
;rutinasensores_v4(mstr-slv).h,824 :: 		if(/*(SENSOR2 & SENSOR4) | (SENSOR4 & SENSOR6) | (SENSOR2 & SENSOR6) | */(SENSOR4 & SENSOR6)){
0x90CA	0xA681      	BTFSS       PORTB, 3 
0x90CC	0xD004      	BRA         L__transicionEntBD1162
0x90CE	0xA281      	BTFSS       PORTB, 1 
0x90D0	0xD002      	BRA         L__transicionEntBD1162
0x90D2	0x80D8      	BSF         STATUS, 0 
0x90D4	0xD001      	BRA         L__transicionEntBD1163
L__transicionEntBD1162:
0x90D6	0x90D8      	BCF         STATUS, 0 
L__transicionEntBD1163:
0x90D8	0xE30B      	BNC         L_transicionEntBD247
;rutinasensores_v4(mstr-slv).h,825 :: 		lcd_cmd(_LCD_CLEAR);
0x90DA	0x0E01      	MOVLW       1
0x90DC	0x0102      	MOVLB       2
0x90DE	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x90E0	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,826 :: 		return debugEstadoB = ENTRO;
0x90E4	0x0E03      	MOVLW       3
0x90E6	0x0101      	MOVLB       1
0x90E8	0x6F3D      	MOVWF       _debugEstadoB, 1
0x90EA	0x0E03      	MOVLW       3
0x90EC	0x6E00      	MOVWF       R0 
0x90EE	0xD000      	BRA         L_end_transicionEntBD
;rutinasensores_v4(mstr-slv).h,827 :: 		}
L_transicionEntBD247:
;rutinasensores_v4(mstr-slv).h,828 :: 		}
L_transicionEntBD245:
;rutinasensores_v4(mstr-slv).h,829 :: 		}
L_end_transicionEntBD:
0x90F0	0x0012      	RETURN      0
; end of _transicionEntBD
_entrandoBT:
;rutinasensores_v4(mstr-slv).h,933 :: 		short entrandoBT(short estado){
;rutinasensores_v4(mstr-slv).h,934 :: 		if(estado == ENTRANDO){
0x90F2	0x0102      	MOVLB       2
0x90F4	0x5114      	MOVF        FARG_entrandoBT_estado, 0, 1
0x90F6	0x0A01      	XORLW       1
0x90F8	0xA4D8      	BTFSS       STATUS, 2 
0x90FA	0xD062      	BRA         L_entrandoBT264
;rutinasensores_v4(mstr-slv).h,935 :: 		LCD_OUTCONST(3,1,"ENTRANDO");
0x90FC	0x0E03      	MOVLW       3
0x90FE	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x9100	0x0E01      	MOVLW       1
0x9102	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x9104	0x0EB6      	MOVLW       ?lstr_32_MyProject
0x9106	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x9108	0x0ED9      	MOVLW       hi_addr(?lstr_32_MyProject)
0x910A	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x910C	0x0E00      	MOVLW       higher_addr(?lstr_32_MyProject)
0x910E	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x9110	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,936 :: 		if((SENSOR1 & SENSOR5)){
0x9114	0xA881      	BTFSS       PORTB, 4 
0x9116	0xD004      	BRA         L__entrandoBT1239
0x9118	0xA081      	BTFSS       PORTB, 0 
0x911A	0xD002      	BRA         L__entrandoBT1239
0x911C	0x80D8      	BSF         STATUS, 0 
0x911E	0xD001      	BRA         L__entrandoBT1240
L__entrandoBT1239:
0x9120	0x90D8      	BCF         STATUS, 0 
L__entrandoBT1240:
0x9122	0xE308      	BNC         L_entrandoBT265
;rutinasensores_v4(mstr-slv).h,937 :: 		lcd_cmd(_LCD_CLEAR);
0x9124	0x0E01      	MOVLW       1
0x9126	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x9128	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,938 :: 		return debugEstadoB = ESPERA;
0x912C	0x0101      	MOVLB       1
0x912E	0x6B3D      	CLRF        _debugEstadoB, 1
0x9130	0x6A00      	CLRF        R0 
0x9132	0xD046      	BRA         L_end_entrandoBT
;rutinasensores_v4(mstr-slv).h,939 :: 		}
L_entrandoBT265:
;rutinasensores_v4(mstr-slv).h,940 :: 		if((!SENSOR2 & !SENSOR4) | (!SENSOR4 & !SENSOR6) | (!SENSOR2 & !SENSOR6)){
0x9134	0xB883      	BTFSC       PORTD, 4 
0x9136	0xD002      	BRA         L__entrandoBT1241
0x9138	0x8601      	BSF         R1, 3 
0x913A	0xD001      	BRA         L__entrandoBT1242
L__entrandoBT1241:
0x913C	0x9601      	BCF         R1, 3 
L__entrandoBT1242:
0x913E	0xB681      	BTFSC       PORTB, 3 
0x9140	0xD002      	BRA         L__entrandoBT1243
0x9142	0x8001      	BSF         R1, 0 
0x9144	0xD001      	BRA         L__entrandoBT1244
L__entrandoBT1243:
0x9146	0x9001      	BCF         R1, 0 
L__entrandoBT1244:
0x9148	0xA601      	BTFSS       R1, 3 
0x914A	0xD004      	BRA         L__entrandoBT1245
0x914C	0xA001      	BTFSS       R1, 0 
0x914E	0xD002      	BRA         L__entrandoBT1245
0x9150	0x8201      	BSF         R1, 1 
0x9152	0xD001      	BRA         L__entrandoBT1246
L__entrandoBT1245:
0x9154	0x9201      	BCF         R1, 1 
L__entrandoBT1246:
0x9156	0xB281      	BTFSC       PORTB, 1 
0x9158	0xD002      	BRA         L__entrandoBT1247
0x915A	0x8401      	BSF         R1, 2 
0x915C	0xD001      	BRA         L__entrandoBT1248
L__entrandoBT1247:
0x915E	0x9401      	BCF         R1, 2 
L__entrandoBT1248:
0x9160	0xA001      	BTFSS       R1, 0 
0x9162	0xD004      	BRA         L__entrandoBT1249
0x9164	0xA401      	BTFSS       R1, 2 
0x9166	0xD002      	BRA         L__entrandoBT1249
0x9168	0x80D8      	BSF         STATUS, 0 
0x916A	0xD001      	BRA         L__entrandoBT1250
L__entrandoBT1249:
0x916C	0x90D8      	BCF         STATUS, 0 
L__entrandoBT1250:
0x916E	0xB201      	BTFSC       R1, 1 
0x9170	0xD003      	BRA         L__entrandoBT1251
0x9172	0xE202      	BC          L__entrandoBT1251
0x9174	0x9201      	BCF         R1, 1 
0x9176	0xD001      	BRA         L__entrandoBT1252
L__entrandoBT1251:
0x9178	0x8201      	BSF         R1, 1 
L__entrandoBT1252:
0x917A	0xB601      	BTFSC       R1, 3 
0x917C	0xD002      	BRA         L__entrandoBT1253
0x917E	0x9001      	BCF         R1, 0 
0x9180	0xD001      	BRA         L__entrandoBT1254
L__entrandoBT1253:
0x9182	0x8001      	BSF         R1, 0 
L__entrandoBT1254:
0x9184	0xB401      	BTFSC       R1, 2 
0x9186	0xD002      	BRA         L__entrandoBT1255
0x9188	0x90D8      	BCF         STATUS, 0 
0x918A	0xD001      	BRA         L__entrandoBT1256
L__entrandoBT1255:
0x918C	0x80D8      	BSF         STATUS, 0 
L__entrandoBT1256:
0x918E	0xA001      	BTFSS       R1, 0 
0x9190	0xD003      	BRA         L__entrandoBT1257
0x9192	0xE302      	BNC         L__entrandoBT1257
0x9194	0x8001      	BSF         R1, 0 
0x9196	0xD001      	BRA         L__entrandoBT1258
L__entrandoBT1257:
0x9198	0x9001      	BCF         R1, 0 
L__entrandoBT1258:
0x919A	0xB201      	BTFSC       R1, 1 
0x919C	0xD004      	BRA         L__entrandoBT1259
0x919E	0xB001      	BTFSC       R1, 0 
0x91A0	0xD002      	BRA         L__entrandoBT1259
0x91A2	0x90D8      	BCF         STATUS, 0 
0x91A4	0xD001      	BRA         L__entrandoBT1260
L__entrandoBT1259:
0x91A6	0x80D8      	BSF         STATUS, 0 
L__entrandoBT1260:
0x91A8	0xE30B      	BNC         L_entrandoBT266
;rutinasensores_v4(mstr-slv).h,941 :: 		lcd_cmd(_LCD_CLEAR);
0x91AA	0x0E01      	MOVLW       1
0x91AC	0x0102      	MOVLB       2
0x91AE	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x91B0	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,942 :: 		return debugEstadoB = TRANSICION;
0x91B4	0x0E02      	MOVLW       2
0x91B6	0x0101      	MOVLB       1
0x91B8	0x6F3D      	MOVWF       _debugEstadoB, 1
0x91BA	0x0E02      	MOVLW       2
0x91BC	0x6E00      	MOVWF       R0 
0x91BE	0xD000      	BRA         L_end_entrandoBT
;rutinasensores_v4(mstr-slv).h,943 :: 		}
L_entrandoBT266:
;rutinasensores_v4(mstr-slv).h,944 :: 		}
L_entrandoBT264:
;rutinasensores_v4(mstr-slv).h,945 :: 		}
L_end_entrandoBT:
0x91C0	0x0012      	RETURN      0
; end of _entrandoBT
_transicionSalBC:
;rutinasensores_v4(mstr-slv).h,1168 :: 		short transicionSalBC(short estado){
;rutinasensores_v4(mstr-slv).h,1169 :: 		if(estado == TRANSAL){
0x91C2	0x0102      	MOVLB       2
0x91C4	0x5114      	MOVF        FARG_transicionSalBC_estado, 0, 1
0x91C6	0x0A05      	XORLW       5
0x91C8	0xE142      	BNZ         L_transicionSalBC306
;rutinasensores_v4(mstr-slv).h,1170 :: 		LCD_OUTCONST(3,1,"TRANSICION SALIDA");
0x91CA	0x0E03      	MOVLW       3
0x91CC	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x91CE	0x0E01      	MOVLW       1
0x91D0	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x91D2	0x0E18      	MOVLW       ?lstr_46_MyProject
0x91D4	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x91D6	0x0ED8      	MOVLW       hi_addr(?lstr_46_MyProject)
0x91D8	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x91DA	0x0E00      	MOVLW       higher_addr(?lstr_46_MyProject)
0x91DC	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x91DE	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1171 :: 		if(!SENSOR2 & !SENSOR6){
0x91E2	0xB883      	BTFSC       PORTD, 4 
0x91E4	0xD002      	BRA         L__transicionSalBC1472
0x91E6	0x8001      	BSF         R1, 0 
0x91E8	0xD001      	BRA         L__transicionSalBC1473
L__transicionSalBC1472:
0x91EA	0x9001      	BCF         R1, 0 
L__transicionSalBC1473:
0x91EC	0xB281      	BTFSC       PORTB, 1 
0x91EE	0xD002      	BRA         L__transicionSalBC1474
0x91F0	0x80D8      	BSF         STATUS, 0 
0x91F2	0xD001      	BRA         L__transicionSalBC1475
L__transicionSalBC1474:
0x91F4	0x90D8      	BCF         STATUS, 0 
L__transicionSalBC1475:
0x91F6	0xA001      	BTFSS       R1, 0 
0x91F8	0xD003      	BRA         L__transicionSalBC1476
0x91FA	0xE302      	BNC         L__transicionSalBC1476
0x91FC	0x8001      	BSF         R1, 0 
0x91FE	0xD001      	BRA         L__transicionSalBC1477
L__transicionSalBC1476:
0x9200	0x9001      	BCF         R1, 0 
L__transicionSalBC1477:
0x9202	0xA001      	BTFSS       R1, 0 
0x9204	0xD00A      	BRA         L_transicionSalBC307
;rutinasensores_v4(mstr-slv).h,1172 :: 		lcd_cmd(_LCD_CLEAR);
0x9206	0x0E01      	MOVLW       1
0x9208	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x920A	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1173 :: 		return debugEstadoB = TRANSICIONS;
0x920E	0x0E08      	MOVLW       8
0x9210	0x0101      	MOVLB       1
0x9212	0x6F3D      	MOVWF       _debugEstadoB, 1
0x9214	0x0E08      	MOVLW       8
0x9216	0x6E00      	MOVWF       R0 
0x9218	0xD01A      	BRA         L_end_transicionSalBC
;rutinasensores_v4(mstr-slv).h,1174 :: 		}
L_transicionSalBC307:
;rutinasensores_v4(mstr-slv).h,1175 :: 		if((SENSOR1 & SENSOR3 & SENSOR5)){
0x921A	0xA881      	BTFSS       PORTB, 4 
0x921C	0xD004      	BRA         L__transicionSalBC1478
0x921E	0xA481      	BTFSS       PORTB, 2 
0x9220	0xD002      	BRA         L__transicionSalBC1478
0x9222	0x80D8      	BSF         STATUS, 0 
0x9224	0xD001      	BRA         L__transicionSalBC1479
L__transicionSalBC1478:
0x9226	0x90D8      	BCF         STATUS, 0 
L__transicionSalBC1479:
0x9228	0xE304      	BNC         L__transicionSalBC1480
0x922A	0xA081      	BTFSS       PORTB, 0 
0x922C	0xD002      	BRA         L__transicionSalBC1480
0x922E	0x8001      	BSF         R1, 0 
0x9230	0xD001      	BRA         L__transicionSalBC1481
L__transicionSalBC1480:
0x9232	0x9001      	BCF         R1, 0 
L__transicionSalBC1481:
0x9234	0xA001      	BTFSS       R1, 0 
0x9236	0xD00B      	BRA         L_transicionSalBC308
;rutinasensores_v4(mstr-slv).h,1176 :: 		lcd_cmd(_LCD_CLEAR);
0x9238	0x0E01      	MOVLW       1
0x923A	0x0102      	MOVLB       2
0x923C	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x923E	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1177 :: 		return debugEstadoB = SALIO;
0x9242	0x0E06      	MOVLW       6
0x9244	0x0101      	MOVLB       1
0x9246	0x6F3D      	MOVWF       _debugEstadoB, 1
0x9248	0x0E06      	MOVLW       6
0x924A	0x6E00      	MOVWF       R0 
0x924C	0xD000      	BRA         L_end_transicionSalBC
;rutinasensores_v4(mstr-slv).h,1178 :: 		}
L_transicionSalBC308:
;rutinasensores_v4(mstr-slv).h,1179 :: 		}
L_transicionSalBC306:
;rutinasensores_v4(mstr-slv).h,1180 :: 		}
L_end_transicionSalBC:
0x924E	0x0012      	RETURN      0
; end of _transicionSalBC
_entroBS:
;rutinasensores_v4(mstr-slv).h,1407 :: 		short entroBS(short estado){
;rutinasensores_v4(mstr-slv).h,1408 :: 		if(estado == ENTRO){
0x9250	0x0102      	MOVLB       2
0x9252	0x5114      	MOVF        FARG_entroBS_estado, 0, 1
0x9254	0x0A03      	XORLW       3
0x9256	0xA4D8      	BTFSS       STATUS, 2 
0x9258	0xD10A      	BRA         L_entroBS348
;rutinasensores_v4(mstr-slv).h,1409 :: 		LCD_OUTCONST(3,1,"BIENVENIDO: $6.00");
0x925A	0x0E03      	MOVLW       3
0x925C	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x925E	0x0E01      	MOVLW       1
0x9260	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x9262	0x0EE2      	MOVLW       ?lstr_59_MyProject
0x9264	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x9266	0x0ED7      	MOVLW       hi_addr(?lstr_59_MyProject)
0x9268	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x926A	0x0E00      	MOVLW       higher_addr(?lstr_59_MyProject)
0x926C	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x926E	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1410 :: 		pBajan = eepromLeeNumero(0x0003,2);
0x9272	0x0E03      	MOVLW       3
0x9274	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x9276	0x0E00      	MOVLW       0
0x9278	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x927A	0x0E02      	MOVLW       2
0x927C	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x927E	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x9282	0xF135C000  	MOVFF       R0, _pBajan
0x9286	0xF136C001  	MOVFF       R1, _pBajan+1
;rutinasensores_v4(mstr-slv).h,1411 :: 		pSuben = eepromLeeNumero(0x0000,2) + 1;
0x928A	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x928C	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x928E	0x0E02      	MOVLW       2
0x9290	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x9292	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x9296	0x4A00      	INFSNZ      R0, 1 
0x9298	0x2A01      	INCF        R1, 1 
0x929A	0xF137C000  	MOVFF       R0, _pSuben
0x929E	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,1412 :: 		eepromEscribeNumero(0x0000,pSuben,2);
0x92A2	0x6B1D      	CLRF        FARG_eepromEscribeNumero_Registro, 1
0x92A4	0x6B1E      	CLRF        FARG_eepromEscribeNumero_Registro+1, 1
0x92A6	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x92AA	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x92AE	0x0E00      	MOVLW       0
0x92B0	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x92B2	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x92B4	0x0E02      	MOVLW       2
0x92B6	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x92B8	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,1413 :: 		pSuben = eepromLeeNumero(0x0000, 2);
0x92BC	0x0102      	MOVLB       2
0x92BE	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x92C0	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x92C2	0x0E02      	MOVLW       2
0x92C4	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x92C6	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x92CA	0xF137C000  	MOVFF       R0, _pSuben
0x92CE	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,1414 :: 		pasajerosVerdaderos = ((float)pSuben + (float)pBajan)/2;
0x92D2	0xF008EC65  	CALL        _Word2Double, 0
0x92D6	0xF215C000  	MOVFF       R0, FLOC__entroBS
0x92DA	0xF216C001  	MOVFF       R1, FLOC__entroBS+1
0x92DE	0xF217C002  	MOVFF       R2, FLOC__entroBS+2
0x92E2	0xF218C003  	MOVFF       R3, FLOC__entroBS+3
0x92E6	0xF000C135  	MOVFF       _pBajan, R0
0x92EA	0xF001C136  	MOVFF       _pBajan+1, R1
0x92EE	0xF008EC65  	CALL        _Word2Double, 0
0x92F2	0xF004C215  	MOVFF       FLOC__entroBS, R4
0x92F6	0xF005C216  	MOVFF       FLOC__entroBS+1, R5
0x92FA	0xF006C217  	MOVFF       FLOC__entroBS+2, R6
0x92FE	0xF007C218  	MOVFF       FLOC__entroBS+3, R7
0x9302	0xF004EC8D  	CALL        _Add_32x32_FP, 0
0x9306	0x0E00      	MOVLW       0
0x9308	0x6E04      	MOVWF       R4 
0x930A	0x0E00      	MOVLW       0
0x930C	0x6E05      	MOVWF       R5 
0x930E	0x0E00      	MOVLW       0
0x9310	0x6E06      	MOVWF       R6 
0x9312	0x0E80      	MOVLW       128
0x9314	0x6E07      	MOVWF       R7 
0x9316	0xF007ECA7  	CALL        _Div_32x32_FP, 0
0x931A	0xF139C000  	MOVFF       R0, _pasajerosVerdaderos
0x931E	0xF13AC001  	MOVFF       R1, _pasajerosVerdaderos+1
0x9322	0xF13BC002  	MOVFF       R2, _pasajerosVerdaderos+2
0x9326	0xF13CC003  	MOVFF       R3, _pasajerosVerdaderos+3
;rutinasensores_v4(mstr-slv).h,1415 :: 		eepromEscribeNumero(0x0009, (unsigned int)pasajerosVerdaderos, 2);
0x932A	0x0E09      	MOVLW       9
0x932C	0x0102      	MOVLB       2
0x932E	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x9330	0x0E00      	MOVLW       0
0x9332	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x9334	0xF006ECA0  	CALL        _Double2Word, 0
0x9338	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x933C	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x9340	0x0E00      	MOVLW       0
0x9342	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x9344	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x9346	0x0E02      	MOVLW       2
0x9348	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x934A	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,1416 :: 		if(MSTR){
0x934E	0xA483      	BTFSS       PORTD, 2 
0x9350	0xD085      	BRA         L_entroBS349
;rutinasensores_v4(mstr-slv).h,1417 :: 		pVerdaderosMEntero = eepromLeeNumero(0x0009, 2);
0x9352	0x0E09      	MOVLW       9
0x9354	0x0102      	MOVLB       2
0x9356	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x9358	0x0E00      	MOVLW       0
0x935A	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x935C	0x0E02      	MOVLW       2
0x935E	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x9360	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x9364	0xF12FC000  	MOVFF       R0, _pVerdaderosMEntero
0x9368	0xF130C001  	MOVFF       R1, _pVerdaderosMEntero+1
;rutinasensores_v4(mstr-slv).h,1418 :: 		pVerdaderosEEntero = eepromLeeNumero(0x0007, 2);
0x936C	0x0E07      	MOVLW       7
0x936E	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x9370	0x0E00      	MOVLW       0
0x9372	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x9374	0x0E02      	MOVLW       2
0x9376	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x9378	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x937C	0xF12DC000  	MOVFF       R0, _pVerdaderosEEntero
0x9380	0xF12EC001  	MOVFF       R1, _pVerdaderosEEntero+1
;rutinasensores_v4(mstr-slv).h,1419 :: 		pasajerosTotalesL = pVerdaderosMEntero + pVerdaderosEEntero;
0x9384	0x5000      	MOVF        R0, 0 
0x9386	0x0101      	MOVLB       1
0x9388	0x252F      	ADDWF       _pVerdaderosMEntero, 0, 1
0x938A	0x6F33      	MOVWF       _pasajerosTotalesL, 1
0x938C	0x5001      	MOVF        R1, 0 
0x938E	0x2130      	ADDWFC      _pVerdaderosMEntero+1, 0, 1
0x9390	0x6F34      	MOVWF       _pasajerosTotalesL+1, 1
;rutinasensores_v4(mstr-slv).h,1420 :: 		totalCalculado = (eepromLeeNumero(0x0000, 2)+eepromLeeNumero(0x0003, 2)+eepromLeeNumero(0x0900, 2)+eepromLeeNumero(0x0700, 2))/2;
0x9392	0x0102      	MOVLB       2
0x9394	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x9396	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x9398	0x0E02      	MOVLW       2
0x939A	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x939C	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x93A0	0xF215C000  	MOVFF       R0, FLOC__entroBS
0x93A4	0xF216C001  	MOVFF       R1, FLOC__entroBS+1
0x93A8	0xF217C002  	MOVFF       R2, FLOC__entroBS+2
0x93AC	0xF218C003  	MOVFF       R3, FLOC__entroBS+3
0x93B0	0x0E03      	MOVLW       3
0x93B2	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x93B4	0x0E00      	MOVLW       0
0x93B6	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x93B8	0x0E02      	MOVLW       2
0x93BA	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x93BC	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x93C0	0x5000      	MOVF        R0, 0 
0x93C2	0x2715      	ADDWF       FLOC__entroBS, 1, 1
0x93C4	0x5001      	MOVF        R1, 0 
0x93C6	0x2316      	ADDWFC      FLOC__entroBS+1, 1, 1
0x93C8	0x5002      	MOVF        R2, 0 
0x93CA	0x2317      	ADDWFC      FLOC__entroBS+2, 1, 1
0x93CC	0x5003      	MOVF        R3, 0 
0x93CE	0x2318      	ADDWFC      FLOC__entroBS+3, 1, 1
0x93D0	0x0E00      	MOVLW       0
0x93D2	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x93D4	0x0E09      	MOVLW       9
0x93D6	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x93D8	0x0E02      	MOVLW       2
0x93DA	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x93DC	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x93E0	0x5000      	MOVF        R0, 0 
0x93E2	0x2715      	ADDWF       FLOC__entroBS, 1, 1
0x93E4	0x5001      	MOVF        R1, 0 
0x93E6	0x2316      	ADDWFC      FLOC__entroBS+1, 1, 1
0x93E8	0x5002      	MOVF        R2, 0 
0x93EA	0x2317      	ADDWFC      FLOC__entroBS+2, 1, 1
0x93EC	0x5003      	MOVF        R3, 0 
0x93EE	0x2318      	ADDWFC      FLOC__entroBS+3, 1, 1
0x93F0	0x0E00      	MOVLW       0
0x93F2	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x93F4	0x0E07      	MOVLW       7
0x93F6	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x93F8	0x0E02      	MOVLW       2
0x93FA	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x93FC	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x9400	0x5000      	MOVF        R0, 0 
0x9402	0x2515      	ADDWF       FLOC__entroBS, 0, 1
0x9404	0x6E05      	MOVWF       R5 
0x9406	0x5001      	MOVF        R1, 0 
0x9408	0x2116      	ADDWFC      FLOC__entroBS+1, 0, 1
0x940A	0x6E06      	MOVWF       R6 
0x940C	0x5002      	MOVF        R2, 0 
0x940E	0x2117      	ADDWFC      FLOC__entroBS+2, 0, 1
0x9410	0x6E07      	MOVWF       R7 
0x9412	0x5003      	MOVF        R3, 0 
0x9414	0x2118      	ADDWFC      FLOC__entroBS+3, 0, 1
0x9416	0x6E08      	MOVWF       R8 
0x9418	0xF000C005  	MOVFF       R5, R0
0x941C	0xF001C006  	MOVFF       R6, R1
0x9420	0xF002C007  	MOVFF       R7, R2
0x9424	0xF003C008  	MOVFF       R8, R3
0x9428	0x3203      	RRCF        R3, 1 
0x942A	0x3202      	RRCF        R2, 1 
0x942C	0x3201      	RRCF        R1, 1 
0x942E	0x3200      	RRCF        R0, 1 
0x9430	0x9E03      	BCF         R3, 7 
0x9432	0xBC03      	BTFSC       R3, 6 
0x9434	0x8E03      	BSF         R3, 7 
0x9436	0xF131C000  	MOVFF       R0, _totalCalculado
0x943A	0xF132C001  	MOVFF       R1, _totalCalculado+1
;rutinasensores_v4(mstr-slv).h,1421 :: 		eepromEscribeNumero(0x0005, totalCalculado, 2);
0x943E	0x0E05      	MOVLW       5
0x9440	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x9442	0x0E00      	MOVLW       0
0x9444	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x9446	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x944A	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x944E	0x0E00      	MOVLW       0
0x9450	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x9452	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x9454	0x0E02      	MOVLW       2
0x9456	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x9458	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,1422 :: 		}
L_entroBS349:
;rutinasensores_v4(mstr-slv).h,1423 :: 		lcd_cmd(_LCD_CLEAR);
0x945C	0x0E01      	MOVLW       1
0x945E	0x0102      	MOVLB       2
0x9460	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x9462	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1424 :: 		return debugEstadoB = ESPERA;
0x9466	0x0101      	MOVLB       1
0x9468	0x6B3D      	CLRF        _debugEstadoB, 1
0x946A	0x6A00      	CLRF        R0 
0x946C	0xD000      	BRA         L_end_entroBS
;rutinasensores_v4(mstr-slv).h,1425 :: 		}
L_entroBS348:
;rutinasensores_v4(mstr-slv).h,1426 :: 		}
L_end_entroBS:
0x946E	0x0012      	RETURN      0
; end of _entroBS
_entroBC:
;rutinasensores_v4(mstr-slv).h,1119 :: 		short entroBC(short estado){
;rutinasensores_v4(mstr-slv).h,1120 :: 		if(estado == ENTRO){
0x9470	0x0102      	MOVLB       2
0x9472	0x5114      	MOVF        FARG_entroBC_estado, 0, 1
0x9474	0x0A03      	XORLW       3
0x9476	0xA4D8      	BTFSS       STATUS, 2 
0x9478	0xD10A      	BRA         L_entroBC298
;rutinasensores_v4(mstr-slv).h,1121 :: 		LCD_OUTCONST(3,1,"BIENVENIDO: $6.00");
0x947A	0x0E03      	MOVLW       3
0x947C	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x947E	0x0E01      	MOVLW       1
0x9480	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x9482	0x0E06      	MOVLW       ?lstr_43_MyProject
0x9484	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x9486	0x0ED8      	MOVLW       hi_addr(?lstr_43_MyProject)
0x9488	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x948A	0x0E00      	MOVLW       higher_addr(?lstr_43_MyProject)
0x948C	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x948E	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1122 :: 		pBajan = eepromLeeNumero(0x0003,2);
0x9492	0x0E03      	MOVLW       3
0x9494	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x9496	0x0E00      	MOVLW       0
0x9498	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x949A	0x0E02      	MOVLW       2
0x949C	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x949E	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x94A2	0xF135C000  	MOVFF       R0, _pBajan
0x94A6	0xF136C001  	MOVFF       R1, _pBajan+1
;rutinasensores_v4(mstr-slv).h,1123 :: 		pSuben = eepromLeeNumero(0x0000,2) + 1;
0x94AA	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x94AC	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x94AE	0x0E02      	MOVLW       2
0x94B0	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x94B2	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x94B6	0x4A00      	INFSNZ      R0, 1 
0x94B8	0x2A01      	INCF        R1, 1 
0x94BA	0xF137C000  	MOVFF       R0, _pSuben
0x94BE	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,1124 :: 		eepromEscribeNumero(0x0000,pSuben,2);
0x94C2	0x6B1D      	CLRF        FARG_eepromEscribeNumero_Registro, 1
0x94C4	0x6B1E      	CLRF        FARG_eepromEscribeNumero_Registro+1, 1
0x94C6	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x94CA	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x94CE	0x0E00      	MOVLW       0
0x94D0	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x94D2	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x94D4	0x0E02      	MOVLW       2
0x94D6	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x94D8	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,1125 :: 		pSuben = eepromLeeNumero(0x0000, 2);
0x94DC	0x0102      	MOVLB       2
0x94DE	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x94E0	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x94E2	0x0E02      	MOVLW       2
0x94E4	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x94E6	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x94EA	0xF137C000  	MOVFF       R0, _pSuben
0x94EE	0xF138C001  	MOVFF       R1, _pSuben+1
;rutinasensores_v4(mstr-slv).h,1126 :: 		pasajerosVerdaderos = ((float)pSuben + (float)pBajan)/2;
0x94F2	0xF008EC65  	CALL        _Word2Double, 0
0x94F6	0xF215C000  	MOVFF       R0, FLOC__entroBC
0x94FA	0xF216C001  	MOVFF       R1, FLOC__entroBC+1
0x94FE	0xF217C002  	MOVFF       R2, FLOC__entroBC+2
0x9502	0xF218C003  	MOVFF       R3, FLOC__entroBC+3
0x9506	0xF000C135  	MOVFF       _pBajan, R0
0x950A	0xF001C136  	MOVFF       _pBajan+1, R1
0x950E	0xF008EC65  	CALL        _Word2Double, 0
0x9512	0xF004C215  	MOVFF       FLOC__entroBC, R4
0x9516	0xF005C216  	MOVFF       FLOC__entroBC+1, R5
0x951A	0xF006C217  	MOVFF       FLOC__entroBC+2, R6
0x951E	0xF007C218  	MOVFF       FLOC__entroBC+3, R7
0x9522	0xF004EC8D  	CALL        _Add_32x32_FP, 0
0x9526	0x0E00      	MOVLW       0
0x9528	0x6E04      	MOVWF       R4 
0x952A	0x0E00      	MOVLW       0
0x952C	0x6E05      	MOVWF       R5 
0x952E	0x0E00      	MOVLW       0
0x9530	0x6E06      	MOVWF       R6 
0x9532	0x0E80      	MOVLW       128
0x9534	0x6E07      	MOVWF       R7 
0x9536	0xF007ECA7  	CALL        _Div_32x32_FP, 0
0x953A	0xF139C000  	MOVFF       R0, _pasajerosVerdaderos
0x953E	0xF13AC001  	MOVFF       R1, _pasajerosVerdaderos+1
0x9542	0xF13BC002  	MOVFF       R2, _pasajerosVerdaderos+2
0x9546	0xF13CC003  	MOVFF       R3, _pasajerosVerdaderos+3
;rutinasensores_v4(mstr-slv).h,1127 :: 		eepromEscribeNumero(0x0009, (unsigned int)pasajerosVerdaderos, 2);
0x954A	0x0E09      	MOVLW       9
0x954C	0x0102      	MOVLB       2
0x954E	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x9550	0x0E00      	MOVLW       0
0x9552	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x9554	0xF006ECA0  	CALL        _Double2Word, 0
0x9558	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x955C	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x9560	0x0E00      	MOVLW       0
0x9562	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x9564	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x9566	0x0E02      	MOVLW       2
0x9568	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x956A	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,1128 :: 		if(MSTR){
0x956E	0xA483      	BTFSS       PORTD, 2 
0x9570	0xD085      	BRA         L_entroBC299
;rutinasensores_v4(mstr-slv).h,1129 :: 		pVerdaderosMEntero = eepromLeeNumero(0x0009, 2);
0x9572	0x0E09      	MOVLW       9
0x9574	0x0102      	MOVLB       2
0x9576	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x9578	0x0E00      	MOVLW       0
0x957A	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x957C	0x0E02      	MOVLW       2
0x957E	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x9580	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x9584	0xF12FC000  	MOVFF       R0, _pVerdaderosMEntero
0x9588	0xF130C001  	MOVFF       R1, _pVerdaderosMEntero+1
;rutinasensores_v4(mstr-slv).h,1130 :: 		pVerdaderosEEntero = eepromLeeNumero(0x0007, 2);
0x958C	0x0E07      	MOVLW       7
0x958E	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x9590	0x0E00      	MOVLW       0
0x9592	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x9594	0x0E02      	MOVLW       2
0x9596	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x9598	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x959C	0xF12DC000  	MOVFF       R0, _pVerdaderosEEntero
0x95A0	0xF12EC001  	MOVFF       R1, _pVerdaderosEEntero+1
;rutinasensores_v4(mstr-slv).h,1131 :: 		pasajerosTotalesL = pVerdaderosMEntero + pVerdaderosEEntero;
0x95A4	0x5000      	MOVF        R0, 0 
0x95A6	0x0101      	MOVLB       1
0x95A8	0x252F      	ADDWF       _pVerdaderosMEntero, 0, 1
0x95AA	0x6F33      	MOVWF       _pasajerosTotalesL, 1
0x95AC	0x5001      	MOVF        R1, 0 
0x95AE	0x2130      	ADDWFC      _pVerdaderosMEntero+1, 0, 1
0x95B0	0x6F34      	MOVWF       _pasajerosTotalesL+1, 1
;rutinasensores_v4(mstr-slv).h,1132 :: 		totalCalculado = (eepromLeeNumero(0x0000, 2)+eepromLeeNumero(0x0003, 2)+eepromLeeNumero(0x0900, 2)+eepromLeeNumero(0x0700, 2))/2;
0x95B2	0x0102      	MOVLB       2
0x95B4	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0x95B6	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0x95B8	0x0E02      	MOVLW       2
0x95BA	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x95BC	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x95C0	0xF215C000  	MOVFF       R0, FLOC__entroBC
0x95C4	0xF216C001  	MOVFF       R1, FLOC__entroBC+1
0x95C8	0xF217C002  	MOVFF       R2, FLOC__entroBC+2
0x95CC	0xF218C003  	MOVFF       R3, FLOC__entroBC+3
0x95D0	0x0E03      	MOVLW       3
0x95D2	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x95D4	0x0E00      	MOVLW       0
0x95D6	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x95D8	0x0E02      	MOVLW       2
0x95DA	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x95DC	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x95E0	0x5000      	MOVF        R0, 0 
0x95E2	0x2715      	ADDWF       FLOC__entroBC, 1, 1
0x95E4	0x5001      	MOVF        R1, 0 
0x95E6	0x2316      	ADDWFC      FLOC__entroBC+1, 1, 1
0x95E8	0x5002      	MOVF        R2, 0 
0x95EA	0x2317      	ADDWFC      FLOC__entroBC+2, 1, 1
0x95EC	0x5003      	MOVF        R3, 0 
0x95EE	0x2318      	ADDWFC      FLOC__entroBC+3, 1, 1
0x95F0	0x0E00      	MOVLW       0
0x95F2	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x95F4	0x0E09      	MOVLW       9
0x95F6	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x95F8	0x0E02      	MOVLW       2
0x95FA	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x95FC	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x9600	0x5000      	MOVF        R0, 0 
0x9602	0x2715      	ADDWF       FLOC__entroBC, 1, 1
0x9604	0x5001      	MOVF        R1, 0 
0x9606	0x2316      	ADDWFC      FLOC__entroBC+1, 1, 1
0x9608	0x5002      	MOVF        R2, 0 
0x960A	0x2317      	ADDWFC      FLOC__entroBC+2, 1, 1
0x960C	0x5003      	MOVF        R3, 0 
0x960E	0x2318      	ADDWFC      FLOC__entroBC+3, 1, 1
0x9610	0x0E00      	MOVLW       0
0x9612	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0x9614	0x0E07      	MOVLW       7
0x9616	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0x9618	0x0E02      	MOVLW       2
0x961A	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0x961C	0xF002EC92  	CALL        _eepromLeeNumero, 0
0x9620	0x5000      	MOVF        R0, 0 
0x9622	0x2515      	ADDWF       FLOC__entroBC, 0, 1
0x9624	0x6E05      	MOVWF       R5 
0x9626	0x5001      	MOVF        R1, 0 
0x9628	0x2116      	ADDWFC      FLOC__entroBC+1, 0, 1
0x962A	0x6E06      	MOVWF       R6 
0x962C	0x5002      	MOVF        R2, 0 
0x962E	0x2117      	ADDWFC      FLOC__entroBC+2, 0, 1
0x9630	0x6E07      	MOVWF       R7 
0x9632	0x5003      	MOVF        R3, 0 
0x9634	0x2118      	ADDWFC      FLOC__entroBC+3, 0, 1
0x9636	0x6E08      	MOVWF       R8 
0x9638	0xF000C005  	MOVFF       R5, R0
0x963C	0xF001C006  	MOVFF       R6, R1
0x9640	0xF002C007  	MOVFF       R7, R2
0x9644	0xF003C008  	MOVFF       R8, R3
0x9648	0x3203      	RRCF        R3, 1 
0x964A	0x3202      	RRCF        R2, 1 
0x964C	0x3201      	RRCF        R1, 1 
0x964E	0x3200      	RRCF        R0, 1 
0x9650	0x9E03      	BCF         R3, 7 
0x9652	0xBC03      	BTFSC       R3, 6 
0x9654	0x8E03      	BSF         R3, 7 
0x9656	0xF131C000  	MOVFF       R0, _totalCalculado
0x965A	0xF132C001  	MOVFF       R1, _totalCalculado+1
;rutinasensores_v4(mstr-slv).h,1133 :: 		eepromEscribeNumero(0x0005, totalCalculado, 2);
0x965E	0x0E05      	MOVLW       5
0x9660	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0x9662	0x0E00      	MOVLW       0
0x9664	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0x9666	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0x966A	0xF220C001  	MOVFF       R1, FARG_eepromEscribeNumero_Dato+1
0x966E	0x0E00      	MOVLW       0
0x9670	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0x9672	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0x9674	0x0E02      	MOVLW       2
0x9676	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0x9678	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;rutinasensores_v4(mstr-slv).h,1134 :: 		}
L_entroBC299:
;rutinasensores_v4(mstr-slv).h,1135 :: 		lcd_cmd(_LCD_CLEAR);
0x967C	0x0E01      	MOVLW       1
0x967E	0x0102      	MOVLB       2
0x9680	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x9682	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1136 :: 		return debugEstadoB = ESPERA;
0x9686	0x0101      	MOVLB       1
0x9688	0x6B3D      	CLRF        _debugEstadoB, 1
0x968A	0x6A00      	CLRF        R0 
0x968C	0xD000      	BRA         L_end_entroBC
;rutinasensores_v4(mstr-slv).h,1137 :: 		}
L_entroBC298:
;rutinasensores_v4(mstr-slv).h,1138 :: 		}
L_end_entroBC:
0x968E	0x0012      	RETURN      0
; end of _entroBC
_saliendoBC:
;rutinasensores_v4(mstr-slv).h,1140 :: 		short saliendoBC(short estado){
;rutinasensores_v4(mstr-slv).h,1141 :: 		if(estado == SALIENDO){
0x9690	0x0102      	MOVLB       2
0x9692	0x5114      	MOVF        FARG_saliendoBC_estado, 0, 1
0x9694	0x0A04      	XORLW       4
0x9696	0xA4D8      	BTFSS       STATUS, 2 
0x9698	0xD062      	BRA         L_saliendoBC300
;rutinasensores_v4(mstr-slv).h,1142 :: 		lcd_outConst(3, 1, "SALIENDO");
0x969A	0x0E03      	MOVLW       3
0x969C	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x969E	0x0E01      	MOVLW       1
0x96A0	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x96A2	0x0E10      	MOVLW       ?lstr_44_MyProject
0x96A4	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x96A6	0x0EDA      	MOVLW       hi_addr(?lstr_44_MyProject)
0x96A8	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x96AA	0x0E00      	MOVLW       higher_addr(?lstr_44_MyProject)
0x96AC	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x96AE	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1143 :: 		if((!SENSOR1 & !SENSOR3) | (!SENSOR3 & !SENSOR5) | (!SENSOR1 & !SENSOR5)){
0x96B2	0xB881      	BTFSC       PORTB, 4 
0x96B4	0xD002      	BRA         L__saliendoBC1428
0x96B6	0x8601      	BSF         R1, 3 
0x96B8	0xD001      	BRA         L__saliendoBC1429
L__saliendoBC1428:
0x96BA	0x9601      	BCF         R1, 3 
L__saliendoBC1429:
0x96BC	0xB481      	BTFSC       PORTB, 2 
0x96BE	0xD002      	BRA         L__saliendoBC1430
0x96C0	0x8001      	BSF         R1, 0 
0x96C2	0xD001      	BRA         L__saliendoBC1431
L__saliendoBC1430:
0x96C4	0x9001      	BCF         R1, 0 
L__saliendoBC1431:
0x96C6	0xA601      	BTFSS       R1, 3 
0x96C8	0xD004      	BRA         L__saliendoBC1432
0x96CA	0xA001      	BTFSS       R1, 0 
0x96CC	0xD002      	BRA         L__saliendoBC1432
0x96CE	0x8201      	BSF         R1, 1 
0x96D0	0xD001      	BRA         L__saliendoBC1433
L__saliendoBC1432:
0x96D2	0x9201      	BCF         R1, 1 
L__saliendoBC1433:
0x96D4	0xB081      	BTFSC       PORTB, 0 
0x96D6	0xD002      	BRA         L__saliendoBC1434
0x96D8	0x8401      	BSF         R1, 2 
0x96DA	0xD001      	BRA         L__saliendoBC1435
L__saliendoBC1434:
0x96DC	0x9401      	BCF         R1, 2 
L__saliendoBC1435:
0x96DE	0xA001      	BTFSS       R1, 0 
0x96E0	0xD004      	BRA         L__saliendoBC1436
0x96E2	0xA401      	BTFSS       R1, 2 
0x96E4	0xD002      	BRA         L__saliendoBC1436
0x96E6	0x80D8      	BSF         STATUS, 0 
0x96E8	0xD001      	BRA         L__saliendoBC1437
L__saliendoBC1436:
0x96EA	0x90D8      	BCF         STATUS, 0 
L__saliendoBC1437:
0x96EC	0xB201      	BTFSC       R1, 1 
0x96EE	0xD003      	BRA         L__saliendoBC1438
0x96F0	0xE202      	BC          L__saliendoBC1438
0x96F2	0x9201      	BCF         R1, 1 
0x96F4	0xD001      	BRA         L__saliendoBC1439
L__saliendoBC1438:
0x96F6	0x8201      	BSF         R1, 1 
L__saliendoBC1439:
0x96F8	0xB601      	BTFSC       R1, 3 
0x96FA	0xD002      	BRA         L__saliendoBC1440
0x96FC	0x9001      	BCF         R1, 0 
0x96FE	0xD001      	BRA         L__saliendoBC1441
L__saliendoBC1440:
0x9700	0x8001      	BSF         R1, 0 
L__saliendoBC1441:
0x9702	0xB401      	BTFSC       R1, 2 
0x9704	0xD002      	BRA         L__saliendoBC1442
0x9706	0x90D8      	BCF         STATUS, 0 
0x9708	0xD001      	BRA         L__saliendoBC1443
L__saliendoBC1442:
0x970A	0x80D8      	BSF         STATUS, 0 
L__saliendoBC1443:
0x970C	0xA001      	BTFSS       R1, 0 
0x970E	0xD003      	BRA         L__saliendoBC1444
0x9710	0xE302      	BNC         L__saliendoBC1444
0x9712	0x8001      	BSF         R1, 0 
0x9714	0xD001      	BRA         L__saliendoBC1445
L__saliendoBC1444:
0x9716	0x9001      	BCF         R1, 0 
L__saliendoBC1445:
0x9718	0xB201      	BTFSC       R1, 1 
0x971A	0xD004      	BRA         L__saliendoBC1446
0x971C	0xB001      	BTFSC       R1, 0 
0x971E	0xD002      	BRA         L__saliendoBC1446
0x9720	0x90D8      	BCF         STATUS, 0 
0x9722	0xD001      	BRA         L__saliendoBC1447
L__saliendoBC1446:
0x9724	0x80D8      	BSF         STATUS, 0 
L__saliendoBC1447:
0x9726	0xE30A      	BNC         L_saliendoBC301
;rutinasensores_v4(mstr-slv).h,1144 :: 		lcd_cmd(_LCD_CLEAR);
0x9728	0x0E01      	MOVLW       1
0x972A	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x972C	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1145 :: 		return debugEstadoB = TRANSICIONS;
0x9730	0x0E08      	MOVLW       8
0x9732	0x0101      	MOVLB       1
0x9734	0x6F3D      	MOVWF       _debugEstadoB, 1
0x9736	0x0E08      	MOVLW       8
0x9738	0x6E00      	MOVWF       R0 
0x973A	0xD011      	BRA         L_end_saliendoBC
;rutinasensores_v4(mstr-slv).h,1146 :: 		}
L_saliendoBC301:
;rutinasensores_v4(mstr-slv).h,1147 :: 		if((SENSOR2 & SENSOR6)){
0x973C	0xA883      	BTFSS       PORTD, 4 
0x973E	0xD004      	BRA         L__saliendoBC1448
0x9740	0xA281      	BTFSS       PORTB, 1 
0x9742	0xD002      	BRA         L__saliendoBC1448
0x9744	0x80D8      	BSF         STATUS, 0 
0x9746	0xD001      	BRA         L__saliendoBC1449
L__saliendoBC1448:
0x9748	0x90D8      	BCF         STATUS, 0 
L__saliendoBC1449:
0x974A	0xE309      	BNC         L_saliendoBC302
;rutinasensores_v4(mstr-slv).h,1148 :: 		lcd_cmd(_LCD_CLEAR);
0x974C	0x0E01      	MOVLW       1
0x974E	0x0102      	MOVLB       2
0x9750	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x9752	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1149 :: 		return debugEstadoB = ESPERA;
0x9756	0x0101      	MOVLB       1
0x9758	0x6B3D      	CLRF        _debugEstadoB, 1
0x975A	0x6A00      	CLRF        R0 
0x975C	0xD000      	BRA         L_end_saliendoBC
;rutinasensores_v4(mstr-slv).h,1150 :: 		}
L_saliendoBC302:
;rutinasensores_v4(mstr-slv).h,1151 :: 		}
L_saliendoBC300:
;rutinasensores_v4(mstr-slv).h,1152 :: 		}
L_end_saliendoBC:
0x975E	0x0012      	RETURN      0
; end of _saliendoBC
_esperaBC:
;rutinasensores_v4(mstr-slv).h,1063 :: 		short esperaBC(short estado){
;rutinasensores_v4(mstr-slv).h,1064 :: 		if(estado == ESPERA){
0x9760	0x0102      	MOVLB       2
0x9762	0x5114      	MOVF        FARG_esperaBC_estado, 0, 1
0x9764	0x0A00      	XORLW       0
0x9766	0xE146      	BNZ         L_esperaBC286
;rutinasensores_v4(mstr-slv).h,1065 :: 		muestraEstatus();
0x9768	0xF008EC8B  	CALL        _muestraEstatus, 0
;rutinasensores_v4(mstr-slv).h,1066 :: 		if((!SENSOR1 | !SENSOR3 | !SENSOR5)){
0x976C	0xB881      	BTFSC       PORTB, 4 
0x976E	0xD002      	BRA         L__esperaBC1353
0x9770	0x8001      	BSF         R1, 0 
0x9772	0xD001      	BRA         L__esperaBC1354
L__esperaBC1353:
0x9774	0x9001      	BCF         R1, 0 
L__esperaBC1354:
0x9776	0xB481      	BTFSC       PORTB, 2 
0x9778	0xD002      	BRA         L__esperaBC1355
0x977A	0x80D8      	BSF         STATUS, 0 
0x977C	0xD001      	BRA         L__esperaBC1356
L__esperaBC1355:
0x977E	0x90D8      	BCF         STATUS, 0 
L__esperaBC1356:
0x9780	0xB001      	BTFSC       R1, 0 
0x9782	0xD003      	BRA         L__esperaBC1357
0x9784	0xE202      	BC          L__esperaBC1357
0x9786	0x9001      	BCF         R1, 0 
0x9788	0xD001      	BRA         L__esperaBC1358
L__esperaBC1357:
0x978A	0x8001      	BSF         R1, 0 
L__esperaBC1358:
0x978C	0xB081      	BTFSC       PORTB, 0 
0x978E	0xD002      	BRA         L__esperaBC1359
0x9790	0x80D8      	BSF         STATUS, 0 
0x9792	0xD001      	BRA         L__esperaBC1360
L__esperaBC1359:
0x9794	0x90D8      	BCF         STATUS, 0 
L__esperaBC1360:
0x9796	0xB001      	BTFSC       R1, 0 
0x9798	0xD003      	BRA         L__esperaBC1361
0x979A	0xE202      	BC          L__esperaBC1361
0x979C	0x9001      	BCF         R1, 0 
0x979E	0xD001      	BRA         L__esperaBC1362
L__esperaBC1361:
0x97A0	0x8001      	BSF         R1, 0 
L__esperaBC1362:
0x97A2	0xA001      	BTFSS       R1, 0 
0x97A4	0xD00A      	BRA         L_esperaBC287
;rutinasensores_v4(mstr-slv).h,1067 :: 		lcd_cmd(_LCD_CLEAR);
0x97A6	0x0E01      	MOVLW       1
0x97A8	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x97AA	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1068 :: 		return debugEstadoB = ENTRANDO;
0x97AE	0x0E01      	MOVLW       1
0x97B0	0x0101      	MOVLB       1
0x97B2	0x6F3D      	MOVWF       _debugEstadoB, 1
0x97B4	0x0E01      	MOVLW       1
0x97B6	0x6E00      	MOVWF       R0 
0x97B8	0xD01D      	BRA         L_end_esperaBC
;rutinasensores_v4(mstr-slv).h,1069 :: 		}
L_esperaBC287:
;rutinasensores_v4(mstr-slv).h,1070 :: 		if((!SENSOR2 | !SENSOR6)){
0x97BA	0xB883      	BTFSC       PORTD, 4 
0x97BC	0xD002      	BRA         L__esperaBC1363
0x97BE	0x8001      	BSF         R1, 0 
0x97C0	0xD001      	BRA         L__esperaBC1364
L__esperaBC1363:
0x97C2	0x9001      	BCF         R1, 0 
L__esperaBC1364:
0x97C4	0xB281      	BTFSC       PORTB, 1 
0x97C6	0xD002      	BRA         L__esperaBC1365
0x97C8	0x80D8      	BSF         STATUS, 0 
0x97CA	0xD001      	BRA         L__esperaBC1366
L__esperaBC1365:
0x97CC	0x90D8      	BCF         STATUS, 0 
L__esperaBC1366:
0x97CE	0xB001      	BTFSC       R1, 0 
0x97D0	0xD003      	BRA         L__esperaBC1367
0x97D2	0xE202      	BC          L__esperaBC1367
0x97D4	0x9001      	BCF         R1, 0 
0x97D6	0xD001      	BRA         L__esperaBC1368
L__esperaBC1367:
0x97D8	0x8001      	BSF         R1, 0 
L__esperaBC1368:
0x97DA	0xA001      	BTFSS       R1, 0 
0x97DC	0xD00B      	BRA         L_esperaBC288
;rutinasensores_v4(mstr-slv).h,1071 :: 		lcd_cmd(_LCD_CLEAR);
0x97DE	0x0E01      	MOVLW       1
0x97E0	0x0102      	MOVLB       2
0x97E2	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x97E4	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1072 :: 		return debugEstadoB = SALIENDO;
0x97E8	0x0E04      	MOVLW       4
0x97EA	0x0101      	MOVLB       1
0x97EC	0x6F3D      	MOVWF       _debugEstadoB, 1
0x97EE	0x0E04      	MOVLW       4
0x97F0	0x6E00      	MOVWF       R0 
0x97F2	0xD000      	BRA         L_end_esperaBC
;rutinasensores_v4(mstr-slv).h,1073 :: 		}
L_esperaBC288:
;rutinasensores_v4(mstr-slv).h,1074 :: 		}
L_esperaBC286:
;rutinasensores_v4(mstr-slv).h,1075 :: 		}
L_end_esperaBC:
0x97F4	0x0012      	RETURN      0
; end of _esperaBC
_entrandoBC:
;rutinasensores_v4(mstr-slv).h,1077 :: 		short entrandoBC(short estado){
;rutinasensores_v4(mstr-slv).h,1078 :: 		if(estado == ENTRANDO){
0x97F6	0x0102      	MOVLB       2
0x97F8	0x5114      	MOVF        FARG_entrandoBC_estado, 0, 1
0x97FA	0x0A01      	XORLW       1
0x97FC	0xE140      	BNZ         L_entrandoBC289
;rutinasensores_v4(mstr-slv).h,1079 :: 		LCD_OUTCONST(3,1,"ENTRANDO");
0x97FE	0x0E03      	MOVLW       3
0x9800	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x9802	0x0E01      	MOVLW       1
0x9804	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x9806	0x0EEC      	MOVLW       ?lstr_40_MyProject
0x9808	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x980A	0x0ED9      	MOVLW       hi_addr(?lstr_40_MyProject)
0x980C	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x980E	0x0E00      	MOVLW       higher_addr(?lstr_40_MyProject)
0x9810	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x9812	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1080 :: 		if((SENSOR1 & SENSOR3 & SENSOR5)){
0x9816	0xA881      	BTFSS       PORTB, 4 
0x9818	0xD004      	BRA         L__entrandoBC1370
0x981A	0xA481      	BTFSS       PORTB, 2 
0x981C	0xD002      	BRA         L__entrandoBC1370
0x981E	0x80D8      	BSF         STATUS, 0 
0x9820	0xD001      	BRA         L__entrandoBC1371
L__entrandoBC1370:
0x9822	0x90D8      	BCF         STATUS, 0 
L__entrandoBC1371:
0x9824	0xE304      	BNC         L__entrandoBC1372
0x9826	0xA081      	BTFSS       PORTB, 0 
0x9828	0xD002      	BRA         L__entrandoBC1372
0x982A	0x8001      	BSF         R1, 0 
0x982C	0xD001      	BRA         L__entrandoBC1373
L__entrandoBC1372:
0x982E	0x9001      	BCF         R1, 0 
L__entrandoBC1373:
0x9830	0xA001      	BTFSS       R1, 0 
0x9832	0xD008      	BRA         L_entrandoBC290
;rutinasensores_v4(mstr-slv).h,1081 :: 		lcd_cmd(_LCD_CLEAR);
0x9834	0x0E01      	MOVLW       1
0x9836	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x9838	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1082 :: 		return debugEstadoB = ESPERA;
0x983C	0x0101      	MOVLB       1
0x983E	0x6B3D      	CLRF        _debugEstadoB, 1
0x9840	0x6A00      	CLRF        R0 
0x9842	0xD01D      	BRA         L_end_entrandoBC
;rutinasensores_v4(mstr-slv).h,1083 :: 		}
L_entrandoBC290:
;rutinasensores_v4(mstr-slv).h,1084 :: 		if((!SENSOR2 & !SENSOR6)){
0x9844	0xB883      	BTFSC       PORTD, 4 
0x9846	0xD002      	BRA         L__entrandoBC1374
0x9848	0x8001      	BSF         R1, 0 
0x984A	0xD001      	BRA         L__entrandoBC1375
L__entrandoBC1374:
0x984C	0x9001      	BCF         R1, 0 
L__entrandoBC1375:
0x984E	0xB281      	BTFSC       PORTB, 1 
0x9850	0xD002      	BRA         L__entrandoBC1376
0x9852	0x80D8      	BSF         STATUS, 0 
0x9854	0xD001      	BRA         L__entrandoBC1377
L__entrandoBC1376:
0x9856	0x90D8      	BCF         STATUS, 0 
L__entrandoBC1377:
0x9858	0xA001      	BTFSS       R1, 0 
0x985A	0xD003      	BRA         L__entrandoBC1378
0x985C	0xE302      	BNC         L__entrandoBC1378
0x985E	0x8001      	BSF         R1, 0 
0x9860	0xD001      	BRA         L__entrandoBC1379
L__entrandoBC1378:
0x9862	0x9001      	BCF         R1, 0 
L__entrandoBC1379:
0x9864	0xA001      	BTFSS       R1, 0 
0x9866	0xD00B      	BRA         L_entrandoBC291
;rutinasensores_v4(mstr-slv).h,1085 :: 		lcd_cmd(_LCD_CLEAR);
0x9868	0x0E01      	MOVLW       1
0x986A	0x0102      	MOVLB       2
0x986C	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x986E	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1086 :: 		return debugEstadoB = TRANSICION;
0x9872	0x0E02      	MOVLW       2
0x9874	0x0101      	MOVLB       1
0x9876	0x6F3D      	MOVWF       _debugEstadoB, 1
0x9878	0x0E02      	MOVLW       2
0x987A	0x6E00      	MOVWF       R0 
0x987C	0xD000      	BRA         L_end_entrandoBC
;rutinasensores_v4(mstr-slv).h,1087 :: 		}
L_entrandoBC291:
;rutinasensores_v4(mstr-slv).h,1088 :: 		}
L_entrandoBC289:
;rutinasensores_v4(mstr-slv).h,1089 :: 		}
L_end_entrandoBC:
0x987E	0x0012      	RETURN      0
; end of _entrandoBC
_saliendoBO:
;rutinasensores_v4(mstr-slv).h,1284 :: 		short saliendoBO(short estado){
;rutinasensores_v4(mstr-slv).h,1285 :: 		if(estado == SALIENDO){
0x9880	0x0102      	MOVLB       2
0x9882	0x5114      	MOVF        FARG_saliendoBO_estado, 0, 1
0x9884	0x0A04      	XORLW       4
0x9886	0xE140      	BNZ         L_saliendoBO325
;rutinasensores_v4(mstr-slv).h,1286 :: 		lcd_outConst(3, 1, "SALIENDO");
0x9888	0x0E03      	MOVLW       3
0x988A	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0x988C	0x0E01      	MOVLW       1
0x988E	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0x9890	0x0E2B      	MOVLW       ?lstr_52_MyProject
0x9892	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0x9894	0x0EDA      	MOVLW       hi_addr(?lstr_52_MyProject)
0x9896	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0x9898	0x0E00      	MOVLW       higher_addr(?lstr_52_MyProject)
0x989A	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0x989C	0xF001EC16  	CALL        _lcd_outConst, 0
;rutinasensores_v4(mstr-slv).h,1287 :: 		if((!SENSOR1 & !SENSOR3)){
0x98A0	0xB881      	BTFSC       PORTB, 4 
0x98A2	0xD002      	BRA         L__saliendoBO1557
0x98A4	0x8001      	BSF         R1, 0 
0x98A6	0xD001      	BRA         L__saliendoBO1558
L__saliendoBO1557:
0x98A8	0x9001      	BCF         R1, 0 
L__saliendoBO1558:
0x98AA	0xB481      	BTFSC       PORTB, 2 
0x98AC	0xD002      	BRA         L__saliendoBO1559
0x98AE	0x80D8      	BSF         STATUS, 0 
0x98B0	0xD001      	BRA         L__saliendoBO1560
L__saliendoBO1559:
0x98B2	0x90D8      	BCF         STATUS, 0 
L__saliendoBO1560:
0x98B4	0xA001      	BTFSS       R1, 0 
0x98B6	0xD003      	BRA         L__saliendoBO1561
0x98B8	0xE302      	BNC         L__saliendoBO1561
0x98BA	0x8001      	BSF         R1, 0 
0x98BC	0xD001      	BRA         L__saliendoBO1562
L__saliendoBO1561:
0x98BE	0x9001      	BCF         R1, 0 
L__saliendoBO1562:
0x98C0	0xA001      	BTFSS       R1, 0 
0x98C2	0xD00A      	BRA         L_saliendoBO326
;rutinasensores_v4(mstr-slv).h,1288 :: 		lcd_cmd(_LCD_CLEAR);
0x98C4	0x0E01      	MOVLW       1
0x98C6	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x98C8	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1289 :: 		return debugEstadoB = TRANSICIONS;
0x98CC	0x0E08      	MOVLW       8
0x98CE	0x0101      	MOVLB       1
0x98D0	0x6F3D      	MOVWF       _debugEstadoB, 1
0x98D2	0x0E08      	MOVLW       8
0x98D4	0x6E00      	MOVWF       R0 
0x98D6	0xD018      	BRA         L_end_saliendoBO
;rutinasensores_v4(mstr-slv).h,1290 :: 		}
L_saliendoBO326:
;rutinasensores_v4(mstr-slv).h,1291 :: 		if((SENSOR2 & SENSOR4 & SENSOR6)){
0x98D8	0xA883      	BTFSS       PORTD, 4 
0x98DA	0xD004      	BRA         L__saliendoBO1563
0x98DC	0xA681      	BTFSS       PORTB, 3 
0x98DE	0xD002      	BRA         L__saliendoBO1563
0x98E0	0x80D8      	BSF         STATUS, 0 
0x98E2	0xD001      	BRA         L__saliendoBO1564
L__saliendoBO1563:
0x98E4	0x90D8      	BCF         STATUS, 0 
L__saliendoBO1564:
0x98E6	0xE304      	BNC         L__saliendoBO1565
0x98E8	0xA281      	BTFSS       PORTB, 1 
0x98EA	0xD002      	BRA         L__saliendoBO1565
0x98EC	0x8001      	BSF         R1, 0 
0x98EE	0xD001      	BRA         L__saliendoBO1566
L__saliendoBO1565:
0x98F0	0x9001      	BCF         R1, 0 
L__saliendoBO1566:
0x98F2	0xA001      	BTFSS       R1, 0 
0x98F4	0xD009      	BRA         L_saliendoBO327
;rutinasensores_v4(mstr-slv).h,1292 :: 		lcd_cmd(_LCD_CLEAR);
0x98F6	0x0E01      	MOVLW       1
0x98F8	0x0102      	MOVLB       2
0x98FA	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0x98FC	0xF008EC7A  	CALL        _lcd_cmd, 0
;rutinasensores_v4(mstr-slv).h,1293 :: 		return debugEstadoB = ESPERA;
0x9900	0x0101      	MOVLB       1
0x9902	0x6B3D      	CLRF        _debugEstadoB, 1
0x9904	0x6A00      	CLRF        R0 
0x9906	0xD000      	BRA         L_end_saliendoBO
;rutinasensores_v4(mstr-slv).h,1294 :: 		}
L_saliendoBO327:
;rutinasensores_v4(mstr-slv).h,1295 :: 		}
L_saliendoBO325:
;rutinasensores_v4(mstr-slv).h,1296 :: 		}
L_end_saliendoBO:
0x9908	0x0012      	RETURN      0
; end of _saliendoBO
_IntToStrWithZeros:
;__Lib_Conversions.c,174 :: 		
;__Lib_Conversions.c,179 :: 		
0x990A	0x0102      	MOVLB       2
0x990C	0x6B0F      	CLRF        IntToStrWithZeros_len_L0, 1
L_IntToStrWithZeros29:
0x990E	0x0E06      	MOVLW       6
0x9910	0x5D0F      	SUBWF       IntToStrWithZeros_len_L0, 0, 1
0x9912	0xE20A      	BC          L_IntToStrWithZeros30
;__Lib_Conversions.c,180 :: 		
0x9914	0x510F      	MOVF        IntToStrWithZeros_len_L0, 0, 1
0x9916	0x250D      	ADDWF       FARG_IntToStrWithZeros_output, 0, 1
0x9918	0x6EE1      	MOVWF       FSR1L 
0x991A	0x0E00      	MOVLW       0
0x991C	0x210E      	ADDWFC      FARG_IntToStrWithZeros_output+1, 0, 1
0x991E	0x6EE2      	MOVWF       FSR1H 
0x9920	0x0E30      	MOVLW       48
0x9922	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Conversions.c,179 :: 		
0x9924	0x2B0F      	INCF        IntToStrWithZeros_len_L0, 1, 1
;__Lib_Conversions.c,180 :: 		
0x9926	0xD7F3      	BRA         L_IntToStrWithZeros29
L_IntToStrWithZeros30:
;__Lib_Conversions.c,182 :: 		
0x9928	0x510F      	MOVF        IntToStrWithZeros_len_L0, 0, 1
0x992A	0x250D      	ADDWF       FARG_IntToStrWithZeros_output, 0, 1
0x992C	0x6EE1      	MOVWF       FSR1L 
0x992E	0x0E00      	MOVLW       0
0x9930	0x210E      	ADDWFC      FARG_IntToStrWithZeros_output+1, 0, 1
0x9932	0x6EE2      	MOVWF       FSR1H 
0x9934	0x6AE6      	CLRF        POSTINC1 
;__Lib_Conversions.c,184 :: 		
0x9936	0x0E00      	MOVLW       0
0x9938	0x190C      	XORWF       FARG_IntToStrWithZeros_input+1, 0, 1
0x993A	0xE102      	BNZ         L__IntToStrWithZeros118
0x993C	0x0E00      	MOVLW       0
0x993E	0x190B      	XORWF       FARG_IntToStrWithZeros_input, 0, 1
L__IntToStrWithZeros118:
0x9940	0xE101      	BNZ         L_IntToStrWithZeros32
;__Lib_Conversions.c,185 :: 		
0x9942	0xD054      	BRA         L_end_IntToStrWithZeros
;__Lib_Conversions.c,186 :: 		
L_IntToStrWithZeros32:
;__Lib_Conversions.c,188 :: 		
0x9944	0x6B00      	CLRF        IntToStrWithZeros_negative_L0, 1
;__Lib_Conversions.c,190 :: 		
0x9946	0x0E80      	MOVLW       128
0x9948	0x190C      	XORWF       FARG_IntToStrWithZeros_input+1, 0, 1
0x994A	0x6E00      	MOVWF       R0 
0x994C	0x0E80      	MOVLW       128
0x994E	0x5C00      	SUBWF       R0, 0 
0x9950	0xE102      	BNZ         L__IntToStrWithZeros119
0x9952	0x0E00      	MOVLW       0
0x9954	0x5D0B      	SUBWF       FARG_IntToStrWithZeros_input, 0, 1
L__IntToStrWithZeros119:
0x9956	0xE20A      	BC          L_IntToStrWithZeros33
;__Lib_Conversions.c,191 :: 		
0x9958	0x0E01      	MOVLW       1
0x995A	0x6F00      	MOVWF       IntToStrWithZeros_negative_L0, 1
;__Lib_Conversions.c,192 :: 		
0x995C	0x510B      	MOVF        FARG_IntToStrWithZeros_input, 0, 1
0x995E	0x0800      	SUBLW       0
0x9960	0x6F10      	MOVWF       IntToStrWithZeros_tmp_L0, 1
0x9962	0xF211C20C  	MOVFF       FARG_IntToStrWithZeros_input+1, IntToStrWithZeros_tmp_L0+1
0x9966	0x0E00      	MOVLW       0
0x9968	0x5711      	SUBFWB      IntToStrWithZeros_tmp_L0+1, 1, 1
;__Lib_Conversions.c,193 :: 		
0x996A	0xD004      	BRA         L_IntToStrWithZeros34
L_IntToStrWithZeros33:
;__Lib_Conversions.c,194 :: 		
0x996C	0xF210C20B  	MOVFF       FARG_IntToStrWithZeros_input, IntToStrWithZeros_tmp_L0
0x9970	0xF211C20C  	MOVFF       FARG_IntToStrWithZeros_input+1, IntToStrWithZeros_tmp_L0+1
;__Lib_Conversions.c,195 :: 		
L_IntToStrWithZeros34:
;__Lib_Conversions.c,197 :: 		
0x9974	0x0E05      	MOVLW       5
0x9976	0x6F0F      	MOVWF       IntToStrWithZeros_len_L0, 1
;__Lib_Conversions.c,198 :: 		
L_IntToStrWithZeros35:
0x9978	0x0E00      	MOVLW       0
0x997A	0x1911      	XORWF       IntToStrWithZeros_tmp_L0+1, 0, 1
0x997C	0xE102      	BNZ         L__IntToStrWithZeros120
0x997E	0x0E00      	MOVLW       0
0x9980	0x1910      	XORWF       IntToStrWithZeros_tmp_L0, 0, 1
L__IntToStrWithZeros120:
0x9982	0xE02C      	BZ          L_IntToStrWithZeros36
;__Lib_Conversions.c,199 :: 		
0x9984	0x510F      	MOVF        IntToStrWithZeros_len_L0, 0, 1
0x9986	0x250D      	ADDWF       FARG_IntToStrWithZeros_output, 0, 1
0x9988	0x6F12      	MOVWF       FLOC__IntToStrWithZeros, 1
0x998A	0x0E00      	MOVLW       0
0x998C	0x210E      	ADDWFC      FARG_IntToStrWithZeros_output+1, 0, 1
0x998E	0x6F13      	MOVWF       FLOC__IntToStrWithZeros+1, 1
0x9990	0x0E0A      	MOVLW       10
0x9992	0x6E04      	MOVWF       R4 
0x9994	0x0E00      	MOVLW       0
0x9996	0x6E05      	MOVWF       R5 
0x9998	0xF000C210  	MOVFF       IntToStrWithZeros_tmp_L0, R0
0x999C	0xF001C211  	MOVFF       IntToStrWithZeros_tmp_L0+1, R1
0x99A0	0xF025EC57  	CALL        _Div_16x16_U, 0
0x99A4	0xF000C008  	MOVFF       R8, R0
0x99A8	0xF001C009  	MOVFF       R9, R1
0x99AC	0x0E30      	MOVLW       48
0x99AE	0x2600      	ADDWF       R0, 1 
0x99B0	0xFFE1C212  	MOVFF       FLOC__IntToStrWithZeros, FSR1L
0x99B4	0xFFE2C213  	MOVFF       FLOC__IntToStrWithZeros+1, FSR1H
0x99B8	0xFFE6C000  	MOVFF       R0, POSTINC1
0x99BC	0x070F      	DECF        IntToStrWithZeros_len_L0, 1, 1
;__Lib_Conversions.c,200 :: 		
0x99BE	0x0E0A      	MOVLW       10
0x99C0	0x6E04      	MOVWF       R4 
0x99C2	0x0E00      	MOVLW       0
0x99C4	0x6E05      	MOVWF       R5 
0x99C6	0xF000C210  	MOVFF       IntToStrWithZeros_tmp_L0, R0
0x99CA	0xF001C211  	MOVFF       IntToStrWithZeros_tmp_L0+1, R1
0x99CE	0xF025EC57  	CALL        _Div_16x16_U, 0
0x99D2	0xF210C000  	MOVFF       R0, IntToStrWithZeros_tmp_L0
0x99D6	0xF211C001  	MOVFF       R1, IntToStrWithZeros_tmp_L0+1
;__Lib_Conversions.c,201 :: 		
0x99DA	0xD7CE      	BRA         L_IntToStrWithZeros35
L_IntToStrWithZeros36:
;__Lib_Conversions.c,203 :: 		
0x99DC	0x5300      	MOVF        IntToStrWithZeros_negative_L0, 1, 1
0x99DE	0xE006      	BZ          L_IntToStrWithZeros37
;__Lib_Conversions.c,204 :: 		
0x99E0	0xFFE1C20D  	MOVFF       FARG_IntToStrWithZeros_output, FSR1L
0x99E4	0xFFE2C20E  	MOVFF       FARG_IntToStrWithZeros_output+1, FSR1H
0x99E8	0x0E2D      	MOVLW       45
0x99EA	0x6EE6      	MOVWF       POSTINC1 
L_IntToStrWithZeros37:
;__Lib_Conversions.c,205 :: 		
L_end_IntToStrWithZeros:
0x99EC	0x0012      	RETURN      0
; end of _IntToStrWithZeros
_strcpy:
;__Lib_CString.c,133 :: 		
;__Lib_CString.c,136 :: 		
0x99EE	0xF004C20B  	MOVFF       FARG_strcpy_to, R4
0x99F2	0xF005C20C  	MOVFF       FARG_strcpy_to+1, R5
;__Lib_CString.c,137 :: 		
L_strcpy34:
0x99F6	0xF002C004  	MOVFF       R4, R2
0x99FA	0xF003C005  	MOVFF       R5, R3
0x99FE	0x4A04      	INFSNZ      R4, 1 
0x9A00	0x2A05      	INCF        R5, 1 
0x9A02	0xF000C20D  	MOVFF       FARG_strcpy_from, R0
0x9A06	0xF001C20E  	MOVFF       FARG_strcpy_from+1, R1
0x9A0A	0x0102      	MOVLB       2
0x9A0C	0x4B0D      	INFSNZ      FARG_strcpy_from, 1, 1
0x9A0E	0x2B0E      	INCF        FARG_strcpy_from+1, 1, 1
0x9A10	0xFFE9C000  	MOVFF       R0, FSR0L
0x9A14	0xFFEAC001  	MOVFF       R1, FSR0H
0x9A18	0xFFE1C002  	MOVFF       R2, FSR1L
0x9A1C	0xFFE2C003  	MOVFF       R3, FSR1H
0x9A20	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x9A24	0xFFE9C002  	MOVFF       R2, FSR0L
0x9A28	0xFFEAC003  	MOVFF       R3, FSR0H
0x9A2C	0x52EE      	MOVF        POSTINC0, 1 
0x9A2E	0xE001      	BZ          L_strcpy35
;__Lib_CString.c,138 :: 		
0x9A30	0xD7E2      	BRA         L_strcpy34
L_strcpy35:
;__Lib_CString.c,139 :: 		
0x9A32	0xF000C20B  	MOVFF       FARG_strcpy_to, R0
0x9A36	0xF001C20C  	MOVFF       FARG_strcpy_to+1, R1
;__Lib_CString.c,140 :: 		
L_end_strcpy:
0x9A3A	0x0012      	RETURN      0
; end of _strcpy
_Get_Fosc_kHz:
;__Lib_Delays.c,1 :: 		unsigned long Get_Fosc_kHz(){
;__Lib_Delays.c,3 :: 		return Clock_kHz();
0x9A3C	0x0E20      	MOVLW       32
0x9A3E	0x6E00      	MOVWF       R0 
0x9A40	0x0E4E      	MOVLW       78
0x9A42	0x6E01      	MOVWF       R1 
0x9A44	0x0E00      	MOVLW       0
0x9A46	0x6E02      	MOVWF       R2 
0x9A48	0x6E03      	MOVWF       R3 
;__Lib_Delays.c,5 :: 		}
L_end_Get_Fosc_kHz:
0x9A4A	0x0012      	RETURN      0
; end of _Get_Fosc_kHz
_I2C_soft_init:
;i2c_soft.h,16 :: 		void I2C_soft_init(){
;i2c_soft.h,18 :: 		I2C_SCLD = 1;
0x9A4C	0x8E95      	BSF         TRISD, 7 
;i2c_soft.h,19 :: 		I2C_SDAD = 1;
0x9A4E	0x8C95      	BSF         TRISD, 6 
;i2c_soft.h,20 :: 		}
L_end_I2C_soft_init:
0x9A50	0x0012      	RETURN      0
; end of _I2C_soft_init
_strcat:
;__Lib_CString.c,94 :: 		
;__Lib_CString.c,97 :: 		
0x9A52	0xF004C20B  	MOVFF       FARG_strcat_to, R4
0x9A56	0xF005C20C  	MOVFF       FARG_strcat_to+1, R5
;__Lib_CString.c,98 :: 		
L_strcat22:
0x9A5A	0xFFE9C004  	MOVFF       R4, FSR0L
0x9A5E	0xFFEAC005  	MOVFF       R5, FSR0H
0x9A62	0x52EE      	MOVF        POSTINC0, 1 
0x9A64	0xE003      	BZ          L_strcat23
;__Lib_CString.c,99 :: 		
0x9A66	0x4A04      	INFSNZ      R4, 1 
0x9A68	0x2A05      	INCF        R5, 1 
0x9A6A	0xD7F7      	BRA         L_strcat22
L_strcat23:
;__Lib_CString.c,100 :: 		
L_strcat24:
0x9A6C	0xF002C004  	MOVFF       R4, R2
0x9A70	0xF003C005  	MOVFF       R5, R3
0x9A74	0x4A04      	INFSNZ      R4, 1 
0x9A76	0x2A05      	INCF        R5, 1 
0x9A78	0xF000C20D  	MOVFF       FARG_strcat_from, R0
0x9A7C	0xF001C20E  	MOVFF       FARG_strcat_from+1, R1
0x9A80	0x0102      	MOVLB       2
0x9A82	0x4B0D      	INFSNZ      FARG_strcat_from, 1, 1
0x9A84	0x2B0E      	INCF        FARG_strcat_from+1, 1, 1
0x9A86	0xFFE9C000  	MOVFF       R0, FSR0L
0x9A8A	0xFFEAC001  	MOVFF       R1, FSR0H
0x9A8E	0xFFE1C002  	MOVFF       R2, FSR1L
0x9A92	0xFFE2C003  	MOVFF       R3, FSR1H
0x9A96	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x9A9A	0xFFE9C002  	MOVFF       R2, FSR0L
0x9A9E	0xFFEAC003  	MOVFF       R3, FSR0H
0x9AA2	0x52EE      	MOVF        POSTINC0, 1 
0x9AA4	0xE001      	BZ          L_strcat25
;__Lib_CString.c,101 :: 		
0x9AA6	0xD7E2      	BRA         L_strcat24
L_strcat25:
;__Lib_CString.c,102 :: 		
0x9AA8	0xF000C20B  	MOVFF       FARG_strcat_to, R0
0x9AAC	0xF001C20C  	MOVFF       FARG_strcat_to+1, R1
;__Lib_CString.c,103 :: 		
L_end_strcat:
0x9AB0	0x0012      	RETURN      0
; end of _strcat
_Mul_32x32_U:
;__Lib_Math.c,1616 :: 		
;__Lib_Math.c,1631 :: 		
0x9AB2	0x0E22      	MOVLW       34
;__Lib_Math.c,1632 :: 		
0x9AB4	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,1633 :: 		
0x9AB6	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,1634 :: 		
0x9AB8	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,1635 :: 		
0x9ABA	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,1636 :: 		
0x9ABC	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,1638 :: 		
_NEXT:
;__Lib_Math.c,1642 :: 		
0x9ABE	0x060C      	DECF        R12, 1, 0
;__Lib_Math.c,1643 :: 		
0x9AC0	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1644 :: 		
0x9AC2	0xD01F      	BRA         _EXIT2
;__Lib_Math.c,1645 :: 		
0x9AC4	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,1647 :: 		
_LOOP:
;__Lib_Math.c,1656 :: 		
0x9AC6	0x320B      	RRCF        R11, 1, 0
;__Lib_Math.c,1657 :: 		
0x9AC8	0x320A      	RRCF        R10, 1, 0
;__Lib_Math.c,1658 :: 		
0x9ACA	0x3209      	RRCF        R9, 1, 0
;__Lib_Math.c,1659 :: 		
0x9ACC	0x3208      	RRCF        R8, 1, 0
;__Lib_Math.c,1660 :: 		
0x9ACE	0x3203      	RRCF        R3, 1, 0
;__Lib_Math.c,1661 :: 		
0x9AD0	0x3202      	RRCF        R2, 1, 0
;__Lib_Math.c,1662 :: 		
0x9AD2	0x3201      	RRCF        R1, 1, 0
;__Lib_Math.c,1663 :: 		
0x9AD4	0x3200      	RRCF        R0, 1, 0
;__Lib_Math.c,1668 :: 		
0x9AD6	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1669 :: 		
0x9AD8	0xD7F2      	BRA         _NEXT
;__Lib_Math.c,1670 :: 		
0x9ADA	0x060C      	DECF        R12, 1, 0
;__Lib_Math.c,1671 :: 		
0x9ADC	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1672 :: 		
0x9ADE	0xD009      	BRA         _EXIT1
;__Lib_Math.c,1679 :: 		
0x9AE0	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1680 :: 		
0x9AE2	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1681 :: 		
0x9AE4	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1684 :: 		
0x9AE6	0x2209      	ADDWFC      R9, 1, 0
;__Lib_Math.c,1685 :: 		
0x9AE8	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1688 :: 		
0x9AEA	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,1689 :: 		
0x9AEC	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1692 :: 		
0x9AEE	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,1694 :: 		
0x9AF0	0xD7EA      	BRA         _LOOP
;__Lib_Math.c,1696 :: 		
_EXIT1:
;__Lib_Math.c,1701 :: 		
0x9AF2	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1702 :: 		
0x9AF4	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1703 :: 		
0x9AF6	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1706 :: 		
0x9AF8	0x2209      	ADDWFC      R9, 1, 0
;__Lib_Math.c,1707 :: 		
0x9AFA	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1710 :: 		
0x9AFC	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,1711 :: 		
0x9AFE	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1714 :: 		
0x9B00	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,1717 :: 		
_EXIT2:
;__Lib_Math.c,1719 :: 		
L_end_Mul_32x32_U:
0x9B02	0x0012      	RETURN      0
; end of _Mul_32x32_U
_Mul_16x16_U:
;__Lib_Math.c,440 :: 		
;__Lib_Math.c,447 :: 		
0x9B04	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,448 :: 		
0x9B06	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,449 :: 		
0x9B08	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,450 :: 		
0x9B0A	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,451 :: 		
0x9B0C	0x0204      	MULWF       R4, 0
;__Lib_Math.c,453 :: 		
0x9B0E	0xF009CFF4  	MOVFF       PRODH, R9
;__Lib_Math.c,454 :: 		
0x9B12	0xF008CFF3  	MOVFF       PRODL, R8
;__Lib_Math.c,455 :: 		
0x9B16	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,456 :: 		
0x9B18	0x0205      	MULWF       R5, 0
;__Lib_Math.c,458 :: 		
0x9B1A	0xF00BCFF4  	MOVFF       PRODH, R11
;__Lib_Math.c,459 :: 		
0x9B1E	0xF00ACFF3  	MOVFF       PRODL, R10
;__Lib_Math.c,460 :: 		
0x9B22	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,461 :: 		
0x9B24	0x0205      	MULWF       R5, 0
;__Lib_Math.c,463 :: 		
0x9B26	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,464 :: 		
0x9B28	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,465 :: 		
0x9B2A	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,466 :: 		
0x9B2C	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,467 :: 		
0x9B2E	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,468 :: 		
0x9B30	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,469 :: 		
0x9B32	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,470 :: 		
0x9B34	0x0204      	MULWF       R4, 0
;__Lib_Math.c,472 :: 		
0x9B36	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,473 :: 		
0x9B38	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,474 :: 		
0x9B3A	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,475 :: 		
0x9B3C	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,476 :: 		
0x9B3E	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,477 :: 		
0x9B40	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,479 :: 		
0x9B42	0xF000C008  	MOVFF       R8, R0
;__Lib_Math.c,480 :: 		
0x9B46	0xF001C009  	MOVFF       R9, R1
;__Lib_Math.c,481 :: 		
0x9B4A	0xF002C00A  	MOVFF       R10, R2
;__Lib_Math.c,482 :: 		
0x9B4E	0xF003C00B  	MOVFF       R11, R3
;__Lib_Math.c,485 :: 		
L_end_Mul_16x16_U:
0x9B52	0x0012      	RETURN      0
; end of _Mul_16x16_U
_strlen:
;__Lib_CString.c,143 :: 		
;__Lib_CString.c,146 :: 		
0x9B54	0xF002C20B  	MOVFF       FARG_strlen_s, R2
0x9B58	0xF003C20C  	MOVFF       FARG_strlen_s+1, R3
;__Lib_CString.c,147 :: 		
L_strlen36:
0x9B5C	0xF000C002  	MOVFF       R2, R0
0x9B60	0xF001C003  	MOVFF       R3, R1
0x9B64	0x4A02      	INFSNZ      R2, 1 
0x9B66	0x2A03      	INCF        R3, 1 
0x9B68	0xFFE9C000  	MOVFF       R0, FSR0L
0x9B6C	0xFFEAC001  	MOVFF       R1, FSR0H
0x9B70	0x52EE      	MOVF        POSTINC0, 1 
0x9B72	0xE001      	BZ          L_strlen37
;__Lib_CString.c,148 :: 		
0x9B74	0xD7F3      	BRA         L_strlen36
L_strlen37:
;__Lib_CString.c,149 :: 		
0x9B76	0x0102      	MOVLB       2
0x9B78	0x510B      	MOVF        FARG_strlen_s, 0, 1
0x9B7A	0x5C02      	SUBWF       R2, 0 
0x9B7C	0x6E00      	MOVWF       R0 
0x9B7E	0x510C      	MOVF        FARG_strlen_s+1, 0, 1
0x9B80	0x5803      	SUBWFB      R3, 0 
0x9B82	0x6E01      	MOVWF       R1 
0x9B84	0x0E01      	MOVLW       1
0x9B86	0x5E00      	SUBWF       R0, 1 
0x9B88	0x0E00      	MOVLW       0
0x9B8A	0x5A01      	SUBWFB      R1, 1 
;__Lib_CString.c,150 :: 		
L_end_strlen:
0x9B8C	0x0012      	RETURN      0
; end of _strlen
_sensorBloqueo:
;rutinasensores_v4(mstr-slv).h,288 :: 		void sensorBloqueo(){
;rutinasensores_v4(mstr-slv).h,289 :: 		if(!Bandera.Par1){
0x9B8E	0x0101      	MOVLB       1
0x9B90	0x53E4      	MOVF        _Bandera, 1, 1
0x9B92	0xE124      	BNZ         L_sensorBloqueo180
;rutinasensores_v4(mstr-slv).h,290 :: 		esperaB(debugEstadoB);
0x9B94	0xF214C13D  	MOVFF       _debugEstadoB, FARG_esperaB_estado
0x9B98	0xF039EC83  	CALL        _esperaB, 0
;rutinasensores_v4(mstr-slv).h,291 :: 		entrandoB(debugEstadoB);
0x9B9C	0xF214C13D  	MOVFF       _debugEstadoB, FARG_entrandoB_estado
0x9BA0	0xF039EC1B  	CALL        _entrandoB, 0
;rutinasensores_v4(mstr-slv).h,292 :: 		transicionEB(debugEstadoB);
0x9BA4	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionEB_estado
0x9BA8	0xF038EC08  	CALL        _transicionEB, 0
;rutinasensores_v4(mstr-slv).h,293 :: 		transicionEntB(debugEstadoB);
0x9BAC	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionEntB_estado
0x9BB0	0xF032ECFD  	CALL        _transicionEntB, 0
;rutinasensores_v4(mstr-slv).h,294 :: 		entroB(debugEstadoB);
0x9BB4	0xF214C13D  	MOVFF       _debugEstadoB, FARG_entroB_estado
0x9BB8	0xF045ECA8  	CALL        _entroB, 0
;rutinasensores_v4(mstr-slv).h,295 :: 		saliendoB(debugEstadoB);
0x9BBC	0xF214C13D  	MOVFF       _debugEstadoB, FARG_saliendoB_estado
0x9BC0	0xF043ECB6  	CALL        _saliendoB, 0
;rutinasensores_v4(mstr-slv).h,296 :: 		transicionSB(debugEstadoB);
0x9BC4	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionSB_estado
0x9BC8	0xF043EC2B  	CALL        _transicionSB, 0
;rutinasensores_v4(mstr-slv).h,297 :: 		transicionSalB(debugEstadoB);
0x9BCC	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionSalB_estado
0x9BD0	0xF03AEC6B  	CALL        _transicionSalB, 0
;rutinasensores_v4(mstr-slv).h,298 :: 		salioB(debugEstadoB);
0x9BD4	0xF214C13D  	MOVFF       _debugEstadoB, FARG_salioB_estado
0x9BD8	0xF03CEC62  	CALL        _salioB, 0
;rutinasensores_v4(mstr-slv).h,299 :: 		}
L_sensorBloqueo180:
;rutinasensores_v4(mstr-slv).h,300 :: 		}
L_end_sensorBloqueo:
0x9BDC	0x0012      	RETURN      0
; end of _sensorBloqueo
_UART1_Read:
;__Lib_UART_c67.c,39 :: 		
;__Lib_UART_c67.c,42 :: 		
0x9BDE	0xF001CFAE  	MOVFF       RCREG, R1
;__Lib_UART_c67.c,43 :: 		
0x9BE2	0xA2AB      	BTFSS       RCSTA, 1 
0x9BE4	0xD002      	BRA         L_UART1_Read2
;__Lib_UART_c67.c,44 :: 		
0x9BE6	0x98AB      	BCF         RCSTA, 4 
;__Lib_UART_c67.c,45 :: 		
0x9BE8	0x88AB      	BSF         RCSTA, 4 
;__Lib_UART_c67.c,46 :: 		
L_UART1_Read2:
;__Lib_UART_c67.c,47 :: 		
0x9BEA	0xF000C001  	MOVFF       R1, R0
;__Lib_UART_c67.c,48 :: 		
L_end_UART1_Read:
0x9BEE	0x0012      	RETURN      0
; end of _UART1_Read
_UART1_Data_Ready:
;__Lib_UART_c67.c,34 :: 		
;__Lib_UART_c67.c,35 :: 		
0x9BF0	0x0E00      	MOVLW       0
0x9BF2	0xBA9E      	BTFSC       PIR1, 5 
0x9BF4	0x0E01      	MOVLW       1
0x9BF6	0x6E00      	MOVWF       R0 
;__Lib_UART_c67.c,36 :: 		
L_end_UART1_Data_Ready:
0x9BF8	0x0012      	RETURN      0
; end of _UART1_Data_Ready
_Div_32x32_S:
;__Lib_Math.c,942 :: 		
;__Lib_Math.c,955 :: 		
0x9BFA	0x5004      	MOVF        R4, 0 
0x9BFC	0x0A00      	XORLW       0
0x9BFE	0xE112      	BNZ         L_Div_32x32_S6
;__Lib_Math.c,956 :: 		
0x9C00	0x5005      	MOVF        R5, 0 
0x9C02	0x0A00      	XORLW       0
0x9C04	0xE10F      	BNZ         L_Div_32x32_S7
;__Lib_Math.c,957 :: 		
0x9C06	0x5006      	MOVF        R6, 0 
0x9C08	0x0A00      	XORLW       0
0x9C0A	0xE10C      	BNZ         L_Div_32x32_S8
;__Lib_Math.c,958 :: 		
0x9C0C	0x5007      	MOVF        R7, 0 
0x9C0E	0x0A00      	XORLW       0
0x9C10	0xE109      	BNZ         L_Div_32x32_S9
;__Lib_Math.c,959 :: 		
0x9C12	0x0EFF      	MOVLW       255
0x9C14	0x6E00      	MOVWF       R0 
;__Lib_Math.c,960 :: 		
0x9C16	0x0EFF      	MOVLW       255
0x9C18	0x6E01      	MOVWF       R1 
;__Lib_Math.c,961 :: 		
0x9C1A	0x0EFF      	MOVLW       255
0x9C1C	0x6E02      	MOVWF       R2 
;__Lib_Math.c,962 :: 		
0x9C1E	0x0E7F      	MOVLW       127
0x9C20	0x6E03      	MOVWF       R3 
;__Lib_Math.c,963 :: 		
0x9C22	0xD099      	BRA         L_end_Div_32x32_S
;__Lib_Math.c,964 :: 		
L_Div_32x32_S9:
L_Div_32x32_S8:
L_Div_32x32_S7:
L_Div_32x32_S6:
;__Lib_Math.c,968 :: 		
0x9C24	0x6A0C      	CLRF        R12, 0
;__Lib_Math.c,969 :: 		
0x9C26	0xBE07      	BTFSC       R7, 7, 0
;__Lib_Math.c,970 :: 		
0x9C28	0x2A0C      	INCF        R12, 1, 0
;__Lib_Math.c,972 :: 		
0x9C2A	0x6A0D      	CLRF        R13, 0
;__Lib_Math.c,973 :: 		
0x9C2C	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,974 :: 		
0x9C2E	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,975 :: 		
0x9C30	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,976 :: 		
0x9C32	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,977 :: 		
0x9C34	0x5003      	MOVF        R3, 0, 0
;__Lib_Math.c,978 :: 		
0x9C36	0x1002      	IORWF       R2, 0, 0
;__Lib_Math.c,979 :: 		
0x9C38	0x1001      	IORWF       R1, 0, 0
;__Lib_Math.c,980 :: 		
0x9C3A	0x1000      	IORWF       R0, 0, 0
;__Lib_Math.c,981 :: 		
0x9C3C	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,982 :: 		
0x9C3E	0xD085      	BRA         END_ALL
;__Lib_Math.c,986 :: 		
0x9C40	0x5003      	MOVF        R3, 0, 0
;__Lib_Math.c,987 :: 		
0x9C42	0x1807      	XORWF       R7, 0, 0
;__Lib_Math.c,988 :: 		
0x9C44	0x6E0E      	MOVWF       R14, 0
;__Lib_Math.c,989 :: 		
0x9C46	0xBE0E      	BTFSC       R14, 7, 0
;__Lib_Math.c,990 :: 		
0x9C48	0x1E0D      	COMF        R13, 1, 0
;__Lib_Math.c,993 :: 		
0x9C4A	0xAE07      	BTFSS       R7, 7, 0
;__Lib_Math.c,994 :: 		
0x9C4C	0xD00B      	BRA         CA3232S
;__Lib_Math.c,996 :: 		
0x9C4E	0x1E04      	COMF        R4, 1, 0
;__Lib_Math.c,997 :: 		
0x9C50	0x1E05      	COMF        R5, 1, 0
;__Lib_Math.c,998 :: 		
0x9C52	0x1E06      	COMF        R6, 1, 0
;__Lib_Math.c,999 :: 		
0x9C54	0x1E07      	COMF        R7, 1, 0
;__Lib_Math.c,1000 :: 		
0x9C56	0x2A04      	INCF        R4, 1, 0
;__Lib_Math.c,1001 :: 		
0x9C58	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1002 :: 		
0x9C5A	0x2A05      	INCF        R5, 1, 0
;__Lib_Math.c,1003 :: 		
0x9C5C	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1004 :: 		
0x9C5E	0x2A06      	INCF        R6, 1, 0
;__Lib_Math.c,1005 :: 		
0x9C60	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1006 :: 		
0x9C62	0x2A07      	INCF        R7, 1, 0
;__Lib_Math.c,1008 :: 		
CA3232S:
;__Lib_Math.c,1009 :: 		
0x9C64	0xAE03      	BTFSS       R3, 7, 0
;__Lib_Math.c,1010 :: 		
0x9C66	0xD00B      	BRA         C3232SX
;__Lib_Math.c,1012 :: 		
0x9C68	0x1E00      	COMF        R0, 1, 0
;__Lib_Math.c,1013 :: 		
0x9C6A	0x1E01      	COMF        R1, 1, 0
;__Lib_Math.c,1014 :: 		
0x9C6C	0x1E02      	COMF        R2, 1, 0
;__Lib_Math.c,1015 :: 		
0x9C6E	0x1E03      	COMF        R3, 1, 0
;__Lib_Math.c,1016 :: 		
0x9C70	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,1017 :: 		
0x9C72	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1018 :: 		
0x9C74	0x2A01      	INCF        R1, 1, 0
;__Lib_Math.c,1019 :: 		
0x9C76	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1020 :: 		
0x9C78	0x2A02      	INCF        R2, 1, 0
;__Lib_Math.c,1021 :: 		
0x9C7A	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1022 :: 		
0x9C7C	0x2A03      	INCF        R3, 1, 0
;__Lib_Math.c,1024 :: 		
C3232SX:
;__Lib_Math.c,1025 :: 		
0x9C7E	0x5003      	MOVF        R3, 0, 0
;__Lib_Math.c,1026 :: 		
0x9C80	0x1007      	IORWF       R7, 0, 0
;__Lib_Math.c,1027 :: 		
0x9C82	0x6E0E      	MOVWF       R14, 0
;__Lib_Math.c,1028 :: 		
0x9C84	0xBE0E      	BTFSC       R14, 7, 0
;__Lib_Math.c,1029 :: 		
0x9C86	0xD01D      	BRA         C3232SX1
;__Lib_Math.c,1030 :: 		
C3232S:
;__Lib_Math.c,1034 :: 		
0x9C88	0xF036ECDC  	CALL        _SDIV3232L, 0
;__Lib_Math.c,1038 :: 		
0x9C8C	0xBE0C      	BTFSC       R12, 7, 0
;__Lib_Math.c,1039 :: 		
0x9C8E	0xD036      	BRA         C3232SX4
;__Lib_Math.c,1041 :: 		
C3232SOK:
;__Lib_Math.c,1042 :: 		
0x9C90	0xAE0D      	BTFSS       R13, 7, 0
;__Lib_Math.c,1043 :: 		
0x9C92	0xD05B      	BRA         END_ALL
;__Lib_Math.c,1045 :: 		
0x9C94	0x1E00      	COMF        R0, 1, 0
;__Lib_Math.c,1046 :: 		
0x9C96	0x1E01      	COMF        R1, 1, 0
;__Lib_Math.c,1047 :: 		
0x9C98	0x1E02      	COMF        R2, 1, 0
;__Lib_Math.c,1048 :: 		
0x9C9A	0x1E03      	COMF        R3, 1, 0
;__Lib_Math.c,1049 :: 		
0x9C9C	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,1050 :: 		
0x9C9E	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1051 :: 		
0x9CA0	0x2A01      	INCF        R1, 1, 0
;__Lib_Math.c,1052 :: 		
0x9CA2	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1053 :: 		
0x9CA4	0x2A02      	INCF        R2, 1, 0
;__Lib_Math.c,1054 :: 		
0x9CA6	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1055 :: 		
0x9CA8	0x2A03      	INCF        R3, 1, 0
;__Lib_Math.c,1057 :: 		
0x9CAA	0x1E08      	COMF        R8, 1, 0
;__Lib_Math.c,1058 :: 		
0x9CAC	0x1E09      	COMF        R9, 1, 0
;__Lib_Math.c,1059 :: 		
0x9CAE	0x1E0A      	COMF        R10, 1, 0
;__Lib_Math.c,1060 :: 		
0x9CB0	0x1E0B      	COMF        R11, 1, 0
;__Lib_Math.c,1061 :: 		
0x9CB2	0x2A08      	INCF        R8, 1, 0
;__Lib_Math.c,1062 :: 		
0x9CB4	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1063 :: 		
0x9CB6	0x2A09      	INCF        R9, 1, 0
;__Lib_Math.c,1064 :: 		
0x9CB8	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1065 :: 		
0x9CBA	0x2A0A      	INCF        R10, 1, 0
;__Lib_Math.c,1066 :: 		
0x9CBC	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1067 :: 		
0x9CBE	0x2A0B      	INCF        R11, 1, 0
;__Lib_Math.c,1068 :: 		
0x9CC0	0xD044      	BRA         END_ALL
;__Lib_Math.c,1069 :: 		
C3232SX1:
;__Lib_Math.c,1072 :: 		
0x9CC2	0xAE07      	BTFSS       R7, 7, 0
;__Lib_Math.c,1073 :: 		
0x9CC4	0xD015      	BRA         C3232SX3
;__Lib_Math.c,1074 :: 		
0x9CC6	0xBE03      	BTFSC       R3, 7, 0
;__Lib_Math.c,1075 :: 		
0x9CC8	0xD00D      	BRA         C3232SX2
;__Lib_Math.c,1076 :: 		
0x9CCA	0x5003      	MOVF        R3, 0, 0
;__Lib_Math.c,1077 :: 		
0x9CCC	0x6E0B      	MOVWF       R11, 0
;__Lib_Math.c,1078 :: 		
0x9CCE	0x5002      	MOVF        R2, 0, 0
;__Lib_Math.c,1079 :: 		
0x9CD0	0x6E0A      	MOVWF       R10, 0
;__Lib_Math.c,1080 :: 		
0x9CD2	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,1081 :: 		
0x9CD4	0x6E09      	MOVWF       R9, 0
;__Lib_Math.c,1082 :: 		
0x9CD6	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,1083 :: 		
0x9CD8	0x6E08      	MOVWF       R8, 0
;__Lib_Math.c,1084 :: 		
0x9CDA	0x6A03      	CLRF        R3, 0
;__Lib_Math.c,1085 :: 		
0x9CDC	0x6A02      	CLRF        R2, 0
;__Lib_Math.c,1086 :: 		
0x9CDE	0x6A01      	CLRF        R1, 0
;__Lib_Math.c,1087 :: 		
0x9CE0	0x6A00      	CLRF        R0, 0
;__Lib_Math.c,1088 :: 		
0x9CE2	0xD7D6      	BRA         C3232SOK
;__Lib_Math.c,1089 :: 		
C3232SX2:
;__Lib_Math.c,1090 :: 		
0x9CE4	0x6A03      	CLRF        R3, 0
;__Lib_Math.c,1091 :: 		
0x9CE6	0x6A02      	CLRF        R2, 0
;__Lib_Math.c,1092 :: 		
0x9CE8	0x6A01      	CLRF        R1, 0
;__Lib_Math.c,1093 :: 		
0x9CEA	0x6A00      	CLRF        R0, 0
;__Lib_Math.c,1094 :: 		
0x9CEC	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,1095 :: 		
0x9CEE	0x0C00      	RETLW       0
;__Lib_Math.c,1097 :: 		
C3232SX3:
;__Lib_Math.c,1098 :: 		
0x9CF0	0x1E03      	COMF        R3, 1, 0
;__Lib_Math.c,1099 :: 		
0x9CF2	0x1E02      	COMF        R2, 1, 0
;__Lib_Math.c,1100 :: 		
0x9CF4	0x1E01      	COMF        R1, 1, 0
;__Lib_Math.c,1101 :: 		
0x9CF6	0x1E00      	COMF        R0, 1, 0
;__Lib_Math.c,1103 :: 		
0x9CF8	0x8E0C      	BSF         R12, 7, 0
;__Lib_Math.c,1104 :: 		
0x9CFA	0xD7C6      	BRA         C3232S
;__Lib_Math.c,1105 :: 		
C3232SX4:
;__Lib_Math.c,1108 :: 		
0x9CFC	0x2A08      	INCF        R8, 1, 0
;__Lib_Math.c,1109 :: 		
0x9CFE	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1110 :: 		
0x9D00	0x2A09      	INCF        R9, 1, 0
;__Lib_Math.c,1111 :: 		
0x9D02	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1112 :: 		
0x9D04	0x2A0A      	INCF        R10, 1, 0
;__Lib_Math.c,1113 :: 		
0x9D06	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1114 :: 		
0x9D08	0x2A0B      	INCF        R11, 1, 0
;__Lib_Math.c,1115 :: 		
0x9D0A	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1116 :: 		
0x9D0C	0x5C08      	SUBWF       R8, 0, 0
;__Lib_Math.c,1117 :: 		
0x9D0E	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_Math.c,1118 :: 		
0x9D10	0xD7BF      	BRA         C3232SOK
;__Lib_Math.c,1119 :: 		
0x9D12	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1120 :: 		
0x9D14	0x5C09      	SUBWF       R9, 0, 0
;__Lib_Math.c,1121 :: 		
0x9D16	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_Math.c,1122 :: 		
0x9D18	0xD7BB      	BRA         C3232SOK
;__Lib_Math.c,1123 :: 		
0x9D1A	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1124 :: 		
0x9D1C	0x5C0A      	SUBWF       R10, 0, 0
;__Lib_Math.c,1125 :: 		
0x9D1E	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_Math.c,1126 :: 		
0x9D20	0xD7B7      	BRA         C3232SOK
;__Lib_Math.c,1127 :: 		
0x9D22	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1128 :: 		
0x9D24	0x5C0B      	SUBWF       R11, 0, 0
;__Lib_Math.c,1129 :: 		
0x9D26	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_Math.c,1130 :: 		
0x9D28	0xD7B3      	BRA         C3232SOK
;__Lib_Math.c,1131 :: 		
0x9D2A	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,1132 :: 		
0x9D2C	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,1133 :: 		
0x9D2E	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,1134 :: 		
0x9D30	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,1135 :: 		
0x9D32	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,1136 :: 		
0x9D34	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1137 :: 		
0x9D36	0x2A01      	INCF        R1, 1, 0
;__Lib_Math.c,1138 :: 		
0x9D38	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1139 :: 		
0x9D3A	0x2A02      	INCF        R2, 1, 0
;__Lib_Math.c,1140 :: 		
0x9D3C	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1141 :: 		
0x9D3E	0x2A03      	INCF        R3, 1, 0
;__Lib_Math.c,1142 :: 		
0x9D40	0xAE03      	BTFSS       R3, 7, 0
;__Lib_Math.c,1143 :: 		
0x9D42	0xD7A6      	BRA         C3232SOK
;__Lib_Math.c,1144 :: 		
0x9D44	0x6A0E      	CLRF        R14, 0
;__Lib_Math.c,1145 :: 		
0x9D46	0x880E      	BSF         R14, 4, 0
;__Lib_Math.c,1146 :: 		
0x9D48	0x0CFF      	RETLW       255
;__Lib_Math.c,1147 :: 		
END_ALL:
;__Lib_Math.c,1148 :: 		
0x9D4A	0x6A0E      	CLRF        R14, 0
;__Lib_Math.c,1149 :: 		
0x9D4C	0xA00C      	BTFSS       R12, 0, 0
;__Lib_Math.c,1150 :: 		
0x9D4E	0xD002      	BRA         avoid_comfrem
;__Lib_Math.c,1153 :: 		
0x9D50	0xF03AECFB  	CALL        _COMFREM, 0
;__Lib_Math.c,1155 :: 		
avoid_comfrem:
;__Lib_Math.c,1156 :: 		
0x9D54	0x0F00      	ADDLW       0
;__Lib_Math.c,1158 :: 		
L_end_Div_32x32_S:
0x9D56	0x0012      	RETURN      0
; end of _Div_32x32_S
_WordToStrWithZeros:
;__Lib_Conversions.c,103 :: 		
;__Lib_Conversions.c,106 :: 		
0x9D58	0x0102      	MOVLB       2
0x9D5A	0x6B00      	CLRF        WordToStrWithZeros_len_L0, 1
L_WordToStrWithZeros12:
0x9D5C	0x0E05      	MOVLW       5
0x9D5E	0x5D00      	SUBWF       WordToStrWithZeros_len_L0, 0, 1
0x9D60	0xE20A      	BC          L_WordToStrWithZeros13
;__Lib_Conversions.c,107 :: 		
0x9D62	0x5100      	MOVF        WordToStrWithZeros_len_L0, 0, 1
0x9D64	0x250D      	ADDWF       FARG_WordToStrWithZeros_output, 0, 1
0x9D66	0x6EE1      	MOVWF       FSR1L 
0x9D68	0x0E00      	MOVLW       0
0x9D6A	0x210E      	ADDWFC      FARG_WordToStrWithZeros_output+1, 0, 1
0x9D6C	0x6EE2      	MOVWF       FSR1H 
0x9D6E	0x0E30      	MOVLW       48
0x9D70	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Conversions.c,106 :: 		
0x9D72	0x2B00      	INCF        WordToStrWithZeros_len_L0, 1, 1
;__Lib_Conversions.c,107 :: 		
0x9D74	0xD7F3      	BRA         L_WordToStrWithZeros12
L_WordToStrWithZeros13:
;__Lib_Conversions.c,108 :: 		
0x9D76	0x5100      	MOVF        WordToStrWithZeros_len_L0, 0, 1
0x9D78	0x250D      	ADDWF       FARG_WordToStrWithZeros_output, 0, 1
0x9D7A	0x6EE1      	MOVWF       FSR1L 
0x9D7C	0x0E00      	MOVLW       0
0x9D7E	0x210E      	ADDWFC      FARG_WordToStrWithZeros_output+1, 0, 1
0x9D80	0x6EE2      	MOVWF       FSR1H 
0x9D82	0x6AE6      	CLRF        POSTINC1 
0x9D84	0x0700      	DECF        WordToStrWithZeros_len_L0, 1, 1
;__Lib_Conversions.c,110 :: 		
L_WordToStrWithZeros15:
0x9D86	0x0E00      	MOVLW       0
0x9D88	0x190C      	XORWF       FARG_WordToStrWithZeros_input+1, 0, 1
0x9D8A	0xE102      	BNZ         L__WordToStrWithZeros111
0x9D8C	0x0E00      	MOVLW       0
0x9D8E	0x190B      	XORWF       FARG_WordToStrWithZeros_input, 0, 1
L__WordToStrWithZeros111:
0x9D90	0xE02C      	BZ          L_WordToStrWithZeros16
;__Lib_Conversions.c,111 :: 		
0x9D92	0x5100      	MOVF        WordToStrWithZeros_len_L0, 0, 1
0x9D94	0x250D      	ADDWF       FARG_WordToStrWithZeros_output, 0, 1
0x9D96	0x6F0F      	MOVWF       FLOC__WordToStrWithZeros, 1
0x9D98	0x0E00      	MOVLW       0
0x9D9A	0x210E      	ADDWFC      FARG_WordToStrWithZeros_output+1, 0, 1
0x9D9C	0x6F10      	MOVWF       FLOC__WordToStrWithZeros+1, 1
0x9D9E	0x0E0A      	MOVLW       10
0x9DA0	0x6E04      	MOVWF       R4 
0x9DA2	0x0E00      	MOVLW       0
0x9DA4	0x6E05      	MOVWF       R5 
0x9DA6	0xF000C20B  	MOVFF       FARG_WordToStrWithZeros_input, R0
0x9DAA	0xF001C20C  	MOVFF       FARG_WordToStrWithZeros_input+1, R1
0x9DAE	0xF025EC57  	CALL        _Div_16x16_U, 0
0x9DB2	0xF000C008  	MOVFF       R8, R0
0x9DB6	0xF001C009  	MOVFF       R9, R1
0x9DBA	0x0E30      	MOVLW       48
0x9DBC	0x2600      	ADDWF       R0, 1 
0x9DBE	0xFFE1C20F  	MOVFF       FLOC__WordToStrWithZeros, FSR1L
0x9DC2	0xFFE2C210  	MOVFF       FLOC__WordToStrWithZeros+1, FSR1H
0x9DC6	0xFFE6C000  	MOVFF       R0, POSTINC1
0x9DCA	0x0700      	DECF        WordToStrWithZeros_len_L0, 1, 1
;__Lib_Conversions.c,112 :: 		
0x9DCC	0x0E0A      	MOVLW       10
0x9DCE	0x6E04      	MOVWF       R4 
0x9DD0	0x0E00      	MOVLW       0
0x9DD2	0x6E05      	MOVWF       R5 
0x9DD4	0xF000C20B  	MOVFF       FARG_WordToStrWithZeros_input, R0
0x9DD8	0xF001C20C  	MOVFF       FARG_WordToStrWithZeros_input+1, R1
0x9DDC	0xF025EC57  	CALL        _Div_16x16_U, 0
0x9DE0	0xF20BC000  	MOVFF       R0, FARG_WordToStrWithZeros_input
0x9DE4	0xF20CC001  	MOVFF       R1, FARG_WordToStrWithZeros_input+1
;__Lib_Conversions.c,113 :: 		
0x9DE8	0xD7CE      	BRA         L_WordToStrWithZeros15
L_WordToStrWithZeros16:
;__Lib_Conversions.c,114 :: 		
L_end_WordToStrWithZeros:
0x9DEA	0x0012      	RETURN      0
; end of _WordToStrWithZeros
_Soft_UART_Write:
;__Lib_SoftUART.c,102 :: 		
;__Lib_SoftUART.c,104 :: 		
0x9DEC	0x0E01      	MOVLW       1
0x9DEE	0x0102      	MOVLB       2
0x9DF0	0x6F0B      	MOVWF       Soft_UART_Write_mask_L0, 1
;__Lib_SoftUART.c,105 :: 		
0x9DF2	0x0101      	MOVLB       1
0x9DF4	0x51D5      	MOVF        __Lib_SoftUART_InvertMaskRd, 0, 1
0x9DF6	0x0102      	MOVLB       2
0x9DF8	0x1B00      	XORWF       FARG_Soft_UART_Write_udata, 1, 1
;__Lib_SoftUART.c,107 :: 		
0x9DFA	0xFFE9C1D7  	MOVFF       __Lib_SoftUART__port_addr, FSR0L
0x9DFE	0xFFEAC1D8  	MOVFF       __Lib_SoftUART__port_addr+1, FSR0H
;__Lib_SoftUART.c,110 :: 		
0x9E02	0x0101      	MOVLB       1
0x9E04	0x51D5      	MOVF        __Lib_SoftUART_InvertMaskRd, 0, 1
0x9E06	0x0A00      	XORLW       0
0x9E08	0xE003      	BZ          L_Soft_UART_Write13
;__Lib_SoftUART.c,112 :: 		
0x9E0A	0x51DB      	MOVF        __Lib_SoftUART__tx_mask1, 0, 1
0x9E0C	0x12EF      	IORWF       INDF0, 1 
0x9E0E	0xD002      	BRA         L_Soft_UART_Write14
L_Soft_UART_Write13:
;__Lib_SoftUART.c,115 :: 		
0x9E10	0x51DA      	MOVF        __Lib_SoftUART__tx_mask0, 0, 1
0x9E12	0x16EF      	ANDWF       INDF0, 1 
L_Soft_UART_Write14:
;__Lib_SoftUART.c,117 :: 		
0x9E14	0xF214C1CB  	MOVFF       __Lib_SoftUART_FullBit, FARG_Delay_Cyc_cycles_div_by_10
0x9E18	0xF039ECCE  	CALL        _Delay_Cyc, 0
;__Lib_SoftUART.c,119 :: 		
0x9E1C	0x1F00      	COMF        FARG_Soft_UART_Write_udata, 1, 1
;__Lib_SoftUART.c,121 :: 		
L_Soft_UART_Write15:
0x9E1E	0x530B      	MOVF        Soft_UART_Write_mask_L0, 1, 1
0x9E20	0xE01C      	BZ          L_Soft_UART_Write16
;__Lib_SoftUART.c,123 :: 		
0x9E22	0x510B      	MOVF        Soft_UART_Write_mask_L0, 0, 1
0x9E24	0x1500      	ANDWF       FARG_Soft_UART_Write_udata, 0, 1
0x9E26	0x6E00      	MOVWF       R0 
0x9E28	0xE104      	BNZ         L_Soft_UART_Write17
;__Lib_SoftUART.c,124 :: 		
0x9E2A	0x0101      	MOVLB       1
0x9E2C	0x51DB      	MOVF        __Lib_SoftUART__tx_mask1, 0, 1
0x9E2E	0x12EF      	IORWF       INDF0, 1 
0x9E30	0xD003      	BRA         L_Soft_UART_Write18
L_Soft_UART_Write17:
0x9E32	0x0101      	MOVLB       1
;__Lib_SoftUART.c,126 :: 		
0x9E34	0x51DA      	MOVF        __Lib_SoftUART__tx_mask0, 0, 1
0x9E36	0x16EF      	ANDWF       INDF0, 1 
L_Soft_UART_Write18:
;__Lib_SoftUART.c,128 :: 		
0x9E38	0x0102      	MOVLB       2
0x9E3A	0x370B      	RLCF        Soft_UART_Write_mask_L0, 1, 1
0x9E3C	0x910B      	BCF         Soft_UART_Write_mask_L0, 0, 1
;__Lib_SoftUART.c,131 :: 		
0x9E3E	0x0E02      	MOVLW       2
0x9E40	0x0101      	MOVLB       1
0x9E42	0x5DCB      	SUBWF       __Lib_SoftUART_FullBit, 0, 1
0x9E44	0x0102      	MOVLB       2
0x9E46	0x6F14      	MOVWF       FARG_Delay_Cyc_cycles_div_by_10, 1
0x9E48	0xF039ECCE  	CALL        _Delay_Cyc, 0
;__Lib_SoftUART.c,132 :: 		
0x9E4C	0x0000      	NOP
;__Lib_SoftUART.c,133 :: 		
0x9E4E	0x0000      	NOP
;__Lib_SoftUART.c,134 :: 		
0x9E50	0x0000      	NOP
;__Lib_SoftUART.c,135 :: 		
0x9E52	0x0000      	NOP
;__Lib_SoftUART.c,136 :: 		
0x9E54	0x0000      	NOP
;__Lib_SoftUART.c,137 :: 		
0x9E56	0x0000      	NOP
;__Lib_SoftUART.c,138 :: 		
0x9E58	0xD7E2      	BRA         L_Soft_UART_Write15
L_Soft_UART_Write16:
;__Lib_SoftUART.c,140 :: 		
0x9E5A	0x0101      	MOVLB       1
0x9E5C	0x51D5      	MOVF        __Lib_SoftUART_InvertMaskRd, 0, 1
0x9E5E	0x0A00      	XORLW       0
0x9E60	0xE003      	BZ          L_Soft_UART_Write19
;__Lib_SoftUART.c,142 :: 		
0x9E62	0x51DA      	MOVF        __Lib_SoftUART__tx_mask0, 0, 1
0x9E64	0x16EF      	ANDWF       INDF0, 1 
0x9E66	0xD002      	BRA         L_Soft_UART_Write20
L_Soft_UART_Write19:
;__Lib_SoftUART.c,145 :: 		
0x9E68	0x51DB      	MOVF        __Lib_SoftUART__tx_mask1, 0, 1
0x9E6A	0x12EF      	IORWF       INDF0, 1 
L_Soft_UART_Write20:
;__Lib_SoftUART.c,147 :: 		
0x9E6C	0xF214C1CB  	MOVFF       __Lib_SoftUART_FullBit, FARG_Delay_Cyc_cycles_div_by_10
0x9E70	0xF039ECCE  	CALL        _Delay_Cyc, 0
;__Lib_SoftUART.c,149 :: 		
L_end_Soft_UART_Write:
0x9E74	0x0012      	RETURN      0
; end of _Soft_UART_Write
_UART1_Tx_Idle:
;__Lib_UART_c67.c,52 :: 		
;__Lib_UART_c67.c,53 :: 		
0x9E76	0x0E00      	MOVLW       0
0x9E78	0xB2AC      	BTFSC       TXSTA, 1 
0x9E7A	0x0E01      	MOVLW       1
0x9E7C	0x6E00      	MOVWF       R0 
;__Lib_UART_c67.c,54 :: 		
L_end_UART1_Tx_Idle:
0x9E7E	0x0012      	RETURN      0
; end of _UART1_Tx_Idle
_sensorBloqueoO:
;rutinasensores_v4(mstr-slv).h,344 :: 		void sensorBloqueoO(){
;rutinasensores_v4(mstr-slv).h,345 :: 		if(!Bandera.Par3){
0x9E80	0x0101      	MOVLB       1
0x9E82	0x53E6      	MOVF        _Bandera+2, 1, 1
0x9E84	0xE123      	BNZ         L_sensorBloqueoO184
;rutinasensores_v4(mstr-slv).h,346 :: 		esperaBO(debugEstadoB);
0x9E86	0xF214C13D  	MOVFF       _debugEstadoB, FARG_esperaBO_estado
0x9E8A	0xF040ECCF  	CALL        _esperaBO, 0
;rutinasensores_v4(mstr-slv).h,347 :: 		entrandoBO(debugEstadoB);
0x9E8E	0xF214C13D  	MOVFF       _debugEstadoB, FARG_entrandoBO_estado
0x9E92	0xF044ECD8  	CALL        _entrandoBO, 0
;rutinasensores_v4(mstr-slv).h,348 :: 		transicionEBO(debugEstadoB);
0x9E96	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionEBO_estado
0x9E9A	0xF042EC3A  	CALL        _transicionEBO, 0
;rutinasensores_v4(mstr-slv).h,349 :: 		transicionEntBO(debugEstadoB);
0x9E9E	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionEntBO_estado
0x9EA2	0xF03FEC78  	CALL        _transicionEntBO, 0
;rutinasensores_v4(mstr-slv).h,350 :: 		entroBO(debugEstadoB);
0x9EA6	0xF214C13D  	MOVFF       _debugEstadoB, FARG_entroBO_estado
0x9EAA	0xF03FECBF  	CALL        _entroBO, 0
;rutinasensores_v4(mstr-slv).h,351 :: 		saliendoBO(debugEstadoB);
0x9EAE	0xF214C13D  	MOVFF       _debugEstadoB, FARG_saliendoBO_estado
0x9EB2	0xDCE6      	RCALL       _saliendoBO
;rutinasensores_v4(mstr-slv).h,352 :: 		transicionSBO(debugEstadoB);
0x9EB4	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionSBO_estado
0x9EB8	0xF042ECA0  	CALL        _transicionSBO, 0
;rutinasensores_v4(mstr-slv).h,353 :: 		transicionSalBO(debugEstadoB);
0x9EBC	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionSalBO_estado
0x9EC0	0xF044EC8D  	CALL        _transicionSalBO, 0
;rutinasensores_v4(mstr-slv).h,354 :: 		salioBO(debugEstadoB);
0x9EC4	0xF214C13D  	MOVFF       _debugEstadoB, FARG_salioBO_estado
0x9EC8	0xF014ECD8  	CALL        _salioBO, 0
;rutinasensores_v4(mstr-slv).h,355 :: 		}
L_sensorBloqueoO184:
;rutinasensores_v4(mstr-slv).h,356 :: 		}
L_end_sensorBloqueoO:
0x9ECC	0x0012      	RETURN      0
; end of _sensorBloqueoO
_sensorBloqueoPar7:
;rutinasensores_v4(mstr-slv).h,432 :: 		void sensorBloqueoPar7(){
;rutinasensores_v4(mstr-slv).h,433 :: 		esperaBP7(debugEstadoB);
0x9ECE	0xF214C13D  	MOVFF       _debugEstadoB, FARG_esperaBP7_estado
0x9ED2	0xF024EC47  	CALL        _esperaBP7, 0
;rutinasensores_v4(mstr-slv).h,434 :: 		entrandoBP7(debugEstadoB);
0x9ED6	0xF214C13D  	MOVFF       _debugEstadoB, FARG_entrandoBP7_estado
0x9EDA	0xF024EC12  	CALL        _entrandoBP7, 0
;rutinasensores_v4(mstr-slv).h,435 :: 		transicionEBP7(debugEstadoB);
0x9EDE	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionEBP7_estado
0x9EE2	0xF022EC2A  	CALL        _transicionEBP7, 0
;rutinasensores_v4(mstr-slv).h,436 :: 		transicionEntBP7(debugEstadoB);
0x9EE6	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionEntBP7_estado
0x9EEA	0xF020EC54  	CALL        _transicionEntBP7, 0
;rutinasensores_v4(mstr-slv).h,437 :: 		entroBP7(debugEstadoB);
0x9EEE	0xF214C13D  	MOVFF       _debugEstadoB, FARG_entroBP7_estado
0x9EF2	0xF020ECAC  	CALL        _entroBP7, 0
;rutinasensores_v4(mstr-slv).h,438 :: 		saliendoBP7(debugEstadoB);
0x9EF6	0xF214C13D  	MOVFF       _debugEstadoB, FARG_saliendoBP7_estado
0x9EFA	0xF021ECC9  	CALL        _saliendoBP7, 0
;rutinasensores_v4(mstr-slv).h,439 :: 		transicionSBP7(debugEstadoB);
0x9EFE	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionSBP7_estado
0x9F02	0xF02AEC23  	CALL        _transicionSBP7, 0
;rutinasensores_v4(mstr-slv).h,440 :: 		transicionSalBP7(debugEstadoB);
0x9F06	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionSalBP7_estado
0x9F0A	0xF026EC39  	CALL        _transicionSalBP7, 0
;rutinasensores_v4(mstr-slv).h,441 :: 		salioBP7(debugEstadoB);
0x9F0E	0xF214C13D  	MOVFF       _debugEstadoB, FARG_salioBP7_estado
0x9F12	0xF01FEC33  	CALL        _salioBP7, 0
;rutinasensores_v4(mstr-slv).h,442 :: 		}
L_end_sensorBloqueoPar7:
0x9F16	0x0012      	RETURN      0
; end of _sensorBloqueoPar7
_sensorBloqueoPar2:
;rutinasensores_v4(mstr-slv).h,384 :: 		void sensorBloqueoPar2(){
;rutinasensores_v4(mstr-slv).h,385 :: 		esperaBP2(debugEstadoB);
0x9F18	0xF214C13D  	MOVFF       _debugEstadoB, FARG_esperaBP2_estado
0x9F1C	0xF01EEC38  	CALL        _esperaBP2, 0
;rutinasensores_v4(mstr-slv).h,386 :: 		entrandoBP2(debugEstadoB);
0x9F20	0xF214C13D  	MOVFF       _debugEstadoB, FARG_entrandoBP2_estado
0x9F24	0xF01CEC9D  	CALL        _entrandoBP2, 0
;rutinasensores_v4(mstr-slv).h,387 :: 		transicionEBP2(debugEstadoB);
0x9F28	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionEBP2_estado
0x9F2C	0xF00FECB6  	CALL        _transicionEBP2, 0
;rutinasensores_v4(mstr-slv).h,388 :: 		transicionEntBP2(debugEstadoB);
0x9F30	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionEntBP2_estado
0x9F34	0xF00EEC19  	CALL        _transicionEntBP2, 0
;rutinasensores_v4(mstr-slv).h,389 :: 		entroBP2(debugEstadoB);
0x9F38	0xF214C13D  	MOVFF       _debugEstadoB, FARG_entroBP2_estado
0x9F3C	0xF012EC3A  	CALL        _entroBP2, 0
;rutinasensores_v4(mstr-slv).h,390 :: 		saliendoBP2(debugEstadoB);
0x9F40	0xF214C13D  	MOVFF       _debugEstadoB, FARG_saliendoBP2_estado
0x9F44	0xF011EC7E  	CALL        _saliendoBP2, 0
;rutinasensores_v4(mstr-slv).h,391 :: 		transicionSBP2(debugEstadoB);
0x9F48	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionSBP2_estado
0x9F4C	0xF014EC28  	CALL        _transicionSBP2, 0
;rutinasensores_v4(mstr-slv).h,392 :: 		transicionSalBP2(debugEstadoB);
0x9F50	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionSalBP2_estado
0x9F54	0xF013ECE8  	CALL        _transicionSalBP2, 0
;rutinasensores_v4(mstr-slv).h,393 :: 		salioBP2(debugEstadoB);
0x9F58	0xF214C13D  	MOVFF       _debugEstadoB, FARG_salioBP2_estado
0x9F5C	0xF02AECA5  	CALL        _salioBP2, 0
;rutinasensores_v4(mstr-slv).h,394 :: 		}
L_end_sensorBloqueoPar2:
0x9F60	0x0012      	RETURN      0
; end of _sensorBloqueoPar2
_sensorBloqueoD:
;rutinasensores_v4(mstr-slv).h,302 :: 		void sensorBloqueoD(){
;rutinasensores_v4(mstr-slv).h,303 :: 		if(!Bandera.Par1){
0x9F62	0x0101      	MOVLB       1
0x9F64	0x53E4      	MOVF        _Bandera, 1, 1
0x9F66	0xE124      	BNZ         L_sensorBloqueoD181
;rutinasensores_v4(mstr-slv).h,304 :: 		esperaBD(debugEstadoB);
0x9F68	0xF214C13D  	MOVFF       _debugEstadoB, FARG_esperaBD_estado
0x9F6C	0xF03CEC17  	CALL        _esperaBD, 0
;rutinasensores_v4(mstr-slv).h,305 :: 		entrandoBD(debugEstadoB);
0x9F70	0xF214C13D  	MOVFF       _debugEstadoB, FARG_entrandoBD_estado
0x9F74	0xF03AECB6  	CALL        _entrandoBD, 0
;rutinasensores_v4(mstr-slv).h,306 :: 		transicionEBD(debugEstadoB);
0x9F78	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionEBD_estado
0x9F7C	0xF039ECE0  	CALL        _transicionEBD, 0
;rutinasensores_v4(mstr-slv).h,307 :: 		transicionEntBD(debugEstadoB);
0x9F80	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionEntBD_estado
0x9F84	0xF048EC2E  	CALL        _transicionEntBD, 0
;rutinasensores_v4(mstr-slv).h,308 :: 		entroBD(debugEstadoB);
0x9F88	0xF214C13D  	MOVFF       _debugEstadoB, FARG_entroBD_estado
0x9F8C	0xF047EC1E  	CALL        _entroBD, 0
;rutinasensores_v4(mstr-slv).h,309 :: 		saliendoBD(debugEstadoB);
0x9F90	0xF214C13D  	MOVFF       _debugEstadoB, FARG_saliendoBD_estado
0x9F94	0xF045EC40  	CALL        _saliendoBD, 0
;rutinasensores_v4(mstr-slv).h,310 :: 		transicionSBD(debugEstadoB);
0x9F98	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionSBD_estado
0x9F9C	0xF032EC4C  	CALL        _transicionSBD, 0
;rutinasensores_v4(mstr-slv).h,311 :: 		transicionSalBD(debugEstadoB);
0x9FA0	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionSalBD_estado
0x9FA4	0xF032EC05  	CALL        _transicionSalBD, 0
;rutinasensores_v4(mstr-slv).h,312 :: 		salioBD(debugEstadoB);
0x9FA8	0xF214C13D  	MOVFF       _debugEstadoB, FARG_salioBD_estado
0x9FAC	0xF033EC4B  	CALL        _salioBD, 0
;rutinasensores_v4(mstr-slv).h,313 :: 		}
L_sensorBloqueoD181:
;rutinasensores_v4(mstr-slv).h,314 :: 		}
L_end_sensorBloqueoD:
0x9FB0	0x0012      	RETURN      0
; end of _sensorBloqueoD
_sensorBloqueoPar3:
;rutinasensores_v4(mstr-slv).h,396 :: 		void sensorBloqueoPar3(){
;rutinasensores_v4(mstr-slv).h,397 :: 		esperaBP3(debugEstadoB);
0x9FB2	0xF214C13D  	MOVFF       _debugEstadoB, FARG_esperaBP3_estado
0x9FB6	0xF02AEC65  	CALL        _esperaBP3, 0
;rutinasensores_v4(mstr-slv).h,398 :: 		entrandoBP3(debugEstadoB);
0x9FBA	0xF214C13D  	MOVFF       _debugEstadoB, FARG_entrandoBP3_estado
0x9FBE	0xF02CEC19  	CALL        _entrandoBP3, 0
;rutinasensores_v4(mstr-slv).h,399 :: 		transicionEBP3(debugEstadoB);
0x9FC2	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionEBP3_estado
0x9FC6	0xF02BECC6  	CALL        _transicionEBP3, 0
;rutinasensores_v4(mstr-slv).h,400 :: 		transicionEntBP3(debugEstadoB);
0x9FCA	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionEntBP3_estado
0x9FCE	0xF00DECD9  	CALL        _transicionEntBP3, 0
;rutinasensores_v4(mstr-slv).h,401 :: 		entroBP3(debugEstadoB);
0x9FD2	0xF214C13D  	MOVFF       _debugEstadoB, FARG_entroBP3_estado
0x9FD6	0xF00CECBF  	CALL        _entroBP3, 0
;rutinasensores_v4(mstr-slv).h,402 :: 		saliendoBP3(debugEstadoB);
0x9FDA	0xF214C13D  	MOVFF       _debugEstadoB, FARG_saliendoBP3_estado
0x9FDE	0xF013ECAA  	CALL        _saliendoBP3, 0
;rutinasensores_v4(mstr-slv).h,403 :: 		transicionSBP3(debugEstadoB);
0x9FE2	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionSBP3_estado
0x9FE6	0xF013EC57  	CALL        _transicionSBP3, 0
;rutinasensores_v4(mstr-slv).h,404 :: 		transicionSalBP3(debugEstadoB);
0x9FEA	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionSalBP3_estado
0x9FEE	0xF00EEC59  	CALL        _transicionSalBP3, 0
;rutinasensores_v4(mstr-slv).h,405 :: 		salioBP3(debugEstadoB);
0x9FF2	0xF214C13D  	MOVFF       _debugEstadoB, FARG_salioBP3_estado
0x9FF6	0xF027ECCC  	CALL        _salioBP3, 0
;rutinasensores_v4(mstr-slv).h,406 :: 		}
L_end_sensorBloqueoPar3:
0x9FFA	0x0012      	RETURN      0
; end of _sensorBloqueoPar3
_sensorBloqueoPar6:
;rutinasensores_v4(mstr-slv).h,420 :: 		void sensorBloqueoPar6(){
;rutinasensores_v4(mstr-slv).h,421 :: 		esperaBP6(debugEstadoB);
0x9FFC	0xF214C13D  	MOVFF       _debugEstadoB, FARG_esperaBP6_estado
0xA000	0xF034EC6B  	CALL        _esperaBP6, 0
;rutinasensores_v4(mstr-slv).h,422 :: 		entrandoBP6(debugEstadoB);
0xA004	0xF214C13D  	MOVFF       _debugEstadoB, FARG_entrandoBP6_estado
0xA008	0xF035ECC1  	CALL        _entrandoBP6, 0
;rutinasensores_v4(mstr-slv).h,423 :: 		transicionEBP6(debugEstadoB);
0xA00C	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionEBP6_estado
0xA010	0xF036EC22  	CALL        _transicionEBP6, 0
;rutinasensores_v4(mstr-slv).h,424 :: 		transicionEntBP6(debugEstadoB);
0xA014	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionEntBP6_estado
0xA018	0xF036EC9F  	CALL        _transicionEntBP6, 0
;rutinasensores_v4(mstr-slv).h,425 :: 		entroBP6(debugEstadoB);
0xA01C	0xF214C13D  	MOVFF       _debugEstadoB, FARG_entroBP6_estado
0xA020	0xF01DEC1B  	CALL        _entroBP6, 0
;rutinasensores_v4(mstr-slv).h,426 :: 		saliendoBP6(debugEstadoB);
0xA024	0xF214C13D  	MOVFF       _debugEstadoB, FARG_saliendoBP6_estado
0xA028	0xF02EEC78  	CALL        _saliendoBP6, 0
;rutinasensores_v4(mstr-slv).h,427 :: 		transicionSBP6(debugEstadoB);
0xA02C	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionSBP6_estado
0xA030	0xF02CECAF  	CALL        _transicionSBP6, 0
;rutinasensores_v4(mstr-slv).h,428 :: 		transicionSalBP6(debugEstadoB);
0xA034	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionSalBP6_estado
0xA038	0xF02CEC57  	CALL        _transicionSalBP6, 0
;rutinasensores_v4(mstr-slv).h,429 :: 		salioBP6(debugEstadoB);
0xA03C	0xF214C13D  	MOVFF       _debugEstadoB, FARG_salioBP6_estado
0xA040	0xF02DEC57  	CALL        _salioBP6, 0
;rutinasensores_v4(mstr-slv).h,430 :: 		}
L_end_sensorBloqueoPar6:
0xA044	0x0012      	RETURN      0
; end of _sensorBloqueoPar6
_sensorBloqueoC:
;rutinasensores_v4(mstr-slv).h,330 :: 		void sensorBloqueoC(){
;rutinasensores_v4(mstr-slv).h,331 :: 		if(!Bandera.Par2){
0xA046	0x0101      	MOVLB       1
0xA048	0x53E5      	MOVF        _Bandera+1, 1, 1
0xA04A	0xE124      	BNZ         L_sensorBloqueoC183
;rutinasensores_v4(mstr-slv).h,332 :: 		esperaBC(debugEstadoB);
0xA04C	0xF214C13D  	MOVFF       _debugEstadoB, FARG_esperaBC_estado
0xA050	0xF04BECB0  	CALL        _esperaBC, 0
;rutinasensores_v4(mstr-slv).h,333 :: 		entrandoBC(debugEstadoB);
0xA054	0xF214C13D  	MOVFF       _debugEstadoB, FARG_entrandoBC_estado
0xA058	0xF04BECFB  	CALL        _entrandoBC, 0
;rutinasensores_v4(mstr-slv).h,334 :: 		transicionEBC(debugEstadoB);
0xA05C	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionEBC_estado
0xA060	0xF03EECA2  	CALL        _transicionEBC, 0
;rutinasensores_v4(mstr-slv).h,335 :: 		transicionEntBC(debugEstadoB);
0xA064	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionEntBC_estado
0xA068	0xF03FEC2D  	CALL        _transicionEntBC, 0
;rutinasensores_v4(mstr-slv).h,336 :: 		entroBC(debugEstadoB);
0xA06C	0xF214C13D  	MOVFF       _debugEstadoB, FARG_entroBC_estado
0xA070	0xF04AEC38  	CALL        _entroBC, 0
;rutinasensores_v4(mstr-slv).h,337 :: 		saliendoBC(debugEstadoB);
0xA074	0xF214C13D  	MOVFF       _debugEstadoB, FARG_saliendoBC_estado
0xA078	0xF04BEC48  	CALL        _saliendoBC, 0
;rutinasensores_v4(mstr-slv).h,338 :: 		transicionSBC(debugEstadoB);
0xA07C	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionSBC_estado
0xA080	0xF046ECB8  	CALL        _transicionSBC, 0
;rutinasensores_v4(mstr-slv).h,339 :: 		transicionSalBC(debugEstadoB);
0xA084	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionSalBC_estado
0xA088	0xF048ECE1  	CALL        _transicionSalBC, 0
;rutinasensores_v4(mstr-slv).h,340 :: 		salioBC(debugEstadoB);
0xA08C	0xF214C13D  	MOVFF       _debugEstadoB, FARG_salioBC_estado
0xA090	0xF041EC1A  	CALL        _salioBC, 0
;rutinasensores_v4(mstr-slv).h,341 :: 		}
L_sensorBloqueoC183:
;rutinasensores_v4(mstr-slv).h,342 :: 		}
L_end_sensorBloqueoC:
0xA094	0x0012      	RETURN      0
; end of _sensorBloqueoC
_memset:
;__Lib_CString.c,84 :: 		
;__Lib_CString.c,87 :: 		
0xA096	0xF002C20B  	MOVFF       FARG_memset_p1, R2
0xA09A	0xF003C20C  	MOVFF       FARG_memset_p1+1, R3
;__Lib_CString.c,88 :: 		
L_memset20:
0xA09E	0xF000C20E  	MOVFF       FARG_memset_n, R0
0xA0A2	0xF001C20F  	MOVFF       FARG_memset_n+1, R1
0xA0A6	0x0E01      	MOVLW       1
0xA0A8	0x0102      	MOVLB       2
0xA0AA	0x5F0E      	SUBWF       FARG_memset_n, 1, 1
0xA0AC	0x0E00      	MOVLW       0
0xA0AE	0x5B0F      	SUBWFB      FARG_memset_n+1, 1, 1
0xA0B0	0x5000      	MOVF        R0, 0 
0xA0B2	0x1001      	IORWF       R1, 0 
0xA0B4	0xE009      	BZ          L_memset21
;__Lib_CString.c,89 :: 		
0xA0B6	0xFFE1C002  	MOVFF       R2, FSR1L
0xA0BA	0xFFE2C003  	MOVFF       R3, FSR1H
0xA0BE	0xFFE6C20D  	MOVFF       FARG_memset_character, POSTINC1
0xA0C2	0x4A02      	INFSNZ      R2, 1 
0xA0C4	0x2A03      	INCF        R3, 1 
0xA0C6	0xD7EB      	BRA         L_memset20
L_memset21:
;__Lib_CString.c,90 :: 		
0xA0C8	0xF000C20B  	MOVFF       FARG_memset_p1, R0
0xA0CC	0xF001C20C  	MOVFF       FARG_memset_p1+1, R1
;__Lib_CString.c,91 :: 		
L_end_memset:
0xA0D0	0x0012      	RETURN      0
; end of _memset
_sensorBloqueoT:
;rutinasensores_v4(mstr-slv).h,316 :: 		void sensorBloqueoT(){
;rutinasensores_v4(mstr-slv).h,317 :: 		if(!Bandera.Par2){
0xA0D2	0x0101      	MOVLB       1
0xA0D4	0x53E5      	MOVF        _Bandera+1, 1, 1
0xA0D6	0xE124      	BNZ         L_sensorBloqueoT182
;rutinasensores_v4(mstr-slv).h,318 :: 		esperaBT(debugEstadoB);
0xA0D8	0xF214C13D  	MOVFF       _debugEstadoB, FARG_esperaBT_estado
0xA0DC	0xF032ECB2  	CALL        _esperaBT, 0
;rutinasensores_v4(mstr-slv).h,319 :: 		entrandoBT(debugEstadoB);
0xA0E0	0xF214C13D  	MOVFF       _debugEstadoB, FARG_entrandoBT_estado
0xA0E4	0xF048EC79  	CALL        _entrandoBT, 0
;rutinasensores_v4(mstr-slv).h,320 :: 		transicionEBT(debugEstadoB);
0xA0E8	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionEBT_estado
0xA0EC	0xF038ECB5  	CALL        _transicionEBT, 0
;rutinasensores_v4(mstr-slv).h,321 :: 		transicionEntBT(debugEstadoB);
0xA0F0	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionEntBT_estado
0xA0F4	0xF038EC6E  	CALL        _transicionEntBT, 0
;rutinasensores_v4(mstr-slv).h,322 :: 		entroBT(debugEstadoB);
0xA0F8	0xF214C13D  	MOVFF       _debugEstadoB, FARG_entroBT_estado
0xA0FC	0xF03BEC07  	CALL        _entroBT, 0
;rutinasensores_v4(mstr-slv).h,323 :: 		saliendoBT(debugEstadoB);
0xA100	0xF214C13D  	MOVFF       _debugEstadoB, FARG_saliendoBT_estado
0xA104	0xF035EC7C  	CALL        _saliendoBT, 0
;rutinasensores_v4(mstr-slv).h,324 :: 		transicionSBT(debugEstadoB);
0xA108	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionSBT_estado
0xA10C	0xF034ECF1  	CALL        _transicionSBT, 0
;rutinasensores_v4(mstr-slv).h,325 :: 		transicionSalBT(debugEstadoB);
0xA110	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionSalBT_estado
0xA114	0xF034ECA6  	CALL        _transicionSalBT, 0
;rutinasensores_v4(mstr-slv).h,326 :: 		salioBT(debugEstadoB);
0xA118	0xF214C13D  	MOVFF       _debugEstadoB, FARG_salioBT_estado
0xA11C	0xF03DEC82  	CALL        _salioBT, 0
;rutinasensores_v4(mstr-slv).h,327 :: 		}
L_sensorBloqueoT182:
;rutinasensores_v4(mstr-slv).h,328 :: 		}
L_end_sensorBloqueoT:
0xA120	0x0012      	RETURN      0
; end of _sensorBloqueoT
_sensorNoBloqueo:
;rutinasensores_v4(mstr-slv).h,265 :: 		void sensorNoBloqueo(){
;rutinasensores_v4(mstr-slv).h,266 :: 		espera(debugEstado);
0xA122	0xF214C0E4  	MOVFF       _debugEstado, FARG_espera_estado
0xA126	0xF016ECFA  	CALL        _espera, 0
;rutinasensores_v4(mstr-slv).h,267 :: 		if(permanencia){
0xA12A	0x0100      	MOVLB       0
0xA12C	0x53E3      	MOVF        _permanencia, 1, 1
0xA12E	0xE026      	BZ          L_sensorNoBloqueo176
;rutinasensores_v4(mstr-slv).h,268 :: 		if(empiezaEntrada){
0xA130	0x53E6      	MOVF        _empiezaEntrada, 1, 1
0xA132	0xE011      	BZ          L_sensorNoBloqueo177
;rutinasensores_v4(mstr-slv).h,269 :: 		entrando(debugEstado);
0xA134	0xF214C0E4  	MOVFF       _debugEstado, FARG_entrando_estado
0xA138	0xF016EC5E  	CALL        _entrando, 0
;rutinasensores_v4(mstr-slv).h,270 :: 		transicionE(debugEstado);
0xA13C	0xF214C0E4  	MOVFF       _debugEstado, FARG_transicionE_estado
0xA140	0xF018EC9C  	CALL        _transicionE, 0
;rutinasensores_v4(mstr-slv).h,271 :: 		transicionEnt(debugEstado);
0xA144	0xF214C0E4  	MOVFF       _debugEstado, FARG_transicionEnt_estado
0xA148	0xF01EEC78  	CALL        _transicionEnt, 0
;rutinasensores_v4(mstr-slv).h,272 :: 		entro(debugEstado);
0xA14C	0xF214C0E4  	MOVFF       _debugEstado, FARG_entro_estado
0xA150	0xF01BEC27  	CALL        _entro, 0
;rutinasensores_v4(mstr-slv).h,273 :: 		}
0xA154	0xD013      	BRA         L_sensorNoBloqueo178
L_sensorNoBloqueo177:
;rutinasensores_v4(mstr-slv).h,274 :: 		else if(empiezaSalida){
0xA156	0x0100      	MOVLB       0
0xA158	0x53E5      	MOVF        _empiezaSalida, 1, 1
0xA15A	0xE010      	BZ          L_sensorNoBloqueo179
;rutinasensores_v4(mstr-slv).h,275 :: 		saliendo(debugEstado);
0xA15C	0xF214C0E4  	MOVFF       _debugEstado, FARG_saliendo_estado
0xA160	0xF01AEC8B  	CALL        _saliendo, 0
;rutinasensores_v4(mstr-slv).h,276 :: 		transicionS(debugEstado);
0xA164	0xF214C0E4  	MOVFF       _debugEstado, FARG_transicionS_estado
0xA168	0xF01CEC39  	CALL        _transicionS, 0
;rutinasensores_v4(mstr-slv).h,277 :: 		transicionSal(debugEstado);
0xA16C	0xF214C0E4  	MOVFF       _debugEstado, FARG_transicionSal_estado
0xA170	0xF01AEC20  	CALL        _transicionSal, 0
;rutinasensores_v4(mstr-slv).h,278 :: 		salio(debugEstado);
0xA174	0xF214C0E4  	MOVFF       _debugEstado, FARG_salio_estado
0xA178	0xF010EC5C  	CALL        _salio, 0
;rutinasensores_v4(mstr-slv).h,279 :: 		}
L_sensorNoBloqueo179:
L_sensorNoBloqueo178:
;rutinasensores_v4(mstr-slv).h,280 :: 		}
L_sensorNoBloqueo176:
;rutinasensores_v4(mstr-slv).h,282 :: 		}
L_end_sensorNoBloqueo:
0xA17C	0x0012      	RETURN      0
; end of _sensorNoBloqueo
_UART1_Write_Text:
;__Lib_UART_c67.c,66 :: 		
;__Lib_UART_c67.c,67 :: 		
0xA17E	0x0102      	MOVLB       2
0xA180	0x6B0D      	CLRF        UART1_Write_Text_counter_L0, 1
;__Lib_UART_c67.c,69 :: 		
0xA182	0xFFE9C20B  	MOVFF       FARG_UART1_Write_Text_uart_text, FSR0L
0xA186	0xFFEAC20C  	MOVFF       FARG_UART1_Write_Text_uart_text+1, FSR0H
0xA18A	0xF200CFEE  	MOVFF       POSTINC0, UART1_Write_Text_data__L0
;__Lib_UART_c67.c,70 :: 		
L_UART1_Write_Text5:
0xA18E	0x5100      	MOVF        UART1_Write_Text_data__L0, 0, 1
0xA190	0x0A00      	XORLW       0
0xA192	0xE00F      	BZ          L_UART1_Write_Text6
;__Lib_UART_c67.c,71 :: 		
0xA194	0xF214C200  	MOVFF       UART1_Write_Text_data__L0, FARG_UART1_Write_data_
0xA198	0xF033EC44  	CALL        _UART1_Write, 0
;__Lib_UART_c67.c,72 :: 		
0xA19C	0x0102      	MOVLB       2
0xA19E	0x2B0D      	INCF        UART1_Write_Text_counter_L0, 1, 1
;__Lib_UART_c67.c,73 :: 		
0xA1A0	0x510D      	MOVF        UART1_Write_Text_counter_L0, 0, 1
0xA1A2	0x250B      	ADDWF       FARG_UART1_Write_Text_uart_text, 0, 1
0xA1A4	0x6EE9      	MOVWF       FSR0L 
0xA1A6	0x0E00      	MOVLW       0
0xA1A8	0x210C      	ADDWFC      FARG_UART1_Write_Text_uart_text+1, 0, 1
0xA1AA	0x6EEA      	MOVWF       FSR0H 
0xA1AC	0xF200CFEE  	MOVFF       POSTINC0, UART1_Write_Text_data__L0
;__Lib_UART_c67.c,74 :: 		
0xA1B0	0xD7EE      	BRA         L_UART1_Write_Text5
L_UART1_Write_Text6:
;__Lib_UART_c67.c,75 :: 		
L_end_UART1_Write_Text:
0xA1B2	0x0012      	RETURN      0
; end of _UART1_Write_Text
_sensorBloqueoS:
;rutinasensores_v4(mstr-slv).h,358 :: 		void sensorBloqueoS(){
;rutinasensores_v4(mstr-slv).h,359 :: 		if(!Bandera.Par3){
0xA1B4	0x0101      	MOVLB       1
0xA1B6	0x53E6      	MOVF        _Bandera+2, 1, 1
0xA1B8	0xE124      	BNZ         L_sensorBloqueoS185
;rutinasensores_v4(mstr-slv).h,360 :: 		esperaBS(debugEstadoB);
0xA1BA	0xF214C13D  	MOVFF       _debugEstadoB, FARG_esperaBS_estado
0xA1BE	0xF043ECFB  	CALL        _esperaBS, 0
;rutinasensores_v4(mstr-slv).h,361 :: 		entrandoBS(debugEstadoB);
0xA1C2	0xF214C13D  	MOVFF       _debugEstadoB, FARG_entrandoBS_estado
0xA1C6	0xF018EC57  	CALL        _entrandoBS, 0
;rutinasensores_v4(mstr-slv).h,362 :: 		transicionEBS(debugEstadoB);
0xA1CA	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionEBS_estado
0xA1CE	0xF031EC74  	CALL        _transicionEBS, 0
;rutinasensores_v4(mstr-slv).h,363 :: 		transicionEntBS(debugEstadoB);
0xA1D2	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionEntBS_estado
0xA1D6	0xF018EC0C  	CALL        _transicionEntBS, 0
;rutinasensores_v4(mstr-slv).h,364 :: 		entroBS(debugEstadoB);
0xA1DA	0xF214C13D  	MOVFF       _debugEstadoB, FARG_entroBS_estado
0xA1DE	0xF049EC28  	CALL        _entroBS, 0
;rutinasensores_v4(mstr-slv).h,365 :: 		saliendoBS(debugEstadoB);
0xA1E2	0xF214C13D  	MOVFF       _debugEstadoB, FARG_saliendoBS_estado
0xA1E6	0xF017ECA4  	CALL        _saliendoBS, 0
;rutinasensores_v4(mstr-slv).h,366 :: 		transicionSBS(debugEstadoB);
0xA1EA	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionSBS_estado
0xA1EE	0xF015ECF8  	CALL        _transicionSBS, 0
;rutinasensores_v4(mstr-slv).h,367 :: 		transicionSalBS(debugEstadoB);
0xA1F2	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionSalBS_estado
0xA1F6	0xF044EC46  	CALL        _transicionSalBS, 0
;rutinasensores_v4(mstr-slv).h,368 :: 		salioBS(debugEstadoB);
0xA1FA	0xF214C13D  	MOVFF       _debugEstadoB, FARG_salioBS_estado
0xA1FE	0xF019EC00  	CALL        _salioBS, 0
;rutinasensores_v4(mstr-slv).h,369 :: 		}
L_sensorBloqueoS185:
;rutinasensores_v4(mstr-slv).h,370 :: 		}
L_end_sensorBloqueoS:
0xA202	0x0012      	RETURN      0
; end of _sensorBloqueoS
_sensorBloqueoPar9:
;rutinasensores_v4(mstr-slv).h,444 :: 		void sensorBloqueoPar9(){
;rutinasensores_v4(mstr-slv).h,445 :: 		esperaBP9(debugEstadoB);
0xA204	0xF214C13D  	MOVFF       _debugEstadoB, FARG_esperaBP9_estado
0xA208	0xF024EC82  	CALL        _esperaBP9, 0
;rutinasensores_v4(mstr-slv).h,446 :: 		entrandoBP9(debugEstadoB);
0xA20C	0xF214C13D  	MOVFF       _debugEstadoB, FARG_entrandoBP9_estado
0xA210	0xF026EC76  	CALL        _entrandoBP9, 0
;rutinasensores_v4(mstr-slv).h,447 :: 		transicionEBP9(debugEstadoB);
0xA214	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionEBP9_estado
0xA218	0xF025EC72  	CALL        _transicionEBP9, 0
;rutinasensores_v4(mstr-slv).h,448 :: 		transicionEntBP9(debugEstadoB);
0xA21C	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionEntBP9_estado
0xA220	0xF02FECCA  	CALL        _transicionEntBP9, 0
;rutinasensores_v4(mstr-slv).h,449 :: 		entroBP9(debugEstadoB);
0xA224	0xF214C13D  	MOVFF       _debugEstadoB, FARG_entroBP9_estado
0xA228	0xF02EECAD  	CALL        _entroBP9, 0
;rutinasensores_v4(mstr-slv).h,450 :: 		saliendoBP9(debugEstadoB);
0xA22C	0xF214C13D  	MOVFF       _debugEstadoB, FARG_saliendoBP9_estado
0xA230	0xF025ECD8  	CALL        _saliendoBP9, 0
;rutinasensores_v4(mstr-slv).h,451 :: 		transicionSBP9(debugEstadoB);
0xA234	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionSBP9_estado
0xA238	0xF025EC15  	CALL        _transicionSBP9, 0
;rutinasensores_v4(mstr-slv).h,452 :: 		transicionSalBP9(debugEstadoB);
0xA23C	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionSalBP9_estado
0xA240	0xF024ECBD  	CALL        _transicionSalBP9, 0
;rutinasensores_v4(mstr-slv).h,453 :: 		salioBP9(debugEstadoB);
0xA244	0xF214C13D  	MOVFF       _debugEstadoB, FARG_salioBP9_estado
0xA248	0xF026ECAB  	CALL        _salioBP9, 0
;rutinasensores_v4(mstr-slv).h,454 :: 		}
L_end_sensorBloqueoPar9:
0xA24C	0x0012      	RETURN      0
; end of _sensorBloqueoPar9
_sensorBloqueoPar1:
;rutinasensores_v4(mstr-slv).h,372 :: 		void sensorBloqueoPar1(){
;rutinasensores_v4(mstr-slv).h,373 :: 		esperaBP1(debugEstadoB);
0xA24E	0xF214C13D  	MOVFF       _debugEstadoB, FARG_esperaBP1_estado
0xA252	0xF011ECFA  	CALL        _esperaBP1, 0
;rutinasensores_v4(mstr-slv).h,374 :: 		entrandoBP1(debugEstadoB);
0xA256	0xF214C13D  	MOVFF       _debugEstadoB, FARG_entrandoBP1_estado
0xA25A	0xF011ECBC  	CALL        _entrandoBP1, 0
;rutinasensores_v4(mstr-slv).h,375 :: 		transicionEBP1(debugEstadoB);
0xA25E	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionEBP1_estado
0xA262	0xF01EECE0  	CALL        _transicionEBP1, 0
;rutinasensores_v4(mstr-slv).h,376 :: 		transicionEntBP1(debugEstadoB);
0xA266	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionEntBP1_estado
0xA26A	0xF01CECDB  	CALL        _transicionEntBP1, 0
;rutinasensores_v4(mstr-slv).h,377 :: 		entroBP1(debugEstadoB);
0xA26E	0xF214C13D  	MOVFF       _debugEstadoB, FARG_entroBP1_estado
0xA272	0xF00EEC99  	CALL        _entroBP1, 0
;rutinasensores_v4(mstr-slv).h,378 :: 		saliendoBP1(debugEstadoB);
0xA276	0xF214C13D  	MOVFF       _debugEstadoB, FARG_saliendoBP1_estado
0xA27A	0xF00CEC81  	CALL        _saliendoBP1, 0
;rutinasensores_v4(mstr-slv).h,379 :: 		transicionSBP1(debugEstadoB);
0xA27E	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionSBP1_estado
0xA282	0xF010EC09  	CALL        _transicionSBP1, 0
;rutinasensores_v4(mstr-slv).h,380 :: 		transicionSalBP1(debugEstadoB);
0xA286	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionSalBP1_estado
0xA28A	0xF014EC98  	CALL        _transicionSalBP1, 0
;rutinasensores_v4(mstr-slv).h,381 :: 		salioBP1(debugEstadoB);
0xA28E	0xF214C13D  	MOVFF       _debugEstadoB, FARG_salioBP1_estado
0xA292	0xF00BEC65  	CALL        _salioBP1, 0
;rutinasensores_v4(mstr-slv).h,382 :: 		}
L_end_sensorBloqueoPar1:
0xA296	0x0012      	RETURN      0
; end of _sensorBloqueoPar1
_sensorBloqueoPar4:
;rutinasensores_v4(mstr-slv).h,408 :: 		void sensorBloqueoPar4(){
;rutinasensores_v4(mstr-slv).h,409 :: 		esperaBP4(debugEstadoB);
0xA298	0xF214C13D  	MOVFF       _debugEstadoB, FARG_esperaBP4_estado
0xA29C	0xF029ECE8  	CALL        _esperaBP4, 0
;rutinasensores_v4(mstr-slv).h,410 :: 		entrandoBP4(debugEstadoB);
0xA2A0	0xF214C13D  	MOVFF       _debugEstadoB, FARG_entrandoBP4_estado
0xA2A4	0xF022EC90  	CALL        _entrandoBP4, 0
;rutinasensores_v4(mstr-slv).h,411 :: 		transicionEBP4(debugEstadoB);
0xA2A8	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionEBP4_estado
0xA2AC	0xF02DEC15  	CALL        _transicionEBP4, 0
;rutinasensores_v4(mstr-slv).h,412 :: 		transicionEntBP4(debugEstadoB);
0xA2B0	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionEntBP4_estado
0xA2B4	0xF029ECAB  	CALL        _transicionEntBP4, 0
;rutinasensores_v4(mstr-slv).h,413 :: 		entroBP4(debugEstadoB);
0xA2B8	0xF214C13D  	MOVFF       _debugEstadoB, FARG_entroBP4_estado
0xA2BC	0xF030EC57  	CALL        _entroBP4, 0
;rutinasensores_v4(mstr-slv).h,414 :: 		saliendoBP4(debugEstadoB);
0xA2C0	0xF214C13D  	MOVFF       _debugEstadoB, FARG_saliendoBP4_estado
0xA2C4	0xF030EC22  	CALL        _saliendoBP4, 0
;rutinasensores_v4(mstr-slv).h,415 :: 		transicionSBP4(debugEstadoB);
0xA2C8	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionSBP4_estado
0xA2CC	0xF029EC45  	CALL        _transicionSBP4, 0
;rutinasensores_v4(mstr-slv).h,416 :: 		transicionSalBP4(debugEstadoB);
0xA2D0	0xF214C13D  	MOVFF       _debugEstadoB, FARG_transicionSalBP4_estado
0xA2D4	0xF028ECED  	CALL        _transicionSalBP4, 0
;rutinasensores_v4(mstr-slv).h,417 :: 		salioBP4(debugEstadoB);
0xA2D8	0xF214C13D  	MOVFF       _debugEstadoB, FARG_salioBP4_estado
0xA2DC	0xF022ECF1  	CALL        _salioBP4, 0
;rutinasensores_v4(mstr-slv).h,418 :: 		}
L_end_sensorBloqueoPar4:
0xA2E0	0x0012      	RETURN      0
; end of _sensorBloqueoPar4
_TX_MSTR:
;MyProject.c,363 :: 		short TX_MSTR(){
;MyProject.c,364 :: 		short m = 0;
;MyProject.c,365 :: 		if(cuentaUSART == periodoUSART){
0xA2E2	0x0100      	MOVLB       0
0xA2E4	0x51DE      	MOVF        _cuentaUSART, 0, 1
0xA2E6	0x0A05      	XORLW       5
0xA2E8	0xE148      	BNZ         L_TX_MSTR560
;MyProject.c,366 :: 		memset(confirmacionEsclavo, 0, sizeof(confirmacionEsclavo));
0xA2EA	0x0E4B      	MOVLW       _confirmacionEsclavo
0xA2EC	0x0102      	MOVLB       2
0xA2EE	0x6F0B      	MOVWF       FARG_memset_p1, 1
0xA2F0	0x0E00      	MOVLW       hi_addr(_confirmacionEsclavo)
0xA2F2	0x6F0C      	MOVWF       FARG_memset_p1+1, 1
0xA2F4	0x6B0D      	CLRF        FARG_memset_character, 1
0xA2F6	0x0E03      	MOVLW       3
0xA2F8	0x6F0E      	MOVWF       FARG_memset_n, 1
0xA2FA	0x0E00      	MOVLW       0
0xA2FC	0x6F0F      	MOVWF       FARG_memset_n+1, 1
0xA2FE	0xDECB      	RCALL       _memset
;MyProject.c,367 :: 		if(UART1_Tx_Idle() == true){
0xA300	0xDDBA      	RCALL       _UART1_Tx_Idle
0xA302	0x5000      	MOVF        R0, 0 
0xA304	0x0A01      	XORLW       1
0xA306	0xE139      	BNZ         L_TX_MSTR561
;MyProject.c,368 :: 		UART1_Write_Text(solicitudCuenta);
0xA308	0x0E48      	MOVLW       _solicitudCuenta
0xA30A	0x6F0B      	MOVWF       FARG_UART1_Write_Text_uart_text, 1
0xA30C	0x0E00      	MOVLW       hi_addr(_solicitudCuenta)
0xA30E	0x6F0C      	MOVWF       FARG_UART1_Write_Text_uart_text+1, 1
0xA310	0xDF36      	RCALL       _UART1_Write_Text
;MyProject.c,369 :: 		if((bufferRecepcionEsclavo[4] != checksum[5]) & !conexionHabilitada){
0xA312	0x0E00      	MOVLW       0
0xA314	0x6E01      	MOVWF       R1 
0xA316	0x0E00      	MOVLW       0
0xA318	0xBE53      	BTFSC       _checksum+5, 7 
0xA31A	0x0EFF      	MOVLW       255
0xA31C	0x1801      	XORWF       R1, 0 
0xA31E	0xE103      	BNZ         L__TX_MSTR2425
0xA320	0x5053      	MOVF        _checksum+5, 0 
0xA322	0x0101      	MOVLB       1
0xA324	0x1942      	XORWF       _bufferRecepcionEsclavo+4, 0, 1
L__TX_MSTR2425:
0xA326	0x0E00      	MOVLW       0
0xA328	0xA4D8      	BTFSS       STATUS, 2 
0xA32A	0x0E01      	MOVLW       1
0xA32C	0x6E01      	MOVWF       R1 
0xA32E	0x5259      	MOVF        _conexionHabilitada, 1 
0xA330	0x0E01      	MOVLW       1
0xA332	0xA4D8      	BTFSS       STATUS, 2 
0xA334	0x0E00      	MOVLW       0
0xA336	0x6E00      	MOVWF       R0 
0xA338	0x5001      	MOVF        R1, 0 
0xA33A	0x1600      	ANDWF       R0, 1 
0xA33C	0xE00D      	BZ          L_TX_MSTR562
;MyProject.c,370 :: 		posteDesc = true;
0xA33E	0x0E01      	MOVLW       1
0xA340	0x0100      	MOVLB       0
0xA342	0x6FE0      	MOVWF       _posteDesc, 1
;MyProject.c,371 :: 		afterReset = true;
0xA344	0x0E01      	MOVLW       1
0xA346	0x6E58      	MOVWF       _afterReset 
;MyProject.c,372 :: 		checksum[0] = 1;
0xA348	0x0E01      	MOVLW       1
0xA34A	0x6E4E      	MOVWF       _checksum 
;MyProject.c,373 :: 		checksum[1] = 2;
0xA34C	0x0E02      	MOVLW       2
0xA34E	0x6E4F      	MOVWF       _checksum+1 
;MyProject.c,374 :: 		checksum[2] = 3;
0xA350	0x0E03      	MOVLW       3
0xA352	0x6E50      	MOVWF       _checksum+2 
;MyProject.c,375 :: 		conexionHabilitada = false;
0xA354	0x6A59      	CLRF        _conexionHabilitada 
;MyProject.c,376 :: 		}
0xA356	0xD010      	BRA         L_TX_MSTR563
L_TX_MSTR562:
;MyProject.c,378 :: 		bufferRecepcionEsclavo[4] = 0;
0xA358	0x0101      	MOVLB       1
0xA35A	0x6B42      	CLRF        _bufferRecepcionEsclavo+4, 1
;MyProject.c,379 :: 		checksum[5] = 10;
0xA35C	0x0E0A      	MOVLW       10
0xA35E	0x6E53      	MOVWF       _checksum+5 
;MyProject.c,380 :: 		lcd_cmd(_LCD_CLEAR);
0xA360	0x0E01      	MOVLW       1
0xA362	0x0102      	MOVLB       2
0xA364	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0xA366	0xF008EC7A  	CALL        _lcd_cmd, 0
;MyProject.c,381 :: 		posteDesc = false;
0xA36A	0x0100      	MOVLB       0
0xA36C	0x6BE0      	CLRF        _posteDesc, 1
;MyProject.c,382 :: 		conexionHabilitada = false;
0xA36E	0x6A59      	CLRF        _conexionHabilitada 
;MyProject.c,383 :: 		if(afterReset){
0xA370	0x5258      	MOVF        _afterReset, 1 
0xA372	0xE002      	BZ          L_TX_MSTR564
;MyProject.c,384 :: 		afterReset = false;
0xA374	0x6A58      	CLRF        _afterReset 
;MyProject.c,385 :: 		asm reset;
0xA376	0x00FF      	RESET
;MyProject.c,386 :: 		}
L_TX_MSTR564:
;MyProject.c,387 :: 		}
L_TX_MSTR563:
;MyProject.c,388 :: 		cuentaUSART = 0;
0xA378	0x6BDE      	CLRF        _cuentaUSART, 1
;MyProject.c,389 :: 		}
L_TX_MSTR561:
;MyProject.c,390 :: 		}
L_TX_MSTR560:
0xA37A	0x0100      	MOVLB       0
;MyProject.c,391 :: 		if(!posteDesc){
0xA37C	0x53E0      	MOVF        _posteDesc, 1, 1
0xA37E	0xA4D8      	BTFSS       STATUS, 2 
0xA380	0xD154      	BRA         L_TX_MSTR565
;MyProject.c,392 :: 		if(banderaRx){
0xA382	0x5247      	MOVF        _banderaRx, 1 
0xA384	0xB4D8      	BTFSC       STATUS, 2 
0xA386	0xD151      	BRA         L_TX_MSTR566
;MyProject.c,393 :: 		lcd_cmd(_LCD_CLEAR);
0xA388	0x0E01      	MOVLW       1
0xA38A	0x0102      	MOVLB       2
0xA38C	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0xA38E	0xF008EC7A  	CALL        _lcd_cmd, 0
;MyProject.c,394 :: 		guardadoSlvSuben = eepromLeeNumero(0x0900, 2);
0xA392	0x0E00      	MOVLW       0
0xA394	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0xA396	0x0E09      	MOVLW       9
0xA398	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0xA39A	0x0E02      	MOVLW       2
0xA39C	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0xA39E	0xF002EC92  	CALL        _eepromLeeNumero, 0
0xA3A2	0xF03FC000  	MOVFF       R0, _guardadoSlvSuben
0xA3A6	0xF040C001  	MOVFF       R1, _guardadoSlvSuben+1
;MyProject.c,395 :: 		recSlvSuben = 0;
0xA3AA	0x6A3D      	CLRF        _recSlvSuben 
0xA3AC	0x6A3E      	CLRF        _recSlvSuben+1 
;MyProject.c,396 :: 		recSlvsuben |= bufferRecepcionEsclavo[6] << 8;
0xA3AE	0xF005C144  	MOVFF       _bufferRecepcionEsclavo+6, R5
0xA3B2	0x6A04      	CLRF        R4 
0xA3B4	0xF03DC004  	MOVFF       R4, _recSlvSuben
0xA3B8	0xF03EC005  	MOVFF       R5, _recSlvSuben+1
;MyProject.c,397 :: 		recSlvSuben |= bufferRecepcionEsclavo[5];
0xA3BC	0x0101      	MOVLB       1
0xA3BE	0x5143      	MOVF        _bufferRecepcionEsclavo+5, 0, 1
0xA3C0	0x1004      	IORWF       R4, 0 
0xA3C2	0x6E06      	MOVWF       R6 
0xA3C4	0xF007C005  	MOVFF       R5, R7
0xA3C8	0x0E00      	MOVLW       0
0xA3CA	0x1207      	IORWF       R7, 1 
0xA3CC	0xF03DC006  	MOVFF       R6, _recSlvSuben
0xA3D0	0xF03EC007  	MOVFF       R7, _recSlvSuben+1
;MyProject.c,398 :: 		if(recSlvSuben != guardadoSlvSuben){
0xA3D4	0x5007      	MOVF        R7, 0 
0xA3D6	0x1801      	XORWF       R1, 0 
0xA3D8	0xE102      	BNZ         L__TX_MSTR2426
0xA3DA	0x5000      	MOVF        R0, 0 
0xA3DC	0x1806      	XORWF       R6, 0 
L__TX_MSTR2426:
0xA3DE	0xE01E      	BZ          L_TX_MSTR567
;MyProject.c,399 :: 		eepromEscribeNumero(0x0900, bufferRecepcionEsclavo[5], 1);
0xA3E0	0x0E00      	MOVLW       0
0xA3E2	0x0102      	MOVLB       2
0xA3E4	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0xA3E6	0x0E09      	MOVLW       9
0xA3E8	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0xA3EA	0xF21FC143  	MOVFF       _bufferRecepcionEsclavo+5, FARG_eepromEscribeNumero_Dato
0xA3EE	0x0E00      	MOVLW       0
0xA3F0	0x6F20      	MOVWF       FARG_eepromEscribeNumero_Dato+1, 1
0xA3F2	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0xA3F4	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0xA3F6	0x0E01      	MOVLW       1
0xA3F8	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0xA3FA	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;MyProject.c,400 :: 		eepromEscribeNumero(0x0901, bufferRecepcionEsclavo[6], 1);
0xA3FE	0x0E01      	MOVLW       1
0xA400	0x0102      	MOVLB       2
0xA402	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0xA404	0x0E09      	MOVLW       9
0xA406	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0xA408	0xF21FC144  	MOVFF       _bufferRecepcionEsclavo+6, FARG_eepromEscribeNumero_Dato
0xA40C	0x0E00      	MOVLW       0
0xA40E	0x6F20      	MOVWF       FARG_eepromEscribeNumero_Dato+1, 1
0xA410	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0xA412	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0xA414	0x0E01      	MOVLW       1
0xA416	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0xA418	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;MyProject.c,401 :: 		}
L_TX_MSTR567:
;MyProject.c,402 :: 		guardadoSlvBajan = eepromLeeNumero(0x0700, 2);
0xA41C	0x0E00      	MOVLW       0
0xA41E	0x0102      	MOVLB       2
0xA420	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0xA422	0x0E07      	MOVLW       7
0xA424	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0xA426	0x0E02      	MOVLW       2
0xA428	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0xA42A	0xF002EC92  	CALL        _eepromLeeNumero, 0
0xA42E	0xF041C000  	MOVFF       R0, _guardadoSlvBajan
0xA432	0xF042C001  	MOVFF       R1, _guardadoSlvBajan+1
;MyProject.c,403 :: 		recSlvBajan = 0;
0xA436	0x6A45      	CLRF        _recSlvBajan 
0xA438	0x6A46      	CLRF        _recSlvBajan+1 
;MyProject.c,404 :: 		recSlvBajan |= bufferRecepcionEsclavo[8] << 8;
0xA43A	0xF005C146  	MOVFF       _bufferRecepcionEsclavo+8, R5
0xA43E	0x6A04      	CLRF        R4 
0xA440	0xF045C004  	MOVFF       R4, _recSlvBajan
0xA444	0xF046C005  	MOVFF       R5, _recSlvBajan+1
;MyProject.c,405 :: 		recSlvBajan |= bufferRecepcionEsclavo[7];
0xA448	0x0101      	MOVLB       1
0xA44A	0x5145      	MOVF        _bufferRecepcionEsclavo+7, 0, 1
0xA44C	0x1004      	IORWF       R4, 0 
0xA44E	0x6E06      	MOVWF       R6 
0xA450	0xF007C005  	MOVFF       R5, R7
0xA454	0x0E00      	MOVLW       0
0xA456	0x1207      	IORWF       R7, 1 
0xA458	0xF045C006  	MOVFF       R6, _recSlvBajan
0xA45C	0xF046C007  	MOVFF       R7, _recSlvBajan+1
;MyProject.c,406 :: 		if(recSlvBajan != guardadoSlvBajan){
0xA460	0x5007      	MOVF        R7, 0 
0xA462	0x1801      	XORWF       R1, 0 
0xA464	0xE102      	BNZ         L__TX_MSTR2427
0xA466	0x5000      	MOVF        R0, 0 
0xA468	0x1806      	XORWF       R6, 0 
L__TX_MSTR2427:
0xA46A	0xE01E      	BZ          L_TX_MSTR568
;MyProject.c,407 :: 		eepromEscribeNumero(0x0700, bufferRecepcionEsclavo[7], 1);
0xA46C	0x0E00      	MOVLW       0
0xA46E	0x0102      	MOVLB       2
0xA470	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0xA472	0x0E07      	MOVLW       7
0xA474	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0xA476	0xF21FC145  	MOVFF       _bufferRecepcionEsclavo+7, FARG_eepromEscribeNumero_Dato
0xA47A	0x0E00      	MOVLW       0
0xA47C	0x6F20      	MOVWF       FARG_eepromEscribeNumero_Dato+1, 1
0xA47E	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0xA480	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0xA482	0x0E01      	MOVLW       1
0xA484	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0xA486	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;MyProject.c,408 :: 		eepromEscribeNumero(0x0701, bufferRecepcionEsclavo[8], 1);
0xA48A	0x0E01      	MOVLW       1
0xA48C	0x0102      	MOVLB       2
0xA48E	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0xA490	0x0E07      	MOVLW       7
0xA492	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0xA494	0xF21FC146  	MOVFF       _bufferRecepcionEsclavo+8, FARG_eepromEscribeNumero_Dato
0xA498	0x0E00      	MOVLW       0
0xA49A	0x6F20      	MOVWF       FARG_eepromEscribeNumero_Dato+1, 1
0xA49C	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0xA49E	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0xA4A0	0x0E01      	MOVLW       1
0xA4A2	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0xA4A4	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;MyProject.c,409 :: 		}
L_TX_MSTR568:
;MyProject.c,410 :: 		totalVerdadero = eepromLeeNumero(0x0005, 2);
0xA4A8	0x0E05      	MOVLW       5
0xA4AA	0x0102      	MOVLB       2
0xA4AC	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0xA4AE	0x0E00      	MOVLW       0
0xA4B0	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0xA4B2	0x0E02      	MOVLW       2
0xA4B4	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0xA4B6	0xF002EC92  	CALL        _eepromLeeNumero, 0
0xA4BA	0xF043C000  	MOVFF       R0, _totalVerdadero
0xA4BE	0xF044C001  	MOVFF       R1, _totalVerdadero+1
;MyProject.c,412 :: 		totalCalculado = (eepromLeeNumero(0x0000, 2)+eepromLeeNumero(0x0003, 2)+eepromLeeNumero(0x0900, 2)+eepromLeeNumero(0x0700, 2))/2;
0xA4C2	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0xA4C4	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0xA4C6	0x0E02      	MOVLW       2
0xA4C8	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0xA4CA	0xF002EC92  	CALL        _eepromLeeNumero, 0
0xA4CE	0xF1F7C000  	MOVFF       R0, FLOC__TX_MSTR
0xA4D2	0xF1F8C001  	MOVFF       R1, FLOC__TX_MSTR+1
0xA4D6	0xF1F9C002  	MOVFF       R2, FLOC__TX_MSTR+2
0xA4DA	0xF1FAC003  	MOVFF       R3, FLOC__TX_MSTR+3
0xA4DE	0x0E03      	MOVLW       3
0xA4E0	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0xA4E2	0x0E00      	MOVLW       0
0xA4E4	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0xA4E6	0x0E02      	MOVLW       2
0xA4E8	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0xA4EA	0xF002EC92  	CALL        _eepromLeeNumero, 0
0xA4EE	0x5000      	MOVF        R0, 0 
0xA4F0	0x0101      	MOVLB       1
0xA4F2	0x27F7      	ADDWF       FLOC__TX_MSTR, 1, 1
0xA4F4	0x5001      	MOVF        R1, 0 
0xA4F6	0x23F8      	ADDWFC      FLOC__TX_MSTR+1, 1, 1
0xA4F8	0x5002      	MOVF        R2, 0 
0xA4FA	0x23F9      	ADDWFC      FLOC__TX_MSTR+2, 1, 1
0xA4FC	0x5003      	MOVF        R3, 0 
0xA4FE	0x23FA      	ADDWFC      FLOC__TX_MSTR+3, 1, 1
0xA500	0x0E00      	MOVLW       0
0xA502	0x0102      	MOVLB       2
0xA504	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0xA506	0x0E09      	MOVLW       9
0xA508	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0xA50A	0x0E02      	MOVLW       2
0xA50C	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0xA50E	0xF002EC92  	CALL        _eepromLeeNumero, 0
0xA512	0x5000      	MOVF        R0, 0 
0xA514	0x0101      	MOVLB       1
0xA516	0x27F7      	ADDWF       FLOC__TX_MSTR, 1, 1
0xA518	0x5001      	MOVF        R1, 0 
0xA51A	0x23F8      	ADDWFC      FLOC__TX_MSTR+1, 1, 1
0xA51C	0x5002      	MOVF        R2, 0 
0xA51E	0x23F9      	ADDWFC      FLOC__TX_MSTR+2, 1, 1
0xA520	0x5003      	MOVF        R3, 0 
0xA522	0x23FA      	ADDWFC      FLOC__TX_MSTR+3, 1, 1
0xA524	0x0E00      	MOVLW       0
0xA526	0x0102      	MOVLB       2
0xA528	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0xA52A	0x0E07      	MOVLW       7
0xA52C	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0xA52E	0x0E02      	MOVLW       2
0xA530	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0xA532	0xF002EC92  	CALL        _eepromLeeNumero, 0
0xA536	0x5000      	MOVF        R0, 0 
0xA538	0x0101      	MOVLB       1
0xA53A	0x25F7      	ADDWF       FLOC__TX_MSTR, 0, 1
0xA53C	0x6E05      	MOVWF       R5 
0xA53E	0x5001      	MOVF        R1, 0 
0xA540	0x21F8      	ADDWFC      FLOC__TX_MSTR+1, 0, 1
0xA542	0x6E06      	MOVWF       R6 
0xA544	0x5002      	MOVF        R2, 0 
0xA546	0x21F9      	ADDWFC      FLOC__TX_MSTR+2, 0, 1
0xA548	0x6E07      	MOVWF       R7 
0xA54A	0x5003      	MOVF        R3, 0 
0xA54C	0x21FA      	ADDWFC      FLOC__TX_MSTR+3, 0, 1
0xA54E	0x6E08      	MOVWF       R8 
0xA550	0xF001C005  	MOVFF       R5, R1
0xA554	0xF002C006  	MOVFF       R6, R2
0xA558	0xF003C007  	MOVFF       R7, R3
0xA55C	0xF004C008  	MOVFF       R8, R4
0xA560	0x3204      	RRCF        R4, 1 
0xA562	0x3203      	RRCF        R3, 1 
0xA564	0x3202      	RRCF        R2, 1 
0xA566	0x3201      	RRCF        R1, 1 
0xA568	0x9E04      	BCF         R4, 7 
0xA56A	0xBC04      	BTFSC       R4, 6 
0xA56C	0x8E04      	BSF         R4, 7 
0xA56E	0xF131C001  	MOVFF       R1, _totalCalculado
0xA572	0xF132C002  	MOVFF       R2, _totalCalculado+1
;MyProject.c,413 :: 		if(totalCalculado != totalVerdadero){
0xA576	0x5002      	MOVF        R2, 0 
0xA578	0x1844      	XORWF       _totalVerdadero+1, 0 
0xA57A	0xE102      	BNZ         L__TX_MSTR2428
0xA57C	0x5043      	MOVF        _totalVerdadero, 0 
0xA57E	0x1801      	XORWF       R1, 0 
L__TX_MSTR2428:
0xA580	0xE010      	BZ          L_TX_MSTR569
;MyProject.c,415 :: 		eepromEscribeNumero(0x0005, totalCalculado, 2);
0xA582	0x0E05      	MOVLW       5
0xA584	0x0102      	MOVLB       2
0xA586	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0xA588	0x0E00      	MOVLW       0
0xA58A	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0xA58C	0xF21FC131  	MOVFF       _totalCalculado, FARG_eepromEscribeNumero_Dato
0xA590	0xF220C132  	MOVFF       _totalCalculado+1, FARG_eepromEscribeNumero_Dato+1
0xA594	0x0E00      	MOVLW       0
0xA596	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0xA598	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0xA59A	0x0E02      	MOVLW       2
0xA59C	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0xA59E	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;MyProject.c,416 :: 		}
L_TX_MSTR569:
;MyProject.c,431 :: 		recBloq = eepromLeeNumero(0x000C, 1);
0xA5A2	0x0E0C      	MOVLW       12
0xA5A4	0x0102      	MOVLB       2
0xA5A6	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0xA5A8	0x0E00      	MOVLW       0
0xA5AA	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0xA5AC	0x0E01      	MOVLW       1
0xA5AE	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0xA5B0	0xF002EC92  	CALL        _eepromLeeNumero, 0
0xA5B4	0xF05DC000  	MOVFF       R0, _recBloq
;MyProject.c,432 :: 		if(bufferRecepcionEsclavo[2] != recBloq){
0xA5B8	0x0E00      	MOVLW       0
0xA5BA	0x6E04      	MOVWF       R4 
0xA5BC	0x0E00      	MOVLW       0
0xA5BE	0xBE00      	BTFSC       R0, 7 
0xA5C0	0x0EFF      	MOVLW       255
0xA5C2	0x1804      	XORWF       R4, 0 
0xA5C4	0xE103      	BNZ         L__TX_MSTR2429
0xA5C6	0x5000      	MOVF        R0, 0 
0xA5C8	0x0101      	MOVLB       1
0xA5CA	0x1940      	XORWF       _bufferRecepcionEsclavo+2, 0, 1
L__TX_MSTR2429:
0xA5CC	0xE01A      	BZ          L_TX_MSTR570
;MyProject.c,433 :: 		eepromEscribeNumero(0x000C, bufferRecepcionEsclavo[2], 1);
0xA5CE	0x0E0C      	MOVLW       12
0xA5D0	0x0102      	MOVLB       2
0xA5D2	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0xA5D4	0x0E00      	MOVLW       0
0xA5D6	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0xA5D8	0xF21FC140  	MOVFF       _bufferRecepcionEsclavo+2, FARG_eepromEscribeNumero_Dato
0xA5DC	0x0E00      	MOVLW       0
0xA5DE	0x6F20      	MOVWF       FARG_eepromEscribeNumero_Dato+1, 1
0xA5E0	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0xA5E2	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0xA5E4	0x0E01      	MOVLW       1
0xA5E6	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0xA5E8	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;MyProject.c,434 :: 		bloqEsclavo = eepromLeeNumero(0x000C, 1);
0xA5EC	0x0E0C      	MOVLW       12
0xA5EE	0x0102      	MOVLB       2
0xA5F0	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0xA5F2	0x0E00      	MOVLW       0
0xA5F4	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0xA5F6	0x0E01      	MOVLW       1
0xA5F8	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0xA5FA	0xF002EC92  	CALL        _eepromLeeNumero, 0
0xA5FE	0xF148C000  	MOVFF       R0, _bloqEsclavo
;MyProject.c,435 :: 		}
L_TX_MSTR570:
;MyProject.c,436 :: 		if(bufferRecepcionEsclavo[3]){
0xA602	0x0101      	MOVLB       1
0xA604	0x5341      	MOVF        _bufferRecepcionEsclavo+3, 1, 1
0xA606	0xE005      	BZ          L_TX_MSTR571
;MyProject.c,437 :: 		desbordoGPS = bufferRecepcionEsclavo[3];
0xA608	0xF0E1C141  	MOVFF       _bufferRecepcionEsclavo+3, _desbordoGPS
0xA60C	0x0E00      	MOVLW       0
0xA60E	0x0100      	MOVLB       0
0xA610	0x6FE2      	MOVWF       _desbordoGPS+1, 1
;MyProject.c,438 :: 		}
L_TX_MSTR571:
;MyProject.c,439 :: 		memset(bufferRecepcionEsclavo[3],0,sizeof(bufferRecepcionEsclavo));
0xA612	0xF20BC141  	MOVFF       _bufferRecepcionEsclavo+3, FARG_memset_p1
0xA616	0x0E00      	MOVLW       0
0xA618	0x0102      	MOVLB       2
0xA61A	0x6F0C      	MOVWF       FARG_memset_p1+1, 1
0xA61C	0x6B0D      	CLRF        FARG_memset_character, 1
0xA61E	0x0E0A      	MOVLW       10
0xA620	0x6F0E      	MOVWF       FARG_memset_n, 1
0xA622	0x0E00      	MOVLW       0
0xA624	0x6F0F      	MOVWF       FARG_memset_n+1, 1
0xA626	0xDD37      	RCALL       _memset
;MyProject.c,440 :: 		banderaRx = false;
0xA628	0x6A47      	CLRF        _banderaRx 
;MyProject.c,441 :: 		}
L_TX_MSTR566:
;MyProject.c,442 :: 		}
L_TX_MSTR565:
;MyProject.c,443 :: 		}
L_end_TX_MSTR:
0xA62A	0x0012      	RETURN      0
; end of _TX_MSTR
_SENSADO:
;MyProject.c,645 :: 		void SENSADO(){
;MyProject.c,647 :: 		if(Bandera.SensorU & !Bandera.Par1){
0xA62C	0x0101      	MOVLB       1
0xA62E	0x53E4      	MOVF        _Bandera, 1, 1
0xA630	0x0E01      	MOVLW       1
0xA632	0xA4D8      	BTFSS       STATUS, 2 
0xA634	0x0E00      	MOVLW       0
0xA636	0x6E00      	MOVWF       R0 
0xA638	0x51ED      	MOVF        _Bandera+9, 0, 1
0xA63A	0x1600      	ANDWF       R0, 1 
0xA63C	0xE025      	BZ          L_SENSADO626
;MyProject.c,648 :: 		sensorBloqueo();
0xA63E	0xF04DECC7  	CALL        _sensorBloqueo, 0
;MyProject.c,649 :: 		if(cuenta){
0xA642	0x0100      	MOVLB       0
0xA644	0x5392      	MOVF        _cuenta, 1, 1
0xA646	0xE020      	BZ          L_SENSADO627
;MyProject.c,650 :: 		auxCuentaBloqueo = eepromLeeNumero(0x000B, 1);
0xA648	0x0E0B      	MOVLW       11
0xA64A	0x0102      	MOVLB       2
0xA64C	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0xA64E	0x0E00      	MOVLW       0
0xA650	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0xA652	0x0E01      	MOVLW       1
0xA654	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0xA656	0xF002EC92  	CALL        _eepromLeeNumero, 0
0xA65A	0xF155C000  	MOVFF       R0, _auxCuentaBloqueo
;MyProject.c,651 :: 		auxCuentaBloqueo++;
0xA65E	0x2A00      	INCF        R0, 1 
0xA660	0xF155C000  	MOVFF       R0, _auxCuentaBloqueo
;MyProject.c,652 :: 		eepromEscribeNumero(0x000B, auxcuentaBloqueo, 1);
0xA664	0x0E0B      	MOVLW       11
0xA666	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0xA668	0x0E00      	MOVLW       0
0xA66A	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0xA66C	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0xA670	0x0E00      	MOVLW       0
0xA672	0xBE00      	BTFSC       R0, 7 
0xA674	0x0EFF      	MOVLW       255
0xA676	0x6F20      	MOVWF       FARG_eepromEscribeNumero_Dato+1, 1
0xA678	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0xA67A	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0xA67C	0x0E01      	MOVLW       1
0xA67E	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0xA680	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;MyProject.c,653 :: 		cuenta = false;
0xA684	0x0100      	MOVLB       0
0xA686	0x6B92      	CLRF        _cuenta, 1
;MyProject.c,654 :: 		}
L_SENSADO627:
;MyProject.c,655 :: 		}
L_SENSADO626:
;MyProject.c,656 :: 		if(Bandera.SensorD & !Bandera.Par1){
0xA688	0x0101      	MOVLB       1
0xA68A	0x53E4      	MOVF        _Bandera, 1, 1
0xA68C	0x0E01      	MOVLW       1
0xA68E	0xA4D8      	BTFSS       STATUS, 2 
0xA690	0x0E00      	MOVLW       0
0xA692	0x6E00      	MOVWF       R0 
0xA694	0x51EE      	MOVF        _Bandera+10, 0, 1
0xA696	0x1600      	ANDWF       R0, 1 
0xA698	0xE024      	BZ          L_SENSADO628
;MyProject.c,657 :: 		sensorBloqueoD();
0xA69A	0xDC63      	RCALL       _sensorBloqueoD
;MyProject.c,658 :: 		if(cuenta){
0xA69C	0x0100      	MOVLB       0
0xA69E	0x5392      	MOVF        _cuenta, 1, 1
0xA6A0	0xE020      	BZ          L_SENSADO629
;MyProject.c,659 :: 		auxCuentaBloqueo = eepromLeeNumero(0x000B, 1);
0xA6A2	0x0E0B      	MOVLW       11
0xA6A4	0x0102      	MOVLB       2
0xA6A6	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0xA6A8	0x0E00      	MOVLW       0
0xA6AA	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0xA6AC	0x0E01      	MOVLW       1
0xA6AE	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0xA6B0	0xF002EC92  	CALL        _eepromLeeNumero, 0
0xA6B4	0xF155C000  	MOVFF       R0, _auxCuentaBloqueo
;MyProject.c,660 :: 		auxCuentaBloqueo++;
0xA6B8	0x2A00      	INCF        R0, 1 
0xA6BA	0xF155C000  	MOVFF       R0, _auxCuentaBloqueo
;MyProject.c,661 :: 		eepromEscribeNumero(0x000B, auxcuentaBloqueo, 1);
0xA6BE	0x0E0B      	MOVLW       11
0xA6C0	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0xA6C2	0x0E00      	MOVLW       0
0xA6C4	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0xA6C6	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0xA6CA	0x0E00      	MOVLW       0
0xA6CC	0xBE00      	BTFSC       R0, 7 
0xA6CE	0x0EFF      	MOVLW       255
0xA6D0	0x6F20      	MOVWF       FARG_eepromEscribeNumero_Dato+1, 1
0xA6D2	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0xA6D4	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0xA6D6	0x0E01      	MOVLW       1
0xA6D8	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0xA6DA	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;MyProject.c,662 :: 		cuenta = false;
0xA6DE	0x0100      	MOVLB       0
0xA6E0	0x6B92      	CLRF        _cuenta, 1
;MyProject.c,663 :: 		}
L_SENSADO629:
;MyProject.c,664 :: 		}
L_SENSADO628:
;MyProject.c,665 :: 		if(Bandera.SensorT & !Bandera.par2){
0xA6E2	0x0101      	MOVLB       1
0xA6E4	0x53E5      	MOVF        _Bandera+1, 1, 1
0xA6E6	0x0E01      	MOVLW       1
0xA6E8	0xA4D8      	BTFSS       STATUS, 2 
0xA6EA	0x0E00      	MOVLW       0
0xA6EC	0x6E00      	MOVWF       R0 
0xA6EE	0x51EF      	MOVF        _Bandera+11, 0, 1
0xA6F0	0x1600      	ANDWF       R0, 1 
0xA6F2	0xE024      	BZ          L_SENSADO630
;MyProject.c,666 :: 		sensorBloqueoT();
0xA6F4	0xDCEE      	RCALL       _sensorBloqueoT
;MyProject.c,667 :: 		if(cuenta){
0xA6F6	0x0100      	MOVLB       0
0xA6F8	0x5392      	MOVF        _cuenta, 1, 1
0xA6FA	0xE020      	BZ          L_SENSADO631
;MyProject.c,668 :: 		auxCuentaBloqueo = eepromLeeNumero(0x000B, 1);
0xA6FC	0x0E0B      	MOVLW       11
0xA6FE	0x0102      	MOVLB       2
0xA700	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0xA702	0x0E00      	MOVLW       0
0xA704	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0xA706	0x0E01      	MOVLW       1
0xA708	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0xA70A	0xF002EC92  	CALL        _eepromLeeNumero, 0
0xA70E	0xF155C000  	MOVFF       R0, _auxCuentaBloqueo
;MyProject.c,669 :: 		auxCuentaBloqueo++;
0xA712	0x2A00      	INCF        R0, 1 
0xA714	0xF155C000  	MOVFF       R0, _auxCuentaBloqueo
;MyProject.c,670 :: 		eepromEscribeNumero(0x000B, auxcuentaBloqueo, 1);
0xA718	0x0E0B      	MOVLW       11
0xA71A	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0xA71C	0x0E00      	MOVLW       0
0xA71E	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0xA720	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0xA724	0x0E00      	MOVLW       0
0xA726	0xBE00      	BTFSC       R0, 7 
0xA728	0x0EFF      	MOVLW       255
0xA72A	0x6F20      	MOVWF       FARG_eepromEscribeNumero_Dato+1, 1
0xA72C	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0xA72E	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0xA730	0x0E01      	MOVLW       1
0xA732	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0xA734	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;MyProject.c,671 :: 		cuenta = false;
0xA738	0x0100      	MOVLB       0
0xA73A	0x6B92      	CLRF        _cuenta, 1
;MyProject.c,672 :: 		}
L_SENSADO631:
;MyProject.c,673 :: 		}
L_SENSADO630:
;MyProject.c,674 :: 		if(Bandera.SensorC & !Bandera.Par2){
0xA73C	0x0101      	MOVLB       1
0xA73E	0x53E5      	MOVF        _Bandera+1, 1, 1
0xA740	0x0E01      	MOVLW       1
0xA742	0xA4D8      	BTFSS       STATUS, 2 
0xA744	0x0E00      	MOVLW       0
0xA746	0x6E00      	MOVWF       R0 
0xA748	0x51F0      	MOVF        _Bandera+12, 0, 1
0xA74A	0x1600      	ANDWF       R0, 1 
0xA74C	0xE024      	BZ          L_SENSADO632
;MyProject.c,675 :: 		sensorBloqueoC();
0xA74E	0xDC7B      	RCALL       _sensorBloqueoC
;MyProject.c,676 :: 		if(cuenta){
0xA750	0x0100      	MOVLB       0
0xA752	0x5392      	MOVF        _cuenta, 1, 1
0xA754	0xE020      	BZ          L_SENSADO633
;MyProject.c,677 :: 		auxCuentaBloqueo = eepromLeeNumero(0x000B, 1);
0xA756	0x0E0B      	MOVLW       11
0xA758	0x0102      	MOVLB       2
0xA75A	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0xA75C	0x0E00      	MOVLW       0
0xA75E	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0xA760	0x0E01      	MOVLW       1
0xA762	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0xA764	0xF002EC92  	CALL        _eepromLeeNumero, 0
0xA768	0xF155C000  	MOVFF       R0, _auxCuentaBloqueo
;MyProject.c,678 :: 		auxCuentaBloqueo++;
0xA76C	0x2A00      	INCF        R0, 1 
0xA76E	0xF155C000  	MOVFF       R0, _auxCuentaBloqueo
;MyProject.c,679 :: 		eepromEscribeNumero(0x000B, auxcuentaBloqueo, 1);
0xA772	0x0E0B      	MOVLW       11
0xA774	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0xA776	0x0E00      	MOVLW       0
0xA778	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0xA77A	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0xA77E	0x0E00      	MOVLW       0
0xA780	0xBE00      	BTFSC       R0, 7 
0xA782	0x0EFF      	MOVLW       255
0xA784	0x6F20      	MOVWF       FARG_eepromEscribeNumero_Dato+1, 1
0xA786	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0xA788	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0xA78A	0x0E01      	MOVLW       1
0xA78C	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0xA78E	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;MyProject.c,680 :: 		cuenta = false;
0xA792	0x0100      	MOVLB       0
0xA794	0x6B92      	CLRF        _cuenta, 1
;MyProject.c,681 :: 		}
L_SENSADO633:
;MyProject.c,682 :: 		}
L_SENSADO632:
;MyProject.c,683 :: 		if(Bandera.SensorO & !Bandera.Par3){
0xA796	0x0101      	MOVLB       1
0xA798	0x53E6      	MOVF        _Bandera+2, 1, 1
0xA79A	0x0E01      	MOVLW       1
0xA79C	0xA4D8      	BTFSS       STATUS, 2 
0xA79E	0x0E00      	MOVLW       0
0xA7A0	0x6E00      	MOVWF       R0 
0xA7A2	0x51F1      	MOVF        _Bandera+13, 0, 1
0xA7A4	0x1600      	ANDWF       R0, 1 
0xA7A6	0xE025      	BZ          L_SENSADO634
;MyProject.c,684 :: 		sensorBloqueoO();
0xA7A8	0xF04FEC40  	CALL        _sensorBloqueoO, 0
;MyProject.c,685 :: 		if(cuenta){
0xA7AC	0x0100      	MOVLB       0
0xA7AE	0x5392      	MOVF        _cuenta, 1, 1
0xA7B0	0xE020      	BZ          L_SENSADO635
;MyProject.c,686 :: 		auxCuentaBloqueo = eepromLeeNumero(0x000B, 1);
0xA7B2	0x0E0B      	MOVLW       11
0xA7B4	0x0102      	MOVLB       2
0xA7B6	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0xA7B8	0x0E00      	MOVLW       0
0xA7BA	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0xA7BC	0x0E01      	MOVLW       1
0xA7BE	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0xA7C0	0xF002EC92  	CALL        _eepromLeeNumero, 0
0xA7C4	0xF155C000  	MOVFF       R0, _auxCuentaBloqueo
;MyProject.c,687 :: 		auxCuentaBloqueo++;
0xA7C8	0x2A00      	INCF        R0, 1 
0xA7CA	0xF155C000  	MOVFF       R0, _auxCuentaBloqueo
;MyProject.c,688 :: 		eepromEscribeNumero(0x000B, auxcuentaBloqueo, 1);
0xA7CE	0x0E0B      	MOVLW       11
0xA7D0	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0xA7D2	0x0E00      	MOVLW       0
0xA7D4	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0xA7D6	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0xA7DA	0x0E00      	MOVLW       0
0xA7DC	0xBE00      	BTFSC       R0, 7 
0xA7DE	0x0EFF      	MOVLW       255
0xA7E0	0x6F20      	MOVWF       FARG_eepromEscribeNumero_Dato+1, 1
0xA7E2	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0xA7E4	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0xA7E6	0x0E01      	MOVLW       1
0xA7E8	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0xA7EA	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;MyProject.c,689 :: 		cuenta = false;
0xA7EE	0x0100      	MOVLB       0
0xA7F0	0x6B92      	CLRF        _cuenta, 1
;MyProject.c,690 :: 		}
L_SENSADO635:
;MyProject.c,691 :: 		}
L_SENSADO634:
;MyProject.c,692 :: 		if(Bandera.SensorS & !Bandera.Par3){
0xA7F2	0x0101      	MOVLB       1
0xA7F4	0x53E6      	MOVF        _Bandera+2, 1, 1
0xA7F6	0x0E01      	MOVLW       1
0xA7F8	0xA4D8      	BTFSS       STATUS, 2 
0xA7FA	0x0E00      	MOVLW       0
0xA7FC	0x6E00      	MOVWF       R0 
0xA7FE	0x51F2      	MOVF        _Bandera+14, 0, 1
0xA800	0x1600      	ANDWF       R0, 1 
0xA802	0xE024      	BZ          L_SENSADO636
;MyProject.c,693 :: 		sensorBloqueoS();
0xA804	0xDCD7      	RCALL       _sensorBloqueoS
;MyProject.c,694 :: 		if(cuenta){
0xA806	0x0100      	MOVLB       0
0xA808	0x5392      	MOVF        _cuenta, 1, 1
0xA80A	0xE020      	BZ          L_SENSADO637
;MyProject.c,695 :: 		auxCuentaBloqueo = eepromLeeNumero(0x000B, 1);
0xA80C	0x0E0B      	MOVLW       11
0xA80E	0x0102      	MOVLB       2
0xA810	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0xA812	0x0E00      	MOVLW       0
0xA814	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0xA816	0x0E01      	MOVLW       1
0xA818	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0xA81A	0xF002EC92  	CALL        _eepromLeeNumero, 0
0xA81E	0xF155C000  	MOVFF       R0, _auxCuentaBloqueo
;MyProject.c,696 :: 		auxCuentaBloqueo++;
0xA822	0x2A00      	INCF        R0, 1 
0xA824	0xF155C000  	MOVFF       R0, _auxCuentaBloqueo
;MyProject.c,697 :: 		eepromEscribeNumero(0x000B, auxcuentaBloqueo, 1);
0xA828	0x0E0B      	MOVLW       11
0xA82A	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0xA82C	0x0E00      	MOVLW       0
0xA82E	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0xA830	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0xA834	0x0E00      	MOVLW       0
0xA836	0xBE00      	BTFSC       R0, 7 
0xA838	0x0EFF      	MOVLW       255
0xA83A	0x6F20      	MOVWF       FARG_eepromEscribeNumero_Dato+1, 1
0xA83C	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0xA83E	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0xA840	0x0E01      	MOVLW       1
0xA842	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0xA844	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;MyProject.c,698 :: 		cuenta = false;
0xA848	0x0100      	MOVLB       0
0xA84A	0x6B92      	CLRF        _cuenta, 1
;MyProject.c,699 :: 		}
L_SENSADO637:
;MyProject.c,700 :: 		}
L_SENSADO636:
;MyProject.c,701 :: 		if(!Bandera.SensorU & !Bandera.SensorD & !Bandera.SensorT & !Bandera.SensorC & !Bandera.SensorO & !Bandera.SensorS & !Bandera.Par1 & !Bandera.Par2 & !Bandera.Par3 & !Bandera.Par4 & !Bandera.Par6 & !Bandera.Par7 & !Bandera.Par9){
0xA84C	0x0101      	MOVLB       1
0xA84E	0x53ED      	MOVF        _Bandera+9, 1, 1
0xA850	0x0E01      	MOVLW       1
0xA852	0xA4D8      	BTFSS       STATUS, 2 
0xA854	0x0E00      	MOVLW       0
0xA856	0x6E01      	MOVWF       R1 
0xA858	0x53EE      	MOVF        _Bandera+10, 1, 1
0xA85A	0x0E01      	MOVLW       1
0xA85C	0xA4D8      	BTFSS       STATUS, 2 
0xA85E	0x0E00      	MOVLW       0
0xA860	0x6E00      	MOVWF       R0 
0xA862	0x5000      	MOVF        R0, 0 
0xA864	0x1601      	ANDWF       R1, 1 
0xA866	0x53EF      	MOVF        _Bandera+11, 1, 1
0xA868	0x0E01      	MOVLW       1
0xA86A	0xA4D8      	BTFSS       STATUS, 2 
0xA86C	0x0E00      	MOVLW       0
0xA86E	0x6E00      	MOVWF       R0 
0xA870	0x5000      	MOVF        R0, 0 
0xA872	0x1601      	ANDWF       R1, 1 
0xA874	0x53F0      	MOVF        _Bandera+12, 1, 1
0xA876	0x0E01      	MOVLW       1
0xA878	0xA4D8      	BTFSS       STATUS, 2 
0xA87A	0x0E00      	MOVLW       0
0xA87C	0x6E00      	MOVWF       R0 
0xA87E	0x5000      	MOVF        R0, 0 
0xA880	0x1601      	ANDWF       R1, 1 
0xA882	0x53F1      	MOVF        _Bandera+13, 1, 1
0xA884	0x0E01      	MOVLW       1
0xA886	0xA4D8      	BTFSS       STATUS, 2 
0xA888	0x0E00      	MOVLW       0
0xA88A	0x6E00      	MOVWF       R0 
0xA88C	0x5000      	MOVF        R0, 0 
0xA88E	0x1601      	ANDWF       R1, 1 
0xA890	0x53F2      	MOVF        _Bandera+14, 1, 1
0xA892	0x0E01      	MOVLW       1
0xA894	0xA4D8      	BTFSS       STATUS, 2 
0xA896	0x0E00      	MOVLW       0
0xA898	0x6E00      	MOVWF       R0 
0xA89A	0x5000      	MOVF        R0, 0 
0xA89C	0x1601      	ANDWF       R1, 1 
0xA89E	0x53E4      	MOVF        _Bandera, 1, 1
0xA8A0	0x0E01      	MOVLW       1
0xA8A2	0xA4D8      	BTFSS       STATUS, 2 
0xA8A4	0x0E00      	MOVLW       0
0xA8A6	0x6E00      	MOVWF       R0 
0xA8A8	0x5000      	MOVF        R0, 0 
0xA8AA	0x1601      	ANDWF       R1, 1 
0xA8AC	0x53E5      	MOVF        _Bandera+1, 1, 1
0xA8AE	0x0E01      	MOVLW       1
0xA8B0	0xA4D8      	BTFSS       STATUS, 2 
0xA8B2	0x0E00      	MOVLW       0
0xA8B4	0x6E00      	MOVWF       R0 
0xA8B6	0x5000      	MOVF        R0, 0 
0xA8B8	0x1601      	ANDWF       R1, 1 
0xA8BA	0x53E6      	MOVF        _Bandera+2, 1, 1
0xA8BC	0x0E01      	MOVLW       1
0xA8BE	0xA4D8      	BTFSS       STATUS, 2 
0xA8C0	0x0E00      	MOVLW       0
0xA8C2	0x6E00      	MOVWF       R0 
0xA8C4	0x5000      	MOVF        R0, 0 
0xA8C6	0x1601      	ANDWF       R1, 1 
0xA8C8	0x53E7      	MOVF        _Bandera+3, 1, 1
0xA8CA	0x0E01      	MOVLW       1
0xA8CC	0xA4D8      	BTFSS       STATUS, 2 
0xA8CE	0x0E00      	MOVLW       0
0xA8D0	0x6E00      	MOVWF       R0 
0xA8D2	0x5000      	MOVF        R0, 0 
0xA8D4	0x1601      	ANDWF       R1, 1 
0xA8D6	0x53E9      	MOVF        _Bandera+5, 1, 1
0xA8D8	0x0E01      	MOVLW       1
0xA8DA	0xA4D8      	BTFSS       STATUS, 2 
0xA8DC	0x0E00      	MOVLW       0
0xA8DE	0x6E00      	MOVWF       R0 
0xA8E0	0x5000      	MOVF        R0, 0 
0xA8E2	0x1601      	ANDWF       R1, 1 
0xA8E4	0x53EA      	MOVF        _Bandera+6, 1, 1
0xA8E6	0x0E01      	MOVLW       1
0xA8E8	0xA4D8      	BTFSS       STATUS, 2 
0xA8EA	0x0E00      	MOVLW       0
0xA8EC	0x6E00      	MOVWF       R0 
0xA8EE	0x5000      	MOVF        R0, 0 
0xA8F0	0x1601      	ANDWF       R1, 1 
0xA8F2	0x53EC      	MOVF        _Bandera+8, 1, 1
0xA8F4	0x0E01      	MOVLW       1
0xA8F6	0xA4D8      	BTFSS       STATUS, 2 
0xA8F8	0x0E00      	MOVLW       0
0xA8FA	0x6E00      	MOVWF       R0 
0xA8FC	0x5001      	MOVF        R1, 0 
0xA8FE	0x1600      	ANDWF       R0, 1 
0xA900	0xE002      	BZ          L_SENSADO638
;MyProject.c,702 :: 		sensorNoBloqueo();
0xA902	0xDC0F      	RCALL       _sensorNoBloqueo
;MyProject.c,703 :: 		return;
0xA904	0xD29F      	BRA         L_end_SENSADO
;MyProject.c,704 :: 		}
L_SENSADO638:
;MyProject.c,705 :: 		if(Bandera.Par1 & !Bandera.Par2 & !Bandera.Par3 & !Bandera.Par4 & !Bandera.Par5 & !Bandera.Par6 & !Bandera.Par7 & !Bandera.Par8 & !Bandera.Par9){
0xA906	0x0101      	MOVLB       1
0xA908	0x53E5      	MOVF        _Bandera+1, 1, 1
0xA90A	0x0E01      	MOVLW       1
0xA90C	0xA4D8      	BTFSS       STATUS, 2 
0xA90E	0x0E00      	MOVLW       0
0xA910	0x6E00      	MOVWF       R0 
0xA912	0x5000      	MOVF        R0, 0 
0xA914	0x15E4      	ANDWF       _Bandera, 0, 1
0xA916	0x6E01      	MOVWF       R1 
0xA918	0x53E6      	MOVF        _Bandera+2, 1, 1
0xA91A	0x0E01      	MOVLW       1
0xA91C	0xA4D8      	BTFSS       STATUS, 2 
0xA91E	0x0E00      	MOVLW       0
0xA920	0x6E00      	MOVWF       R0 
0xA922	0x5000      	MOVF        R0, 0 
0xA924	0x1601      	ANDWF       R1, 1 
0xA926	0x53E7      	MOVF        _Bandera+3, 1, 1
0xA928	0x0E01      	MOVLW       1
0xA92A	0xA4D8      	BTFSS       STATUS, 2 
0xA92C	0x0E00      	MOVLW       0
0xA92E	0x6E00      	MOVWF       R0 
0xA930	0x5000      	MOVF        R0, 0 
0xA932	0x1601      	ANDWF       R1, 1 
0xA934	0x53E8      	MOVF        _Bandera+4, 1, 1
0xA936	0x0E01      	MOVLW       1
0xA938	0xA4D8      	BTFSS       STATUS, 2 
0xA93A	0x0E00      	MOVLW       0
0xA93C	0x6E00      	MOVWF       R0 
0xA93E	0x5000      	MOVF        R0, 0 
0xA940	0x1601      	ANDWF       R1, 1 
0xA942	0x53E9      	MOVF        _Bandera+5, 1, 1
0xA944	0x0E01      	MOVLW       1
0xA946	0xA4D8      	BTFSS       STATUS, 2 
0xA948	0x0E00      	MOVLW       0
0xA94A	0x6E00      	MOVWF       R0 
0xA94C	0x5000      	MOVF        R0, 0 
0xA94E	0x1601      	ANDWF       R1, 1 
0xA950	0x53EA      	MOVF        _Bandera+6, 1, 1
0xA952	0x0E01      	MOVLW       1
0xA954	0xA4D8      	BTFSS       STATUS, 2 
0xA956	0x0E00      	MOVLW       0
0xA958	0x6E00      	MOVWF       R0 
0xA95A	0x5000      	MOVF        R0, 0 
0xA95C	0x1601      	ANDWF       R1, 1 
0xA95E	0x53EB      	MOVF        _Bandera+7, 1, 1
0xA960	0x0E01      	MOVLW       1
0xA962	0xA4D8      	BTFSS       STATUS, 2 
0xA964	0x0E00      	MOVLW       0
0xA966	0x6E00      	MOVWF       R0 
0xA968	0x5000      	MOVF        R0, 0 
0xA96A	0x1601      	ANDWF       R1, 1 
0xA96C	0x53EC      	MOVF        _Bandera+8, 1, 1
0xA96E	0x0E01      	MOVLW       1
0xA970	0xA4D8      	BTFSS       STATUS, 2 
0xA972	0x0E00      	MOVLW       0
0xA974	0x6E00      	MOVWF       R0 
0xA976	0x5001      	MOVF        R1, 0 
0xA978	0x1600      	ANDWF       R0, 1 
0xA97A	0xE024      	BZ          L_SENSADO639
;MyProject.c,706 :: 		sensorBloqueoPar1();
0xA97C	0xDC68      	RCALL       _sensorBloqueoPar1
;MyProject.c,707 :: 		if(cuenta){
0xA97E	0x0100      	MOVLB       0
0xA980	0x5392      	MOVF        _cuenta, 1, 1
0xA982	0xE020      	BZ          L_SENSADO640
;MyProject.c,708 :: 		auxCuentaBloqueo = eepromLeeNumero(0x000B, 1);
0xA984	0x0E0B      	MOVLW       11
0xA986	0x0102      	MOVLB       2
0xA988	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0xA98A	0x0E00      	MOVLW       0
0xA98C	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0xA98E	0x0E01      	MOVLW       1
0xA990	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0xA992	0xF002EC92  	CALL        _eepromLeeNumero, 0
0xA996	0xF155C000  	MOVFF       R0, _auxCuentaBloqueo
;MyProject.c,709 :: 		auxCuentaBloqueo++;
0xA99A	0x2A00      	INCF        R0, 1 
0xA99C	0xF155C000  	MOVFF       R0, _auxCuentaBloqueo
;MyProject.c,710 :: 		eepromEscribeNumero(0x000B, auxcuentaBloqueo, 1);
0xA9A0	0x0E0B      	MOVLW       11
0xA9A2	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0xA9A4	0x0E00      	MOVLW       0
0xA9A6	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0xA9A8	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0xA9AC	0x0E00      	MOVLW       0
0xA9AE	0xBE00      	BTFSC       R0, 7 
0xA9B0	0x0EFF      	MOVLW       255
0xA9B2	0x6F20      	MOVWF       FARG_eepromEscribeNumero_Dato+1, 1
0xA9B4	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0xA9B6	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0xA9B8	0x0E01      	MOVLW       1
0xA9BA	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0xA9BC	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;MyProject.c,711 :: 		cuenta = false;
0xA9C0	0x0100      	MOVLB       0
0xA9C2	0x6B92      	CLRF        _cuenta, 1
;MyProject.c,712 :: 		}
L_SENSADO640:
;MyProject.c,713 :: 		}
L_SENSADO639:
;MyProject.c,714 :: 		if(Bandera.Par2 & !Bandera.Par1 & !Bandera.Par3 & !Bandera.Par4 & !Bandera.Par5 & !Bandera.Par6 & !Bandera.Par7 & !Bandera.Par8 & !Bandera.Par9){
0xA9C4	0x0101      	MOVLB       1
0xA9C6	0x53E4      	MOVF        _Bandera, 1, 1
0xA9C8	0x0E01      	MOVLW       1
0xA9CA	0xA4D8      	BTFSS       STATUS, 2 
0xA9CC	0x0E00      	MOVLW       0
0xA9CE	0x6E00      	MOVWF       R0 
0xA9D0	0x5000      	MOVF        R0, 0 
0xA9D2	0x15E5      	ANDWF       _Bandera+1, 0, 1
0xA9D4	0x6E01      	MOVWF       R1 
0xA9D6	0x53E6      	MOVF        _Bandera+2, 1, 1
0xA9D8	0x0E01      	MOVLW       1
0xA9DA	0xA4D8      	BTFSS       STATUS, 2 
0xA9DC	0x0E00      	MOVLW       0
0xA9DE	0x6E00      	MOVWF       R0 
0xA9E0	0x5000      	MOVF        R0, 0 
0xA9E2	0x1601      	ANDWF       R1, 1 
0xA9E4	0x53E7      	MOVF        _Bandera+3, 1, 1
0xA9E6	0x0E01      	MOVLW       1
0xA9E8	0xA4D8      	BTFSS       STATUS, 2 
0xA9EA	0x0E00      	MOVLW       0
0xA9EC	0x6E00      	MOVWF       R0 
0xA9EE	0x5000      	MOVF        R0, 0 
0xA9F0	0x1601      	ANDWF       R1, 1 
0xA9F2	0x53E8      	MOVF        _Bandera+4, 1, 1
0xA9F4	0x0E01      	MOVLW       1
0xA9F6	0xA4D8      	BTFSS       STATUS, 2 
0xA9F8	0x0E00      	MOVLW       0
0xA9FA	0x6E00      	MOVWF       R0 
0xA9FC	0x5000      	MOVF        R0, 0 
0xA9FE	0x1601      	ANDWF       R1, 1 
0xAA00	0x53E9      	MOVF        _Bandera+5, 1, 1
0xAA02	0x0E01      	MOVLW       1
0xAA04	0xA4D8      	BTFSS       STATUS, 2 
0xAA06	0x0E00      	MOVLW       0
0xAA08	0x6E00      	MOVWF       R0 
0xAA0A	0x5000      	MOVF        R0, 0 
0xAA0C	0x1601      	ANDWF       R1, 1 
0xAA0E	0x53EA      	MOVF        _Bandera+6, 1, 1
0xAA10	0x0E01      	MOVLW       1
0xAA12	0xA4D8      	BTFSS       STATUS, 2 
0xAA14	0x0E00      	MOVLW       0
0xAA16	0x6E00      	MOVWF       R0 
0xAA18	0x5000      	MOVF        R0, 0 
0xAA1A	0x1601      	ANDWF       R1, 1 
0xAA1C	0x53EB      	MOVF        _Bandera+7, 1, 1
0xAA1E	0x0E01      	MOVLW       1
0xAA20	0xA4D8      	BTFSS       STATUS, 2 
0xAA22	0x0E00      	MOVLW       0
0xAA24	0x6E00      	MOVWF       R0 
0xAA26	0x5000      	MOVF        R0, 0 
0xAA28	0x1601      	ANDWF       R1, 1 
0xAA2A	0x53EC      	MOVF        _Bandera+8, 1, 1
0xAA2C	0x0E01      	MOVLW       1
0xAA2E	0xA4D8      	BTFSS       STATUS, 2 
0xAA30	0x0E00      	MOVLW       0
0xAA32	0x6E00      	MOVWF       R0 
0xAA34	0x5001      	MOVF        R1, 0 
0xAA36	0x1600      	ANDWF       R0, 1 
0xAA38	0xE025      	BZ          L_SENSADO641
;MyProject.c,715 :: 		sensorBloqueoPar2();
0xAA3A	0xF04FEC8C  	CALL        _sensorBloqueoPar2, 0
;MyProject.c,716 :: 		if(cuenta){
0xAA3E	0x0100      	MOVLB       0
0xAA40	0x5392      	MOVF        _cuenta, 1, 1
0xAA42	0xE020      	BZ          L_SENSADO642
;MyProject.c,717 :: 		auxCuentaBloqueo = eepromLeeNumero(0x000B, 1);
0xAA44	0x0E0B      	MOVLW       11
0xAA46	0x0102      	MOVLB       2
0xAA48	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0xAA4A	0x0E00      	MOVLW       0
0xAA4C	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0xAA4E	0x0E01      	MOVLW       1
0xAA50	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0xAA52	0xF002EC92  	CALL        _eepromLeeNumero, 0
0xAA56	0xF155C000  	MOVFF       R0, _auxCuentaBloqueo
;MyProject.c,718 :: 		auxCuentaBloqueo++;
0xAA5A	0x2A00      	INCF        R0, 1 
0xAA5C	0xF155C000  	MOVFF       R0, _auxCuentaBloqueo
;MyProject.c,719 :: 		eepromEscribeNumero(0x000B, auxcuentaBloqueo, 1);
0xAA60	0x0E0B      	MOVLW       11
0xAA62	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0xAA64	0x0E00      	MOVLW       0
0xAA66	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0xAA68	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0xAA6C	0x0E00      	MOVLW       0
0xAA6E	0xBE00      	BTFSC       R0, 7 
0xAA70	0x0EFF      	MOVLW       255
0xAA72	0x6F20      	MOVWF       FARG_eepromEscribeNumero_Dato+1, 1
0xAA74	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0xAA76	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0xAA78	0x0E01      	MOVLW       1
0xAA7A	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0xAA7C	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;MyProject.c,720 :: 		cuenta = false;
0xAA80	0x0100      	MOVLB       0
0xAA82	0x6B92      	CLRF        _cuenta, 1
;MyProject.c,721 :: 		}
L_SENSADO642:
;MyProject.c,722 :: 		}
L_SENSADO641:
;MyProject.c,723 :: 		if(Bandera.Par3 & !Bandera.Par2 & !Bandera.Par1 & !Bandera.Par4 & !Bandera.Par5 & !Bandera.Par6 & !Bandera.Par7 & !Bandera.Par8 & !Bandera.Par9){
0xAA84	0x0101      	MOVLB       1
0xAA86	0x53E5      	MOVF        _Bandera+1, 1, 1
0xAA88	0x0E01      	MOVLW       1
0xAA8A	0xA4D8      	BTFSS       STATUS, 2 
0xAA8C	0x0E00      	MOVLW       0
0xAA8E	0x6E00      	MOVWF       R0 
0xAA90	0x5000      	MOVF        R0, 0 
0xAA92	0x15E6      	ANDWF       _Bandera+2, 0, 1
0xAA94	0x6E01      	MOVWF       R1 
0xAA96	0x53E4      	MOVF        _Bandera, 1, 1
0xAA98	0x0E01      	MOVLW       1
0xAA9A	0xA4D8      	BTFSS       STATUS, 2 
0xAA9C	0x0E00      	MOVLW       0
0xAA9E	0x6E00      	MOVWF       R0 
0xAAA0	0x5000      	MOVF        R0, 0 
0xAAA2	0x1601      	ANDWF       R1, 1 
0xAAA4	0x53E7      	MOVF        _Bandera+3, 1, 1
0xAAA6	0x0E01      	MOVLW       1
0xAAA8	0xA4D8      	BTFSS       STATUS, 2 
0xAAAA	0x0E00      	MOVLW       0
0xAAAC	0x6E00      	MOVWF       R0 
0xAAAE	0x5000      	MOVF        R0, 0 
0xAAB0	0x1601      	ANDWF       R1, 1 
0xAAB2	0x53E8      	MOVF        _Bandera+4, 1, 1
0xAAB4	0x0E01      	MOVLW       1
0xAAB6	0xA4D8      	BTFSS       STATUS, 2 
0xAAB8	0x0E00      	MOVLW       0
0xAABA	0x6E00      	MOVWF       R0 
0xAABC	0x5000      	MOVF        R0, 0 
0xAABE	0x1601      	ANDWF       R1, 1 
0xAAC0	0x53E9      	MOVF        _Bandera+5, 1, 1
0xAAC2	0x0E01      	MOVLW       1
0xAAC4	0xA4D8      	BTFSS       STATUS, 2 
0xAAC6	0x0E00      	MOVLW       0
0xAAC8	0x6E00      	MOVWF       R0 
0xAACA	0x5000      	MOVF        R0, 0 
0xAACC	0x1601      	ANDWF       R1, 1 
0xAACE	0x53EA      	MOVF        _Bandera+6, 1, 1
0xAAD0	0x0E01      	MOVLW       1
0xAAD2	0xA4D8      	BTFSS       STATUS, 2 
0xAAD4	0x0E00      	MOVLW       0
0xAAD6	0x6E00      	MOVWF       R0 
0xAAD8	0x5000      	MOVF        R0, 0 
0xAADA	0x1601      	ANDWF       R1, 1 
0xAADC	0x53EB      	MOVF        _Bandera+7, 1, 1
0xAADE	0x0E01      	MOVLW       1
0xAAE0	0xA4D8      	BTFSS       STATUS, 2 
0xAAE2	0x0E00      	MOVLW       0
0xAAE4	0x6E00      	MOVWF       R0 
0xAAE6	0x5000      	MOVF        R0, 0 
0xAAE8	0x1601      	ANDWF       R1, 1 
0xAAEA	0x53EC      	MOVF        _Bandera+8, 1, 1
0xAAEC	0x0E01      	MOVLW       1
0xAAEE	0xA4D8      	BTFSS       STATUS, 2 
0xAAF0	0x0E00      	MOVLW       0
0xAAF2	0x6E00      	MOVWF       R0 
0xAAF4	0x5001      	MOVF        R1, 0 
0xAAF6	0x1600      	ANDWF       R0, 1 
0xAAF8	0xE025      	BZ          L_SENSADO643
;MyProject.c,724 :: 		sensorBloqueoPar3();
0xAAFA	0xF04FECD9  	CALL        _sensorBloqueoPar3, 0
;MyProject.c,725 :: 		if(cuenta){
0xAAFE	0x0100      	MOVLB       0
0xAB00	0x5392      	MOVF        _cuenta, 1, 1
0xAB02	0xE020      	BZ          L_SENSADO644
;MyProject.c,726 :: 		auxCuentaBloqueo = eepromLeeNumero(0x000B, 1);
0xAB04	0x0E0B      	MOVLW       11
0xAB06	0x0102      	MOVLB       2
0xAB08	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0xAB0A	0x0E00      	MOVLW       0
0xAB0C	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0xAB0E	0x0E01      	MOVLW       1
0xAB10	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0xAB12	0xF002EC92  	CALL        _eepromLeeNumero, 0
0xAB16	0xF155C000  	MOVFF       R0, _auxCuentaBloqueo
;MyProject.c,727 :: 		auxCuentaBloqueo++;
0xAB1A	0x2A00      	INCF        R0, 1 
0xAB1C	0xF155C000  	MOVFF       R0, _auxCuentaBloqueo
;MyProject.c,728 :: 		eepromEscribeNumero(0x000B, auxcuentaBloqueo, 1);
0xAB20	0x0E0B      	MOVLW       11
0xAB22	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0xAB24	0x0E00      	MOVLW       0
0xAB26	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0xAB28	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0xAB2C	0x0E00      	MOVLW       0
0xAB2E	0xBE00      	BTFSC       R0, 7 
0xAB30	0x0EFF      	MOVLW       255
0xAB32	0x6F20      	MOVWF       FARG_eepromEscribeNumero_Dato+1, 1
0xAB34	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0xAB36	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0xAB38	0x0E01      	MOVLW       1
0xAB3A	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0xAB3C	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;MyProject.c,729 :: 		cuenta = false;
0xAB40	0x0100      	MOVLB       0
0xAB42	0x6B92      	CLRF        _cuenta, 1
;MyProject.c,730 :: 		}
L_SENSADO644:
;MyProject.c,731 :: 		}
L_SENSADO643:
;MyProject.c,732 :: 		if(Bandera.Par4 & !Bandera.Par2 & !Bandera.Par3 & !Bandera.Par1 & !Bandera.Par5 & !Bandera.Par6 & !Bandera.Par7 & !Bandera.Par8 & !Bandera.Par9){
0xAB44	0x0101      	MOVLB       1
0xAB46	0x53E5      	MOVF        _Bandera+1, 1, 1
0xAB48	0x0E01      	MOVLW       1
0xAB4A	0xA4D8      	BTFSS       STATUS, 2 
0xAB4C	0x0E00      	MOVLW       0
0xAB4E	0x6E00      	MOVWF       R0 
0xAB50	0x5000      	MOVF        R0, 0 
0xAB52	0x15E7      	ANDWF       _Bandera+3, 0, 1
0xAB54	0x6E01      	MOVWF       R1 
0xAB56	0x53E6      	MOVF        _Bandera+2, 1, 1
0xAB58	0x0E01      	MOVLW       1
0xAB5A	0xA4D8      	BTFSS       STATUS, 2 
0xAB5C	0x0E00      	MOVLW       0
0xAB5E	0x6E00      	MOVWF       R0 
0xAB60	0x5000      	MOVF        R0, 0 
0xAB62	0x1601      	ANDWF       R1, 1 
0xAB64	0x53E4      	MOVF        _Bandera, 1, 1
0xAB66	0x0E01      	MOVLW       1
0xAB68	0xA4D8      	BTFSS       STATUS, 2 
0xAB6A	0x0E00      	MOVLW       0
0xAB6C	0x6E00      	MOVWF       R0 
0xAB6E	0x5000      	MOVF        R0, 0 
0xAB70	0x1601      	ANDWF       R1, 1 
0xAB72	0x53E8      	MOVF        _Bandera+4, 1, 1
0xAB74	0x0E01      	MOVLW       1
0xAB76	0xA4D8      	BTFSS       STATUS, 2 
0xAB78	0x0E00      	MOVLW       0
0xAB7A	0x6E00      	MOVWF       R0 
0xAB7C	0x5000      	MOVF        R0, 0 
0xAB7E	0x1601      	ANDWF       R1, 1 
0xAB80	0x53E9      	MOVF        _Bandera+5, 1, 1
0xAB82	0x0E01      	MOVLW       1
0xAB84	0xA4D8      	BTFSS       STATUS, 2 
0xAB86	0x0E00      	MOVLW       0
0xAB88	0x6E00      	MOVWF       R0 
0xAB8A	0x5000      	MOVF        R0, 0 
0xAB8C	0x1601      	ANDWF       R1, 1 
0xAB8E	0x53EA      	MOVF        _Bandera+6, 1, 1
0xAB90	0x0E01      	MOVLW       1
0xAB92	0xA4D8      	BTFSS       STATUS, 2 
0xAB94	0x0E00      	MOVLW       0
0xAB96	0x6E00      	MOVWF       R0 
0xAB98	0x5000      	MOVF        R0, 0 
0xAB9A	0x1601      	ANDWF       R1, 1 
0xAB9C	0x53EB      	MOVF        _Bandera+7, 1, 1
0xAB9E	0x0E01      	MOVLW       1
0xABA0	0xA4D8      	BTFSS       STATUS, 2 
0xABA2	0x0E00      	MOVLW       0
0xABA4	0x6E00      	MOVWF       R0 
0xABA6	0x5000      	MOVF        R0, 0 
0xABA8	0x1601      	ANDWF       R1, 1 
0xABAA	0x53EC      	MOVF        _Bandera+8, 1, 1
0xABAC	0x0E01      	MOVLW       1
0xABAE	0xA4D8      	BTFSS       STATUS, 2 
0xABB0	0x0E00      	MOVLW       0
0xABB2	0x6E00      	MOVWF       R0 
0xABB4	0x5001      	MOVF        R1, 0 
0xABB6	0x1600      	ANDWF       R0, 1 
0xABB8	0xE025      	BZ          L_SENSADO645
;MyProject.c,733 :: 		sensorBloqueoPar4();
0xABBA	0xF051EC4C  	CALL        _sensorBloqueoPar4, 0
;MyProject.c,734 :: 		if(cuenta){
0xABBE	0x0100      	MOVLB       0
0xABC0	0x5392      	MOVF        _cuenta, 1, 1
0xABC2	0xE020      	BZ          L_SENSADO646
;MyProject.c,735 :: 		auxCuentaBloqueo = eepromLeeNumero(0x000B, 1);
0xABC4	0x0E0B      	MOVLW       11
0xABC6	0x0102      	MOVLB       2
0xABC8	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0xABCA	0x0E00      	MOVLW       0
0xABCC	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0xABCE	0x0E01      	MOVLW       1
0xABD0	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0xABD2	0xF002EC92  	CALL        _eepromLeeNumero, 0
0xABD6	0xF155C000  	MOVFF       R0, _auxCuentaBloqueo
;MyProject.c,736 :: 		auxCuentaBloqueo++;
0xABDA	0x2A00      	INCF        R0, 1 
0xABDC	0xF155C000  	MOVFF       R0, _auxCuentaBloqueo
;MyProject.c,737 :: 		eepromEscribeNumero(0x000B, auxcuentaBloqueo, 1);
0xABE0	0x0E0B      	MOVLW       11
0xABE2	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0xABE4	0x0E00      	MOVLW       0
0xABE6	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0xABE8	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0xABEC	0x0E00      	MOVLW       0
0xABEE	0xBE00      	BTFSC       R0, 7 
0xABF0	0x0EFF      	MOVLW       255
0xABF2	0x6F20      	MOVWF       FARG_eepromEscribeNumero_Dato+1, 1
0xABF4	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0xABF6	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0xABF8	0x0E01      	MOVLW       1
0xABFA	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0xABFC	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;MyProject.c,738 :: 		cuenta = false;
0xAC00	0x0100      	MOVLB       0
0xAC02	0x6B92      	CLRF        _cuenta, 1
;MyProject.c,739 :: 		}
L_SENSADO646:
;MyProject.c,740 :: 		}
L_SENSADO645:
;MyProject.c,741 :: 		if(Bandera.Par6& !Bandera.Par2 & !Bandera.Par3 & !Bandera.Par4 & !Bandera.Par5 & !Bandera.Par1 & !Bandera.Par7 & !Bandera.Par8 & !Bandera.Par9){
0xAC04	0x0101      	MOVLB       1
0xAC06	0x53E5      	MOVF        _Bandera+1, 1, 1
0xAC08	0x0E01      	MOVLW       1
0xAC0A	0xA4D8      	BTFSS       STATUS, 2 
0xAC0C	0x0E00      	MOVLW       0
0xAC0E	0x6E00      	MOVWF       R0 
0xAC10	0x5000      	MOVF        R0, 0 
0xAC12	0x15E9      	ANDWF       _Bandera+5, 0, 1
0xAC14	0x6E01      	MOVWF       R1 
0xAC16	0x53E6      	MOVF        _Bandera+2, 1, 1
0xAC18	0x0E01      	MOVLW       1
0xAC1A	0xA4D8      	BTFSS       STATUS, 2 
0xAC1C	0x0E00      	MOVLW       0
0xAC1E	0x6E00      	MOVWF       R0 
0xAC20	0x5000      	MOVF        R0, 0 
0xAC22	0x1601      	ANDWF       R1, 1 
0xAC24	0x53E7      	MOVF        _Bandera+3, 1, 1
0xAC26	0x0E01      	MOVLW       1
0xAC28	0xA4D8      	BTFSS       STATUS, 2 
0xAC2A	0x0E00      	MOVLW       0
0xAC2C	0x6E00      	MOVWF       R0 
0xAC2E	0x5000      	MOVF        R0, 0 
0xAC30	0x1601      	ANDWF       R1, 1 
0xAC32	0x53E8      	MOVF        _Bandera+4, 1, 1
0xAC34	0x0E01      	MOVLW       1
0xAC36	0xA4D8      	BTFSS       STATUS, 2 
0xAC38	0x0E00      	MOVLW       0
0xAC3A	0x6E00      	MOVWF       R0 
0xAC3C	0x5000      	MOVF        R0, 0 
0xAC3E	0x1601      	ANDWF       R1, 1 
0xAC40	0x53E4      	MOVF        _Bandera, 1, 1
0xAC42	0x0E01      	MOVLW       1
0xAC44	0xA4D8      	BTFSS       STATUS, 2 
0xAC46	0x0E00      	MOVLW       0
0xAC48	0x6E00      	MOVWF       R0 
0xAC4A	0x5000      	MOVF        R0, 0 
0xAC4C	0x1601      	ANDWF       R1, 1 
0xAC4E	0x53EA      	MOVF        _Bandera+6, 1, 1
0xAC50	0x0E01      	MOVLW       1
0xAC52	0xA4D8      	BTFSS       STATUS, 2 
0xAC54	0x0E00      	MOVLW       0
0xAC56	0x6E00      	MOVWF       R0 
0xAC58	0x5000      	MOVF        R0, 0 
0xAC5A	0x1601      	ANDWF       R1, 1 
0xAC5C	0x53EB      	MOVF        _Bandera+7, 1, 1
0xAC5E	0x0E01      	MOVLW       1
0xAC60	0xA4D8      	BTFSS       STATUS, 2 
0xAC62	0x0E00      	MOVLW       0
0xAC64	0x6E00      	MOVWF       R0 
0xAC66	0x5000      	MOVF        R0, 0 
0xAC68	0x1601      	ANDWF       R1, 1 
0xAC6A	0x53EC      	MOVF        _Bandera+8, 1, 1
0xAC6C	0x0E01      	MOVLW       1
0xAC6E	0xA4D8      	BTFSS       STATUS, 2 
0xAC70	0x0E00      	MOVLW       0
0xAC72	0x6E00      	MOVWF       R0 
0xAC74	0x5001      	MOVF        R1, 0 
0xAC76	0x1600      	ANDWF       R0, 1 
0xAC78	0xE025      	BZ          L_SENSADO647
;MyProject.c,742 :: 		sensorBloqueoPar6();
0xAC7A	0xF04FECFE  	CALL        _sensorBloqueoPar6, 0
;MyProject.c,743 :: 		if(cuenta){
0xAC7E	0x0100      	MOVLB       0
0xAC80	0x5392      	MOVF        _cuenta, 1, 1
0xAC82	0xE020      	BZ          L_SENSADO648
;MyProject.c,744 :: 		auxCuentaBloqueo = eepromLeeNumero(0x000B, 1);
0xAC84	0x0E0B      	MOVLW       11
0xAC86	0x0102      	MOVLB       2
0xAC88	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0xAC8A	0x0E00      	MOVLW       0
0xAC8C	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0xAC8E	0x0E01      	MOVLW       1
0xAC90	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0xAC92	0xF002EC92  	CALL        _eepromLeeNumero, 0
0xAC96	0xF155C000  	MOVFF       R0, _auxCuentaBloqueo
;MyProject.c,745 :: 		auxCuentaBloqueo++;
0xAC9A	0x2A00      	INCF        R0, 1 
0xAC9C	0xF155C000  	MOVFF       R0, _auxCuentaBloqueo
;MyProject.c,746 :: 		eepromEscribeNumero(0x000B, auxcuentaBloqueo, 1);
0xACA0	0x0E0B      	MOVLW       11
0xACA2	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0xACA4	0x0E00      	MOVLW       0
0xACA6	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0xACA8	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0xACAC	0x0E00      	MOVLW       0
0xACAE	0xBE00      	BTFSC       R0, 7 
0xACB0	0x0EFF      	MOVLW       255
0xACB2	0x6F20      	MOVWF       FARG_eepromEscribeNumero_Dato+1, 1
0xACB4	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0xACB6	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0xACB8	0x0E01      	MOVLW       1
0xACBA	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0xACBC	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;MyProject.c,747 :: 		cuenta = false;
0xACC0	0x0100      	MOVLB       0
0xACC2	0x6B92      	CLRF        _cuenta, 1
;MyProject.c,748 :: 		}
L_SENSADO648:
;MyProject.c,749 :: 		}
L_SENSADO647:
;MyProject.c,750 :: 		if(Bandera.Par7 & !Bandera.Par2 & !Bandera.Par3 & !Bandera.Par4 & !Bandera.Par5 & !Bandera.Par6 & !Bandera.Par1 & !Bandera.Par8 & !Bandera.Par9){
0xACC4	0x0101      	MOVLB       1
0xACC6	0x53E5      	MOVF        _Bandera+1, 1, 1
0xACC8	0x0E01      	MOVLW       1
0xACCA	0xA4D8      	BTFSS       STATUS, 2 
0xACCC	0x0E00      	MOVLW       0
0xACCE	0x6E00      	MOVWF       R0 
0xACD0	0x5000      	MOVF        R0, 0 
0xACD2	0x15EA      	ANDWF       _Bandera+6, 0, 1
0xACD4	0x6E01      	MOVWF       R1 
0xACD6	0x53E6      	MOVF        _Bandera+2, 1, 1
0xACD8	0x0E01      	MOVLW       1
0xACDA	0xA4D8      	BTFSS       STATUS, 2 
0xACDC	0x0E00      	MOVLW       0
0xACDE	0x6E00      	MOVWF       R0 
0xACE0	0x5000      	MOVF        R0, 0 
0xACE2	0x1601      	ANDWF       R1, 1 
0xACE4	0x53E7      	MOVF        _Bandera+3, 1, 1
0xACE6	0x0E01      	MOVLW       1
0xACE8	0xA4D8      	BTFSS       STATUS, 2 
0xACEA	0x0E00      	MOVLW       0
0xACEC	0x6E00      	MOVWF       R0 
0xACEE	0x5000      	MOVF        R0, 0 
0xACF0	0x1601      	ANDWF       R1, 1 
0xACF2	0x53E8      	MOVF        _Bandera+4, 1, 1
0xACF4	0x0E01      	MOVLW       1
0xACF6	0xA4D8      	BTFSS       STATUS, 2 
0xACF8	0x0E00      	MOVLW       0
0xACFA	0x6E00      	MOVWF       R0 
0xACFC	0x5000      	MOVF        R0, 0 
0xACFE	0x1601      	ANDWF       R1, 1 
0xAD00	0x53E9      	MOVF        _Bandera+5, 1, 1
0xAD02	0x0E01      	MOVLW       1
0xAD04	0xA4D8      	BTFSS       STATUS, 2 
0xAD06	0x0E00      	MOVLW       0
0xAD08	0x6E00      	MOVWF       R0 
0xAD0A	0x5000      	MOVF        R0, 0 
0xAD0C	0x1601      	ANDWF       R1, 1 
0xAD0E	0x53E4      	MOVF        _Bandera, 1, 1
0xAD10	0x0E01      	MOVLW       1
0xAD12	0xA4D8      	BTFSS       STATUS, 2 
0xAD14	0x0E00      	MOVLW       0
0xAD16	0x6E00      	MOVWF       R0 
0xAD18	0x5000      	MOVF        R0, 0 
0xAD1A	0x1601      	ANDWF       R1, 1 
0xAD1C	0x53EB      	MOVF        _Bandera+7, 1, 1
0xAD1E	0x0E01      	MOVLW       1
0xAD20	0xA4D8      	BTFSS       STATUS, 2 
0xAD22	0x0E00      	MOVLW       0
0xAD24	0x6E00      	MOVWF       R0 
0xAD26	0x5000      	MOVF        R0, 0 
0xAD28	0x1601      	ANDWF       R1, 1 
0xAD2A	0x53EC      	MOVF        _Bandera+8, 1, 1
0xAD2C	0x0E01      	MOVLW       1
0xAD2E	0xA4D8      	BTFSS       STATUS, 2 
0xAD30	0x0E00      	MOVLW       0
0xAD32	0x6E00      	MOVWF       R0 
0xAD34	0x5001      	MOVF        R1, 0 
0xAD36	0x1600      	ANDWF       R0, 1 
0xAD38	0xE025      	BZ          L_SENSADO649
;MyProject.c,751 :: 		sensorBloqueoPar7();
0xAD3A	0xF04FEC67  	CALL        _sensorBloqueoPar7, 0
;MyProject.c,752 :: 		if(cuenta){
0xAD3E	0x0100      	MOVLB       0
0xAD40	0x5392      	MOVF        _cuenta, 1, 1
0xAD42	0xE020      	BZ          L_SENSADO650
;MyProject.c,753 :: 		auxCuentaBloqueo = eepromLeeNumero(0x000B, 1);
0xAD44	0x0E0B      	MOVLW       11
0xAD46	0x0102      	MOVLB       2
0xAD48	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0xAD4A	0x0E00      	MOVLW       0
0xAD4C	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0xAD4E	0x0E01      	MOVLW       1
0xAD50	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0xAD52	0xF002EC92  	CALL        _eepromLeeNumero, 0
0xAD56	0xF155C000  	MOVFF       R0, _auxCuentaBloqueo
;MyProject.c,754 :: 		auxCuentaBloqueo++;
0xAD5A	0x2A00      	INCF        R0, 1 
0xAD5C	0xF155C000  	MOVFF       R0, _auxCuentaBloqueo
;MyProject.c,755 :: 		eepromEscribeNumero(0x000B, auxcuentaBloqueo, 1);
0xAD60	0x0E0B      	MOVLW       11
0xAD62	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0xAD64	0x0E00      	MOVLW       0
0xAD66	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0xAD68	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0xAD6C	0x0E00      	MOVLW       0
0xAD6E	0xBE00      	BTFSC       R0, 7 
0xAD70	0x0EFF      	MOVLW       255
0xAD72	0x6F20      	MOVWF       FARG_eepromEscribeNumero_Dato+1, 1
0xAD74	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0xAD76	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0xAD78	0x0E01      	MOVLW       1
0xAD7A	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0xAD7C	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;MyProject.c,756 :: 		cuenta = false;
0xAD80	0x0100      	MOVLB       0
0xAD82	0x6B92      	CLRF        _cuenta, 1
;MyProject.c,757 :: 		}
L_SENSADO650:
;MyProject.c,758 :: 		}
L_SENSADO649:
;MyProject.c,759 :: 		if(Bandera.Par9 & !Bandera.Par2 & !Bandera.Par3 & !Bandera.Par4 & !Bandera.Par5 & !Bandera.Par6 & !Bandera.Par7 & !Bandera.Par8 & !Bandera.Par1){
0xAD84	0x0101      	MOVLB       1
0xAD86	0x53E5      	MOVF        _Bandera+1, 1, 1
0xAD88	0x0E01      	MOVLW       1
0xAD8A	0xA4D8      	BTFSS       STATUS, 2 
0xAD8C	0x0E00      	MOVLW       0
0xAD8E	0x6E00      	MOVWF       R0 
0xAD90	0x5000      	MOVF        R0, 0 
0xAD92	0x15EC      	ANDWF       _Bandera+8, 0, 1
0xAD94	0x6E01      	MOVWF       R1 
0xAD96	0x53E6      	MOVF        _Bandera+2, 1, 1
0xAD98	0x0E01      	MOVLW       1
0xAD9A	0xA4D8      	BTFSS       STATUS, 2 
0xAD9C	0x0E00      	MOVLW       0
0xAD9E	0x6E00      	MOVWF       R0 
0xADA0	0x5000      	MOVF        R0, 0 
0xADA2	0x1601      	ANDWF       R1, 1 
0xADA4	0x53E7      	MOVF        _Bandera+3, 1, 1
0xADA6	0x0E01      	MOVLW       1
0xADA8	0xA4D8      	BTFSS       STATUS, 2 
0xADAA	0x0E00      	MOVLW       0
0xADAC	0x6E00      	MOVWF       R0 
0xADAE	0x5000      	MOVF        R0, 0 
0xADB0	0x1601      	ANDWF       R1, 1 
0xADB2	0x53E8      	MOVF        _Bandera+4, 1, 1
0xADB4	0x0E01      	MOVLW       1
0xADB6	0xA4D8      	BTFSS       STATUS, 2 
0xADB8	0x0E00      	MOVLW       0
0xADBA	0x6E00      	MOVWF       R0 
0xADBC	0x5000      	MOVF        R0, 0 
0xADBE	0x1601      	ANDWF       R1, 1 
0xADC0	0x53E9      	MOVF        _Bandera+5, 1, 1
0xADC2	0x0E01      	MOVLW       1
0xADC4	0xA4D8      	BTFSS       STATUS, 2 
0xADC6	0x0E00      	MOVLW       0
0xADC8	0x6E00      	MOVWF       R0 
0xADCA	0x5000      	MOVF        R0, 0 
0xADCC	0x1601      	ANDWF       R1, 1 
0xADCE	0x53EA      	MOVF        _Bandera+6, 1, 1
0xADD0	0x0E01      	MOVLW       1
0xADD2	0xA4D8      	BTFSS       STATUS, 2 
0xADD4	0x0E00      	MOVLW       0
0xADD6	0x6E00      	MOVWF       R0 
0xADD8	0x5000      	MOVF        R0, 0 
0xADDA	0x1601      	ANDWF       R1, 1 
0xADDC	0x53EB      	MOVF        _Bandera+7, 1, 1
0xADDE	0x0E01      	MOVLW       1
0xADE0	0xA4D8      	BTFSS       STATUS, 2 
0xADE2	0x0E00      	MOVLW       0
0xADE4	0x6E00      	MOVWF       R0 
0xADE6	0x5000      	MOVF        R0, 0 
0xADE8	0x1601      	ANDWF       R1, 1 
0xADEA	0x53E4      	MOVF        _Bandera, 1, 1
0xADEC	0x0E01      	MOVLW       1
0xADEE	0xA4D8      	BTFSS       STATUS, 2 
0xADF0	0x0E00      	MOVLW       0
0xADF2	0x6E00      	MOVWF       R0 
0xADF4	0x5001      	MOVF        R1, 0 
0xADF6	0x1600      	ANDWF       R0, 1 
0xADF8	0xE025      	BZ          L_SENSADO651
;MyProject.c,760 :: 		sensorBloqueoPar9();
0xADFA	0xF051EC02  	CALL        _sensorBloqueoPar9, 0
;MyProject.c,761 :: 		if(cuenta){
0xADFE	0x0100      	MOVLB       0
0xAE00	0x5392      	MOVF        _cuenta, 1, 1
0xAE02	0xE020      	BZ          L_SENSADO652
;MyProject.c,762 :: 		auxCuentaBloqueo = eepromLeeNumero(0x000B, 1);
0xAE04	0x0E0B      	MOVLW       11
0xAE06	0x0102      	MOVLB       2
0xAE08	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0xAE0A	0x0E00      	MOVLW       0
0xAE0C	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0xAE0E	0x0E01      	MOVLW       1
0xAE10	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0xAE12	0xF002EC92  	CALL        _eepromLeeNumero, 0
0xAE16	0xF155C000  	MOVFF       R0, _auxCuentaBloqueo
;MyProject.c,763 :: 		auxCuentaBloqueo++;
0xAE1A	0x2A00      	INCF        R0, 1 
0xAE1C	0xF155C000  	MOVFF       R0, _auxCuentaBloqueo
;MyProject.c,764 :: 		eepromEscribeNumero(0x000B, AuxcuentaBloqueo, 1);
0xAE20	0x0E0B      	MOVLW       11
0xAE22	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0xAE24	0x0E00      	MOVLW       0
0xAE26	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0xAE28	0xF21FC000  	MOVFF       R0, FARG_eepromEscribeNumero_Dato
0xAE2C	0x0E00      	MOVLW       0
0xAE2E	0xBE00      	BTFSC       R0, 7 
0xAE30	0x0EFF      	MOVLW       255
0xAE32	0x6F20      	MOVWF       FARG_eepromEscribeNumero_Dato+1, 1
0xAE34	0x6F21      	MOVWF       FARG_eepromEscribeNumero_Dato+2, 1
0xAE36	0x6F22      	MOVWF       FARG_eepromEscribeNumero_Dato+3, 1
0xAE38	0x0E01      	MOVLW       1
0xAE3A	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0xAE3C	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;MyProject.c,765 :: 		cuenta = false;
0xAE40	0x0100      	MOVLB       0
0xAE42	0x6B92      	CLRF        _cuenta, 1
;MyProject.c,766 :: 		}
L_SENSADO652:
;MyProject.c,767 :: 		}
L_SENSADO651:
;MyProject.c,768 :: 		}
L_end_SENSADO:
0xAE44	0x0012      	RETURN      0
; end of _SENSADO
_iniciaEeprom:
;eepromi2cbrian_v2.h,22 :: 		void iniciaEeprom(){
;eepromi2cbrian_v2.h,23 :: 		I2C_soft_init();
0xAE46	0xF04DEC26  	CALL        _I2C_soft_init, 0
;eepromi2cbrian_v2.h,24 :: 		}
L_end_iniciaEeprom:
0xAE4A	0x0012      	RETURN      0
; end of _iniciaEeprom
_resetSLV:
;MyProject.c,836 :: 		void resetSLV(){
;MyProject.c,837 :: 		if(banderaReset){
0xAE4C	0x525B      	MOVF        _banderaReset, 1 
0xAE4E	0xE033      	BZ          L_resetSLV663
;MyProject.c,838 :: 		eepromEscribeNumero(0x0000, 0x0000, 2);
0xAE50	0x0102      	MOVLB       2
0xAE52	0x6B1D      	CLRF        FARG_eepromEscribeNumero_Registro, 1
0xAE54	0x6B1E      	CLRF        FARG_eepromEscribeNumero_Registro+1, 1
0xAE56	0x6B1F      	CLRF        FARG_eepromEscribeNumero_Dato, 1
0xAE58	0x6B20      	CLRF        FARG_eepromEscribeNumero_Dato+1, 1
0xAE5A	0x6B21      	CLRF        FARG_eepromEscribeNumero_Dato+2, 1
0xAE5C	0x6B22      	CLRF        FARG_eepromEscribeNumero_Dato+3, 1
0xAE5E	0x0E02      	MOVLW       2
0xAE60	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0xAE62	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;MyProject.c,839 :: 		eepromEscribeNumero(0x0003, 0x0000, 2);
0xAE66	0x0E03      	MOVLW       3
0xAE68	0x0102      	MOVLB       2
0xAE6A	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0xAE6C	0x0E00      	MOVLW       0
0xAE6E	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0xAE70	0x6B1F      	CLRF        FARG_eepromEscribeNumero_Dato, 1
0xAE72	0x6B20      	CLRF        FARG_eepromEscribeNumero_Dato+1, 1
0xAE74	0x6B21      	CLRF        FARG_eepromEscribeNumero_Dato+2, 1
0xAE76	0x6B22      	CLRF        FARG_eepromEscribeNumero_Dato+3, 1
0xAE78	0x0E02      	MOVLW       2
0xAE7A	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0xAE7C	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;MyProject.c,840 :: 		eepromEscribeNumero(0x0009, 0x0000, 2);
0xAE80	0x0E09      	MOVLW       9
0xAE82	0x0102      	MOVLB       2
0xAE84	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0xAE86	0x0E00      	MOVLW       0
0xAE88	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0xAE8A	0x6B1F      	CLRF        FARG_eepromEscribeNumero_Dato, 1
0xAE8C	0x6B20      	CLRF        FARG_eepromEscribeNumero_Dato+1, 1
0xAE8E	0x6B21      	CLRF        FARG_eepromEscribeNumero_Dato+2, 1
0xAE90	0x6B22      	CLRF        FARG_eepromEscribeNumero_Dato+3, 1
0xAE92	0x0E02      	MOVLW       2
0xAE94	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0xAE96	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;MyProject.c,841 :: 		eepromEscribeNumero(0x000B, 0x00, 1);
0xAE9A	0x0E0B      	MOVLW       11
0xAE9C	0x0102      	MOVLB       2
0xAE9E	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0xAEA0	0x0E00      	MOVLW       0
0xAEA2	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0xAEA4	0x6B1F      	CLRF        FARG_eepromEscribeNumero_Dato, 1
0xAEA6	0x6B20      	CLRF        FARG_eepromEscribeNumero_Dato+1, 1
0xAEA8	0x6B21      	CLRF        FARG_eepromEscribeNumero_Dato+2, 1
0xAEAA	0x6B22      	CLRF        FARG_eepromEscribeNumero_Dato+3, 1
0xAEAC	0x0E01      	MOVLW       1
0xAEAE	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0xAEB0	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;MyProject.c,842 :: 		banderaReset = false;
0xAEB4	0x6A5B      	CLRF        _banderaReset 
;MyProject.c,843 :: 		}
L_resetSLV663:
;MyProject.c,844 :: 		}
L_end_resetSLV:
0xAEB6	0x0012      	RETURN      0
; end of _resetSLV
_strcmp:
;__Lib_CString.c,122 :: 		
;__Lib_CString.c,124 :: 		
L_strcmp30:
0xAEB8	0xFFE9C25F  	MOVFF       FARG_strcmp_s1, FSR0L
0xAEBC	0xFFEAC260  	MOVFF       FARG_strcmp_s1+1, FSR0H
0xAEC0	0x52EE      	MOVF        POSTINC0, 1 
0xAEC2	0xE011      	BZ          L_strcmp31
0xAEC4	0xFFE9C25F  	MOVFF       FARG_strcmp_s1, FSR0L
0xAEC8	0xFFEAC260  	MOVFF       FARG_strcmp_s1+1, FSR0H
0xAECC	0xFFD9C261  	MOVFF       FARG_strcmp_s2, FSR2L
0xAED0	0xFFDAC262  	MOVFF       FARG_strcmp_s2+1, FSR2H
0xAED4	0x50EE      	MOVF        POSTINC0, 0 
0xAED6	0x18DE      	XORWF       POSTINC2, 0 
0xAED8	0xE106      	BNZ         L_strcmp31
L__strcmp81:
;__Lib_CString.c,125 :: 		
0xAEDA	0x0102      	MOVLB       2
0xAEDC	0x4B5F      	INFSNZ      FARG_strcmp_s1, 1, 1
0xAEDE	0x2B60      	INCF        FARG_strcmp_s1+1, 1, 1
0xAEE0	0x4B61      	INFSNZ      FARG_strcmp_s2, 1, 1
0xAEE2	0x2B62      	INCF        FARG_strcmp_s2+1, 1, 1
0xAEE4	0xD7E9      	BRA         L_strcmp30
L_strcmp31:
;__Lib_CString.c,127 :: 		
0xAEE6	0xFFE9C25F  	MOVFF       FARG_strcmp_s1, FSR0L
0xAEEA	0xFFEAC260  	MOVFF       FARG_strcmp_s1+1, FSR0H
0xAEEE	0xFFD9C261  	MOVFF       FARG_strcmp_s2, FSR2L
0xAEF2	0xFFDAC262  	MOVFF       FARG_strcmp_s2+1, FSR2H
0xAEF6	0x50DE      	MOVF        POSTINC2, 0 
0xAEF8	0x5CEE      	SUBWF       POSTINC0, 0 
0xAEFA	0x6E00      	MOVWF       R0 
0xAEFC	0x6A01      	CLRF        R1 
0xAEFE	0x0E00      	MOVLW       0
0xAF00	0x5A01      	SUBWFB      R1, 1 
;__Lib_CString.c,128 :: 		
L_end_strcmp:
0xAF02	0x0012      	RETURN      0
; end of _strcmp
_UART1_Read_Text:
;__Lib_UART_c67.c,78 :: 		
;__Lib_UART_c67.c,79 :: 		
0xAF04	0x0102      	MOVLB       2
0xAF06	0x6B65      	CLRF        UART1_Read_Text_out_idx_L0, 1
0xAF08	0x6B66      	CLRF        UART1_Read_Text_delim_idx_L0, 1
;__Lib_UART_c67.c,81 :: 		
L_UART1_Read_Text7:
0xAF0A	0x5363      	MOVF        FARG_UART1_Read_Text_Attempts, 1, 1
0xAF0C	0xE044      	BZ          L_UART1_Read_Text8
;__Lib_UART_c67.c,83 :: 		
0xAF0E	0x5163      	MOVF        FARG_UART1_Read_Text_Attempts, 0, 1
0xAF10	0x0AFF      	XORLW       255
0xAF12	0xA4D8      	BTFSS       STATUS, 2 
;__Lib_UART_c67.c,84 :: 		
0xAF14	0x0763      	DECF        FARG_UART1_Read_Text_Attempts, 1, 1
L_UART1_Read_Text9:
;__Lib_UART_c67.c,86 :: 		
L_UART1_Read_Text10:
0xAF16	0xF04DECF8  	CALL        _UART1_Data_Ready, 0
0xAF1A	0x5000      	MOVF        R0, 0 
0xAF1C	0x0A00      	XORLW       0
0xAF1E	0xE101      	BNZ         L_UART1_Read_Text11
;__Lib_UART_c67.c,87 :: 		
0xAF20	0xD7FA      	BRA         L_UART1_Read_Text10
L_UART1_Read_Text11:
;__Lib_UART_c67.c,89 :: 		
0xAF22	0xF04DECEF  	CALL        _UART1_Read, 0
0xAF26	0xF264C000  	MOVFF       R0, UART1_Read_Text_r_data_L0
;__Lib_UART_c67.c,90 :: 		
0xAF2A	0x0102      	MOVLB       2
0xAF2C	0x5165      	MOVF        UART1_Read_Text_out_idx_L0, 0, 1
0xAF2E	0x255F      	ADDWF       FARG_UART1_Read_Text_Output, 0, 1
0xAF30	0x6EE1      	MOVWF       FSR1L 
0xAF32	0x0E00      	MOVLW       0
0xAF34	0x2160      	ADDWFC      FARG_UART1_Read_Text_Output+1, 0, 1
0xAF36	0x6EE2      	MOVWF       FSR1H 
0xAF38	0xFFE6C000  	MOVFF       R0, POSTINC1
0xAF3C	0x2B65      	INCF        UART1_Read_Text_out_idx_L0, 1, 1
;__Lib_UART_c67.c,91 :: 		
0xAF3E	0x5166      	MOVF        UART1_Read_Text_delim_idx_L0, 0, 1
0xAF40	0x2561      	ADDWF       FARG_UART1_Read_Text_Delimiter, 0, 1
0xAF42	0x6EE9      	MOVWF       FSR0L 
0xAF44	0x0E00      	MOVLW       0
0xAF46	0x2162      	ADDWFC      FARG_UART1_Read_Text_Delimiter+1, 0, 1
0xAF48	0x6EEA      	MOVWF       FSR0H 
0xAF4A	0x50EE      	MOVF        POSTINC0, 0 
0xAF4C	0x1964      	XORWF       UART1_Read_Text_r_data_L0, 0, 1
0xAF4E	0xE102      	BNZ         L_UART1_Read_Text12
;__Lib_UART_c67.c,92 :: 		
0xAF50	0x2B66      	INCF        UART1_Read_Text_delim_idx_L0, 1, 1
;__Lib_UART_c67.c,93 :: 		
0xAF52	0xD009      	BRA         L_UART1_Read_Text13
L_UART1_Read_Text12:
;__Lib_UART_c67.c,95 :: 		
0xAF54	0x6B66      	CLRF        UART1_Read_Text_delim_idx_L0, 1
;__Lib_UART_c67.c,96 :: 		
0xAF56	0xFFE9C261  	MOVFF       FARG_UART1_Read_Text_Delimiter, FSR0L
0xAF5A	0xFFEAC262  	MOVFF       FARG_UART1_Read_Text_Delimiter+1, FSR0H
0xAF5E	0x50EE      	MOVF        POSTINC0, 0 
0xAF60	0x1964      	XORWF       UART1_Read_Text_r_data_L0, 0, 1
0xAF62	0xB4D8      	BTFSC       STATUS, 2 
;__Lib_UART_c67.c,97 :: 		
0xAF64	0x2B66      	INCF        UART1_Read_Text_delim_idx_L0, 1, 1
;__Lib_UART_c67.c,98 :: 		
L_UART1_Read_Text14:
;__Lib_UART_c67.c,99 :: 		
L_UART1_Read_Text13:
;__Lib_UART_c67.c,101 :: 		
0xAF66	0x5166      	MOVF        UART1_Read_Text_delim_idx_L0, 0, 1
0xAF68	0x2561      	ADDWF       FARG_UART1_Read_Text_Delimiter, 0, 1
0xAF6A	0x6EE9      	MOVWF       FSR0L 
0xAF6C	0x0E00      	MOVLW       0
0xAF6E	0x2162      	ADDWFC      FARG_UART1_Read_Text_Delimiter+1, 0, 1
0xAF70	0x6EEA      	MOVWF       FSR0H 
0xAF72	0x50EE      	MOVF        POSTINC0, 0 
0xAF74	0x0A00      	XORLW       0
0xAF76	0xE10E      	BNZ         L_UART1_Read_Text15
;__Lib_UART_c67.c,102 :: 		
0xAF78	0x5166      	MOVF        UART1_Read_Text_delim_idx_L0, 0, 1
0xAF7A	0x5D65      	SUBWF       UART1_Read_Text_out_idx_L0, 0, 1
0xAF7C	0x6E00      	MOVWF       R0 
0xAF7E	0x6A01      	CLRF        R1 
0xAF80	0x0E00      	MOVLW       0
0xAF82	0x5A01      	SUBWFB      R1, 1 
0xAF84	0x5000      	MOVF        R0, 0 
0xAF86	0x255F      	ADDWF       FARG_UART1_Read_Text_Output, 0, 1
0xAF88	0x6EE1      	MOVWF       FSR1L 
0xAF8A	0x5001      	MOVF        R1, 0 
0xAF8C	0x2160      	ADDWFC      FARG_UART1_Read_Text_Output+1, 0, 1
0xAF8E	0x6EE2      	MOVWF       FSR1H 
0xAF90	0x6AE6      	CLRF        POSTINC1 
;__Lib_UART_c67.c,103 :: 		
0xAF92	0xD006      	BRA         L_end_UART1_Read_Text
;__Lib_UART_c67.c,104 :: 		
L_UART1_Read_Text15:
;__Lib_UART_c67.c,106 :: 		
0xAF94	0xD7BA      	BRA         L_UART1_Read_Text7
L_UART1_Read_Text8:
;__Lib_UART_c67.c,107 :: 		
0xAF96	0xFFE1C25F  	MOVFF       FARG_UART1_Read_Text_Output, FSR1L
0xAF9A	0xFFE2C260  	MOVFF       FARG_UART1_Read_Text_Output+1, FSR1H
0xAF9E	0x6AE6      	CLRF        POSTINC1 
;__Lib_UART_c67.c,108 :: 		
L_end_UART1_Read_Text:
0xAFA0	0x0012      	RETURN      0
; end of _UART1_Read_Text
_bloqueos:
;bloqueos_v1.h,45 :: 		void bloqueos(bool SENSOR1, bool SENSOR2, bool SENSOR3, bool SENSOR4, bool SENSOR5, bool SENSOR6, short *cuentaBloqueo){
;bloqueos_v1.h,46 :: 		char aux[12] = {0};
;bloqueos_v1.h,48 :: 		if(!SENSOR1 & SENSOR2){
0xAFA2	0x0102      	MOVLB       2
0xAFA4	0x5355      	MOVF        FARG_bloqueos_SENSOR1, 1, 1
0xAFA6	0x0E01      	MOVLW       1
0xAFA8	0xA4D8      	BTFSS       STATUS, 2 
0xAFAA	0x0E00      	MOVLW       0
0xAFAC	0x6E00      	MOVWF       R0 
0xAFAE	0x5156      	MOVF        FARG_bloqueos_SENSOR2, 0, 1
0xAFB0	0x1600      	ANDWF       R0, 1 
0xAFB2	0xE03B      	BZ          L_bloqueos26
;bloqueos_v1.h,49 :: 		Desborde.SensorU = Desborde.SensorU++;
0xAFB4	0x0E01      	MOVLW       1
0xAFB6	0x0101      	MOVLB       1
0xAFB8	0x25BE      	ADDWF       _Desborde+18, 0, 1
0xAFBA	0x6E00      	MOVWF       R0 
0xAFBC	0x0E00      	MOVLW       0
0xAFBE	0x21BF      	ADDWFC      _Desborde+19, 0, 1
0xAFC0	0x6E01      	MOVWF       R1 
0xAFC2	0xF1BEC000  	MOVFF       R0, _Desborde+18
0xAFC6	0xF1BFC001  	MOVFF       R1, _Desborde+19
;bloqueos_v1.h,50 :: 		if(Desborde.SensorU > PERIODOBLOQUEO){
0xAFCA	0x0E00      	MOVLW       0
0xAFCC	0x6E00      	MOVWF       R0 
0xAFCE	0x51BF      	MOVF        _Desborde+19, 0, 1
0xAFD0	0x5C00      	SUBWF       R0, 0 
0xAFD2	0xE102      	BNZ         L__bloqueos682
0xAFD4	0x51BE      	MOVF        _Desborde+18, 0, 1
0xAFD6	0x0808      	SUBLW       8
L__bloqueos682:
0xAFD8	0xE227      	BC          L_bloqueos27
;bloqueos_v1.h,51 :: 		if(!Bandera.SensorU & !Bandera.Par1){
0xAFDA	0x53ED      	MOVF        _Bandera+9, 1, 1
0xAFDC	0x0E01      	MOVLW       1
0xAFDE	0xA4D8      	BTFSS       STATUS, 2 
0xAFE0	0x0E00      	MOVLW       0
0xAFE2	0x6E01      	MOVWF       R1 
0xAFE4	0x53E4      	MOVF        _Bandera, 1, 1
0xAFE6	0x0E01      	MOVLW       1
0xAFE8	0xA4D8      	BTFSS       STATUS, 2 
0xAFEA	0x0E00      	MOVLW       0
0xAFEC	0x6E00      	MOVWF       R0 
0xAFEE	0x5001      	MOVF        R1, 0 
0xAFF0	0x1600      	ANDWF       R0, 1 
0xAFF2	0xE01A      	BZ          L_bloqueos28
;bloqueos_v1.h,52 :: 		(*cuentaBloqueo) = (*cuentaBloqueo) + 1;
0xAFF4	0xFFE9C25B  	MOVFF       FARG_bloqueos_cuentaBloqueo, FSR0L
0xAFF8	0xFFEAC25C  	MOVFF       FARG_bloqueos_cuentaBloqueo+1, FSR0H
0xAFFC	0xFFE1C25B  	MOVFF       FARG_bloqueos_cuentaBloqueo, FSR1L
0xB000	0xFFE2C25C  	MOVFF       FARG_bloqueos_cuentaBloqueo+1, FSR1H
0xB004	0x2AE6      	INCF        POSTINC1, 1 
;bloqueos_v1.h,53 :: 		Bandera.SensorU = true;
0xB006	0x0E01      	MOVLW       1
0xB008	0x6FED      	MOVWF       _Bandera+9, 1
;bloqueos_v1.h,54 :: 		Desborde.SensorU = 0;
0xB00A	0x6BBE      	CLRF        _Desborde+18, 1
0xB00C	0x6BBF      	CLRF        _Desborde+19, 1
;bloqueos_v1.h,55 :: 		desbordoGPS = periodoEnvioGPS - 2;
0xB00E	0x0EB2      	MOVLW       178
0xB010	0x0100      	MOVLB       0
0xB012	0x6FE1      	MOVWF       _desbordoGPS, 1
0xB014	0x0E00      	MOVLW       0
0xB016	0x6FE2      	MOVWF       _desbordoGPS+1, 1
;bloqueos_v1.h,56 :: 		if(!MSTR){
0xB018	0xB483      	BTFSC       PORTD, 2 
0xB01A	0xD006      	BRA         L_bloqueos29
;bloqueos_v1.h,57 :: 		EnvioCuenta = true;
0xB01C	0x0E01      	MOVLW       1
0xB01E	0x6E5C      	MOVWF       _EnvioCuenta 
;bloqueos_v1.h,58 :: 		desbordoGPS_SLV = periodoEnvioGPS - 2;
0xB020	0x0EB2      	MOVLW       178
0xB022	0x6F6B      	MOVWF       _desbordoGPS_SLV, 1
0xB024	0x0E00      	MOVLW       0
0xB026	0x6F6C      	MOVWF       _desbordoGPS_SLV+1, 1
;bloqueos_v1.h,59 :: 		}
L_bloqueos29:
;bloqueos_v1.h,60 :: 		}
L_bloqueos28:
;bloqueos_v1.h,61 :: 		}
L_bloqueos27:
;bloqueos_v1.h,62 :: 		}
0xB028	0xD004      	BRA         L_bloqueos30
L_bloqueos26:
;bloqueos_v1.h,64 :: 		Bandera.SensorU = false;
0xB02A	0x0101      	MOVLB       1
0xB02C	0x6BED      	CLRF        _Bandera+9, 1
;bloqueos_v1.h,65 :: 		Desborde.SensorU = 0;
0xB02E	0x6BBE      	CLRF        _Desborde+18, 1
0xB030	0x6BBF      	CLRF        _Desborde+19, 1
;bloqueos_v1.h,66 :: 		}
L_bloqueos30:
;bloqueos_v1.h,68 :: 		if(!SENSOR2 & SENSOR1){
0xB032	0x0102      	MOVLB       2
0xB034	0x5356      	MOVF        FARG_bloqueos_SENSOR2, 1, 1
0xB036	0x0E01      	MOVLW       1
0xB038	0xA4D8      	BTFSS       STATUS, 2 
0xB03A	0x0E00      	MOVLW       0
0xB03C	0x6E00      	MOVWF       R0 
0xB03E	0x5155      	MOVF        FARG_bloqueos_SENSOR1, 0, 1
0xB040	0x1600      	ANDWF       R0, 1 
0xB042	0xE03B      	BZ          L_bloqueos31
;bloqueos_v1.h,69 :: 		Desborde.SensorD = Desborde.SensorD++;
0xB044	0x0E01      	MOVLW       1
0xB046	0x0101      	MOVLB       1
0xB048	0x25C0      	ADDWF       _Desborde+20, 0, 1
0xB04A	0x6E00      	MOVWF       R0 
0xB04C	0x0E00      	MOVLW       0
0xB04E	0x21C1      	ADDWFC      _Desborde+21, 0, 1
0xB050	0x6E01      	MOVWF       R1 
0xB052	0xF1C0C000  	MOVFF       R0, _Desborde+20
0xB056	0xF1C1C001  	MOVFF       R1, _Desborde+21
;bloqueos_v1.h,70 :: 		if(Desborde.SensorD > PERIODOBLOQUEO){
0xB05A	0x0E00      	MOVLW       0
0xB05C	0x6E00      	MOVWF       R0 
0xB05E	0x51C1      	MOVF        _Desborde+21, 0, 1
0xB060	0x5C00      	SUBWF       R0, 0 
0xB062	0xE102      	BNZ         L__bloqueos683
0xB064	0x51C0      	MOVF        _Desborde+20, 0, 1
0xB066	0x0808      	SUBLW       8
L__bloqueos683:
0xB068	0xE227      	BC          L_bloqueos32
;bloqueos_v1.h,71 :: 		if(!Bandera.SensorD & !Bandera.Par1){
0xB06A	0x53EE      	MOVF        _Bandera+10, 1, 1
0xB06C	0x0E01      	MOVLW       1
0xB06E	0xA4D8      	BTFSS       STATUS, 2 
0xB070	0x0E00      	MOVLW       0
0xB072	0x6E01      	MOVWF       R1 
0xB074	0x53E4      	MOVF        _Bandera, 1, 1
0xB076	0x0E01      	MOVLW       1
0xB078	0xA4D8      	BTFSS       STATUS, 2 
0xB07A	0x0E00      	MOVLW       0
0xB07C	0x6E00      	MOVWF       R0 
0xB07E	0x5001      	MOVF        R1, 0 
0xB080	0x1600      	ANDWF       R0, 1 
0xB082	0xE01A      	BZ          L_bloqueos33
;bloqueos_v1.h,72 :: 		(*cuentaBloqueo) = (*cuentaBloqueo) + 1;
0xB084	0xFFE9C25B  	MOVFF       FARG_bloqueos_cuentaBloqueo, FSR0L
0xB088	0xFFEAC25C  	MOVFF       FARG_bloqueos_cuentaBloqueo+1, FSR0H
0xB08C	0xFFE1C25B  	MOVFF       FARG_bloqueos_cuentaBloqueo, FSR1L
0xB090	0xFFE2C25C  	MOVFF       FARG_bloqueos_cuentaBloqueo+1, FSR1H
0xB094	0x2AE6      	INCF        POSTINC1, 1 
;bloqueos_v1.h,73 :: 		Bandera.SensorD = true;
0xB096	0x0E01      	MOVLW       1
0xB098	0x6FEE      	MOVWF       _Bandera+10, 1
;bloqueos_v1.h,74 :: 		Desborde.SensorD = 0;
0xB09A	0x6BC0      	CLRF        _Desborde+20, 1
0xB09C	0x6BC1      	CLRF        _Desborde+21, 1
;bloqueos_v1.h,75 :: 		desbordoGPS = periodoEnvioGPS - 2;
0xB09E	0x0EB2      	MOVLW       178
0xB0A0	0x0100      	MOVLB       0
0xB0A2	0x6FE1      	MOVWF       _desbordoGPS, 1
0xB0A4	0x0E00      	MOVLW       0
0xB0A6	0x6FE2      	MOVWF       _desbordoGPS+1, 1
;bloqueos_v1.h,76 :: 		if(!MSTR){
0xB0A8	0xB483      	BTFSC       PORTD, 2 
0xB0AA	0xD006      	BRA         L_bloqueos34
;bloqueos_v1.h,77 :: 		EnvioCuenta = true;
0xB0AC	0x0E01      	MOVLW       1
0xB0AE	0x6E5C      	MOVWF       _EnvioCuenta 
;bloqueos_v1.h,78 :: 		desbordoGPS_SLV = periodoEnvioGPS - 2;
0xB0B0	0x0EB2      	MOVLW       178
0xB0B2	0x6F6B      	MOVWF       _desbordoGPS_SLV, 1
0xB0B4	0x0E00      	MOVLW       0
0xB0B6	0x6F6C      	MOVWF       _desbordoGPS_SLV+1, 1
;bloqueos_v1.h,79 :: 		}
L_bloqueos34:
;bloqueos_v1.h,80 :: 		}
L_bloqueos33:
;bloqueos_v1.h,81 :: 		}
L_bloqueos32:
;bloqueos_v1.h,82 :: 		}
0xB0B8	0xD004      	BRA         L_bloqueos35
L_bloqueos31:
;bloqueos_v1.h,84 :: 		Bandera.SensorD = false;
0xB0BA	0x0101      	MOVLB       1
0xB0BC	0x6BEE      	CLRF        _Bandera+10, 1
;bloqueos_v1.h,85 :: 		Desborde.SensorD = 0;
0xB0BE	0x6BC0      	CLRF        _Desborde+20, 1
0xB0C0	0x6BC1      	CLRF        _Desborde+21, 1
;bloqueos_v1.h,86 :: 		}
L_bloqueos35:
;bloqueos_v1.h,88 :: 		if(!SENSOR3 & SENSOR4){
0xB0C2	0x0102      	MOVLB       2
0xB0C4	0x5357      	MOVF        FARG_bloqueos_SENSOR3, 1, 1
0xB0C6	0x0E01      	MOVLW       1
0xB0C8	0xA4D8      	BTFSS       STATUS, 2 
0xB0CA	0x0E00      	MOVLW       0
0xB0CC	0x6E00      	MOVWF       R0 
0xB0CE	0x5158      	MOVF        FARG_bloqueos_SENSOR4, 0, 1
0xB0D0	0x1600      	ANDWF       R0, 1 
0xB0D2	0xE03B      	BZ          L_bloqueos36
;bloqueos_v1.h,89 :: 		Desborde.SensorT = Desborde.SensorT++;
0xB0D4	0x0E01      	MOVLW       1
0xB0D6	0x0101      	MOVLB       1
0xB0D8	0x25C2      	ADDWF       _Desborde+22, 0, 1
0xB0DA	0x6E00      	MOVWF       R0 
0xB0DC	0x0E00      	MOVLW       0
0xB0DE	0x21C3      	ADDWFC      _Desborde+23, 0, 1
0xB0E0	0x6E01      	MOVWF       R1 
0xB0E2	0xF1C2C000  	MOVFF       R0, _Desborde+22
0xB0E6	0xF1C3C001  	MOVFF       R1, _Desborde+23
;bloqueos_v1.h,90 :: 		if(Desborde.SensorT > PERIODOBLOQUEO){
0xB0EA	0x0E00      	MOVLW       0
0xB0EC	0x6E00      	MOVWF       R0 
0xB0EE	0x51C3      	MOVF        _Desborde+23, 0, 1
0xB0F0	0x5C00      	SUBWF       R0, 0 
0xB0F2	0xE102      	BNZ         L__bloqueos684
0xB0F4	0x51C2      	MOVF        _Desborde+22, 0, 1
0xB0F6	0x0808      	SUBLW       8
L__bloqueos684:
0xB0F8	0xE227      	BC          L_bloqueos37
;bloqueos_v1.h,91 :: 		if(!Bandera.SensorT & !Bandera.Par2){
0xB0FA	0x53EF      	MOVF        _Bandera+11, 1, 1
0xB0FC	0x0E01      	MOVLW       1
0xB0FE	0xA4D8      	BTFSS       STATUS, 2 
0xB100	0x0E00      	MOVLW       0
0xB102	0x6E01      	MOVWF       R1 
0xB104	0x53E5      	MOVF        _Bandera+1, 1, 1
0xB106	0x0E01      	MOVLW       1
0xB108	0xA4D8      	BTFSS       STATUS, 2 
0xB10A	0x0E00      	MOVLW       0
0xB10C	0x6E00      	MOVWF       R0 
0xB10E	0x5001      	MOVF        R1, 0 
0xB110	0x1600      	ANDWF       R0, 1 
0xB112	0xE01A      	BZ          L_bloqueos38
;bloqueos_v1.h,92 :: 		(*cuentaBloqueo) = (*cuentaBloqueo) + 1;
0xB114	0xFFE9C25B  	MOVFF       FARG_bloqueos_cuentaBloqueo, FSR0L
0xB118	0xFFEAC25C  	MOVFF       FARG_bloqueos_cuentaBloqueo+1, FSR0H
0xB11C	0xFFE1C25B  	MOVFF       FARG_bloqueos_cuentaBloqueo, FSR1L
0xB120	0xFFE2C25C  	MOVFF       FARG_bloqueos_cuentaBloqueo+1, FSR1H
0xB124	0x2AE6      	INCF        POSTINC1, 1 
;bloqueos_v1.h,93 :: 		Bandera.SensorT = true;
0xB126	0x0E01      	MOVLW       1
0xB128	0x6FEF      	MOVWF       _Bandera+11, 1
;bloqueos_v1.h,94 :: 		Desborde.SensorT = 0;
0xB12A	0x6BC2      	CLRF        _Desborde+22, 1
0xB12C	0x6BC3      	CLRF        _Desborde+23, 1
;bloqueos_v1.h,95 :: 		desbordoGPS = periodoEnvioGPS - 2;
0xB12E	0x0EB2      	MOVLW       178
0xB130	0x0100      	MOVLB       0
0xB132	0x6FE1      	MOVWF       _desbordoGPS, 1
0xB134	0x0E00      	MOVLW       0
0xB136	0x6FE2      	MOVWF       _desbordoGPS+1, 1
;bloqueos_v1.h,96 :: 		if(!MSTR){
0xB138	0xB483      	BTFSC       PORTD, 2 
0xB13A	0xD006      	BRA         L_bloqueos39
;bloqueos_v1.h,97 :: 		EnvioCuenta = true;
0xB13C	0x0E01      	MOVLW       1
0xB13E	0x6E5C      	MOVWF       _EnvioCuenta 
;bloqueos_v1.h,98 :: 		desbordoGPS_SLV = periodoEnvioGPS - 2;
0xB140	0x0EB2      	MOVLW       178
0xB142	0x6F6B      	MOVWF       _desbordoGPS_SLV, 1
0xB144	0x0E00      	MOVLW       0
0xB146	0x6F6C      	MOVWF       _desbordoGPS_SLV+1, 1
;bloqueos_v1.h,99 :: 		}
L_bloqueos39:
;bloqueos_v1.h,100 :: 		}
L_bloqueos38:
;bloqueos_v1.h,101 :: 		}
L_bloqueos37:
;bloqueos_v1.h,102 :: 		}
0xB148	0xD004      	BRA         L_bloqueos40
L_bloqueos36:
;bloqueos_v1.h,104 :: 		Bandera.SensorT = false;
0xB14A	0x0101      	MOVLB       1
0xB14C	0x6BEF      	CLRF        _Bandera+11, 1
;bloqueos_v1.h,105 :: 		Desborde.SensorT = 0;
0xB14E	0x6BC2      	CLRF        _Desborde+22, 1
0xB150	0x6BC3      	CLRF        _Desborde+23, 1
;bloqueos_v1.h,106 :: 		}
L_bloqueos40:
;bloqueos_v1.h,108 :: 		if(!SENSOR4 & SENSOR3){
0xB152	0x0102      	MOVLB       2
0xB154	0x5358      	MOVF        FARG_bloqueos_SENSOR4, 1, 1
0xB156	0x0E01      	MOVLW       1
0xB158	0xA4D8      	BTFSS       STATUS, 2 
0xB15A	0x0E00      	MOVLW       0
0xB15C	0x6E00      	MOVWF       R0 
0xB15E	0x5157      	MOVF        FARG_bloqueos_SENSOR3, 0, 1
0xB160	0x1600      	ANDWF       R0, 1 
0xB162	0xE03B      	BZ          L_bloqueos41
;bloqueos_v1.h,109 :: 		Desborde.SensorC = Desborde.SensorC++;
0xB164	0x0E01      	MOVLW       1
0xB166	0x0101      	MOVLB       1
0xB168	0x25C4      	ADDWF       _Desborde+24, 0, 1
0xB16A	0x6E00      	MOVWF       R0 
0xB16C	0x0E00      	MOVLW       0
0xB16E	0x21C5      	ADDWFC      _Desborde+25, 0, 1
0xB170	0x6E01      	MOVWF       R1 
0xB172	0xF1C4C000  	MOVFF       R0, _Desborde+24
0xB176	0xF1C5C001  	MOVFF       R1, _Desborde+25
;bloqueos_v1.h,110 :: 		if(Desborde.SensorC > PERIODOBLOQUEO){
0xB17A	0x0E00      	MOVLW       0
0xB17C	0x6E00      	MOVWF       R0 
0xB17E	0x51C5      	MOVF        _Desborde+25, 0, 1
0xB180	0x5C00      	SUBWF       R0, 0 
0xB182	0xE102      	BNZ         L__bloqueos685
0xB184	0x51C4      	MOVF        _Desborde+24, 0, 1
0xB186	0x0808      	SUBLW       8
L__bloqueos685:
0xB188	0xE227      	BC          L_bloqueos42
;bloqueos_v1.h,111 :: 		if(!Bandera.SensorC & !Bandera.Par2){
0xB18A	0x53F0      	MOVF        _Bandera+12, 1, 1
0xB18C	0x0E01      	MOVLW       1
0xB18E	0xA4D8      	BTFSS       STATUS, 2 
0xB190	0x0E00      	MOVLW       0
0xB192	0x6E01      	MOVWF       R1 
0xB194	0x53E5      	MOVF        _Bandera+1, 1, 1
0xB196	0x0E01      	MOVLW       1
0xB198	0xA4D8      	BTFSS       STATUS, 2 
0xB19A	0x0E00      	MOVLW       0
0xB19C	0x6E00      	MOVWF       R0 
0xB19E	0x5001      	MOVF        R1, 0 
0xB1A0	0x1600      	ANDWF       R0, 1 
0xB1A2	0xE01A      	BZ          L_bloqueos43
;bloqueos_v1.h,112 :: 		(*cuentaBloqueo) = (*cuentaBloqueo) + 1;
0xB1A4	0xFFE9C25B  	MOVFF       FARG_bloqueos_cuentaBloqueo, FSR0L
0xB1A8	0xFFEAC25C  	MOVFF       FARG_bloqueos_cuentaBloqueo+1, FSR0H
0xB1AC	0xFFE1C25B  	MOVFF       FARG_bloqueos_cuentaBloqueo, FSR1L
0xB1B0	0xFFE2C25C  	MOVFF       FARG_bloqueos_cuentaBloqueo+1, FSR1H
0xB1B4	0x2AE6      	INCF        POSTINC1, 1 
;bloqueos_v1.h,113 :: 		Bandera.SensorC = true;
0xB1B6	0x0E01      	MOVLW       1
0xB1B8	0x6FF0      	MOVWF       _Bandera+12, 1
;bloqueos_v1.h,114 :: 		Desborde.SensorC = 0;
0xB1BA	0x6BC4      	CLRF        _Desborde+24, 1
0xB1BC	0x6BC5      	CLRF        _Desborde+25, 1
;bloqueos_v1.h,115 :: 		desbordoGPS = periodoEnvioGPS - 2;
0xB1BE	0x0EB2      	MOVLW       178
0xB1C0	0x0100      	MOVLB       0
0xB1C2	0x6FE1      	MOVWF       _desbordoGPS, 1
0xB1C4	0x0E00      	MOVLW       0
0xB1C6	0x6FE2      	MOVWF       _desbordoGPS+1, 1
;bloqueos_v1.h,116 :: 		if(!MSTR){
0xB1C8	0xB483      	BTFSC       PORTD, 2 
0xB1CA	0xD006      	BRA         L_bloqueos44
;bloqueos_v1.h,117 :: 		EnvioCuenta = true;
0xB1CC	0x0E01      	MOVLW       1
0xB1CE	0x6E5C      	MOVWF       _EnvioCuenta 
;bloqueos_v1.h,118 :: 		desbordoGPS_SLV = periodoEnvioGPS - 2;
0xB1D0	0x0EB2      	MOVLW       178
0xB1D2	0x6F6B      	MOVWF       _desbordoGPS_SLV, 1
0xB1D4	0x0E00      	MOVLW       0
0xB1D6	0x6F6C      	MOVWF       _desbordoGPS_SLV+1, 1
;bloqueos_v1.h,119 :: 		}
L_bloqueos44:
;bloqueos_v1.h,120 :: 		}
L_bloqueos43:
;bloqueos_v1.h,121 :: 		}
L_bloqueos42:
;bloqueos_v1.h,122 :: 		}
0xB1D8	0xD004      	BRA         L_bloqueos45
L_bloqueos41:
;bloqueos_v1.h,124 :: 		Bandera.SensorC = false;
0xB1DA	0x0101      	MOVLB       1
0xB1DC	0x6BF0      	CLRF        _Bandera+12, 1
;bloqueos_v1.h,125 :: 		Desborde.SensorC = 0;
0xB1DE	0x6BC4      	CLRF        _Desborde+24, 1
0xB1E0	0x6BC5      	CLRF        _Desborde+25, 1
;bloqueos_v1.h,126 :: 		}
L_bloqueos45:
;bloqueos_v1.h,128 :: 		if(!SENSOR5 & SENSOR6){
0xB1E2	0x0102      	MOVLB       2
0xB1E4	0x5359      	MOVF        FARG_bloqueos_SENSOR5, 1, 1
0xB1E6	0x0E01      	MOVLW       1
0xB1E8	0xA4D8      	BTFSS       STATUS, 2 
0xB1EA	0x0E00      	MOVLW       0
0xB1EC	0x6E00      	MOVWF       R0 
0xB1EE	0x515A      	MOVF        FARG_bloqueos_SENSOR6, 0, 1
0xB1F0	0x1600      	ANDWF       R0, 1 
0xB1F2	0xE03B      	BZ          L_bloqueos46
;bloqueos_v1.h,129 :: 		Desborde.SensorO = Desborde.SensorO++;
0xB1F4	0x0E01      	MOVLW       1
0xB1F6	0x0101      	MOVLB       1
0xB1F8	0x25C6      	ADDWF       _Desborde+26, 0, 1
0xB1FA	0x6E00      	MOVWF       R0 
0xB1FC	0x0E00      	MOVLW       0
0xB1FE	0x21C7      	ADDWFC      _Desborde+27, 0, 1
0xB200	0x6E01      	MOVWF       R1 
0xB202	0xF1C6C000  	MOVFF       R0, _Desborde+26
0xB206	0xF1C7C001  	MOVFF       R1, _Desborde+27
;bloqueos_v1.h,130 :: 		if(Desborde.SensorO > PERIODOBLOQUEO){
0xB20A	0x0E00      	MOVLW       0
0xB20C	0x6E00      	MOVWF       R0 
0xB20E	0x51C7      	MOVF        _Desborde+27, 0, 1
0xB210	0x5C00      	SUBWF       R0, 0 
0xB212	0xE102      	BNZ         L__bloqueos686
0xB214	0x51C6      	MOVF        _Desborde+26, 0, 1
0xB216	0x0808      	SUBLW       8
L__bloqueos686:
0xB218	0xE227      	BC          L_bloqueos47
;bloqueos_v1.h,131 :: 		if(!Bandera.SensorO & !Bandera.Par3){
0xB21A	0x53F1      	MOVF        _Bandera+13, 1, 1
0xB21C	0x0E01      	MOVLW       1
0xB21E	0xA4D8      	BTFSS       STATUS, 2 
0xB220	0x0E00      	MOVLW       0
0xB222	0x6E01      	MOVWF       R1 
0xB224	0x53E6      	MOVF        _Bandera+2, 1, 1
0xB226	0x0E01      	MOVLW       1
0xB228	0xA4D8      	BTFSS       STATUS, 2 
0xB22A	0x0E00      	MOVLW       0
0xB22C	0x6E00      	MOVWF       R0 
0xB22E	0x5001      	MOVF        R1, 0 
0xB230	0x1600      	ANDWF       R0, 1 
0xB232	0xE01A      	BZ          L_bloqueos48
;bloqueos_v1.h,132 :: 		(*cuentaBloqueo) = (*cuentaBloqueo) + 1;
0xB234	0xFFE9C25B  	MOVFF       FARG_bloqueos_cuentaBloqueo, FSR0L
0xB238	0xFFEAC25C  	MOVFF       FARG_bloqueos_cuentaBloqueo+1, FSR0H
0xB23C	0xFFE1C25B  	MOVFF       FARG_bloqueos_cuentaBloqueo, FSR1L
0xB240	0xFFE2C25C  	MOVFF       FARG_bloqueos_cuentaBloqueo+1, FSR1H
0xB244	0x2AE6      	INCF        POSTINC1, 1 
;bloqueos_v1.h,133 :: 		Bandera.SensorO = true;
0xB246	0x0E01      	MOVLW       1
0xB248	0x6FF1      	MOVWF       _Bandera+13, 1
;bloqueos_v1.h,134 :: 		Desborde.SensorO = 0;
0xB24A	0x6BC6      	CLRF        _Desborde+26, 1
0xB24C	0x6BC7      	CLRF        _Desborde+27, 1
;bloqueos_v1.h,135 :: 		desbordoGPS = periodoEnvioGPS - 2;
0xB24E	0x0EB2      	MOVLW       178
0xB250	0x0100      	MOVLB       0
0xB252	0x6FE1      	MOVWF       _desbordoGPS, 1
0xB254	0x0E00      	MOVLW       0
0xB256	0x6FE2      	MOVWF       _desbordoGPS+1, 1
;bloqueos_v1.h,136 :: 		if(!MSTR){
0xB258	0xB483      	BTFSC       PORTD, 2 
0xB25A	0xD006      	BRA         L_bloqueos49
;bloqueos_v1.h,137 :: 		EnvioCuenta = true;
0xB25C	0x0E01      	MOVLW       1
0xB25E	0x6E5C      	MOVWF       _EnvioCuenta 
;bloqueos_v1.h,138 :: 		desbordoGPS_SLV = periodoEnvioGPS - 2;
0xB260	0x0EB2      	MOVLW       178
0xB262	0x6F6B      	MOVWF       _desbordoGPS_SLV, 1
0xB264	0x0E00      	MOVLW       0
0xB266	0x6F6C      	MOVWF       _desbordoGPS_SLV+1, 1
;bloqueos_v1.h,139 :: 		}
L_bloqueos49:
;bloqueos_v1.h,140 :: 		}
L_bloqueos48:
;bloqueos_v1.h,141 :: 		}
L_bloqueos47:
;bloqueos_v1.h,142 :: 		}
0xB268	0xD004      	BRA         L_bloqueos50
L_bloqueos46:
;bloqueos_v1.h,144 :: 		Bandera.SensorO = false;
0xB26A	0x0101      	MOVLB       1
0xB26C	0x6BF1      	CLRF        _Bandera+13, 1
;bloqueos_v1.h,145 :: 		Desborde.SensorO = 0;
0xB26E	0x6BC6      	CLRF        _Desborde+26, 1
0xB270	0x6BC7      	CLRF        _Desborde+27, 1
;bloqueos_v1.h,146 :: 		}
L_bloqueos50:
;bloqueos_v1.h,148 :: 		if(!SENSOR6 & SENSOR5){
0xB272	0x0102      	MOVLB       2
0xB274	0x535A      	MOVF        FARG_bloqueos_SENSOR6, 1, 1
0xB276	0x0E01      	MOVLW       1
0xB278	0xA4D8      	BTFSS       STATUS, 2 
0xB27A	0x0E00      	MOVLW       0
0xB27C	0x6E00      	MOVWF       R0 
0xB27E	0x5159      	MOVF        FARG_bloqueos_SENSOR5, 0, 1
0xB280	0x1600      	ANDWF       R0, 1 
0xB282	0xE03B      	BZ          L_bloqueos51
;bloqueos_v1.h,149 :: 		Desborde.SensorS = Desborde.SensorS++;
0xB284	0x0E01      	MOVLW       1
0xB286	0x0101      	MOVLB       1
0xB288	0x25C8      	ADDWF       _Desborde+28, 0, 1
0xB28A	0x6E00      	MOVWF       R0 
0xB28C	0x0E00      	MOVLW       0
0xB28E	0x21C9      	ADDWFC      _Desborde+29, 0, 1
0xB290	0x6E01      	MOVWF       R1 
0xB292	0xF1C8C000  	MOVFF       R0, _Desborde+28
0xB296	0xF1C9C001  	MOVFF       R1, _Desborde+29
;bloqueos_v1.h,150 :: 		if(Desborde.SensorS > PERIODOBLOQUEO){
0xB29A	0x0E00      	MOVLW       0
0xB29C	0x6E00      	MOVWF       R0 
0xB29E	0x51C9      	MOVF        _Desborde+29, 0, 1
0xB2A0	0x5C00      	SUBWF       R0, 0 
0xB2A2	0xE102      	BNZ         L__bloqueos687
0xB2A4	0x51C8      	MOVF        _Desborde+28, 0, 1
0xB2A6	0x0808      	SUBLW       8
L__bloqueos687:
0xB2A8	0xE227      	BC          L_bloqueos52
;bloqueos_v1.h,151 :: 		if(!Bandera.SensorS & !Bandera.Par3){
0xB2AA	0x53F2      	MOVF        _Bandera+14, 1, 1
0xB2AC	0x0E01      	MOVLW       1
0xB2AE	0xA4D8      	BTFSS       STATUS, 2 
0xB2B0	0x0E00      	MOVLW       0
0xB2B2	0x6E01      	MOVWF       R1 
0xB2B4	0x53E6      	MOVF        _Bandera+2, 1, 1
0xB2B6	0x0E01      	MOVLW       1
0xB2B8	0xA4D8      	BTFSS       STATUS, 2 
0xB2BA	0x0E00      	MOVLW       0
0xB2BC	0x6E00      	MOVWF       R0 
0xB2BE	0x5001      	MOVF        R1, 0 
0xB2C0	0x1600      	ANDWF       R0, 1 
0xB2C2	0xE01A      	BZ          L_bloqueos53
;bloqueos_v1.h,152 :: 		(*cuentaBloqueo) = (*cuentaBloqueo) + 1;
0xB2C4	0xFFE9C25B  	MOVFF       FARG_bloqueos_cuentaBloqueo, FSR0L
0xB2C8	0xFFEAC25C  	MOVFF       FARG_bloqueos_cuentaBloqueo+1, FSR0H
0xB2CC	0xFFE1C25B  	MOVFF       FARG_bloqueos_cuentaBloqueo, FSR1L
0xB2D0	0xFFE2C25C  	MOVFF       FARG_bloqueos_cuentaBloqueo+1, FSR1H
0xB2D4	0x2AE6      	INCF        POSTINC1, 1 
;bloqueos_v1.h,153 :: 		Bandera.SensorS = true;
0xB2D6	0x0E01      	MOVLW       1
0xB2D8	0x6FF2      	MOVWF       _Bandera+14, 1
;bloqueos_v1.h,154 :: 		Desborde.SensorS = 0;
0xB2DA	0x6BC8      	CLRF        _Desborde+28, 1
0xB2DC	0x6BC9      	CLRF        _Desborde+29, 1
;bloqueos_v1.h,155 :: 		desbordoGPS = periodoEnvioGPS - 2;
0xB2DE	0x0EB2      	MOVLW       178
0xB2E0	0x0100      	MOVLB       0
0xB2E2	0x6FE1      	MOVWF       _desbordoGPS, 1
0xB2E4	0x0E00      	MOVLW       0
0xB2E6	0x6FE2      	MOVWF       _desbordoGPS+1, 1
;bloqueos_v1.h,156 :: 		if(!MSTR){
0xB2E8	0xB483      	BTFSC       PORTD, 2 
0xB2EA	0xD006      	BRA         L_bloqueos54
;bloqueos_v1.h,157 :: 		EnvioCuenta = true;
0xB2EC	0x0E01      	MOVLW       1
0xB2EE	0x6E5C      	MOVWF       _EnvioCuenta 
;bloqueos_v1.h,158 :: 		desbordoGPS_SLV = periodoEnvioGPS - 2;
0xB2F0	0x0EB2      	MOVLW       178
0xB2F2	0x6F6B      	MOVWF       _desbordoGPS_SLV, 1
0xB2F4	0x0E00      	MOVLW       0
0xB2F6	0x6F6C      	MOVWF       _desbordoGPS_SLV+1, 1
;bloqueos_v1.h,159 :: 		}
L_bloqueos54:
;bloqueos_v1.h,160 :: 		}
L_bloqueos53:
;bloqueos_v1.h,161 :: 		}
L_bloqueos52:
;bloqueos_v1.h,162 :: 		}
0xB2F8	0xD004      	BRA         L_bloqueos55
L_bloqueos51:
;bloqueos_v1.h,164 :: 		Bandera.SensorS = false;
0xB2FA	0x0101      	MOVLB       1
0xB2FC	0x6BF2      	CLRF        _Bandera+14, 1
;bloqueos_v1.h,165 :: 		Desborde.SensorS = 0;
0xB2FE	0x6BC8      	CLRF        _Desborde+28, 1
0xB300	0x6BC9      	CLRF        _Desborde+29, 1
;bloqueos_v1.h,166 :: 		}
L_bloqueos55:
;bloqueos_v1.h,168 :: 		if(!SENSOR1 & !SENSOR2){
0xB302	0x0102      	MOVLB       2
0xB304	0x5355      	MOVF        FARG_bloqueos_SENSOR1, 1, 1
0xB306	0x0E01      	MOVLW       1
0xB308	0xA4D8      	BTFSS       STATUS, 2 
0xB30A	0x0E00      	MOVLW       0
0xB30C	0x6E01      	MOVWF       R1 
0xB30E	0x5356      	MOVF        FARG_bloqueos_SENSOR2, 1, 1
0xB310	0x0E01      	MOVLW       1
0xB312	0xA4D8      	BTFSS       STATUS, 2 
0xB314	0x0E00      	MOVLW       0
0xB316	0x6E00      	MOVWF       R0 
0xB318	0x5001      	MOVF        R1, 0 
0xB31A	0x1600      	ANDWF       R0, 1 
0xB31C	0xE070      	BZ          L_bloqueos56
;bloqueos_v1.h,169 :: 		Desborde.Par1 = Desborde.Par1++;
0xB31E	0x0E01      	MOVLW       1
0xB320	0x0101      	MOVLB       1
0xB322	0x25AC      	ADDWF       _Desborde, 0, 1
0xB324	0x6E00      	MOVWF       R0 
0xB326	0x0E00      	MOVLW       0
0xB328	0x21AD      	ADDWFC      _Desborde+1, 0, 1
0xB32A	0x6E01      	MOVWF       R1 
0xB32C	0xF1ACC000  	MOVFF       R0, _Desborde
0xB330	0xF1ADC001  	MOVFF       R1, _Desborde+1
;bloqueos_v1.h,170 :: 		if(Desborde.Par1 > PERIODOBLOQUEO){
0xB334	0x0E00      	MOVLW       0
0xB336	0x6E00      	MOVWF       R0 
0xB338	0x51AD      	MOVF        _Desborde+1, 0, 1
0xB33A	0x5C00      	SUBWF       R0, 0 
0xB33C	0xE102      	BNZ         L__bloqueos688
0xB33E	0x51AC      	MOVF        _Desborde, 0, 1
0xB340	0x0808      	SUBLW       8
L__bloqueos688:
0xB342	0xE25C      	BC          L_bloqueos57
;bloqueos_v1.h,171 :: 		if(!Bandera.Par1 & !Bandera.Par2 & !Bandera.Par3 & !Bandera.Par4 & !Bandera.Par5 & !Bandera.Par6 & !Bandera.Par7 & !Bandera.Par8 & !Bandera.Par9){
0xB344	0x53E4      	MOVF        _Bandera, 1, 1
0xB346	0x0E01      	MOVLW       1
0xB348	0xA4D8      	BTFSS       STATUS, 2 
0xB34A	0x0E00      	MOVLW       0
0xB34C	0x6E01      	MOVWF       R1 
0xB34E	0x53E5      	MOVF        _Bandera+1, 1, 1
0xB350	0x0E01      	MOVLW       1
0xB352	0xA4D8      	BTFSS       STATUS, 2 
0xB354	0x0E00      	MOVLW       0
0xB356	0x6E00      	MOVWF       R0 
0xB358	0x5000      	MOVF        R0, 0 
0xB35A	0x1601      	ANDWF       R1, 1 
0xB35C	0x53E6      	MOVF        _Bandera+2, 1, 1
0xB35E	0x0E01      	MOVLW       1
0xB360	0xA4D8      	BTFSS       STATUS, 2 
0xB362	0x0E00      	MOVLW       0
0xB364	0x6E00      	MOVWF       R0 
0xB366	0x5000      	MOVF        R0, 0 
0xB368	0x1601      	ANDWF       R1, 1 
0xB36A	0x53E7      	MOVF        _Bandera+3, 1, 1
0xB36C	0x0E01      	MOVLW       1
0xB36E	0xA4D8      	BTFSS       STATUS, 2 
0xB370	0x0E00      	MOVLW       0
0xB372	0x6E00      	MOVWF       R0 
0xB374	0x5000      	MOVF        R0, 0 
0xB376	0x1601      	ANDWF       R1, 1 
0xB378	0x53E8      	MOVF        _Bandera+4, 1, 1
0xB37A	0x0E01      	MOVLW       1
0xB37C	0xA4D8      	BTFSS       STATUS, 2 
0xB37E	0x0E00      	MOVLW       0
0xB380	0x6E00      	MOVWF       R0 
0xB382	0x5000      	MOVF        R0, 0 
0xB384	0x1601      	ANDWF       R1, 1 
0xB386	0x53E9      	MOVF        _Bandera+5, 1, 1
0xB388	0x0E01      	MOVLW       1
0xB38A	0xA4D8      	BTFSS       STATUS, 2 
0xB38C	0x0E00      	MOVLW       0
0xB38E	0x6E00      	MOVWF       R0 
0xB390	0x5000      	MOVF        R0, 0 
0xB392	0x1601      	ANDWF       R1, 1 
0xB394	0x53EA      	MOVF        _Bandera+6, 1, 1
0xB396	0x0E01      	MOVLW       1
0xB398	0xA4D8      	BTFSS       STATUS, 2 
0xB39A	0x0E00      	MOVLW       0
0xB39C	0x6E00      	MOVWF       R0 
0xB39E	0x5000      	MOVF        R0, 0 
0xB3A0	0x1601      	ANDWF       R1, 1 
0xB3A2	0x53EB      	MOVF        _Bandera+7, 1, 1
0xB3A4	0x0E01      	MOVLW       1
0xB3A6	0xA4D8      	BTFSS       STATUS, 2 
0xB3A8	0x0E00      	MOVLW       0
0xB3AA	0x6E00      	MOVWF       R0 
0xB3AC	0x5000      	MOVF        R0, 0 
0xB3AE	0x1601      	ANDWF       R1, 1 
0xB3B0	0x53EC      	MOVF        _Bandera+8, 1, 1
0xB3B2	0x0E01      	MOVLW       1
0xB3B4	0xA4D8      	BTFSS       STATUS, 2 
0xB3B6	0x0E00      	MOVLW       0
0xB3B8	0x6E00      	MOVWF       R0 
0xB3BA	0x5001      	MOVF        R1, 0 
0xB3BC	0x1600      	ANDWF       R0, 1 
0xB3BE	0xE01E      	BZ          L_bloqueos58
;bloqueos_v1.h,172 :: 		(*cuentaBloqueo) = (*cuentaBloqueo) + 1;
0xB3C0	0xFFE9C25B  	MOVFF       FARG_bloqueos_cuentaBloqueo, FSR0L
0xB3C4	0xFFEAC25C  	MOVFF       FARG_bloqueos_cuentaBloqueo+1, FSR0H
0xB3C8	0xFFE1C25B  	MOVFF       FARG_bloqueos_cuentaBloqueo, FSR1L
0xB3CC	0xFFE2C25C  	MOVFF       FARG_bloqueos_cuentaBloqueo+1, FSR1H
0xB3D0	0x2AE6      	INCF        POSTINC1, 1 
;bloqueos_v1.h,173 :: 		cuenta = true;
0xB3D2	0x0E01      	MOVLW       1
0xB3D4	0x0100      	MOVLB       0
0xB3D6	0x6F92      	MOVWF       _cuenta, 1
;bloqueos_v1.h,174 :: 		Bandera.Par1 = true;
0xB3D8	0x0E01      	MOVLW       1
0xB3DA	0x0101      	MOVLB       1
0xB3DC	0x6FE4      	MOVWF       _Bandera, 1
;bloqueos_v1.h,175 :: 		Desborde.Par1 = 0;
0xB3DE	0x6BAC      	CLRF        _Desborde, 1
0xB3E0	0x6BAD      	CLRF        _Desborde+1, 1
;bloqueos_v1.h,176 :: 		desbordoGPS = periodoEnvioGPS - 2;
0xB3E2	0x0EB2      	MOVLW       178
0xB3E4	0x0100      	MOVLB       0
0xB3E6	0x6FE1      	MOVWF       _desbordoGPS, 1
0xB3E8	0x0E00      	MOVLW       0
0xB3EA	0x6FE2      	MOVWF       _desbordoGPS+1, 1
;bloqueos_v1.h,177 :: 		if(!MSTR){
0xB3EC	0xB483      	BTFSC       PORTD, 2 
0xB3EE	0xD006      	BRA         L_bloqueos59
;bloqueos_v1.h,178 :: 		EnvioCuenta = true;
0xB3F0	0x0E01      	MOVLW       1
0xB3F2	0x6E5C      	MOVWF       _EnvioCuenta 
;bloqueos_v1.h,179 :: 		desbordoGPS_SLV = periodoEnvioGPS - 2;
0xB3F4	0x0EB2      	MOVLW       178
0xB3F6	0x6F6B      	MOVWF       _desbordoGPS_SLV, 1
0xB3F8	0x0E00      	MOVLW       0
0xB3FA	0x6F6C      	MOVWF       _desbordoGPS_SLV+1, 1
;bloqueos_v1.h,180 :: 		}
L_bloqueos59:
;bloqueos_v1.h,181 :: 		}
L_bloqueos58:
;bloqueos_v1.h,182 :: 		}
L_bloqueos57:
;bloqueos_v1.h,183 :: 		}
0xB3FC	0xD01C      	BRA         L_bloqueos60
L_bloqueos56:
;bloqueos_v1.h,184 :: 		else if((!SENSOR1 & SENSOR2) | (SENSOR1 & !SENSOR2) | (SENSOR1 & SENSOR2)){
0xB3FE	0x0102      	MOVLB       2
0xB400	0x5355      	MOVF        FARG_bloqueos_SENSOR1, 1, 1
0xB402	0x0E01      	MOVLW       1
0xB404	0xA4D8      	BTFSS       STATUS, 2 
0xB406	0x0E00      	MOVLW       0
0xB408	0x6E00      	MOVWF       R0 
0xB40A	0x5156      	MOVF        FARG_bloqueos_SENSOR2, 0, 1
0xB40C	0x1400      	ANDWF       R0, 0 
0xB40E	0x6E01      	MOVWF       R1 
0xB410	0x5356      	MOVF        FARG_bloqueos_SENSOR2, 1, 1
0xB412	0x0E01      	MOVLW       1
0xB414	0xA4D8      	BTFSS       STATUS, 2 
0xB416	0x0E00      	MOVLW       0
0xB418	0x6E00      	MOVWF       R0 
0xB41A	0x5155      	MOVF        FARG_bloqueos_SENSOR1, 0, 1
0xB41C	0x1600      	ANDWF       R0, 1 
0xB41E	0x5000      	MOVF        R0, 0 
0xB420	0x1201      	IORWF       R1, 1 
0xB422	0x5156      	MOVF        FARG_bloqueos_SENSOR2, 0, 1
0xB424	0x1555      	ANDWF       FARG_bloqueos_SENSOR1, 0, 1
0xB426	0x6E00      	MOVWF       R0 
0xB428	0x5001      	MOVF        R1, 0 
0xB42A	0x1200      	IORWF       R0, 1 
0xB42C	0xE004      	BZ          L_bloqueos61
;bloqueos_v1.h,185 :: 		Bandera.Par1 = false;
0xB42E	0x0101      	MOVLB       1
0xB430	0x6BE4      	CLRF        _Bandera, 1
;bloqueos_v1.h,186 :: 		Desborde.Par1 = 0;
0xB432	0x6BAC      	CLRF        _Desborde, 1
0xB434	0x6BAD      	CLRF        _Desborde+1, 1
;bloqueos_v1.h,187 :: 		}
L_bloqueos61:
L_bloqueos60:
;bloqueos_v1.h,189 :: 		if(!SENSOR3 & !SENSOR4){
0xB436	0x0102      	MOVLB       2
0xB438	0x5357      	MOVF        FARG_bloqueos_SENSOR3, 1, 1
0xB43A	0x0E01      	MOVLW       1
0xB43C	0xA4D8      	BTFSS       STATUS, 2 
0xB43E	0x0E00      	MOVLW       0
0xB440	0x6E01      	MOVWF       R1 
0xB442	0x5358      	MOVF        FARG_bloqueos_SENSOR4, 1, 1
0xB444	0x0E01      	MOVLW       1
0xB446	0xA4D8      	BTFSS       STATUS, 2 
0xB448	0x0E00      	MOVLW       0
0xB44A	0x6E00      	MOVWF       R0 
0xB44C	0x5001      	MOVF        R1, 0 
0xB44E	0x1600      	ANDWF       R0, 1 
0xB450	0xE06E      	BZ          L_bloqueos62
;bloqueos_v1.h,190 :: 		Desborde.Par2 = Desborde.Par2++;
0xB452	0x0E01      	MOVLW       1
0xB454	0x0101      	MOVLB       1
0xB456	0x25AE      	ADDWF       _Desborde+2, 0, 1
0xB458	0x6E00      	MOVWF       R0 
0xB45A	0x0E00      	MOVLW       0
0xB45C	0x21AF      	ADDWFC      _Desborde+3, 0, 1
0xB45E	0x6E01      	MOVWF       R1 
0xB460	0xF1AEC000  	MOVFF       R0, _Desborde+2
0xB464	0xF1AFC001  	MOVFF       R1, _Desborde+3
;bloqueos_v1.h,191 :: 		if(Desborde.Par2 > PERIODOBLOQUEO){
0xB468	0x0E00      	MOVLW       0
0xB46A	0x6E00      	MOVWF       R0 
0xB46C	0x51AF      	MOVF        _Desborde+3, 0, 1
0xB46E	0x5C00      	SUBWF       R0, 0 
0xB470	0xE102      	BNZ         L__bloqueos689
0xB472	0x51AE      	MOVF        _Desborde+2, 0, 1
0xB474	0x0808      	SUBLW       8
L__bloqueos689:
0xB476	0xE25A      	BC          L_bloqueos63
;bloqueos_v1.h,192 :: 		if(!Bandera.Par1 & !Bandera.Par2 & !Bandera.Par3 & !Bandera.Par4 & !Bandera.Par5 & !Bandera.Par6 & !Bandera.Par7 & !Bandera.Par8 & !Bandera.Par9){
0xB478	0x53E4      	MOVF        _Bandera, 1, 1
0xB47A	0x0E01      	MOVLW       1
0xB47C	0xA4D8      	BTFSS       STATUS, 2 
0xB47E	0x0E00      	MOVLW       0
0xB480	0x6E01      	MOVWF       R1 
0xB482	0x53E5      	MOVF        _Bandera+1, 1, 1
0xB484	0x0E01      	MOVLW       1
0xB486	0xA4D8      	BTFSS       STATUS, 2 
0xB488	0x0E00      	MOVLW       0
0xB48A	0x6E00      	MOVWF       R0 
0xB48C	0x5000      	MOVF        R0, 0 
0xB48E	0x1601      	ANDWF       R1, 1 
0xB490	0x53E6      	MOVF        _Bandera+2, 1, 1
0xB492	0x0E01      	MOVLW       1
0xB494	0xA4D8      	BTFSS       STATUS, 2 
0xB496	0x0E00      	MOVLW       0
0xB498	0x6E00      	MOVWF       R0 
0xB49A	0x5000      	MOVF        R0, 0 
0xB49C	0x1601      	ANDWF       R1, 1 
0xB49E	0x53E7      	MOVF        _Bandera+3, 1, 1
0xB4A0	0x0E01      	MOVLW       1
0xB4A2	0xA4D8      	BTFSS       STATUS, 2 
0xB4A4	0x0E00      	MOVLW       0
0xB4A6	0x6E00      	MOVWF       R0 
0xB4A8	0x5000      	MOVF        R0, 0 
0xB4AA	0x1601      	ANDWF       R1, 1 
0xB4AC	0x53E8      	MOVF        _Bandera+4, 1, 1
0xB4AE	0x0E01      	MOVLW       1
0xB4B0	0xA4D8      	BTFSS       STATUS, 2 
0xB4B2	0x0E00      	MOVLW       0
0xB4B4	0x6E00      	MOVWF       R0 
0xB4B6	0x5000      	MOVF        R0, 0 
0xB4B8	0x1601      	ANDWF       R1, 1 
0xB4BA	0x53E9      	MOVF        _Bandera+5, 1, 1
0xB4BC	0x0E01      	MOVLW       1
0xB4BE	0xA4D8      	BTFSS       STATUS, 2 
0xB4C0	0x0E00      	MOVLW       0
0xB4C2	0x6E00      	MOVWF       R0 
0xB4C4	0x5000      	MOVF        R0, 0 
0xB4C6	0x1601      	ANDWF       R1, 1 
0xB4C8	0x53EA      	MOVF        _Bandera+6, 1, 1
0xB4CA	0x0E01      	MOVLW       1
0xB4CC	0xA4D8      	BTFSS       STATUS, 2 
0xB4CE	0x0E00      	MOVLW       0
0xB4D0	0x6E00      	MOVWF       R0 
0xB4D2	0x5000      	MOVF        R0, 0 
0xB4D4	0x1601      	ANDWF       R1, 1 
0xB4D6	0x53EB      	MOVF        _Bandera+7, 1, 1
0xB4D8	0x0E01      	MOVLW       1
0xB4DA	0xA4D8      	BTFSS       STATUS, 2 
0xB4DC	0x0E00      	MOVLW       0
0xB4DE	0x6E00      	MOVWF       R0 
0xB4E0	0x5000      	MOVF        R0, 0 
0xB4E2	0x1601      	ANDWF       R1, 1 
0xB4E4	0x53EC      	MOVF        _Bandera+8, 1, 1
0xB4E6	0x0E01      	MOVLW       1
0xB4E8	0xA4D8      	BTFSS       STATUS, 2 
0xB4EA	0x0E00      	MOVLW       0
0xB4EC	0x6E00      	MOVWF       R0 
0xB4EE	0x5001      	MOVF        R1, 0 
0xB4F0	0x1600      	ANDWF       R0, 1 
0xB4F2	0xE01C      	BZ          L_bloqueos64
;bloqueos_v1.h,193 :: 		(*cuentaBloqueo) = (*cuentaBloqueo) + 1;
0xB4F4	0xFFE9C25B  	MOVFF       FARG_bloqueos_cuentaBloqueo, FSR0L
0xB4F8	0xFFEAC25C  	MOVFF       FARG_bloqueos_cuentaBloqueo+1, FSR0H
0xB4FC	0xFFE1C25B  	MOVFF       FARG_bloqueos_cuentaBloqueo, FSR1L
0xB500	0xFFE2C25C  	MOVFF       FARG_bloqueos_cuentaBloqueo+1, FSR1H
0xB504	0x2AE6      	INCF        POSTINC1, 1 
;bloqueos_v1.h,194 :: 		Bandera.Par2 = true;
0xB506	0x0E01      	MOVLW       1
0xB508	0x6FE5      	MOVWF       _Bandera+1, 1
;bloqueos_v1.h,195 :: 		Desborde.Par2 = 0;
0xB50A	0x6BAE      	CLRF        _Desborde+2, 1
0xB50C	0x6BAF      	CLRF        _Desborde+3, 1
;bloqueos_v1.h,196 :: 		cuenta = true;
0xB50E	0x0E01      	MOVLW       1
0xB510	0x0100      	MOVLB       0
0xB512	0x6F92      	MOVWF       _cuenta, 1
;bloqueos_v1.h,197 :: 		desbordoGPS = periodoEnvioGPS - 2;
0xB514	0x0EB2      	MOVLW       178
0xB516	0x6FE1      	MOVWF       _desbordoGPS, 1
0xB518	0x0E00      	MOVLW       0
0xB51A	0x6FE2      	MOVWF       _desbordoGPS+1, 1
;bloqueos_v1.h,198 :: 		if(!MSTR){
0xB51C	0xB483      	BTFSC       PORTD, 2 
0xB51E	0xD006      	BRA         L_bloqueos65
;bloqueos_v1.h,199 :: 		EnvioCuenta = true;
0xB520	0x0E01      	MOVLW       1
0xB522	0x6E5C      	MOVWF       _EnvioCuenta 
;bloqueos_v1.h,200 :: 		desbordoGPS_SLV = periodoEnvioGPS - 2;
0xB524	0x0EB2      	MOVLW       178
0xB526	0x6F6B      	MOVWF       _desbordoGPS_SLV, 1
0xB528	0x0E00      	MOVLW       0
0xB52A	0x6F6C      	MOVWF       _desbordoGPS_SLV+1, 1
;bloqueos_v1.h,201 :: 		}
L_bloqueos65:
;bloqueos_v1.h,202 :: 		}
L_bloqueos64:
;bloqueos_v1.h,203 :: 		}
L_bloqueos63:
;bloqueos_v1.h,204 :: 		}
0xB52C	0xD01C      	BRA         L_bloqueos66
L_bloqueos62:
;bloqueos_v1.h,205 :: 		else if((!SENSOR3 & SENSOR4) | (SENSOR3 & !SENSOR4) | (SENSOR3 & SENSOR4)){
0xB52E	0x0102      	MOVLB       2
0xB530	0x5357      	MOVF        FARG_bloqueos_SENSOR3, 1, 1
0xB532	0x0E01      	MOVLW       1
0xB534	0xA4D8      	BTFSS       STATUS, 2 
0xB536	0x0E00      	MOVLW       0
0xB538	0x6E00      	MOVWF       R0 
0xB53A	0x5158      	MOVF        FARG_bloqueos_SENSOR4, 0, 1
0xB53C	0x1400      	ANDWF       R0, 0 
0xB53E	0x6E01      	MOVWF       R1 
0xB540	0x5358      	MOVF        FARG_bloqueos_SENSOR4, 1, 1
0xB542	0x0E01      	MOVLW       1
0xB544	0xA4D8      	BTFSS       STATUS, 2 
0xB546	0x0E00      	MOVLW       0
0xB548	0x6E00      	MOVWF       R0 
0xB54A	0x5157      	MOVF        FARG_bloqueos_SENSOR3, 0, 1
0xB54C	0x1600      	ANDWF       R0, 1 
0xB54E	0x5000      	MOVF        R0, 0 
0xB550	0x1201      	IORWF       R1, 1 
0xB552	0x5158      	MOVF        FARG_bloqueos_SENSOR4, 0, 1
0xB554	0x1557      	ANDWF       FARG_bloqueos_SENSOR3, 0, 1
0xB556	0x6E00      	MOVWF       R0 
0xB558	0x5001      	MOVF        R1, 0 
0xB55A	0x1200      	IORWF       R0, 1 
0xB55C	0xE004      	BZ          L_bloqueos67
;bloqueos_v1.h,206 :: 		Bandera.Par2 = false;
0xB55E	0x0101      	MOVLB       1
0xB560	0x6BE5      	CLRF        _Bandera+1, 1
;bloqueos_v1.h,207 :: 		Desborde.Par2 = 0;
0xB562	0x6BAE      	CLRF        _Desborde+2, 1
0xB564	0x6BAF      	CLRF        _Desborde+3, 1
;bloqueos_v1.h,209 :: 		}
L_bloqueos67:
L_bloqueos66:
;bloqueos_v1.h,211 :: 		if(!SENSOR5 & !SENSOR6){
0xB566	0x0102      	MOVLB       2
0xB568	0x5359      	MOVF        FARG_bloqueos_SENSOR5, 1, 1
0xB56A	0x0E01      	MOVLW       1
0xB56C	0xA4D8      	BTFSS       STATUS, 2 
0xB56E	0x0E00      	MOVLW       0
0xB570	0x6E01      	MOVWF       R1 
0xB572	0x535A      	MOVF        FARG_bloqueos_SENSOR6, 1, 1
0xB574	0x0E01      	MOVLW       1
0xB576	0xA4D8      	BTFSS       STATUS, 2 
0xB578	0x0E00      	MOVLW       0
0xB57A	0x6E00      	MOVWF       R0 
0xB57C	0x5001      	MOVF        R1, 0 
0xB57E	0x1600      	ANDWF       R0, 1 
0xB580	0xE06E      	BZ          L_bloqueos68
;bloqueos_v1.h,212 :: 		Desborde.Par3 = Desborde.Par3++;
0xB582	0x0E01      	MOVLW       1
0xB584	0x0101      	MOVLB       1
0xB586	0x25B0      	ADDWF       _Desborde+4, 0, 1
0xB588	0x6E00      	MOVWF       R0 
0xB58A	0x0E00      	MOVLW       0
0xB58C	0x21B1      	ADDWFC      _Desborde+5, 0, 1
0xB58E	0x6E01      	MOVWF       R1 
0xB590	0xF1B0C000  	MOVFF       R0, _Desborde+4
0xB594	0xF1B1C001  	MOVFF       R1, _Desborde+5
;bloqueos_v1.h,213 :: 		if(Desborde.Par3 > PERIODOBLOQUEO){
0xB598	0x0E00      	MOVLW       0
0xB59A	0x6E00      	MOVWF       R0 
0xB59C	0x51B1      	MOVF        _Desborde+5, 0, 1
0xB59E	0x5C00      	SUBWF       R0, 0 
0xB5A0	0xE102      	BNZ         L__bloqueos690
0xB5A2	0x51B0      	MOVF        _Desborde+4, 0, 1
0xB5A4	0x0808      	SUBLW       8
L__bloqueos690:
0xB5A6	0xE25A      	BC          L_bloqueos69
;bloqueos_v1.h,214 :: 		if(!Bandera.Par1 & !Bandera.Par2 & !Bandera.Par3 & !Bandera.Par4 & !Bandera.Par5 & !Bandera.Par6 & !Bandera.Par7 & !Bandera.Par8 & !Bandera.Par9){
0xB5A8	0x53E4      	MOVF        _Bandera, 1, 1
0xB5AA	0x0E01      	MOVLW       1
0xB5AC	0xA4D8      	BTFSS       STATUS, 2 
0xB5AE	0x0E00      	MOVLW       0
0xB5B0	0x6E01      	MOVWF       R1 
0xB5B2	0x53E5      	MOVF        _Bandera+1, 1, 1
0xB5B4	0x0E01      	MOVLW       1
0xB5B6	0xA4D8      	BTFSS       STATUS, 2 
0xB5B8	0x0E00      	MOVLW       0
0xB5BA	0x6E00      	MOVWF       R0 
0xB5BC	0x5000      	MOVF        R0, 0 
0xB5BE	0x1601      	ANDWF       R1, 1 
0xB5C0	0x53E6      	MOVF        _Bandera+2, 1, 1
0xB5C2	0x0E01      	MOVLW       1
0xB5C4	0xA4D8      	BTFSS       STATUS, 2 
0xB5C6	0x0E00      	MOVLW       0
0xB5C8	0x6E00      	MOVWF       R0 
0xB5CA	0x5000      	MOVF        R0, 0 
0xB5CC	0x1601      	ANDWF       R1, 1 
0xB5CE	0x53E7      	MOVF        _Bandera+3, 1, 1
0xB5D0	0x0E01      	MOVLW       1
0xB5D2	0xA4D8      	BTFSS       STATUS, 2 
0xB5D4	0x0E00      	MOVLW       0
0xB5D6	0x6E00      	MOVWF       R0 
0xB5D8	0x5000      	MOVF        R0, 0 
0xB5DA	0x1601      	ANDWF       R1, 1 
0xB5DC	0x53E8      	MOVF        _Bandera+4, 1, 1
0xB5DE	0x0E01      	MOVLW       1
0xB5E0	0xA4D8      	BTFSS       STATUS, 2 
0xB5E2	0x0E00      	MOVLW       0
0xB5E4	0x6E00      	MOVWF       R0 
0xB5E6	0x5000      	MOVF        R0, 0 
0xB5E8	0x1601      	ANDWF       R1, 1 
0xB5EA	0x53E9      	MOVF        _Bandera+5, 1, 1
0xB5EC	0x0E01      	MOVLW       1
0xB5EE	0xA4D8      	BTFSS       STATUS, 2 
0xB5F0	0x0E00      	MOVLW       0
0xB5F2	0x6E00      	MOVWF       R0 
0xB5F4	0x5000      	MOVF        R0, 0 
0xB5F6	0x1601      	ANDWF       R1, 1 
0xB5F8	0x53EA      	MOVF        _Bandera+6, 1, 1
0xB5FA	0x0E01      	MOVLW       1
0xB5FC	0xA4D8      	BTFSS       STATUS, 2 
0xB5FE	0x0E00      	MOVLW       0
0xB600	0x6E00      	MOVWF       R0 
0xB602	0x5000      	MOVF        R0, 0 
0xB604	0x1601      	ANDWF       R1, 1 
0xB606	0x53EB      	MOVF        _Bandera+7, 1, 1
0xB608	0x0E01      	MOVLW       1
0xB60A	0xA4D8      	BTFSS       STATUS, 2 
0xB60C	0x0E00      	MOVLW       0
0xB60E	0x6E00      	MOVWF       R0 
0xB610	0x5000      	MOVF        R0, 0 
0xB612	0x1601      	ANDWF       R1, 1 
0xB614	0x53EC      	MOVF        _Bandera+8, 1, 1
0xB616	0x0E01      	MOVLW       1
0xB618	0xA4D8      	BTFSS       STATUS, 2 
0xB61A	0x0E00      	MOVLW       0
0xB61C	0x6E00      	MOVWF       R0 
0xB61E	0x5001      	MOVF        R1, 0 
0xB620	0x1600      	ANDWF       R0, 1 
0xB622	0xE01C      	BZ          L_bloqueos70
;bloqueos_v1.h,215 :: 		(*cuentaBloqueo) = (*cuentaBloqueo) + 1;
0xB624	0xFFE9C25B  	MOVFF       FARG_bloqueos_cuentaBloqueo, FSR0L
0xB628	0xFFEAC25C  	MOVFF       FARG_bloqueos_cuentaBloqueo+1, FSR0H
0xB62C	0xFFE1C25B  	MOVFF       FARG_bloqueos_cuentaBloqueo, FSR1L
0xB630	0xFFE2C25C  	MOVFF       FARG_bloqueos_cuentaBloqueo+1, FSR1H
0xB634	0x2AE6      	INCF        POSTINC1, 1 
;bloqueos_v1.h,216 :: 		Bandera.Par3 = true;
0xB636	0x0E01      	MOVLW       1
0xB638	0x6FE6      	MOVWF       _Bandera+2, 1
;bloqueos_v1.h,217 :: 		Desborde.Par3 = 0;
0xB63A	0x6BB0      	CLRF        _Desborde+4, 1
0xB63C	0x6BB1      	CLRF        _Desborde+5, 1
;bloqueos_v1.h,218 :: 		cuenta = true;
0xB63E	0x0E01      	MOVLW       1
0xB640	0x0100      	MOVLB       0
0xB642	0x6F92      	MOVWF       _cuenta, 1
;bloqueos_v1.h,219 :: 		desbordoGPS = periodoEnvioGPS - 2;
0xB644	0x0EB2      	MOVLW       178
0xB646	0x6FE1      	MOVWF       _desbordoGPS, 1
0xB648	0x0E00      	MOVLW       0
0xB64A	0x6FE2      	MOVWF       _desbordoGPS+1, 1
;bloqueos_v1.h,220 :: 		if(!MSTR){
0xB64C	0xB483      	BTFSC       PORTD, 2 
0xB64E	0xD006      	BRA         L_bloqueos71
;bloqueos_v1.h,221 :: 		EnvioCuenta = true;
0xB650	0x0E01      	MOVLW       1
0xB652	0x6E5C      	MOVWF       _EnvioCuenta 
;bloqueos_v1.h,222 :: 		desbordoGPS_SLV = periodoEnvioGPS - 2;
0xB654	0x0EB2      	MOVLW       178
0xB656	0x6F6B      	MOVWF       _desbordoGPS_SLV, 1
0xB658	0x0E00      	MOVLW       0
0xB65A	0x6F6C      	MOVWF       _desbordoGPS_SLV+1, 1
;bloqueos_v1.h,223 :: 		}
L_bloqueos71:
;bloqueos_v1.h,224 :: 		}
L_bloqueos70:
;bloqueos_v1.h,225 :: 		}
L_bloqueos69:
;bloqueos_v1.h,226 :: 		}
0xB65C	0xD01C      	BRA         L_bloqueos72
L_bloqueos68:
;bloqueos_v1.h,227 :: 		else if((!SENSOR5 & SENSOR6) | (SENSOR5 & !SENSOR6) | (SENSOR5 & SENSOR6)){
0xB65E	0x0102      	MOVLB       2
0xB660	0x5359      	MOVF        FARG_bloqueos_SENSOR5, 1, 1
0xB662	0x0E01      	MOVLW       1
0xB664	0xA4D8      	BTFSS       STATUS, 2 
0xB666	0x0E00      	MOVLW       0
0xB668	0x6E00      	MOVWF       R0 
0xB66A	0x515A      	MOVF        FARG_bloqueos_SENSOR6, 0, 1
0xB66C	0x1400      	ANDWF       R0, 0 
0xB66E	0x6E01      	MOVWF       R1 
0xB670	0x535A      	MOVF        FARG_bloqueos_SENSOR6, 1, 1
0xB672	0x0E01      	MOVLW       1
0xB674	0xA4D8      	BTFSS       STATUS, 2 
0xB676	0x0E00      	MOVLW       0
0xB678	0x6E00      	MOVWF       R0 
0xB67A	0x5159      	MOVF        FARG_bloqueos_SENSOR5, 0, 1
0xB67C	0x1600      	ANDWF       R0, 1 
0xB67E	0x5000      	MOVF        R0, 0 
0xB680	0x1201      	IORWF       R1, 1 
0xB682	0x515A      	MOVF        FARG_bloqueos_SENSOR6, 0, 1
0xB684	0x1559      	ANDWF       FARG_bloqueos_SENSOR5, 0, 1
0xB686	0x6E00      	MOVWF       R0 
0xB688	0x5001      	MOVF        R1, 0 
0xB68A	0x1200      	IORWF       R0, 1 
0xB68C	0xE004      	BZ          L_bloqueos73
;bloqueos_v1.h,228 :: 		Bandera.Par3 = false;
0xB68E	0x0101      	MOVLB       1
0xB690	0x6BE6      	CLRF        _Bandera+2, 1
;bloqueos_v1.h,229 :: 		Desborde.Par3 = 0;
0xB692	0x6BB0      	CLRF        _Desborde+4, 1
0xB694	0x6BB1      	CLRF        _Desborde+5, 1
;bloqueos_v1.h,231 :: 		}
L_bloqueos73:
L_bloqueos72:
;bloqueos_v1.h,233 :: 		if(!SENSOR1 & !SENSOR3){
0xB696	0x0102      	MOVLB       2
0xB698	0x5355      	MOVF        FARG_bloqueos_SENSOR1, 1, 1
0xB69A	0x0E01      	MOVLW       1
0xB69C	0xA4D8      	BTFSS       STATUS, 2 
0xB69E	0x0E00      	MOVLW       0
0xB6A0	0x6E01      	MOVWF       R1 
0xB6A2	0x5357      	MOVF        FARG_bloqueos_SENSOR3, 1, 1
0xB6A4	0x0E01      	MOVLW       1
0xB6A6	0xA4D8      	BTFSS       STATUS, 2 
0xB6A8	0x0E00      	MOVLW       0
0xB6AA	0x6E00      	MOVWF       R0 
0xB6AC	0x5001      	MOVF        R1, 0 
0xB6AE	0x1600      	ANDWF       R0, 1 
0xB6B0	0xE06E      	BZ          L_bloqueos74
;bloqueos_v1.h,234 :: 		Desborde.Par4 = Desborde.Par4++;
0xB6B2	0x0E01      	MOVLW       1
0xB6B4	0x0101      	MOVLB       1
0xB6B6	0x25B2      	ADDWF       _Desborde+6, 0, 1
0xB6B8	0x6E00      	MOVWF       R0 
0xB6BA	0x0E00      	MOVLW       0
0xB6BC	0x21B3      	ADDWFC      _Desborde+7, 0, 1
0xB6BE	0x6E01      	MOVWF       R1 
0xB6C0	0xF1B2C000  	MOVFF       R0, _Desborde+6
0xB6C4	0xF1B3C001  	MOVFF       R1, _Desborde+7
;bloqueos_v1.h,235 :: 		if(Desborde.Par4 > PERIODOBLOQUEO){
0xB6C8	0x0E00      	MOVLW       0
0xB6CA	0x6E00      	MOVWF       R0 
0xB6CC	0x51B3      	MOVF        _Desborde+7, 0, 1
0xB6CE	0x5C00      	SUBWF       R0, 0 
0xB6D0	0xE102      	BNZ         L__bloqueos691
0xB6D2	0x51B2      	MOVF        _Desborde+6, 0, 1
0xB6D4	0x0808      	SUBLW       8
L__bloqueos691:
0xB6D6	0xE25A      	BC          L_bloqueos75
;bloqueos_v1.h,236 :: 		if(!Bandera.Par1 & !Bandera.Par2 & !Bandera.Par3 & !Bandera.Par4 & !Bandera.Par5 & !Bandera.Par6 & !Bandera.Par7 & !Bandera.Par8 & !Bandera.Par9){
0xB6D8	0x53E4      	MOVF        _Bandera, 1, 1
0xB6DA	0x0E01      	MOVLW       1
0xB6DC	0xA4D8      	BTFSS       STATUS, 2 
0xB6DE	0x0E00      	MOVLW       0
0xB6E0	0x6E01      	MOVWF       R1 
0xB6E2	0x53E5      	MOVF        _Bandera+1, 1, 1
0xB6E4	0x0E01      	MOVLW       1
0xB6E6	0xA4D8      	BTFSS       STATUS, 2 
0xB6E8	0x0E00      	MOVLW       0
0xB6EA	0x6E00      	MOVWF       R0 
0xB6EC	0x5000      	MOVF        R0, 0 
0xB6EE	0x1601      	ANDWF       R1, 1 
0xB6F0	0x53E6      	MOVF        _Bandera+2, 1, 1
0xB6F2	0x0E01      	MOVLW       1
0xB6F4	0xA4D8      	BTFSS       STATUS, 2 
0xB6F6	0x0E00      	MOVLW       0
0xB6F8	0x6E00      	MOVWF       R0 
0xB6FA	0x5000      	MOVF        R0, 0 
0xB6FC	0x1601      	ANDWF       R1, 1 
0xB6FE	0x53E7      	MOVF        _Bandera+3, 1, 1
0xB700	0x0E01      	MOVLW       1
0xB702	0xA4D8      	BTFSS       STATUS, 2 
0xB704	0x0E00      	MOVLW       0
0xB706	0x6E00      	MOVWF       R0 
0xB708	0x5000      	MOVF        R0, 0 
0xB70A	0x1601      	ANDWF       R1, 1 
0xB70C	0x53E8      	MOVF        _Bandera+4, 1, 1
0xB70E	0x0E01      	MOVLW       1
0xB710	0xA4D8      	BTFSS       STATUS, 2 
0xB712	0x0E00      	MOVLW       0
0xB714	0x6E00      	MOVWF       R0 
0xB716	0x5000      	MOVF        R0, 0 
0xB718	0x1601      	ANDWF       R1, 1 
0xB71A	0x53E9      	MOVF        _Bandera+5, 1, 1
0xB71C	0x0E01      	MOVLW       1
0xB71E	0xA4D8      	BTFSS       STATUS, 2 
0xB720	0x0E00      	MOVLW       0
0xB722	0x6E00      	MOVWF       R0 
0xB724	0x5000      	MOVF        R0, 0 
0xB726	0x1601      	ANDWF       R1, 1 
0xB728	0x53EA      	MOVF        _Bandera+6, 1, 1
0xB72A	0x0E01      	MOVLW       1
0xB72C	0xA4D8      	BTFSS       STATUS, 2 
0xB72E	0x0E00      	MOVLW       0
0xB730	0x6E00      	MOVWF       R0 
0xB732	0x5000      	MOVF        R0, 0 
0xB734	0x1601      	ANDWF       R1, 1 
0xB736	0x53EB      	MOVF        _Bandera+7, 1, 1
0xB738	0x0E01      	MOVLW       1
0xB73A	0xA4D8      	BTFSS       STATUS, 2 
0xB73C	0x0E00      	MOVLW       0
0xB73E	0x6E00      	MOVWF       R0 
0xB740	0x5000      	MOVF        R0, 0 
0xB742	0x1601      	ANDWF       R1, 1 
0xB744	0x53EC      	MOVF        _Bandera+8, 1, 1
0xB746	0x0E01      	MOVLW       1
0xB748	0xA4D8      	BTFSS       STATUS, 2 
0xB74A	0x0E00      	MOVLW       0
0xB74C	0x6E00      	MOVWF       R0 
0xB74E	0x5001      	MOVF        R1, 0 
0xB750	0x1600      	ANDWF       R0, 1 
0xB752	0xE01C      	BZ          L_bloqueos76
;bloqueos_v1.h,237 :: 		(*cuentaBloqueo) = (*cuentaBloqueo) + 1;
0xB754	0xFFE9C25B  	MOVFF       FARG_bloqueos_cuentaBloqueo, FSR0L
0xB758	0xFFEAC25C  	MOVFF       FARG_bloqueos_cuentaBloqueo+1, FSR0H
0xB75C	0xFFE1C25B  	MOVFF       FARG_bloqueos_cuentaBloqueo, FSR1L
0xB760	0xFFE2C25C  	MOVFF       FARG_bloqueos_cuentaBloqueo+1, FSR1H
0xB764	0x2AE6      	INCF        POSTINC1, 1 
;bloqueos_v1.h,238 :: 		Bandera.Par4 = true;
0xB766	0x0E01      	MOVLW       1
0xB768	0x6FE7      	MOVWF       _Bandera+3, 1
;bloqueos_v1.h,239 :: 		Desborde.Par4 = 0;
0xB76A	0x6BB2      	CLRF        _Desborde+6, 1
0xB76C	0x6BB3      	CLRF        _Desborde+7, 1
;bloqueos_v1.h,240 :: 		cuenta = true;
0xB76E	0x0E01      	MOVLW       1
0xB770	0x0100      	MOVLB       0
0xB772	0x6F92      	MOVWF       _cuenta, 1
;bloqueos_v1.h,241 :: 		desbordoGPS = periodoEnvioGPS - 2;
0xB774	0x0EB2      	MOVLW       178
0xB776	0x6FE1      	MOVWF       _desbordoGPS, 1
0xB778	0x0E00      	MOVLW       0
0xB77A	0x6FE2      	MOVWF       _desbordoGPS+1, 1
;bloqueos_v1.h,242 :: 		if(!MSTR){
0xB77C	0xB483      	BTFSC       PORTD, 2 
0xB77E	0xD006      	BRA         L_bloqueos77
;bloqueos_v1.h,243 :: 		EnvioCuenta = true;
0xB780	0x0E01      	MOVLW       1
0xB782	0x6E5C      	MOVWF       _EnvioCuenta 
;bloqueos_v1.h,244 :: 		desbordoGPS_SLV = periodoEnvioGPS - 2;
0xB784	0x0EB2      	MOVLW       178
0xB786	0x6F6B      	MOVWF       _desbordoGPS_SLV, 1
0xB788	0x0E00      	MOVLW       0
0xB78A	0x6F6C      	MOVWF       _desbordoGPS_SLV+1, 1
;bloqueos_v1.h,245 :: 		}
L_bloqueos77:
;bloqueos_v1.h,246 :: 		}
L_bloqueos76:
;bloqueos_v1.h,247 :: 		}
L_bloqueos75:
;bloqueos_v1.h,248 :: 		}
0xB78C	0xD01C      	BRA         L_bloqueos78
L_bloqueos74:
;bloqueos_v1.h,249 :: 		else if((!SENSOR1 & SENSOR3) | (SENSOR1 & !SENSOR3) | (SENSOR1 & SENSOR3)){
0xB78E	0x0102      	MOVLB       2
0xB790	0x5355      	MOVF        FARG_bloqueos_SENSOR1, 1, 1
0xB792	0x0E01      	MOVLW       1
0xB794	0xA4D8      	BTFSS       STATUS, 2 
0xB796	0x0E00      	MOVLW       0
0xB798	0x6E00      	MOVWF       R0 
0xB79A	0x5157      	MOVF        FARG_bloqueos_SENSOR3, 0, 1
0xB79C	0x1400      	ANDWF       R0, 0 
0xB79E	0x6E01      	MOVWF       R1 
0xB7A0	0x5357      	MOVF        FARG_bloqueos_SENSOR3, 1, 1
0xB7A2	0x0E01      	MOVLW       1
0xB7A4	0xA4D8      	BTFSS       STATUS, 2 
0xB7A6	0x0E00      	MOVLW       0
0xB7A8	0x6E00      	MOVWF       R0 
0xB7AA	0x5155      	MOVF        FARG_bloqueos_SENSOR1, 0, 1
0xB7AC	0x1600      	ANDWF       R0, 1 
0xB7AE	0x5000      	MOVF        R0, 0 
0xB7B0	0x1201      	IORWF       R1, 1 
0xB7B2	0x5157      	MOVF        FARG_bloqueos_SENSOR3, 0, 1
0xB7B4	0x1555      	ANDWF       FARG_bloqueos_SENSOR1, 0, 1
0xB7B6	0x6E00      	MOVWF       R0 
0xB7B8	0x5001      	MOVF        R1, 0 
0xB7BA	0x1200      	IORWF       R0, 1 
0xB7BC	0xE004      	BZ          L_bloqueos79
;bloqueos_v1.h,250 :: 		Bandera.Par4 = false;
0xB7BE	0x0101      	MOVLB       1
0xB7C0	0x6BE7      	CLRF        _Bandera+3, 1
;bloqueos_v1.h,251 :: 		Desborde.Par4 = 0;
0xB7C2	0x6BB2      	CLRF        _Desborde+6, 1
0xB7C4	0x6BB3      	CLRF        _Desborde+7, 1
;bloqueos_v1.h,253 :: 		}
L_bloqueos79:
L_bloqueos78:
;bloqueos_v1.h,255 :: 		if(!SENSOR1 & !SENSOR5){
0xB7C6	0x0102      	MOVLB       2
0xB7C8	0x5355      	MOVF        FARG_bloqueos_SENSOR1, 1, 1
0xB7CA	0x0E01      	MOVLW       1
0xB7CC	0xA4D8      	BTFSS       STATUS, 2 
0xB7CE	0x0E00      	MOVLW       0
0xB7D0	0x6E01      	MOVWF       R1 
0xB7D2	0x5359      	MOVF        FARG_bloqueos_SENSOR5, 1, 1
0xB7D4	0x0E01      	MOVLW       1
0xB7D6	0xA4D8      	BTFSS       STATUS, 2 
0xB7D8	0x0E00      	MOVLW       0
0xB7DA	0x6E00      	MOVWF       R0 
0xB7DC	0x5001      	MOVF        R1, 0 
0xB7DE	0x1600      	ANDWF       R0, 1 
0xB7E0	0xE06E      	BZ          L_bloqueos80
;bloqueos_v1.h,256 :: 		Desborde.Par6 = Desborde.Par6++;
0xB7E2	0x0E01      	MOVLW       1
0xB7E4	0x0101      	MOVLB       1
0xB7E6	0x25B6      	ADDWF       _Desborde+10, 0, 1
0xB7E8	0x6E00      	MOVWF       R0 
0xB7EA	0x0E00      	MOVLW       0
0xB7EC	0x21B7      	ADDWFC      _Desborde+11, 0, 1
0xB7EE	0x6E01      	MOVWF       R1 
0xB7F0	0xF1B6C000  	MOVFF       R0, _Desborde+10
0xB7F4	0xF1B7C001  	MOVFF       R1, _Desborde+11
;bloqueos_v1.h,257 :: 		if(Desborde.Par6 > PERIODOBLOQUEO){
0xB7F8	0x0E00      	MOVLW       0
0xB7FA	0x6E00      	MOVWF       R0 
0xB7FC	0x51B7      	MOVF        _Desborde+11, 0, 1
0xB7FE	0x5C00      	SUBWF       R0, 0 
0xB800	0xE102      	BNZ         L__bloqueos692
0xB802	0x51B6      	MOVF        _Desborde+10, 0, 1
0xB804	0x0808      	SUBLW       8
L__bloqueos692:
0xB806	0xE25A      	BC          L_bloqueos81
;bloqueos_v1.h,258 :: 		if(!Bandera.Par1 & !Bandera.Par2 & !Bandera.Par3 & !Bandera.Par4 & !Bandera.Par5 & !Bandera.Par6 & !Bandera.Par7 & !Bandera.Par8 & !Bandera.Par9){
0xB808	0x53E4      	MOVF        _Bandera, 1, 1
0xB80A	0x0E01      	MOVLW       1
0xB80C	0xA4D8      	BTFSS       STATUS, 2 
0xB80E	0x0E00      	MOVLW       0
0xB810	0x6E01      	MOVWF       R1 
0xB812	0x53E5      	MOVF        _Bandera+1, 1, 1
0xB814	0x0E01      	MOVLW       1
0xB816	0xA4D8      	BTFSS       STATUS, 2 
0xB818	0x0E00      	MOVLW       0
0xB81A	0x6E00      	MOVWF       R0 
0xB81C	0x5000      	MOVF        R0, 0 
0xB81E	0x1601      	ANDWF       R1, 1 
0xB820	0x53E6      	MOVF        _Bandera+2, 1, 1
0xB822	0x0E01      	MOVLW       1
0xB824	0xA4D8      	BTFSS       STATUS, 2 
0xB826	0x0E00      	MOVLW       0
0xB828	0x6E00      	MOVWF       R0 
0xB82A	0x5000      	MOVF        R0, 0 
0xB82C	0x1601      	ANDWF       R1, 1 
0xB82E	0x53E7      	MOVF        _Bandera+3, 1, 1
0xB830	0x0E01      	MOVLW       1
0xB832	0xA4D8      	BTFSS       STATUS, 2 
0xB834	0x0E00      	MOVLW       0
0xB836	0x6E00      	MOVWF       R0 
0xB838	0x5000      	MOVF        R0, 0 
0xB83A	0x1601      	ANDWF       R1, 1 
0xB83C	0x53E8      	MOVF        _Bandera+4, 1, 1
0xB83E	0x0E01      	MOVLW       1
0xB840	0xA4D8      	BTFSS       STATUS, 2 
0xB842	0x0E00      	MOVLW       0
0xB844	0x6E00      	MOVWF       R0 
0xB846	0x5000      	MOVF        R0, 0 
0xB848	0x1601      	ANDWF       R1, 1 
0xB84A	0x53E9      	MOVF        _Bandera+5, 1, 1
0xB84C	0x0E01      	MOVLW       1
0xB84E	0xA4D8      	BTFSS       STATUS, 2 
0xB850	0x0E00      	MOVLW       0
0xB852	0x6E00      	MOVWF       R0 
0xB854	0x5000      	MOVF        R0, 0 
0xB856	0x1601      	ANDWF       R1, 1 
0xB858	0x53EA      	MOVF        _Bandera+6, 1, 1
0xB85A	0x0E01      	MOVLW       1
0xB85C	0xA4D8      	BTFSS       STATUS, 2 
0xB85E	0x0E00      	MOVLW       0
0xB860	0x6E00      	MOVWF       R0 
0xB862	0x5000      	MOVF        R0, 0 
0xB864	0x1601      	ANDWF       R1, 1 
0xB866	0x53EB      	MOVF        _Bandera+7, 1, 1
0xB868	0x0E01      	MOVLW       1
0xB86A	0xA4D8      	BTFSS       STATUS, 2 
0xB86C	0x0E00      	MOVLW       0
0xB86E	0x6E00      	MOVWF       R0 
0xB870	0x5000      	MOVF        R0, 0 
0xB872	0x1601      	ANDWF       R1, 1 
0xB874	0x53EC      	MOVF        _Bandera+8, 1, 1
0xB876	0x0E01      	MOVLW       1
0xB878	0xA4D8      	BTFSS       STATUS, 2 
0xB87A	0x0E00      	MOVLW       0
0xB87C	0x6E00      	MOVWF       R0 
0xB87E	0x5001      	MOVF        R1, 0 
0xB880	0x1600      	ANDWF       R0, 1 
0xB882	0xE01C      	BZ          L_bloqueos82
;bloqueos_v1.h,259 :: 		(*cuentaBloqueo) = (*cuentaBloqueo) + 1;
0xB884	0xFFE9C25B  	MOVFF       FARG_bloqueos_cuentaBloqueo, FSR0L
0xB888	0xFFEAC25C  	MOVFF       FARG_bloqueos_cuentaBloqueo+1, FSR0H
0xB88C	0xFFE1C25B  	MOVFF       FARG_bloqueos_cuentaBloqueo, FSR1L
0xB890	0xFFE2C25C  	MOVFF       FARG_bloqueos_cuentaBloqueo+1, FSR1H
0xB894	0x2AE6      	INCF        POSTINC1, 1 
;bloqueos_v1.h,260 :: 		Bandera.Par6 = true;
0xB896	0x0E01      	MOVLW       1
0xB898	0x6FE9      	MOVWF       _Bandera+5, 1
;bloqueos_v1.h,261 :: 		Desborde.Par6 = 0;
0xB89A	0x6BB6      	CLRF        _Desborde+10, 1
0xB89C	0x6BB7      	CLRF        _Desborde+11, 1
;bloqueos_v1.h,262 :: 		cuenta = true;
0xB89E	0x0E01      	MOVLW       1
0xB8A0	0x0100      	MOVLB       0
0xB8A2	0x6F92      	MOVWF       _cuenta, 1
;bloqueos_v1.h,263 :: 		desbordoGPS = periodoEnvioGPS - 2;
0xB8A4	0x0EB2      	MOVLW       178
0xB8A6	0x6FE1      	MOVWF       _desbordoGPS, 1
0xB8A8	0x0E00      	MOVLW       0
0xB8AA	0x6FE2      	MOVWF       _desbordoGPS+1, 1
;bloqueos_v1.h,264 :: 		if(!MSTR){
0xB8AC	0xB483      	BTFSC       PORTD, 2 
0xB8AE	0xD006      	BRA         L_bloqueos83
;bloqueos_v1.h,265 :: 		EnvioCuenta = true;
0xB8B0	0x0E01      	MOVLW       1
0xB8B2	0x6E5C      	MOVWF       _EnvioCuenta 
;bloqueos_v1.h,266 :: 		desbordoGPS_SLV = periodoEnvioGPS - 2;
0xB8B4	0x0EB2      	MOVLW       178
0xB8B6	0x6F6B      	MOVWF       _desbordoGPS_SLV, 1
0xB8B8	0x0E00      	MOVLW       0
0xB8BA	0x6F6C      	MOVWF       _desbordoGPS_SLV+1, 1
;bloqueos_v1.h,267 :: 		}
L_bloqueos83:
;bloqueos_v1.h,268 :: 		}
L_bloqueos82:
;bloqueos_v1.h,269 :: 		}
L_bloqueos81:
;bloqueos_v1.h,270 :: 		}
0xB8BC	0xD01C      	BRA         L_bloqueos84
L_bloqueos80:
;bloqueos_v1.h,271 :: 		else if((!SENSOR1 & SENSOR5) | (SENSOR1 & !SENSOR5) | (SENSOR1 & SENSOR5)){
0xB8BE	0x0102      	MOVLB       2
0xB8C0	0x5355      	MOVF        FARG_bloqueos_SENSOR1, 1, 1
0xB8C2	0x0E01      	MOVLW       1
0xB8C4	0xA4D8      	BTFSS       STATUS, 2 
0xB8C6	0x0E00      	MOVLW       0
0xB8C8	0x6E00      	MOVWF       R0 
0xB8CA	0x5159      	MOVF        FARG_bloqueos_SENSOR5, 0, 1
0xB8CC	0x1400      	ANDWF       R0, 0 
0xB8CE	0x6E01      	MOVWF       R1 
0xB8D0	0x5359      	MOVF        FARG_bloqueos_SENSOR5, 1, 1
0xB8D2	0x0E01      	MOVLW       1
0xB8D4	0xA4D8      	BTFSS       STATUS, 2 
0xB8D6	0x0E00      	MOVLW       0
0xB8D8	0x6E00      	MOVWF       R0 
0xB8DA	0x5155      	MOVF        FARG_bloqueos_SENSOR1, 0, 1
0xB8DC	0x1600      	ANDWF       R0, 1 
0xB8DE	0x5000      	MOVF        R0, 0 
0xB8E0	0x1201      	IORWF       R1, 1 
0xB8E2	0x5159      	MOVF        FARG_bloqueos_SENSOR5, 0, 1
0xB8E4	0x1555      	ANDWF       FARG_bloqueos_SENSOR1, 0, 1
0xB8E6	0x6E00      	MOVWF       R0 
0xB8E8	0x5001      	MOVF        R1, 0 
0xB8EA	0x1200      	IORWF       R0, 1 
0xB8EC	0xE004      	BZ          L_bloqueos85
;bloqueos_v1.h,272 :: 		Bandera.Par6 = false;
0xB8EE	0x0101      	MOVLB       1
0xB8F0	0x6BE9      	CLRF        _Bandera+5, 1
;bloqueos_v1.h,273 :: 		Desborde.Par6 = 0;
0xB8F2	0x6BB6      	CLRF        _Desborde+10, 1
0xB8F4	0x6BB7      	CLRF        _Desborde+11, 1
;bloqueos_v1.h,275 :: 		}
L_bloqueos85:
L_bloqueos84:
;bloqueos_v1.h,277 :: 		if(!SENSOR2 & !SENSOR4){
0xB8F6	0x0102      	MOVLB       2
0xB8F8	0x5356      	MOVF        FARG_bloqueos_SENSOR2, 1, 1
0xB8FA	0x0E01      	MOVLW       1
0xB8FC	0xA4D8      	BTFSS       STATUS, 2 
0xB8FE	0x0E00      	MOVLW       0
0xB900	0x6E01      	MOVWF       R1 
0xB902	0x5358      	MOVF        FARG_bloqueos_SENSOR4, 1, 1
0xB904	0x0E01      	MOVLW       1
0xB906	0xA4D8      	BTFSS       STATUS, 2 
0xB908	0x0E00      	MOVLW       0
0xB90A	0x6E00      	MOVWF       R0 
0xB90C	0x5001      	MOVF        R1, 0 
0xB90E	0x1600      	ANDWF       R0, 1 
0xB910	0xE070      	BZ          L_bloqueos86
;bloqueos_v1.h,278 :: 		Desborde.Par7 = Desborde.Par7++;
0xB912	0x0E01      	MOVLW       1
0xB914	0x0101      	MOVLB       1
0xB916	0x25B8      	ADDWF       _Desborde+12, 0, 1
0xB918	0x6E00      	MOVWF       R0 
0xB91A	0x0E00      	MOVLW       0
0xB91C	0x21B9      	ADDWFC      _Desborde+13, 0, 1
0xB91E	0x6E01      	MOVWF       R1 
0xB920	0xF1B8C000  	MOVFF       R0, _Desborde+12
0xB924	0xF1B9C001  	MOVFF       R1, _Desborde+13
;bloqueos_v1.h,279 :: 		if(Desborde.Par7 > PERIODOBLOQUEO){
0xB928	0x0E00      	MOVLW       0
0xB92A	0x6E00      	MOVWF       R0 
0xB92C	0x51B9      	MOVF        _Desborde+13, 0, 1
0xB92E	0x5C00      	SUBWF       R0, 0 
0xB930	0xE102      	BNZ         L__bloqueos693
0xB932	0x51B8      	MOVF        _Desborde+12, 0, 1
0xB934	0x0808      	SUBLW       8
L__bloqueos693:
0xB936	0xE25C      	BC          L_bloqueos87
;bloqueos_v1.h,280 :: 		if(!Bandera.Par1 & !Bandera.Par2 & !Bandera.Par3 & !Bandera.Par4 & !Bandera.Par5 & !Bandera.Par6 & !Bandera.Par7 & !Bandera.Par8 & !Bandera.Par9){
0xB938	0x53E4      	MOVF        _Bandera, 1, 1
0xB93A	0x0E01      	MOVLW       1
0xB93C	0xA4D8      	BTFSS       STATUS, 2 
0xB93E	0x0E00      	MOVLW       0
0xB940	0x6E01      	MOVWF       R1 
0xB942	0x53E5      	MOVF        _Bandera+1, 1, 1
0xB944	0x0E01      	MOVLW       1
0xB946	0xA4D8      	BTFSS       STATUS, 2 
0xB948	0x0E00      	MOVLW       0
0xB94A	0x6E00      	MOVWF       R0 
0xB94C	0x5000      	MOVF        R0, 0 
0xB94E	0x1601      	ANDWF       R1, 1 
0xB950	0x53E6      	MOVF        _Bandera+2, 1, 1
0xB952	0x0E01      	MOVLW       1
0xB954	0xA4D8      	BTFSS       STATUS, 2 
0xB956	0x0E00      	MOVLW       0
0xB958	0x6E00      	MOVWF       R0 
0xB95A	0x5000      	MOVF        R0, 0 
0xB95C	0x1601      	ANDWF       R1, 1 
0xB95E	0x53E7      	MOVF        _Bandera+3, 1, 1
0xB960	0x0E01      	MOVLW       1
0xB962	0xA4D8      	BTFSS       STATUS, 2 
0xB964	0x0E00      	MOVLW       0
0xB966	0x6E00      	MOVWF       R0 
0xB968	0x5000      	MOVF        R0, 0 
0xB96A	0x1601      	ANDWF       R1, 1 
0xB96C	0x53E8      	MOVF        _Bandera+4, 1, 1
0xB96E	0x0E01      	MOVLW       1
0xB970	0xA4D8      	BTFSS       STATUS, 2 
0xB972	0x0E00      	MOVLW       0
0xB974	0x6E00      	MOVWF       R0 
0xB976	0x5000      	MOVF        R0, 0 
0xB978	0x1601      	ANDWF       R1, 1 
0xB97A	0x53E9      	MOVF        _Bandera+5, 1, 1
0xB97C	0x0E01      	MOVLW       1
0xB97E	0xA4D8      	BTFSS       STATUS, 2 
0xB980	0x0E00      	MOVLW       0
0xB982	0x6E00      	MOVWF       R0 
0xB984	0x5000      	MOVF        R0, 0 
0xB986	0x1601      	ANDWF       R1, 1 
0xB988	0x53EA      	MOVF        _Bandera+6, 1, 1
0xB98A	0x0E01      	MOVLW       1
0xB98C	0xA4D8      	BTFSS       STATUS, 2 
0xB98E	0x0E00      	MOVLW       0
0xB990	0x6E00      	MOVWF       R0 
0xB992	0x5000      	MOVF        R0, 0 
0xB994	0x1601      	ANDWF       R1, 1 
0xB996	0x53EB      	MOVF        _Bandera+7, 1, 1
0xB998	0x0E01      	MOVLW       1
0xB99A	0xA4D8      	BTFSS       STATUS, 2 
0xB99C	0x0E00      	MOVLW       0
0xB99E	0x6E00      	MOVWF       R0 
0xB9A0	0x5000      	MOVF        R0, 0 
0xB9A2	0x1601      	ANDWF       R1, 1 
0xB9A4	0x53EC      	MOVF        _Bandera+8, 1, 1
0xB9A6	0x0E01      	MOVLW       1
0xB9A8	0xA4D8      	BTFSS       STATUS, 2 
0xB9AA	0x0E00      	MOVLW       0
0xB9AC	0x6E00      	MOVWF       R0 
0xB9AE	0x5001      	MOVF        R1, 0 
0xB9B0	0x1600      	ANDWF       R0, 1 
0xB9B2	0xE01E      	BZ          L_bloqueos88
;bloqueos_v1.h,281 :: 		(*cuentaBloqueo) = (*cuentaBloqueo) + 1;
0xB9B4	0xFFE9C25B  	MOVFF       FARG_bloqueos_cuentaBloqueo, FSR0L
0xB9B8	0xFFEAC25C  	MOVFF       FARG_bloqueos_cuentaBloqueo+1, FSR0H
0xB9BC	0xFFE1C25B  	MOVFF       FARG_bloqueos_cuentaBloqueo, FSR1L
0xB9C0	0xFFE2C25C  	MOVFF       FARG_bloqueos_cuentaBloqueo+1, FSR1H
0xB9C4	0x2AE6      	INCF        POSTINC1, 1 
;bloqueos_v1.h,282 :: 		cuenta = true;
0xB9C6	0x0E01      	MOVLW       1
0xB9C8	0x0100      	MOVLB       0
0xB9CA	0x6F92      	MOVWF       _cuenta, 1
;bloqueos_v1.h,283 :: 		Bandera.Par7 = true;
0xB9CC	0x0E01      	MOVLW       1
0xB9CE	0x0101      	MOVLB       1
0xB9D0	0x6FEA      	MOVWF       _Bandera+6, 1
;bloqueos_v1.h,284 :: 		Desborde.Par7 = 0;
0xB9D2	0x6BB8      	CLRF        _Desborde+12, 1
0xB9D4	0x6BB9      	CLRF        _Desborde+13, 1
;bloqueos_v1.h,285 :: 		desbordoGPS = periodoEnvioGPS - 2;
0xB9D6	0x0EB2      	MOVLW       178
0xB9D8	0x0100      	MOVLB       0
0xB9DA	0x6FE1      	MOVWF       _desbordoGPS, 1
0xB9DC	0x0E00      	MOVLW       0
0xB9DE	0x6FE2      	MOVWF       _desbordoGPS+1, 1
;bloqueos_v1.h,286 :: 		if(!MSTR){
0xB9E0	0xB483      	BTFSC       PORTD, 2 
0xB9E2	0xD006      	BRA         L_bloqueos89
;bloqueos_v1.h,287 :: 		EnvioCuenta = true;
0xB9E4	0x0E01      	MOVLW       1
0xB9E6	0x6E5C      	MOVWF       _EnvioCuenta 
;bloqueos_v1.h,288 :: 		desbordoGPS_SLV = periodoEnvioGPS - 2;
0xB9E8	0x0EB2      	MOVLW       178
0xB9EA	0x6F6B      	MOVWF       _desbordoGPS_SLV, 1
0xB9EC	0x0E00      	MOVLW       0
0xB9EE	0x6F6C      	MOVWF       _desbordoGPS_SLV+1, 1
;bloqueos_v1.h,289 :: 		}
L_bloqueos89:
;bloqueos_v1.h,290 :: 		}
L_bloqueos88:
;bloqueos_v1.h,291 :: 		}
L_bloqueos87:
;bloqueos_v1.h,292 :: 		}
0xB9F0	0xD01C      	BRA         L_bloqueos90
L_bloqueos86:
;bloqueos_v1.h,293 :: 		else if((!SENSOR2 & SENSOR4) | (SENSOR2 & !SENSOR4) | (SENSOR2 & SENSOR4)){
0xB9F2	0x0102      	MOVLB       2
0xB9F4	0x5356      	MOVF        FARG_bloqueos_SENSOR2, 1, 1
0xB9F6	0x0E01      	MOVLW       1
0xB9F8	0xA4D8      	BTFSS       STATUS, 2 
0xB9FA	0x0E00      	MOVLW       0
0xB9FC	0x6E00      	MOVWF       R0 
0xB9FE	0x5158      	MOVF        FARG_bloqueos_SENSOR4, 0, 1
0xBA00	0x1400      	ANDWF       R0, 0 
0xBA02	0x6E01      	MOVWF       R1 
0xBA04	0x5358      	MOVF        FARG_bloqueos_SENSOR4, 1, 1
0xBA06	0x0E01      	MOVLW       1
0xBA08	0xA4D8      	BTFSS       STATUS, 2 
0xBA0A	0x0E00      	MOVLW       0
0xBA0C	0x6E00      	MOVWF       R0 
0xBA0E	0x5156      	MOVF        FARG_bloqueos_SENSOR2, 0, 1
0xBA10	0x1600      	ANDWF       R0, 1 
0xBA12	0x5000      	MOVF        R0, 0 
0xBA14	0x1201      	IORWF       R1, 1 
0xBA16	0x5158      	MOVF        FARG_bloqueos_SENSOR4, 0, 1
0xBA18	0x1556      	ANDWF       FARG_bloqueos_SENSOR2, 0, 1
0xBA1A	0x6E00      	MOVWF       R0 
0xBA1C	0x5001      	MOVF        R1, 0 
0xBA1E	0x1200      	IORWF       R0, 1 
0xBA20	0xE004      	BZ          L_bloqueos91
;bloqueos_v1.h,294 :: 		Bandera.Par7 = false;
0xBA22	0x0101      	MOVLB       1
0xBA24	0x6BEA      	CLRF        _Bandera+6, 1
;bloqueos_v1.h,295 :: 		Desborde.Par7 = 0;
0xBA26	0x6BB8      	CLRF        _Desborde+12, 1
0xBA28	0x6BB9      	CLRF        _Desborde+13, 1
;bloqueos_v1.h,297 :: 		}
L_bloqueos91:
L_bloqueos90:
;bloqueos_v1.h,299 :: 		if(!SENSOR4 & !SENSOR6){
0xBA2A	0x0102      	MOVLB       2
0xBA2C	0x5358      	MOVF        FARG_bloqueos_SENSOR4, 1, 1
0xBA2E	0x0E01      	MOVLW       1
0xBA30	0xA4D8      	BTFSS       STATUS, 2 
0xBA32	0x0E00      	MOVLW       0
0xBA34	0x6E01      	MOVWF       R1 
0xBA36	0x535A      	MOVF        FARG_bloqueos_SENSOR6, 1, 1
0xBA38	0x0E01      	MOVLW       1
0xBA3A	0xA4D8      	BTFSS       STATUS, 2 
0xBA3C	0x0E00      	MOVLW       0
0xBA3E	0x6E00      	MOVWF       R0 
0xBA40	0x5001      	MOVF        R1, 0 
0xBA42	0x1600      	ANDWF       R0, 1 
0xBA44	0xE06E      	BZ          L_bloqueos92
;bloqueos_v1.h,300 :: 		Desborde.Par9 = Desborde.Par9++;
0xBA46	0x0E01      	MOVLW       1
0xBA48	0x0101      	MOVLB       1
0xBA4A	0x25BC      	ADDWF       _Desborde+16, 0, 1
0xBA4C	0x6E00      	MOVWF       R0 
0xBA4E	0x0E00      	MOVLW       0
0xBA50	0x21BD      	ADDWFC      _Desborde+17, 0, 1
0xBA52	0x6E01      	MOVWF       R1 
0xBA54	0xF1BCC000  	MOVFF       R0, _Desborde+16
0xBA58	0xF1BDC001  	MOVFF       R1, _Desborde+17
;bloqueos_v1.h,301 :: 		if(Desborde.Par9 > PERIODOBLOQUEO){
0xBA5C	0x0E00      	MOVLW       0
0xBA5E	0x6E00      	MOVWF       R0 
0xBA60	0x51BD      	MOVF        _Desborde+17, 0, 1
0xBA62	0x5C00      	SUBWF       R0, 0 
0xBA64	0xE102      	BNZ         L__bloqueos694
0xBA66	0x51BC      	MOVF        _Desborde+16, 0, 1
0xBA68	0x0808      	SUBLW       8
L__bloqueos694:
0xBA6A	0xE25A      	BC          L_bloqueos93
;bloqueos_v1.h,302 :: 		if(!Bandera.Par1 & !Bandera.Par2 & !Bandera.Par3 & !Bandera.Par4 & !Bandera.Par5 & !Bandera.Par6 & !Bandera.Par7 & !Bandera.Par8 & !Bandera.Par9){
0xBA6C	0x53E4      	MOVF        _Bandera, 1, 1
0xBA6E	0x0E01      	MOVLW       1
0xBA70	0xA4D8      	BTFSS       STATUS, 2 
0xBA72	0x0E00      	MOVLW       0
0xBA74	0x6E01      	MOVWF       R1 
0xBA76	0x53E5      	MOVF        _Bandera+1, 1, 1
0xBA78	0x0E01      	MOVLW       1
0xBA7A	0xA4D8      	BTFSS       STATUS, 2 
0xBA7C	0x0E00      	MOVLW       0
0xBA7E	0x6E00      	MOVWF       R0 
0xBA80	0x5000      	MOVF        R0, 0 
0xBA82	0x1601      	ANDWF       R1, 1 
0xBA84	0x53E6      	MOVF        _Bandera+2, 1, 1
0xBA86	0x0E01      	MOVLW       1
0xBA88	0xA4D8      	BTFSS       STATUS, 2 
0xBA8A	0x0E00      	MOVLW       0
0xBA8C	0x6E00      	MOVWF       R0 
0xBA8E	0x5000      	MOVF        R0, 0 
0xBA90	0x1601      	ANDWF       R1, 1 
0xBA92	0x53E7      	MOVF        _Bandera+3, 1, 1
0xBA94	0x0E01      	MOVLW       1
0xBA96	0xA4D8      	BTFSS       STATUS, 2 
0xBA98	0x0E00      	MOVLW       0
0xBA9A	0x6E00      	MOVWF       R0 
0xBA9C	0x5000      	MOVF        R0, 0 
0xBA9E	0x1601      	ANDWF       R1, 1 
0xBAA0	0x53E8      	MOVF        _Bandera+4, 1, 1
0xBAA2	0x0E01      	MOVLW       1
0xBAA4	0xA4D8      	BTFSS       STATUS, 2 
0xBAA6	0x0E00      	MOVLW       0
0xBAA8	0x6E00      	MOVWF       R0 
0xBAAA	0x5000      	MOVF        R0, 0 
0xBAAC	0x1601      	ANDWF       R1, 1 
0xBAAE	0x53E9      	MOVF        _Bandera+5, 1, 1
0xBAB0	0x0E01      	MOVLW       1
0xBAB2	0xA4D8      	BTFSS       STATUS, 2 
0xBAB4	0x0E00      	MOVLW       0
0xBAB6	0x6E00      	MOVWF       R0 
0xBAB8	0x5000      	MOVF        R0, 0 
0xBABA	0x1601      	ANDWF       R1, 1 
0xBABC	0x53EA      	MOVF        _Bandera+6, 1, 1
0xBABE	0x0E01      	MOVLW       1
0xBAC0	0xA4D8      	BTFSS       STATUS, 2 
0xBAC2	0x0E00      	MOVLW       0
0xBAC4	0x6E00      	MOVWF       R0 
0xBAC6	0x5000      	MOVF        R0, 0 
0xBAC8	0x1601      	ANDWF       R1, 1 
0xBACA	0x53EB      	MOVF        _Bandera+7, 1, 1
0xBACC	0x0E01      	MOVLW       1
0xBACE	0xA4D8      	BTFSS       STATUS, 2 
0xBAD0	0x0E00      	MOVLW       0
0xBAD2	0x6E00      	MOVWF       R0 
0xBAD4	0x5000      	MOVF        R0, 0 
0xBAD6	0x1601      	ANDWF       R1, 1 
0xBAD8	0x53EC      	MOVF        _Bandera+8, 1, 1
0xBADA	0x0E01      	MOVLW       1
0xBADC	0xA4D8      	BTFSS       STATUS, 2 
0xBADE	0x0E00      	MOVLW       0
0xBAE0	0x6E00      	MOVWF       R0 
0xBAE2	0x5001      	MOVF        R1, 0 
0xBAE4	0x1600      	ANDWF       R0, 1 
0xBAE6	0xE01C      	BZ          L_bloqueos94
;bloqueos_v1.h,303 :: 		(*cuentaBloqueo) = (*cuentaBloqueo) + 1;
0xBAE8	0xFFE9C25B  	MOVFF       FARG_bloqueos_cuentaBloqueo, FSR0L
0xBAEC	0xFFEAC25C  	MOVFF       FARG_bloqueos_cuentaBloqueo+1, FSR0H
0xBAF0	0xFFE1C25B  	MOVFF       FARG_bloqueos_cuentaBloqueo, FSR1L
0xBAF4	0xFFE2C25C  	MOVFF       FARG_bloqueos_cuentaBloqueo+1, FSR1H
0xBAF8	0x2AE6      	INCF        POSTINC1, 1 
;bloqueos_v1.h,304 :: 		Bandera.Par9 = true;
0xBAFA	0x0E01      	MOVLW       1
0xBAFC	0x6FEC      	MOVWF       _Bandera+8, 1
;bloqueos_v1.h,305 :: 		Desborde.Par9 = 0;
0xBAFE	0x6BBC      	CLRF        _Desborde+16, 1
0xBB00	0x6BBD      	CLRF        _Desborde+17, 1
;bloqueos_v1.h,306 :: 		cuenta = true;
0xBB02	0x0E01      	MOVLW       1
0xBB04	0x0100      	MOVLB       0
0xBB06	0x6F92      	MOVWF       _cuenta, 1
;bloqueos_v1.h,307 :: 		desbordoGPS = periodoEnvioGPS - 2;
0xBB08	0x0EB2      	MOVLW       178
0xBB0A	0x6FE1      	MOVWF       _desbordoGPS, 1
0xBB0C	0x0E00      	MOVLW       0
0xBB0E	0x6FE2      	MOVWF       _desbordoGPS+1, 1
;bloqueos_v1.h,308 :: 		if(!MSTR){
0xBB10	0xB483      	BTFSC       PORTD, 2 
0xBB12	0xD006      	BRA         L_bloqueos95
;bloqueos_v1.h,309 :: 		EnvioCuenta = true;
0xBB14	0x0E01      	MOVLW       1
0xBB16	0x6E5C      	MOVWF       _EnvioCuenta 
;bloqueos_v1.h,310 :: 		desbordoGPS_SLV = periodoEnvioGPS - 2;
0xBB18	0x0EB2      	MOVLW       178
0xBB1A	0x6F6B      	MOVWF       _desbordoGPS_SLV, 1
0xBB1C	0x0E00      	MOVLW       0
0xBB1E	0x6F6C      	MOVWF       _desbordoGPS_SLV+1, 1
;bloqueos_v1.h,311 :: 		}
L_bloqueos95:
;bloqueos_v1.h,312 :: 		}
L_bloqueos94:
;bloqueos_v1.h,313 :: 		}
L_bloqueos93:
;bloqueos_v1.h,314 :: 		}
0xBB20	0xD01C      	BRA         L_bloqueos96
L_bloqueos92:
;bloqueos_v1.h,315 :: 		else if((!SENSOR4 & SENSOR6) | (SENSOR4 & !SENSOR6) | (SENSOR4 & SENSOR6)){
0xBB22	0x0102      	MOVLB       2
0xBB24	0x5358      	MOVF        FARG_bloqueos_SENSOR4, 1, 1
0xBB26	0x0E01      	MOVLW       1
0xBB28	0xA4D8      	BTFSS       STATUS, 2 
0xBB2A	0x0E00      	MOVLW       0
0xBB2C	0x6E00      	MOVWF       R0 
0xBB2E	0x515A      	MOVF        FARG_bloqueos_SENSOR6, 0, 1
0xBB30	0x1400      	ANDWF       R0, 0 
0xBB32	0x6E01      	MOVWF       R1 
0xBB34	0x535A      	MOVF        FARG_bloqueos_SENSOR6, 1, 1
0xBB36	0x0E01      	MOVLW       1
0xBB38	0xA4D8      	BTFSS       STATUS, 2 
0xBB3A	0x0E00      	MOVLW       0
0xBB3C	0x6E00      	MOVWF       R0 
0xBB3E	0x5158      	MOVF        FARG_bloqueos_SENSOR4, 0, 1
0xBB40	0x1600      	ANDWF       R0, 1 
0xBB42	0x5000      	MOVF        R0, 0 
0xBB44	0x1201      	IORWF       R1, 1 
0xBB46	0x515A      	MOVF        FARG_bloqueos_SENSOR6, 0, 1
0xBB48	0x1558      	ANDWF       FARG_bloqueos_SENSOR4, 0, 1
0xBB4A	0x6E00      	MOVWF       R0 
0xBB4C	0x5001      	MOVF        R1, 0 
0xBB4E	0x1200      	IORWF       R0, 1 
0xBB50	0xE004      	BZ          L_bloqueos97
;bloqueos_v1.h,316 :: 		Bandera.Par9 = false;
0xBB52	0x0101      	MOVLB       1
0xBB54	0x6BEC      	CLRF        _Bandera+8, 1
;bloqueos_v1.h,317 :: 		Desborde.Par9 = 0;
0xBB56	0x6BBC      	CLRF        _Desborde+16, 1
0xBB58	0x6BBD      	CLRF        _Desborde+17, 1
;bloqueos_v1.h,318 :: 		}
L_bloqueos97:
L_bloqueos96:
0xBB5A	0x0101      	MOVLB       1
;bloqueos_v1.h,320 :: 		if( (Bandera.Par1 & !Bandera.Par2 & !Bandera.Par3 & !Bandera.Par4 & !Bandera.Par5 & !Bandera.Par6 & !Bandera.Par7 & !Bandera.Par8 & !Bandera.Par9) |
0xBB5C	0x53E5      	MOVF        _Bandera+1, 1, 1
0xBB5E	0x0E01      	MOVLW       1
0xBB60	0xA4D8      	BTFSS       STATUS, 2 
0xBB62	0x0E00      	MOVLW       0
0xBB64	0x6E0A      	MOVWF       R10 
0xBB66	0x500A      	MOVF        R10, 0 
0xBB68	0x15E4      	ANDWF       _Bandera, 0, 1
0xBB6A	0x6E00      	MOVWF       R0 
0xBB6C	0x53E6      	MOVF        _Bandera+2, 1, 1
0xBB6E	0x0E01      	MOVLW       1
0xBB70	0xA4D8      	BTFSS       STATUS, 2 
0xBB72	0x0E00      	MOVLW       0
0xBB74	0x6E09      	MOVWF       R9 
0xBB76	0x5009      	MOVF        R9, 0 
0xBB78	0x1600      	ANDWF       R0, 1 
0xBB7A	0x53E7      	MOVF        _Bandera+3, 1, 1
0xBB7C	0x0E01      	MOVLW       1
0xBB7E	0xA4D8      	BTFSS       STATUS, 2 
0xBB80	0x0E00      	MOVLW       0
0xBB82	0x6E08      	MOVWF       R8 
0xBB84	0x5008      	MOVF        R8, 0 
0xBB86	0x1600      	ANDWF       R0, 1 
0xBB88	0x53E8      	MOVF        _Bandera+4, 1, 1
0xBB8A	0x0E01      	MOVLW       1
0xBB8C	0xA4D8      	BTFSS       STATUS, 2 
0xBB8E	0x0E00      	MOVLW       0
0xBB90	0x6E07      	MOVWF       R7 
0xBB92	0x5007      	MOVF        R7, 0 
0xBB94	0x1600      	ANDWF       R0, 1 
0xBB96	0x53E9      	MOVF        _Bandera+5, 1, 1
0xBB98	0x0E01      	MOVLW       1
0xBB9A	0xA4D8      	BTFSS       STATUS, 2 
0xBB9C	0x0E00      	MOVLW       0
0xBB9E	0x6E06      	MOVWF       R6 
0xBBA0	0x5006      	MOVF        R6, 0 
0xBBA2	0x1600      	ANDWF       R0, 1 
0xBBA4	0x53EA      	MOVF        _Bandera+6, 1, 1
0xBBA6	0x0E01      	MOVLW       1
0xBBA8	0xA4D8      	BTFSS       STATUS, 2 
0xBBAA	0x0E00      	MOVLW       0
0xBBAC	0x6E05      	MOVWF       R5 
0xBBAE	0x5005      	MOVF        R5, 0 
0xBBB0	0x1600      	ANDWF       R0, 1 
0xBBB2	0x53EB      	MOVF        _Bandera+7, 1, 1
0xBBB4	0x0E01      	MOVLW       1
0xBBB6	0xA4D8      	BTFSS       STATUS, 2 
0xBBB8	0x0E00      	MOVLW       0
0xBBBA	0x6E04      	MOVWF       R4 
0xBBBC	0x5004      	MOVF        R4, 0 
0xBBBE	0x1600      	ANDWF       R0, 1 
0xBBC0	0x53EC      	MOVF        _Bandera+8, 1, 1
0xBBC2	0x0E01      	MOVLW       1
0xBBC4	0xA4D8      	BTFSS       STATUS, 2 
0xBBC6	0x0E00      	MOVLW       0
0xBBC8	0x6E03      	MOVWF       R3 
0xBBCA	0x5003      	MOVF        R3, 0 
0xBBCC	0x1400      	ANDWF       R0, 0 
0xBBCE	0x6E01      	MOVWF       R1 
;bloqueos_v1.h,321 :: 		(Bandera.Par2 & !Bandera.Par1 & !Bandera.Par3 & !Bandera.Par4 & !Bandera.Par5 & !Bandera.Par6 & !Bandera.Par7 & !Bandera.Par8 & !Bandera.Par9  ) |
0xBBD0	0x53E4      	MOVF        _Bandera, 1, 1
0xBBD2	0x0E01      	MOVLW       1
0xBBD4	0xA4D8      	BTFSS       STATUS, 2 
0xBBD6	0x0E00      	MOVLW       0
0xBBD8	0x6E02      	MOVWF       R2 
0xBBDA	0x5002      	MOVF        R2, 0 
0xBBDC	0x15E5      	ANDWF       _Bandera+1, 0, 1
0xBBDE	0x6E00      	MOVWF       R0 
0xBBE0	0x5009      	MOVF        R9, 0 
0xBBE2	0x1600      	ANDWF       R0, 1 
0xBBE4	0x5008      	MOVF        R8, 0 
0xBBE6	0x1600      	ANDWF       R0, 1 
0xBBE8	0x5007      	MOVF        R7, 0 
0xBBEA	0x1600      	ANDWF       R0, 1 
0xBBEC	0x5006      	MOVF        R6, 0 
0xBBEE	0x1600      	ANDWF       R0, 1 
0xBBF0	0x5005      	MOVF        R5, 0 
0xBBF2	0x1600      	ANDWF       R0, 1 
0xBBF4	0x5004      	MOVF        R4, 0 
0xBBF6	0x1600      	ANDWF       R0, 1 
0xBBF8	0x5003      	MOVF        R3, 0 
0xBBFA	0x1600      	ANDWF       R0, 1 
0xBBFC	0x5000      	MOVF        R0, 0 
0xBBFE	0x1201      	IORWF       R1, 1 
;bloqueos_v1.h,322 :: 		(Bandera.Par3 & !Bandera.Par2 & !Bandera.Par1 & !Bandera.Par4 & !Bandera.Par5 & !Bandera.Par6 & !Bandera.Par7 & !Bandera.Par8 & !Bandera.Par9  ) |
0xBC00	0x500A      	MOVF        R10, 0 
0xBC02	0x15E6      	ANDWF       _Bandera+2, 0, 1
0xBC04	0x6E00      	MOVWF       R0 
0xBC06	0x5002      	MOVF        R2, 0 
0xBC08	0x1600      	ANDWF       R0, 1 
0xBC0A	0x5008      	MOVF        R8, 0 
0xBC0C	0x1600      	ANDWF       R0, 1 
0xBC0E	0x5007      	MOVF        R7, 0 
0xBC10	0x1600      	ANDWF       R0, 1 
0xBC12	0x5006      	MOVF        R6, 0 
0xBC14	0x1600      	ANDWF       R0, 1 
0xBC16	0x5005      	MOVF        R5, 0 
0xBC18	0x1600      	ANDWF       R0, 1 
0xBC1A	0x5004      	MOVF        R4, 0 
0xBC1C	0x1600      	ANDWF       R0, 1 
0xBC1E	0x5003      	MOVF        R3, 0 
0xBC20	0x1600      	ANDWF       R0, 1 
0xBC22	0x5000      	MOVF        R0, 0 
0xBC24	0x1201      	IORWF       R1, 1 
;bloqueos_v1.h,323 :: 		(Bandera.Par4 & !Bandera.Par2 & !Bandera.Par3 & !Bandera.Par1 & !Bandera.Par5 & !Bandera.Par6 & !Bandera.Par7 & !Bandera.Par8 & !Bandera.Par9  ) |
0xBC26	0x500A      	MOVF        R10, 0 
0xBC28	0x15E7      	ANDWF       _Bandera+3, 0, 1
0xBC2A	0x6E00      	MOVWF       R0 
0xBC2C	0x5009      	MOVF        R9, 0 
0xBC2E	0x1600      	ANDWF       R0, 1 
0xBC30	0x5002      	MOVF        R2, 0 
0xBC32	0x1600      	ANDWF       R0, 1 
0xBC34	0x5007      	MOVF        R7, 0 
0xBC36	0x1600      	ANDWF       R0, 1 
0xBC38	0x5006      	MOVF        R6, 0 
0xBC3A	0x1600      	ANDWF       R0, 1 
0xBC3C	0x5005      	MOVF        R5, 0 
0xBC3E	0x1600      	ANDWF       R0, 1 
0xBC40	0x5004      	MOVF        R4, 0 
0xBC42	0x1600      	ANDWF       R0, 1 
0xBC44	0x5003      	MOVF        R3, 0 
0xBC46	0x1600      	ANDWF       R0, 1 
0xBC48	0x5000      	MOVF        R0, 0 
0xBC4A	0x1201      	IORWF       R1, 1 
;bloqueos_v1.h,324 :: 		(Bandera.Par5 & !Bandera.Par2 & !Bandera.Par3 & !Bandera.Par4 & !Bandera.Par1 & !Bandera.Par6 & !Bandera.Par7 & !Bandera.Par8 & !Bandera.Par9  ) |
0xBC4C	0x500A      	MOVF        R10, 0 
0xBC4E	0x15E8      	ANDWF       _Bandera+4, 0, 1
0xBC50	0x6E00      	MOVWF       R0 
0xBC52	0x5009      	MOVF        R9, 0 
0xBC54	0x1600      	ANDWF       R0, 1 
0xBC56	0x5008      	MOVF        R8, 0 
0xBC58	0x1600      	ANDWF       R0, 1 
0xBC5A	0x5002      	MOVF        R2, 0 
0xBC5C	0x1600      	ANDWF       R0, 1 
0xBC5E	0x5006      	MOVF        R6, 0 
0xBC60	0x1600      	ANDWF       R0, 1 
0xBC62	0x5005      	MOVF        R5, 0 
0xBC64	0x1600      	ANDWF       R0, 1 
0xBC66	0x5004      	MOVF        R4, 0 
0xBC68	0x1600      	ANDWF       R0, 1 
0xBC6A	0x5003      	MOVF        R3, 0 
0xBC6C	0x1600      	ANDWF       R0, 1 
0xBC6E	0x5000      	MOVF        R0, 0 
0xBC70	0x1201      	IORWF       R1, 1 
;bloqueos_v1.h,325 :: 		(Bandera.Par6 & !Bandera.Par2 & !Bandera.Par3 & !Bandera.Par4 & !Bandera.Par5 & !Bandera.Par1 & !Bandera.Par7 & !Bandera.Par8 & !Bandera.Par9  ) |
0xBC72	0x500A      	MOVF        R10, 0 
0xBC74	0x15E9      	ANDWF       _Bandera+5, 0, 1
0xBC76	0x6E00      	MOVWF       R0 
0xBC78	0x5009      	MOVF        R9, 0 
0xBC7A	0x1600      	ANDWF       R0, 1 
0xBC7C	0x5008      	MOVF        R8, 0 
0xBC7E	0x1600      	ANDWF       R0, 1 
0xBC80	0x5007      	MOVF        R7, 0 
0xBC82	0x1600      	ANDWF       R0, 1 
0xBC84	0x5002      	MOVF        R2, 0 
0xBC86	0x1600      	ANDWF       R0, 1 
0xBC88	0x5005      	MOVF        R5, 0 
0xBC8A	0x1600      	ANDWF       R0, 1 
0xBC8C	0x5004      	MOVF        R4, 0 
0xBC8E	0x1600      	ANDWF       R0, 1 
0xBC90	0x5003      	MOVF        R3, 0 
0xBC92	0x1600      	ANDWF       R0, 1 
0xBC94	0x5000      	MOVF        R0, 0 
0xBC96	0x1201      	IORWF       R1, 1 
;bloqueos_v1.h,326 :: 		(Bandera.Par7 & !Bandera.Par2 & !Bandera.Par3 & !Bandera.Par4 & !Bandera.Par5 & !Bandera.Par6 & !Bandera.Par1 & !Bandera.Par8 & !Bandera.Par9  ) |
0xBC98	0x500A      	MOVF        R10, 0 
0xBC9A	0x15EA      	ANDWF       _Bandera+6, 0, 1
0xBC9C	0x6E00      	MOVWF       R0 
0xBC9E	0x5009      	MOVF        R9, 0 
0xBCA0	0x1600      	ANDWF       R0, 1 
0xBCA2	0x5008      	MOVF        R8, 0 
0xBCA4	0x1600      	ANDWF       R0, 1 
0xBCA6	0x5007      	MOVF        R7, 0 
0xBCA8	0x1600      	ANDWF       R0, 1 
0xBCAA	0x5006      	MOVF        R6, 0 
0xBCAC	0x1600      	ANDWF       R0, 1 
0xBCAE	0x5002      	MOVF        R2, 0 
0xBCB0	0x1600      	ANDWF       R0, 1 
0xBCB2	0x5004      	MOVF        R4, 0 
0xBCB4	0x1600      	ANDWF       R0, 1 
0xBCB6	0x5003      	MOVF        R3, 0 
0xBCB8	0x1600      	ANDWF       R0, 1 
0xBCBA	0x5000      	MOVF        R0, 0 
0xBCBC	0x1201      	IORWF       R1, 1 
;bloqueos_v1.h,327 :: 		(Bandera.Par8 & !Bandera.Par2 & !Bandera.Par3 & !Bandera.Par4 & !Bandera.Par5 & !Bandera.Par6 & !Bandera.Par7 & !Bandera.Par1 & !Bandera.Par9  ) |
0xBCBE	0x500A      	MOVF        R10, 0 
0xBCC0	0x15EB      	ANDWF       _Bandera+7, 0, 1
0xBCC2	0x6E00      	MOVWF       R0 
0xBCC4	0x5009      	MOVF        R9, 0 
0xBCC6	0x1600      	ANDWF       R0, 1 
0xBCC8	0x5008      	MOVF        R8, 0 
0xBCCA	0x1600      	ANDWF       R0, 1 
0xBCCC	0x5007      	MOVF        R7, 0 
0xBCCE	0x1600      	ANDWF       R0, 1 
0xBCD0	0x5006      	MOVF        R6, 0 
0xBCD2	0x1600      	ANDWF       R0, 1 
0xBCD4	0x5005      	MOVF        R5, 0 
0xBCD6	0x1600      	ANDWF       R0, 1 
0xBCD8	0x5002      	MOVF        R2, 0 
0xBCDA	0x1600      	ANDWF       R0, 1 
0xBCDC	0x5003      	MOVF        R3, 0 
0xBCDE	0x1600      	ANDWF       R0, 1 
0xBCE0	0x5000      	MOVF        R0, 0 
0xBCE2	0x1201      	IORWF       R1, 1 
;bloqueos_v1.h,328 :: 		(Bandera.Par9 & !Bandera.Par2 & !Bandera.Par3 & !Bandera.Par4 & !Bandera.Par5 & !Bandera.Par6 & !Bandera.Par7 & !Bandera.Par8 & !Bandera.Par1  ) |
0xBCE4	0x500A      	MOVF        R10, 0 
0xBCE6	0x15EC      	ANDWF       _Bandera+8, 0, 1
0xBCE8	0x6E00      	MOVWF       R0 
0xBCEA	0x5009      	MOVF        R9, 0 
0xBCEC	0x1600      	ANDWF       R0, 1 
0xBCEE	0x5008      	MOVF        R8, 0 
0xBCF0	0x1600      	ANDWF       R0, 1 
0xBCF2	0x5007      	MOVF        R7, 0 
0xBCF4	0x1600      	ANDWF       R0, 1 
0xBCF6	0x5006      	MOVF        R6, 0 
0xBCF8	0x1600      	ANDWF       R0, 1 
0xBCFA	0x5005      	MOVF        R5, 0 
0xBCFC	0x1600      	ANDWF       R0, 1 
0xBCFE	0x5004      	MOVF        R4, 0 
0xBD00	0x1600      	ANDWF       R0, 1 
0xBD02	0x5002      	MOVF        R2, 0 
0xBD04	0x1600      	ANDWF       R0, 1 
0xBD06	0x5000      	MOVF        R0, 0 
0xBD08	0x1201      	IORWF       R1, 1 
;bloqueos_v1.h,329 :: 		(Bandera.SensorU & !Bandera.SensorD & !Bandera.SensorT & !Bandera.SensorC & !Bandera.SensorO & !Bandera.SensorS) |
0xBD0A	0x53EE      	MOVF        _Bandera+10, 1, 1
0xBD0C	0x0E01      	MOVLW       1
0xBD0E	0xA4D8      	BTFSS       STATUS, 2 
0xBD10	0x0E00      	MOVLW       0
0xBD12	0x6E07      	MOVWF       R7 
0xBD14	0x5007      	MOVF        R7, 0 
0xBD16	0x15ED      	ANDWF       _Bandera+9, 0, 1
0xBD18	0x6E00      	MOVWF       R0 
0xBD1A	0x53EF      	MOVF        _Bandera+11, 1, 1
0xBD1C	0x0E01      	MOVLW       1
0xBD1E	0xA4D8      	BTFSS       STATUS, 2 
0xBD20	0x0E00      	MOVLW       0
0xBD22	0x6E06      	MOVWF       R6 
0xBD24	0x5006      	MOVF        R6, 0 
0xBD26	0x1600      	ANDWF       R0, 1 
0xBD28	0x53F0      	MOVF        _Bandera+12, 1, 1
0xBD2A	0x0E01      	MOVLW       1
0xBD2C	0xA4D8      	BTFSS       STATUS, 2 
0xBD2E	0x0E00      	MOVLW       0
0xBD30	0x6E05      	MOVWF       R5 
0xBD32	0x5005      	MOVF        R5, 0 
0xBD34	0x1600      	ANDWF       R0, 1 
0xBD36	0x53F1      	MOVF        _Bandera+13, 1, 1
0xBD38	0x0E01      	MOVLW       1
0xBD3A	0xA4D8      	BTFSS       STATUS, 2 
0xBD3C	0x0E00      	MOVLW       0
0xBD3E	0x6E04      	MOVWF       R4 
0xBD40	0x5004      	MOVF        R4, 0 
0xBD42	0x1600      	ANDWF       R0, 1 
0xBD44	0x53F2      	MOVF        _Bandera+14, 1, 1
0xBD46	0x0E01      	MOVLW       1
0xBD48	0xA4D8      	BTFSS       STATUS, 2 
0xBD4A	0x0E00      	MOVLW       0
0xBD4C	0x6E03      	MOVWF       R3 
0xBD4E	0x5003      	MOVF        R3, 0 
0xBD50	0x1600      	ANDWF       R0, 1 
0xBD52	0x5000      	MOVF        R0, 0 
0xBD54	0x1201      	IORWF       R1, 1 
;bloqueos_v1.h,330 :: 		(!Bandera.SensorU & Bandera.SensorD & !Bandera.SensorT & !Bandera.SensorC & !Bandera.SensorO & !Bandera.SensorS) |
0xBD56	0x53ED      	MOVF        _Bandera+9, 1, 1
0xBD58	0x0E01      	MOVLW       1
0xBD5A	0xA4D8      	BTFSS       STATUS, 2 
0xBD5C	0x0E00      	MOVLW       0
0xBD5E	0x6E02      	MOVWF       R2 
0xBD60	0x51EE      	MOVF        _Bandera+10, 0, 1
0xBD62	0x1402      	ANDWF       R2, 0 
0xBD64	0x6E00      	MOVWF       R0 
0xBD66	0x5006      	MOVF        R6, 0 
0xBD68	0x1600      	ANDWF       R0, 1 
0xBD6A	0x5005      	MOVF        R5, 0 
0xBD6C	0x1600      	ANDWF       R0, 1 
0xBD6E	0x5004      	MOVF        R4, 0 
0xBD70	0x1600      	ANDWF       R0, 1 
0xBD72	0x5003      	MOVF        R3, 0 
0xBD74	0x1600      	ANDWF       R0, 1 
0xBD76	0x5000      	MOVF        R0, 0 
0xBD78	0x1201      	IORWF       R1, 1 
;bloqueos_v1.h,331 :: 		(!Bandera.SensorU & !Bandera.SensorD & Bandera.SensorT & !Bandera.SensorC & !Bandera.SensorO & !Bandera.SensorS) |
0xBD7A	0x5007      	MOVF        R7, 0 
0xBD7C	0x1602      	ANDWF       R2, 1 
0xBD7E	0x51EF      	MOVF        _Bandera+11, 0, 1
0xBD80	0x1402      	ANDWF       R2, 0 
0xBD82	0x6E00      	MOVWF       R0 
0xBD84	0x5005      	MOVF        R5, 0 
0xBD86	0x1600      	ANDWF       R0, 1 
0xBD88	0x5004      	MOVF        R4, 0 
0xBD8A	0x1600      	ANDWF       R0, 1 
0xBD8C	0x5003      	MOVF        R3, 0 
0xBD8E	0x1600      	ANDWF       R0, 1 
0xBD90	0x5000      	MOVF        R0, 0 
0xBD92	0x1201      	IORWF       R1, 1 
;bloqueos_v1.h,332 :: 		(!Bandera.SensorU & !Bandera.SensorD & !Bandera.SensorT & Bandera.SensorC & !Bandera.SensorO & !Bandera.SensorS) |
0xBD94	0x5006      	MOVF        R6, 0 
0xBD96	0x1602      	ANDWF       R2, 1 
0xBD98	0x51F0      	MOVF        _Bandera+12, 0, 1
0xBD9A	0x1402      	ANDWF       R2, 0 
0xBD9C	0x6E00      	MOVWF       R0 
0xBD9E	0x5004      	MOVF        R4, 0 
0xBDA0	0x1600      	ANDWF       R0, 1 
0xBDA2	0x5003      	MOVF        R3, 0 
0xBDA4	0x1600      	ANDWF       R0, 1 
0xBDA6	0x5000      	MOVF        R0, 0 
0xBDA8	0x1201      	IORWF       R1, 1 
;bloqueos_v1.h,333 :: 		(!Bandera.SensorU & !Bandera.SensorD & !Bandera.SensorT & !Bandera.SensorC & Bandera.SensorO & !Bandera.SensorS) |
0xBDAA	0x5005      	MOVF        R5, 0 
0xBDAC	0x1602      	ANDWF       R2, 1 
0xBDAE	0x51F1      	MOVF        _Bandera+13, 0, 1
0xBDB0	0x1402      	ANDWF       R2, 0 
0xBDB2	0x6E00      	MOVWF       R0 
0xBDB4	0x5003      	MOVF        R3, 0 
0xBDB6	0x1600      	ANDWF       R0, 1 
0xBDB8	0x5000      	MOVF        R0, 0 
0xBDBA	0x1201      	IORWF       R1, 1 
;bloqueos_v1.h,334 :: 		(!Bandera.SensorU & !Bandera.SensorD & !Bandera.SensorT & !Bandera.SensorC & !Bandera.SensorO & Bandera.SensorS) ){
0xBDBC	0x5004      	MOVF        R4, 0 
0xBDBE	0x1402      	ANDWF       R2, 0 
0xBDC0	0x6E00      	MOVWF       R0 
0xBDC2	0x51F2      	MOVF        _Bandera+14, 0, 1
0xBDC4	0x1600      	ANDWF       R0, 1 
0xBDC6	0x5001      	MOVF        R1, 0 
0xBDC8	0x1200      	IORWF       R0, 1 
0xBDCA	0xA4D8      	BTFSS       STATUS, 2 
;bloqueos_v1.h,335 :: 		BLOQUEOACTIVO = true;
0xBDCC	0x8682      	BSF         PORTC, 3 
;bloqueos_v1.h,338 :: 		}
L_bloqueos98:
;bloqueos_v1.h,339 :: 		if(!Bandera.Par1 & !Bandera.Par2 & !Bandera.Par3 & !Bandera.Par4 & !Bandera.Par5 & !Bandera.Par6 & !Bandera.Par7 & !Bandera.Par8 & !Bandera.Par9 & !Bandera.SensorU & !Bandera.SensorD & !Bandera.SensorT & !Bandera.SensorC & !Bandera.SensorO & !Bandera.SensorS){
0xBDCE	0x53E4      	MOVF        _Bandera, 1, 1
0xBDD0	0x0E01      	MOVLW       1
0xBDD2	0xA4D8      	BTFSS       STATUS, 2 
0xBDD4	0x0E00      	MOVLW       0
0xBDD6	0x6E01      	MOVWF       R1 
0xBDD8	0x53E5      	MOVF        _Bandera+1, 1, 1
0xBDDA	0x0E01      	MOVLW       1
0xBDDC	0xA4D8      	BTFSS       STATUS, 2 
0xBDDE	0x0E00      	MOVLW       0
0xBDE0	0x6E00      	MOVWF       R0 
0xBDE2	0x5000      	MOVF        R0, 0 
0xBDE4	0x1601      	ANDWF       R1, 1 
0xBDE6	0x53E6      	MOVF        _Bandera+2, 1, 1
0xBDE8	0x0E01      	MOVLW       1
0xBDEA	0xA4D8      	BTFSS       STATUS, 2 
0xBDEC	0x0E00      	MOVLW       0
0xBDEE	0x6E00      	MOVWF       R0 
0xBDF0	0x5000      	MOVF        R0, 0 
0xBDF2	0x1601      	ANDWF       R1, 1 
0xBDF4	0x53E7      	MOVF        _Bandera+3, 1, 1
0xBDF6	0x0E01      	MOVLW       1
0xBDF8	0xA4D8      	BTFSS       STATUS, 2 
0xBDFA	0x0E00      	MOVLW       0
0xBDFC	0x6E00      	MOVWF       R0 
0xBDFE	0x5000      	MOVF        R0, 0 
0xBE00	0x1601      	ANDWF       R1, 1 
0xBE02	0x53E8      	MOVF        _Bandera+4, 1, 1
0xBE04	0x0E01      	MOVLW       1
0xBE06	0xA4D8      	BTFSS       STATUS, 2 
0xBE08	0x0E00      	MOVLW       0
0xBE0A	0x6E00      	MOVWF       R0 
0xBE0C	0x5000      	MOVF        R0, 0 
0xBE0E	0x1601      	ANDWF       R1, 1 
0xBE10	0x53E9      	MOVF        _Bandera+5, 1, 1
0xBE12	0x0E01      	MOVLW       1
0xBE14	0xA4D8      	BTFSS       STATUS, 2 
0xBE16	0x0E00      	MOVLW       0
0xBE18	0x6E00      	MOVWF       R0 
0xBE1A	0x5000      	MOVF        R0, 0 
0xBE1C	0x1601      	ANDWF       R1, 1 
0xBE1E	0x53EA      	MOVF        _Bandera+6, 1, 1
0xBE20	0x0E01      	MOVLW       1
0xBE22	0xA4D8      	BTFSS       STATUS, 2 
0xBE24	0x0E00      	MOVLW       0
0xBE26	0x6E00      	MOVWF       R0 
0xBE28	0x5000      	MOVF        R0, 0 
0xBE2A	0x1601      	ANDWF       R1, 1 
0xBE2C	0x53EB      	MOVF        _Bandera+7, 1, 1
0xBE2E	0x0E01      	MOVLW       1
0xBE30	0xA4D8      	BTFSS       STATUS, 2 
0xBE32	0x0E00      	MOVLW       0
0xBE34	0x6E00      	MOVWF       R0 
0xBE36	0x5000      	MOVF        R0, 0 
0xBE38	0x1601      	ANDWF       R1, 1 
0xBE3A	0x53EC      	MOVF        _Bandera+8, 1, 1
0xBE3C	0x0E01      	MOVLW       1
0xBE3E	0xA4D8      	BTFSS       STATUS, 2 
0xBE40	0x0E00      	MOVLW       0
0xBE42	0x6E00      	MOVWF       R0 
0xBE44	0x5000      	MOVF        R0, 0 
0xBE46	0x1601      	ANDWF       R1, 1 
0xBE48	0x53ED      	MOVF        _Bandera+9, 1, 1
0xBE4A	0x0E01      	MOVLW       1
0xBE4C	0xA4D8      	BTFSS       STATUS, 2 
0xBE4E	0x0E00      	MOVLW       0
0xBE50	0x6E00      	MOVWF       R0 
0xBE52	0x5000      	MOVF        R0, 0 
0xBE54	0x1601      	ANDWF       R1, 1 
0xBE56	0x53EE      	MOVF        _Bandera+10, 1, 1
0xBE58	0x0E01      	MOVLW       1
0xBE5A	0xA4D8      	BTFSS       STATUS, 2 
0xBE5C	0x0E00      	MOVLW       0
0xBE5E	0x6E00      	MOVWF       R0 
0xBE60	0x5000      	MOVF        R0, 0 
0xBE62	0x1601      	ANDWF       R1, 1 
0xBE64	0x53EF      	MOVF        _Bandera+11, 1, 1
0xBE66	0x0E01      	MOVLW       1
0xBE68	0xA4D8      	BTFSS       STATUS, 2 
0xBE6A	0x0E00      	MOVLW       0
0xBE6C	0x6E00      	MOVWF       R0 
0xBE6E	0x5000      	MOVF        R0, 0 
0xBE70	0x1601      	ANDWF       R1, 1 
0xBE72	0x53F0      	MOVF        _Bandera+12, 1, 1
0xBE74	0x0E01      	MOVLW       1
0xBE76	0xA4D8      	BTFSS       STATUS, 2 
0xBE78	0x0E00      	MOVLW       0
0xBE7A	0x6E00      	MOVWF       R0 
0xBE7C	0x5000      	MOVF        R0, 0 
0xBE7E	0x1601      	ANDWF       R1, 1 
0xBE80	0x53F1      	MOVF        _Bandera+13, 1, 1
0xBE82	0x0E01      	MOVLW       1
0xBE84	0xA4D8      	BTFSS       STATUS, 2 
0xBE86	0x0E00      	MOVLW       0
0xBE88	0x6E00      	MOVWF       R0 
0xBE8A	0x5000      	MOVF        R0, 0 
0xBE8C	0x1601      	ANDWF       R1, 1 
0xBE8E	0x53F2      	MOVF        _Bandera+14, 1, 1
0xBE90	0x0E01      	MOVLW       1
0xBE92	0xA4D8      	BTFSS       STATUS, 2 
0xBE94	0x0E00      	MOVLW       0
0xBE96	0x6E00      	MOVWF       R0 
0xBE98	0x5001      	MOVF        R1, 0 
0xBE9A	0x1600      	ANDWF       R0, 1 
0xBE9C	0xA4D8      	BTFSS       STATUS, 2 
;bloqueos_v1.h,340 :: 		BLOQUEOACTIVO = false;
0xBE9E	0x9682      	BCF         PORTC, 3 
;bloqueos_v1.h,341 :: 		}
L_bloqueos99:
;bloqueos_v1.h,342 :: 		}
L_end_bloqueos:
0xBEA0	0x0012      	RETURN      0
; end of _bloqueos
_UART1_Init:
;__Lib_UART_c67.c,15 :: 		
;__Lib_UART_c67.c,18 :: 		
0xBEA2	0x0E88      	MOVLW       _UART1_Write
0xBEA4	0x0101      	MOVLB       1
0xBEA6	0x6FD1      	MOVWF       _UART_Wr_Ptr, 1
0xBEA8	0x0E66      	MOVLW       hi_addr(_UART1_Write)
0xBEAA	0x6FD2      	MOVWF       _UART_Wr_Ptr+1, 1
0xBEAC	0x0E14      	MOVLW       FARG_UART1_Write_data_
0xBEAE	0x6FD3      	MOVWF       _UART_Wr_Ptr+2, 1
0xBEB0	0x0E02      	MOVLW       hi_addr(FARG_UART1_Write_data_)
0xBEB2	0x6FD4      	MOVWF       _UART_Wr_Ptr+3, 1
;__Lib_UART_c67.c,19 :: 		
0xBEB4	0x0EDE      	MOVLW       _UART1_Read
0xBEB6	0x6FCD      	MOVWF       _UART_Rd_Ptr, 1
0xBEB8	0x0E9B      	MOVLW       hi_addr(_UART1_Read)
0xBEBA	0x6FCE      	MOVWF       _UART_Rd_Ptr+1, 1
0xBEBC	0x0E00      	MOVLW       0
0xBEBE	0x6FCF      	MOVWF       _UART_Rd_Ptr+2, 1
0xBEC0	0x0E00      	MOVLW       0
0xBEC2	0x6FD0      	MOVWF       _UART_Rd_Ptr+3, 1
;__Lib_UART_c67.c,20 :: 		
0xBEC4	0x0EF0      	MOVLW       _UART1_Data_Ready
0xBEC6	0x6FE0      	MOVWF       _UART_Rdy_Ptr, 1
0xBEC8	0x0E9B      	MOVLW       hi_addr(_UART1_Data_Ready)
0xBECA	0x6FE1      	MOVWF       _UART_Rdy_Ptr+1, 1
0xBECC	0x0E00      	MOVLW       0
0xBECE	0x6FE2      	MOVWF       _UART_Rdy_Ptr+2, 1
0xBED0	0x0E00      	MOVLW       0
0xBED2	0x6FE3      	MOVWF       _UART_Rdy_Ptr+3, 1
;__Lib_UART_c67.c,21 :: 		
0xBED4	0x0E76      	MOVLW       _UART1_Tx_Idle
0xBED6	0x6FDC      	MOVWF       _UART_Tx_Idle_Ptr, 1
0xBED8	0x0E9E      	MOVLW       hi_addr(_UART1_Tx_Idle)
0xBEDA	0x6FDD      	MOVWF       _UART_Tx_Idle_Ptr+1, 1
0xBEDC	0x0E00      	MOVLW       0
0xBEDE	0x6FDE      	MOVWF       _UART_Tx_Idle_Ptr+2, 1
0xBEE0	0x0E00      	MOVLW       0
0xBEE2	0x6FDF      	MOVWF       _UART_Tx_Idle_Ptr+3, 1
;__Lib_UART_c67.c,23 :: 		
0xBEE4	0x8AAC      	BSF         TXSTA, 5 
;__Lib_UART_c67.c,24 :: 		
0xBEE6	0x0E90      	MOVLW       144
0xBEE8	0x6EAB      	MOVWF       RCSTA 
;__Lib_UART_c67.c,25 :: 		
0xBEEA	0x8E94      	BSF         TRISC7_bit, BitPos(TRISC7_bit+0) 
;__Lib_UART_c67.c,26 :: 		
0xBEEC	0x9C94      	BCF         TRISC6_bit, BitPos(TRISC6_bit+0) 
;__Lib_UART_c67.c,28 :: 		
L_UART1_Init0:
0xBEEE	0xAA9E      	BTFSS       PIR1, 5 
0xBEF0	0xD003      	BRA         L_UART1_Init1
;__Lib_UART_c67.c,29 :: 		
0xBEF2	0xF000CFAE  	MOVFF       RCREG, R0
0xBEF6	0xD7FB      	BRA         L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,30 :: 		
L_end_UART1_Init:
0xBEF8	0x0012      	RETURN      0
; end of _UART1_Init
_PWM1_Start:
;__Lib_PWM_c2d4.c,52 :: 		
;__Lib_PWM_c2d4.c,53 :: 		
0xBEFA	0x9494      	BCF         TRISC2_bit, BitPos(TRISC2_bit+0) 
;__Lib_PWM_c2d4.c,54 :: 		
0xBEFC	0x84CA      	BSF         T2CON, 2 
;__Lib_PWM_c2d4.c,55 :: 		
0xBEFE	0x0E0C      	MOVLW       12
0xBF00	0x12BD      	IORWF       CCP1CON, 1 
;__Lib_PWM_c2d4.c,56 :: 		
L_end_PWM1_Start:
0xBF02	0x0012      	RETURN      0
; end of _PWM1_Start
_serialTxWioLTE:
;MyProject.c,471 :: 		void serialTxWioLTE(){
;MyProject.c,473 :: 		if(desbordoGPS >= periodoEnvioGPS){
0xBF04	0x0E00      	MOVLW       0
0xBF06	0x0100      	MOVLB       0
0xBF08	0x5DE2      	SUBWF       _desbordoGPS+1, 0, 1
0xBF0A	0xE102      	BNZ         L__serialTxWioLTE2432
0xBF0C	0x0EB4      	MOVLW       180
0xBF0E	0x5DE1      	SUBWF       _desbordoGPS, 0, 1
L__serialTxWioLTE2432:
0xBF10	0xA0D8      	BTFSS       STATUS, 0 
0xBF12	0xD377      	BRA         L_serialTxWioLTE579
;MyProject.c,476 :: 		if(posteDesc){
0xBF14	0x53E0      	MOVF        _posteDesc, 1, 1
0xBF16	0xE02E      	BZ          L_serialTxWioLTE580
;MyProject.c,477 :: 		BLOQUEOACTIVO = 1;
0xBF18	0x8682      	BSF         PORTC, 3 
;MyProject.c,478 :: 		delay_ms(50);
0xBF1A	0x0E02      	MOVLW       2
0xBF1C	0x6E0B      	MOVWF       R11, 0
0xBF1E	0x0E45      	MOVLW       69
0xBF20	0x6E0C      	MOVWF       R12, 0
0xBF22	0x0EA9      	MOVLW       169
0xBF24	0x6E0D      	MOVWF       R13, 0
L_serialTxWioLTE581:
0xBF26	0x2E0D      	DECFSZ      R13, 1, 0
0xBF28	0xD7FE      	BRA         L_serialTxWioLTE581
0xBF2A	0x2E0C      	DECFSZ      R12, 1, 0
0xBF2C	0xD7FC      	BRA         L_serialTxWioLTE581
0xBF2E	0x2E0B      	DECFSZ      R11, 1, 0
0xBF30	0xD7FA      	BRA         L_serialTxWioLTE581
0xBF32	0x0000      	NOP
0xBF34	0x0000      	NOP
;MyProject.c,479 :: 		BLOQUEOACTIVO = 0;
0xBF36	0x9682      	BCF         PORTC, 3 
;MyProject.c,480 :: 		delay_ms(50);
0xBF38	0x0E02      	MOVLW       2
0xBF3A	0x6E0B      	MOVWF       R11, 0
0xBF3C	0x0E45      	MOVLW       69
0xBF3E	0x6E0C      	MOVWF       R12, 0
0xBF40	0x0EA9      	MOVLW       169
0xBF42	0x6E0D      	MOVWF       R13, 0
L_serialTxWioLTE582:
0xBF44	0x2E0D      	DECFSZ      R13, 1, 0
0xBF46	0xD7FE      	BRA         L_serialTxWioLTE582
0xBF48	0x2E0C      	DECFSZ      R12, 1, 0
0xBF4A	0xD7FC      	BRA         L_serialTxWioLTE582
0xBF4C	0x2E0B      	DECFSZ      R11, 1, 0
0xBF4E	0xD7FA      	BRA         L_serialTxWioLTE582
0xBF50	0x0000      	NOP
0xBF52	0x0000      	NOP
;MyProject.c,481 :: 		BLOQUEOACTIVO = 1;
0xBF54	0x8682      	BSF         PORTC, 3 
;MyProject.c,482 :: 		delay_ms(50);
0xBF56	0x0E02      	MOVLW       2
0xBF58	0x6E0B      	MOVWF       R11, 0
0xBF5A	0x0E45      	MOVLW       69
0xBF5C	0x6E0C      	MOVWF       R12, 0
0xBF5E	0x0EA9      	MOVLW       169
0xBF60	0x6E0D      	MOVWF       R13, 0
L_serialTxWioLTE583:
0xBF62	0x2E0D      	DECFSZ      R13, 1, 0
0xBF64	0xD7FE      	BRA         L_serialTxWioLTE583
0xBF66	0x2E0C      	DECFSZ      R12, 1, 0
0xBF68	0xD7FC      	BRA         L_serialTxWioLTE583
0xBF6A	0x2E0B      	DECFSZ      R11, 1, 0
0xBF6C	0xD7FA      	BRA         L_serialTxWioLTE583
0xBF6E	0x0000      	NOP
0xBF70	0x0000      	NOP
;MyProject.c,483 :: 		BLOQUEOACTIVO = 0;
0xBF72	0x9682      	BCF         PORTC, 3 
;MyProject.c,484 :: 		}
L_serialTxWioLTE580:
;MyProject.c,485 :: 		memset(envioSerialGPS, 0, sizeof(envioSerialGPS));
0xBF74	0x0EF3      	MOVLW       _envioSerialGPS
0xBF76	0x0102      	MOVLB       2
0xBF78	0x6F0B      	MOVWF       FARG_memset_p1, 1
0xBF7A	0x0E00      	MOVLW       hi_addr(_envioSerialGPS)
0xBF7C	0x6F0C      	MOVWF       FARG_memset_p1+1, 1
0xBF7E	0x6B0D      	CLRF        FARG_memset_character, 1
0xBF80	0x0E2D      	MOVLW       45
0xBF82	0x6F0E      	MOVWF       FARG_memset_n, 1
0xBF84	0x0E00      	MOVLW       0
0xBF86	0x6F0F      	MOVWF       FARG_memset_n+1, 1
0xBF88	0xF050EC4B  	CALL        _memset, 0
;MyProject.c,487 :: 		strcpy(envioSerialGPS, commAT);
0xBF8C	0x0EF3      	MOVLW       _envioSerialGPS
0xBF8E	0x6F0B      	MOVWF       FARG_strcpy_to, 1
0xBF90	0x0E00      	MOVLW       hi_addr(_envioSerialGPS)
0xBF92	0x6F0C      	MOVWF       FARG_strcpy_to+1, 1
0xBF94	0x0E25      	MOVLW       _commAT
0xBF96	0x6F0D      	MOVWF       FARG_strcpy_from, 1
0xBF98	0x0E01      	MOVLW       hi_addr(_commAT)
0xBF9A	0x6F0E      	MOVWF       FARG_strcpy_from+1, 1
0xBF9C	0xF04CECF7  	CALL        _strcpy, 0
;MyProject.c,489 :: 		memset(auxEnvioGPS, 0, sizeof(auxEnvioGPS));
0xBFA0	0x0E20      	MOVLW       _auxEnvioGPS
0xBFA2	0x6F0B      	MOVWF       FARG_memset_p1, 1
0xBFA4	0x0E01      	MOVLW       hi_addr(_auxEnvioGPS)
0xBFA6	0x6F0C      	MOVWF       FARG_memset_p1+1, 1
0xBFA8	0x6B0D      	CLRF        FARG_memset_character, 1
0xBFAA	0x0E05      	MOVLW       5
0xBFAC	0x6F0E      	MOVWF       FARG_memset_n, 1
0xBFAE	0x0E00      	MOVLW       0
0xBFB0	0x6F0F      	MOVWF       FARG_memset_n+1, 1
0xBFB2	0xF050EC4B  	CALL        _memset, 0
;MyProject.c,490 :: 		inttostrwithzeros(lecturaTablaPVerdaderos, envioGPS);
0xBFB6	0xF20BC0EE  	MOVFF       _lecturaTablaPVerdaderos, FARG_IntToStrWithZeros_input
0xBFBA	0xF20CC0EF  	MOVFF       _lecturaTablaPVerdaderos+1, FARG_IntToStrWithZeros_input+1
0xBFBE	0x0EE7      	MOVLW       _envioGPS
0xBFC0	0x6F0D      	MOVWF       FARG_IntToStrWithZeros_output, 1
0xBFC2	0x0E00      	MOVLW       hi_addr(_envioGPS)
0xBFC4	0x6F0E      	MOVWF       FARG_IntToStrWithZeros_output+1, 1
0xBFC6	0xF04CEC85  	CALL        _IntToStrWithZeros, 0
;MyProject.c,491 :: 		for(l=0 ; l<4 ; l++){
0xBFCA	0x0100      	MOVLB       0
0xBFCC	0x6BF2      	CLRF        _l, 1
L_serialTxWioLTE584:
0xBFCE	0x0E80      	MOVLW       128
0xBFD0	0x19F2      	XORWF       _l, 0, 1
0xBFD2	0x6E00      	MOVWF       R0 
0xBFD4	0x0E80      	MOVLW       128
0xBFD6	0x0A04      	XORLW       4
0xBFD8	0x5C00      	SUBWF       R0, 0 
0xBFDA	0xE21D      	BC          L_serialTxWioLTE585
;MyProject.c,492 :: 		auxEnvioGPS[l] = envioGPS[l+2];
0xBFDC	0x0E20      	MOVLW       _auxEnvioGPS
0xBFDE	0x6EE1      	MOVWF       FSR1L 
0xBFE0	0x0E01      	MOVLW       hi_addr(_auxEnvioGPS)
0xBFE2	0x6EE2      	MOVWF       FSR1H 
0xBFE4	0x51F2      	MOVF        _l, 0, 1
0xBFE6	0x26E1      	ADDWF       FSR1L, 1 
0xBFE8	0x0E00      	MOVLW       0
0xBFEA	0xBFF2      	BTFSC       _l, 7, 1
0xBFEC	0x0EFF      	MOVLW       255
0xBFEE	0x22E2      	ADDWFC      FSR1H, 1 
0xBFF0	0x0E02      	MOVLW       2
0xBFF2	0x25F2      	ADDWF       _l, 0, 1
0xBFF4	0x6E00      	MOVWF       R0 
0xBFF6	0x0E00      	MOVLW       0
0xBFF8	0xBFF2      	BTFSC       _l, 7, 1
0xBFFA	0x0EFF      	MOVLW       255
0xBFFC	0x6E01      	MOVWF       R1 
0xBFFE	0x0E00      	MOVLW       0
0xC000	0x2201      	ADDWFC      R1, 1 
0xC002	0x0EE7      	MOVLW       _envioGPS
0xC004	0x2400      	ADDWF       R0, 0 
0xC006	0x6EE9      	MOVWF       FSR0L 
0xC008	0x0E00      	MOVLW       hi_addr(_envioGPS)
0xC00A	0x2001      	ADDWFC      R1, 0 
0xC00C	0x6EEA      	MOVWF       FSR0H 
0xC00E	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
;MyProject.c,491 :: 		for(l=0 ; l<4 ; l++){
0xC012	0x2BF2      	INCF        _l, 1, 1
;MyProject.c,493 :: 		}
0xC014	0xD7DC      	BRA         L_serialTxWioLTE584
L_serialTxWioLTE585:
;MyProject.c,494 :: 		strcat(envioSerialGPS, auxEnvioGPS);
0xC016	0x0EF3      	MOVLW       _envioSerialGPS
0xC018	0x0102      	MOVLB       2
0xC01A	0x6F0B      	MOVWF       FARG_strcat_to, 1
0xC01C	0x0E00      	MOVLW       hi_addr(_envioSerialGPS)
0xC01E	0x6F0C      	MOVWF       FARG_strcat_to+1, 1
0xC020	0x0E20      	MOVLW       _auxEnvioGPS
0xC022	0x6F0D      	MOVWF       FARG_strcat_from, 1
0xC024	0x0E01      	MOVLW       hi_addr(_auxEnvioGPS)
0xC026	0x6F0E      	MOVWF       FARG_strcat_from+1, 1
0xC028	0xF04DEC29  	CALL        _strcat, 0
;MyProject.c,496 :: 		strcat(envioSerialGPS, ",");
0xC02C	0x0EF3      	MOVLW       _envioSerialGPS
0xC02E	0x6F0B      	MOVWF       FARG_strcat_to, 1
0xC030	0x0E00      	MOVLW       hi_addr(_envioSerialGPS)
0xC032	0x6F0C      	MOVWF       FARG_strcat_to+1, 1
0xC034	0x0EF0      	MOVLW       ?lstr122_MyProject
0xC036	0x6F0D      	MOVWF       FARG_strcat_from, 1
0xC038	0x0E00      	MOVLW       hi_addr(?lstr122_MyProject)
0xC03A	0x6F0E      	MOVWF       FARG_strcat_from+1, 1
0xC03C	0xF04DEC29  	CALL        _strcat, 0
;MyProject.c,499 :: 		memset(auxEnvioGPS, 0, sizeof(auxEnvioGPS));
0xC040	0x0E20      	MOVLW       _auxEnvioGPS
0xC042	0x6F0B      	MOVWF       FARG_memset_p1, 1
0xC044	0x0E01      	MOVLW       hi_addr(_auxEnvioGPS)
0xC046	0x6F0C      	MOVWF       FARG_memset_p1+1, 1
0xC048	0x6B0D      	CLRF        FARG_memset_character, 1
0xC04A	0x0E05      	MOVLW       5
0xC04C	0x6F0E      	MOVWF       FARG_memset_n, 1
0xC04E	0x0E00      	MOVLW       0
0xC050	0x6F0F      	MOVWF       FARG_memset_n+1, 1
0xC052	0xF050EC4B  	CALL        _memset, 0
;MyProject.c,500 :: 		pasajerosSubenM = eepromLeeNumero(0x0000, 2);
0xC056	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0xC058	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0xC05A	0x0E02      	MOVLW       2
0xC05C	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0xC05E	0xF002EC92  	CALL        _eepromLeeNumero, 0
0xC062	0xF19CC000  	MOVFF       R0, _pasajerosSubenM
0xC066	0xF19DC001  	MOVFF       R1, _pasajerosSubenM+1
;MyProject.c,501 :: 		inttostrWithZeros(pasajerosSubenM, envioGPS);
0xC06A	0xF20BC000  	MOVFF       R0, FARG_IntToStrWithZeros_input
0xC06E	0xF20CC001  	MOVFF       R1, FARG_IntToStrWithZeros_input+1
0xC072	0x0EE7      	MOVLW       _envioGPS
0xC074	0x6F0D      	MOVWF       FARG_IntToStrWithZeros_output, 1
0xC076	0x0E00      	MOVLW       hi_addr(_envioGPS)
0xC078	0x6F0E      	MOVWF       FARG_IntToStrWithZeros_output+1, 1
0xC07A	0xF04CEC85  	CALL        _IntToStrWithZeros, 0
;MyProject.c,502 :: 		for(l=0 ; l<4 ; l++){
0xC07E	0x0100      	MOVLB       0
0xC080	0x6BF2      	CLRF        _l, 1
L_serialTxWioLTE587:
0xC082	0x0E80      	MOVLW       128
0xC084	0x19F2      	XORWF       _l, 0, 1
0xC086	0x6E00      	MOVWF       R0 
0xC088	0x0E80      	MOVLW       128
0xC08A	0x0A04      	XORLW       4
0xC08C	0x5C00      	SUBWF       R0, 0 
0xC08E	0xE21D      	BC          L_serialTxWioLTE588
;MyProject.c,503 :: 		auxEnvioGPS[l] = envioGPS[l+2];
0xC090	0x0E20      	MOVLW       _auxEnvioGPS
0xC092	0x6EE1      	MOVWF       FSR1L 
0xC094	0x0E01      	MOVLW       hi_addr(_auxEnvioGPS)
0xC096	0x6EE2      	MOVWF       FSR1H 
0xC098	0x51F2      	MOVF        _l, 0, 1
0xC09A	0x26E1      	ADDWF       FSR1L, 1 
0xC09C	0x0E00      	MOVLW       0
0xC09E	0xBFF2      	BTFSC       _l, 7, 1
0xC0A0	0x0EFF      	MOVLW       255
0xC0A2	0x22E2      	ADDWFC      FSR1H, 1 
0xC0A4	0x0E02      	MOVLW       2
0xC0A6	0x25F2      	ADDWF       _l, 0, 1
0xC0A8	0x6E00      	MOVWF       R0 
0xC0AA	0x0E00      	MOVLW       0
0xC0AC	0xBFF2      	BTFSC       _l, 7, 1
0xC0AE	0x0EFF      	MOVLW       255
0xC0B0	0x6E01      	MOVWF       R1 
0xC0B2	0x0E00      	MOVLW       0
0xC0B4	0x2201      	ADDWFC      R1, 1 
0xC0B6	0x0EE7      	MOVLW       _envioGPS
0xC0B8	0x2400      	ADDWF       R0, 0 
0xC0BA	0x6EE9      	MOVWF       FSR0L 
0xC0BC	0x0E00      	MOVLW       hi_addr(_envioGPS)
0xC0BE	0x2001      	ADDWFC      R1, 0 
0xC0C0	0x6EEA      	MOVWF       FSR0H 
0xC0C2	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
;MyProject.c,502 :: 		for(l=0 ; l<4 ; l++){
0xC0C6	0x2BF2      	INCF        _l, 1, 1
;MyProject.c,504 :: 		}
0xC0C8	0xD7DC      	BRA         L_serialTxWioLTE587
L_serialTxWioLTE588:
;MyProject.c,505 :: 		strcat(envioSerialGPS, auxEnvioGPS);
0xC0CA	0x0EF3      	MOVLW       _envioSerialGPS
0xC0CC	0x0102      	MOVLB       2
0xC0CE	0x6F0B      	MOVWF       FARG_strcat_to, 1
0xC0D0	0x0E00      	MOVLW       hi_addr(_envioSerialGPS)
0xC0D2	0x6F0C      	MOVWF       FARG_strcat_to+1, 1
0xC0D4	0x0E20      	MOVLW       _auxEnvioGPS
0xC0D6	0x6F0D      	MOVWF       FARG_strcat_from, 1
0xC0D8	0x0E01      	MOVLW       hi_addr(_auxEnvioGPS)
0xC0DA	0x6F0E      	MOVWF       FARG_strcat_from+1, 1
0xC0DC	0xF04DEC29  	CALL        _strcat, 0
;MyProject.c,507 :: 		strcat(envioSerialGPS, ",");
0xC0E0	0x0EF3      	MOVLW       _envioSerialGPS
0xC0E2	0x6F0B      	MOVWF       FARG_strcat_to, 1
0xC0E4	0x0E00      	MOVLW       hi_addr(_envioSerialGPS)
0xC0E6	0x6F0C      	MOVWF       FARG_strcat_to+1, 1
0xC0E8	0x0E9A      	MOVLW       ?lstr123_MyProject
0xC0EA	0x6F0D      	MOVWF       FARG_strcat_from, 1
0xC0EC	0x0E01      	MOVLW       hi_addr(?lstr123_MyProject)
0xC0EE	0x6F0E      	MOVWF       FARG_strcat_from+1, 1
0xC0F0	0xF04DEC29  	CALL        _strcat, 0
;MyProject.c,509 :: 		memset(auxEnvioGPS, 0, sizeof(auxEnvioGPS));
0xC0F4	0x0E20      	MOVLW       _auxEnvioGPS
0xC0F6	0x6F0B      	MOVWF       FARG_memset_p1, 1
0xC0F8	0x0E01      	MOVLW       hi_addr(_auxEnvioGPS)
0xC0FA	0x6F0C      	MOVWF       FARG_memset_p1+1, 1
0xC0FC	0x6B0D      	CLRF        FARG_memset_character, 1
0xC0FE	0x0E05      	MOVLW       5
0xC100	0x6F0E      	MOVWF       FARG_memset_n, 1
0xC102	0x0E00      	MOVLW       0
0xC104	0x6F0F      	MOVWF       FARG_memset_n+1, 1
0xC106	0xF050EC4B  	CALL        _memset, 0
;MyProject.c,511 :: 		pasajerosBajanM = eepromLeeNumero(0x0003, 2);
0xC10A	0x0E03      	MOVLW       3
0xC10C	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0xC10E	0x0E00      	MOVLW       0
0xC110	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0xC112	0x0E02      	MOVLW       2
0xC114	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0xC116	0xF002EC92  	CALL        _eepromLeeNumero, 0
0xC11A	0xF1A0C000  	MOVFF       R0, _pasajerosBajanM
0xC11E	0xF1A1C001  	MOVFF       R1, _pasajerosBajanM+1
;MyProject.c,513 :: 		inttostrWithZeros(pasajerosBajanM, envioGPS);
0xC122	0xF20BC000  	MOVFF       R0, FARG_IntToStrWithZeros_input
0xC126	0xF20CC001  	MOVFF       R1, FARG_IntToStrWithZeros_input+1
0xC12A	0x0EE7      	MOVLW       _envioGPS
0xC12C	0x6F0D      	MOVWF       FARG_IntToStrWithZeros_output, 1
0xC12E	0x0E00      	MOVLW       hi_addr(_envioGPS)
0xC130	0x6F0E      	MOVWF       FARG_IntToStrWithZeros_output+1, 1
0xC132	0xF04CEC85  	CALL        _IntToStrWithZeros, 0
;MyProject.c,514 :: 		for(l=0 ; l<4 ; l++){
0xC136	0x0100      	MOVLB       0
0xC138	0x6BF2      	CLRF        _l, 1
L_serialTxWioLTE590:
0xC13A	0x0E80      	MOVLW       128
0xC13C	0x19F2      	XORWF       _l, 0, 1
0xC13E	0x6E00      	MOVWF       R0 
0xC140	0x0E80      	MOVLW       128
0xC142	0x0A04      	XORLW       4
0xC144	0x5C00      	SUBWF       R0, 0 
0xC146	0xE21D      	BC          L_serialTxWioLTE591
;MyProject.c,515 :: 		auxEnvioGPS[l] = envioGPS[l+2];
0xC148	0x0E20      	MOVLW       _auxEnvioGPS
0xC14A	0x6EE1      	MOVWF       FSR1L 
0xC14C	0x0E01      	MOVLW       hi_addr(_auxEnvioGPS)
0xC14E	0x6EE2      	MOVWF       FSR1H 
0xC150	0x51F2      	MOVF        _l, 0, 1
0xC152	0x26E1      	ADDWF       FSR1L, 1 
0xC154	0x0E00      	MOVLW       0
0xC156	0xBFF2      	BTFSC       _l, 7, 1
0xC158	0x0EFF      	MOVLW       255
0xC15A	0x22E2      	ADDWFC      FSR1H, 1 
0xC15C	0x0E02      	MOVLW       2
0xC15E	0x25F2      	ADDWF       _l, 0, 1
0xC160	0x6E00      	MOVWF       R0 
0xC162	0x0E00      	MOVLW       0
0xC164	0xBFF2      	BTFSC       _l, 7, 1
0xC166	0x0EFF      	MOVLW       255
0xC168	0x6E01      	MOVWF       R1 
0xC16A	0x0E00      	MOVLW       0
0xC16C	0x2201      	ADDWFC      R1, 1 
0xC16E	0x0EE7      	MOVLW       _envioGPS
0xC170	0x2400      	ADDWF       R0, 0 
0xC172	0x6EE9      	MOVWF       FSR0L 
0xC174	0x0E00      	MOVLW       hi_addr(_envioGPS)
0xC176	0x2001      	ADDWFC      R1, 0 
0xC178	0x6EEA      	MOVWF       FSR0H 
0xC17A	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
;MyProject.c,514 :: 		for(l=0 ; l<4 ; l++){
0xC17E	0x2BF2      	INCF        _l, 1, 1
;MyProject.c,516 :: 		}
0xC180	0xD7DC      	BRA         L_serialTxWioLTE590
L_serialTxWioLTE591:
;MyProject.c,517 :: 		strcat(envioSerialGPS, auxEnvioGPS);
0xC182	0x0EF3      	MOVLW       _envioSerialGPS
0xC184	0x0102      	MOVLB       2
0xC186	0x6F0B      	MOVWF       FARG_strcat_to, 1
0xC188	0x0E00      	MOVLW       hi_addr(_envioSerialGPS)
0xC18A	0x6F0C      	MOVWF       FARG_strcat_to+1, 1
0xC18C	0x0E20      	MOVLW       _auxEnvioGPS
0xC18E	0x6F0D      	MOVWF       FARG_strcat_from, 1
0xC190	0x0E01      	MOVLW       hi_addr(_auxEnvioGPS)
0xC192	0x6F0E      	MOVWF       FARG_strcat_from+1, 1
0xC194	0xF04DEC29  	CALL        _strcat, 0
;MyProject.c,519 :: 		strcat(envioSerialGPS, ",");
0xC198	0x0EF3      	MOVLW       _envioSerialGPS
0xC19A	0x6F0B      	MOVWF       FARG_strcat_to, 1
0xC19C	0x0E00      	MOVLW       hi_addr(_envioSerialGPS)
0xC19E	0x6F0C      	MOVWF       FARG_strcat_to+1, 1
0xC1A0	0x0EA9      	MOVLW       ?lstr124_MyProject
0xC1A2	0x6F0D      	MOVWF       FARG_strcat_from, 1
0xC1A4	0x0E01      	MOVLW       hi_addr(?lstr124_MyProject)
0xC1A6	0x6F0E      	MOVWF       FARG_strcat_from+1, 1
0xC1A8	0xF04DEC29  	CALL        _strcat, 0
;MyProject.c,521 :: 		memset(auxEnvioGPS, 0, sizeof(auxEnvioGPS));
0xC1AC	0x0E20      	MOVLW       _auxEnvioGPS
0xC1AE	0x6F0B      	MOVWF       FARG_memset_p1, 1
0xC1B0	0x0E01      	MOVLW       hi_addr(_auxEnvioGPS)
0xC1B2	0x6F0C      	MOVWF       FARG_memset_p1+1, 1
0xC1B4	0x6B0D      	CLRF        FARG_memset_character, 1
0xC1B6	0x0E05      	MOVLW       5
0xC1B8	0x6F0E      	MOVWF       FARG_memset_n, 1
0xC1BA	0x0E00      	MOVLW       0
0xC1BC	0x6F0F      	MOVWF       FARG_memset_n+1, 1
0xC1BE	0xF050EC4B  	CALL        _memset, 0
;MyProject.c,522 :: 		if(posteDesc){
0xC1C2	0x0100      	MOVLB       0
0xC1C4	0x53E0      	MOVF        _posteDesc, 1, 1
0xC1C6	0xE00C      	BZ          L_serialTxWioLTE593
;MyProject.c,523 :: 		strcat(envioSerialGPS, posteDesconectado);
0xC1C8	0x0EF3      	MOVLW       _envioSerialGPS
0xC1CA	0x0102      	MOVLB       2
0xC1CC	0x6F0B      	MOVWF       FARG_strcat_to, 1
0xC1CE	0x0E00      	MOVLW       hi_addr(_envioSerialGPS)
0xC1D0	0x6F0C      	MOVWF       FARG_strcat_to+1, 1
0xC1D2	0x0EA4      	MOVLW       _posteDesconectado
0xC1D4	0x6F0D      	MOVWF       FARG_strcat_from, 1
0xC1D6	0x0E01      	MOVLW       hi_addr(_posteDesconectado)
0xC1D8	0x6F0E      	MOVWF       FARG_strcat_from+1, 1
0xC1DA	0xF04DEC29  	CALL        _strcat, 0
;MyProject.c,524 :: 		}
0xC1DE	0xD048      	BRA         L_serialTxWioLTE594
L_serialTxWioLTE593:
0xC1E0	0x0102      	MOVLB       2
;MyProject.c,528 :: 		pasajerosSubenE = eepromLeeNumero(0x0900, 2);
0xC1E2	0x0E00      	MOVLW       0
0xC1E4	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0xC1E6	0x0E09      	MOVLW       9
0xC1E8	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0xC1EA	0x0E02      	MOVLW       2
0xC1EC	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0xC1EE	0xF002EC92  	CALL        _eepromLeeNumero, 0
0xC1F2	0xF1A2C000  	MOVFF       R0, _pasajerosSubenE
0xC1F6	0xF1A3C001  	MOVFF       R1, _pasajerosSubenE+1
;MyProject.c,529 :: 		inttostrWithZeros(pasajerosSubenE, envioGPS);
0xC1FA	0xF20BC000  	MOVFF       R0, FARG_IntToStrWithZeros_input
0xC1FE	0xF20CC001  	MOVFF       R1, FARG_IntToStrWithZeros_input+1
0xC202	0x0EE7      	MOVLW       _envioGPS
0xC204	0x6F0D      	MOVWF       FARG_IntToStrWithZeros_output, 1
0xC206	0x0E00      	MOVLW       hi_addr(_envioGPS)
0xC208	0x6F0E      	MOVWF       FARG_IntToStrWithZeros_output+1, 1
0xC20A	0xF04CEC85  	CALL        _IntToStrWithZeros, 0
;MyProject.c,530 :: 		for(l=0 ; l<4 ; l++){
0xC20E	0x0100      	MOVLB       0
0xC210	0x6BF2      	CLRF        _l, 1
L_serialTxWioLTE595:
0xC212	0x0E80      	MOVLW       128
0xC214	0x19F2      	XORWF       _l, 0, 1
0xC216	0x6E00      	MOVWF       R0 
0xC218	0x0E80      	MOVLW       128
0xC21A	0x0A04      	XORLW       4
0xC21C	0x5C00      	SUBWF       R0, 0 
0xC21E	0xE21D      	BC          L_serialTxWioLTE596
;MyProject.c,531 :: 		auxEnvioGPS[l] = envioGPS[l+2];
0xC220	0x0E20      	MOVLW       _auxEnvioGPS
0xC222	0x6EE1      	MOVWF       FSR1L 
0xC224	0x0E01      	MOVLW       hi_addr(_auxEnvioGPS)
0xC226	0x6EE2      	MOVWF       FSR1H 
0xC228	0x51F2      	MOVF        _l, 0, 1
0xC22A	0x26E1      	ADDWF       FSR1L, 1 
0xC22C	0x0E00      	MOVLW       0
0xC22E	0xBFF2      	BTFSC       _l, 7, 1
0xC230	0x0EFF      	MOVLW       255
0xC232	0x22E2      	ADDWFC      FSR1H, 1 
0xC234	0x0E02      	MOVLW       2
0xC236	0x25F2      	ADDWF       _l, 0, 1
0xC238	0x6E00      	MOVWF       R0 
0xC23A	0x0E00      	MOVLW       0
0xC23C	0xBFF2      	BTFSC       _l, 7, 1
0xC23E	0x0EFF      	MOVLW       255
0xC240	0x6E01      	MOVWF       R1 
0xC242	0x0E00      	MOVLW       0
0xC244	0x2201      	ADDWFC      R1, 1 
0xC246	0x0EE7      	MOVLW       _envioGPS
0xC248	0x2400      	ADDWF       R0, 0 
0xC24A	0x6EE9      	MOVWF       FSR0L 
0xC24C	0x0E00      	MOVLW       hi_addr(_envioGPS)
0xC24E	0x2001      	ADDWFC      R1, 0 
0xC250	0x6EEA      	MOVWF       FSR0H 
0xC252	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
;MyProject.c,530 :: 		for(l=0 ; l<4 ; l++){
0xC256	0x2BF2      	INCF        _l, 1, 1
;MyProject.c,532 :: 		}
0xC258	0xD7DC      	BRA         L_serialTxWioLTE595
L_serialTxWioLTE596:
;MyProject.c,533 :: 		strcat(envioSerialGPS, auxEnvioGPS);
0xC25A	0x0EF3      	MOVLW       _envioSerialGPS
0xC25C	0x0102      	MOVLB       2
0xC25E	0x6F0B      	MOVWF       FARG_strcat_to, 1
0xC260	0x0E00      	MOVLW       hi_addr(_envioSerialGPS)
0xC262	0x6F0C      	MOVWF       FARG_strcat_to+1, 1
0xC264	0x0E20      	MOVLW       _auxEnvioGPS
0xC266	0x6F0D      	MOVWF       FARG_strcat_from, 1
0xC268	0x0E01      	MOVLW       hi_addr(_auxEnvioGPS)
0xC26A	0x6F0E      	MOVWF       FARG_strcat_from+1, 1
0xC26C	0xF04DEC29  	CALL        _strcat, 0
;MyProject.c,534 :: 		}
L_serialTxWioLTE594:
;MyProject.c,536 :: 		strcat(envioSerialGPS, ",");
0xC270	0x0EF3      	MOVLW       _envioSerialGPS
0xC272	0x6F0B      	MOVWF       FARG_strcat_to, 1
0xC274	0x0E00      	MOVLW       hi_addr(_envioSerialGPS)
0xC276	0x6F0C      	MOVWF       FARG_strcat_to+1, 1
0xC278	0x0E9E      	MOVLW       ?lstr125_MyProject
0xC27A	0x6F0D      	MOVWF       FARG_strcat_from, 1
0xC27C	0x0E01      	MOVLW       hi_addr(?lstr125_MyProject)
0xC27E	0x6F0E      	MOVWF       FARG_strcat_from+1, 1
0xC280	0xF04DEC29  	CALL        _strcat, 0
;MyProject.c,538 :: 		memset(auxEnvioGPS, 0, sizeof(auxEnvioGPS));
0xC284	0x0E20      	MOVLW       _auxEnvioGPS
0xC286	0x6F0B      	MOVWF       FARG_memset_p1, 1
0xC288	0x0E01      	MOVLW       hi_addr(_auxEnvioGPS)
0xC28A	0x6F0C      	MOVWF       FARG_memset_p1+1, 1
0xC28C	0x6B0D      	CLRF        FARG_memset_character, 1
0xC28E	0x0E05      	MOVLW       5
0xC290	0x6F0E      	MOVWF       FARG_memset_n, 1
0xC292	0x0E00      	MOVLW       0
0xC294	0x6F0F      	MOVWF       FARG_memset_n+1, 1
0xC296	0xF050EC4B  	CALL        _memset, 0
;MyProject.c,539 :: 		if(posteDesc){
0xC29A	0x0100      	MOVLB       0
0xC29C	0x53E0      	MOVF        _posteDesc, 1, 1
0xC29E	0xE00C      	BZ          L_serialTxWioLTE598
;MyProject.c,540 :: 		strcat(envioSerialGPS, posteDesconectado);
0xC2A0	0x0EF3      	MOVLW       _envioSerialGPS
0xC2A2	0x0102      	MOVLB       2
0xC2A4	0x6F0B      	MOVWF       FARG_strcat_to, 1
0xC2A6	0x0E00      	MOVLW       hi_addr(_envioSerialGPS)
0xC2A8	0x6F0C      	MOVWF       FARG_strcat_to+1, 1
0xC2AA	0x0EA4      	MOVLW       _posteDesconectado
0xC2AC	0x6F0D      	MOVWF       FARG_strcat_from, 1
0xC2AE	0x0E01      	MOVLW       hi_addr(_posteDesconectado)
0xC2B0	0x6F0E      	MOVWF       FARG_strcat_from+1, 1
0xC2B2	0xF04DEC29  	CALL        _strcat, 0
;MyProject.c,541 :: 		}
0xC2B6	0xD048      	BRA         L_serialTxWioLTE599
L_serialTxWioLTE598:
0xC2B8	0x0102      	MOVLB       2
;MyProject.c,543 :: 		pasajerosBajanE = eepromLeeNumero(0x0700, 2);
0xC2BA	0x0E00      	MOVLW       0
0xC2BC	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0xC2BE	0x0E07      	MOVLW       7
0xC2C0	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0xC2C2	0x0E02      	MOVLW       2
0xC2C4	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0xC2C6	0xF002EC92  	CALL        _eepromLeeNumero, 0
0xC2CA	0xF153C000  	MOVFF       R0, _pasajerosBajanE
0xC2CE	0xF154C001  	MOVFF       R1, _pasajerosBajanE+1
;MyProject.c,544 :: 		inttostrWithZeros(pasajerosbajanE, envioGPS);
0xC2D2	0xF20BC000  	MOVFF       R0, FARG_IntToStrWithZeros_input
0xC2D6	0xF20CC001  	MOVFF       R1, FARG_IntToStrWithZeros_input+1
0xC2DA	0x0EE7      	MOVLW       _envioGPS
0xC2DC	0x6F0D      	MOVWF       FARG_IntToStrWithZeros_output, 1
0xC2DE	0x0E00      	MOVLW       hi_addr(_envioGPS)
0xC2E0	0x6F0E      	MOVWF       FARG_IntToStrWithZeros_output+1, 1
0xC2E2	0xF04CEC85  	CALL        _IntToStrWithZeros, 0
;MyProject.c,545 :: 		for(l=0 ; l<4 ; l++){
0xC2E6	0x0100      	MOVLB       0
0xC2E8	0x6BF2      	CLRF        _l, 1
L_serialTxWioLTE600:
0xC2EA	0x0E80      	MOVLW       128
0xC2EC	0x19F2      	XORWF       _l, 0, 1
0xC2EE	0x6E00      	MOVWF       R0 
0xC2F0	0x0E80      	MOVLW       128
0xC2F2	0x0A04      	XORLW       4
0xC2F4	0x5C00      	SUBWF       R0, 0 
0xC2F6	0xE21D      	BC          L_serialTxWioLTE601
;MyProject.c,546 :: 		auxEnvioGPS[l] = envioGPS[l+2];
0xC2F8	0x0E20      	MOVLW       _auxEnvioGPS
0xC2FA	0x6EE1      	MOVWF       FSR1L 
0xC2FC	0x0E01      	MOVLW       hi_addr(_auxEnvioGPS)
0xC2FE	0x6EE2      	MOVWF       FSR1H 
0xC300	0x51F2      	MOVF        _l, 0, 1
0xC302	0x26E1      	ADDWF       FSR1L, 1 
0xC304	0x0E00      	MOVLW       0
0xC306	0xBFF2      	BTFSC       _l, 7, 1
0xC308	0x0EFF      	MOVLW       255
0xC30A	0x22E2      	ADDWFC      FSR1H, 1 
0xC30C	0x0E02      	MOVLW       2
0xC30E	0x25F2      	ADDWF       _l, 0, 1
0xC310	0x6E00      	MOVWF       R0 
0xC312	0x0E00      	MOVLW       0
0xC314	0xBFF2      	BTFSC       _l, 7, 1
0xC316	0x0EFF      	MOVLW       255
0xC318	0x6E01      	MOVWF       R1 
0xC31A	0x0E00      	MOVLW       0
0xC31C	0x2201      	ADDWFC      R1, 1 
0xC31E	0x0EE7      	MOVLW       _envioGPS
0xC320	0x2400      	ADDWF       R0, 0 
0xC322	0x6EE9      	MOVWF       FSR0L 
0xC324	0x0E00      	MOVLW       hi_addr(_envioGPS)
0xC326	0x2001      	ADDWFC      R1, 0 
0xC328	0x6EEA      	MOVWF       FSR0H 
0xC32A	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
;MyProject.c,545 :: 		for(l=0 ; l<4 ; l++){
0xC32E	0x2BF2      	INCF        _l, 1, 1
;MyProject.c,547 :: 		}
0xC330	0xD7DC      	BRA         L_serialTxWioLTE600
L_serialTxWioLTE601:
;MyProject.c,548 :: 		strcat(envioSerialGPS, auxEnvioGPS);
0xC332	0x0EF3      	MOVLW       _envioSerialGPS
0xC334	0x0102      	MOVLB       2
0xC336	0x6F0B      	MOVWF       FARG_strcat_to, 1
0xC338	0x0E00      	MOVLW       hi_addr(_envioSerialGPS)
0xC33A	0x6F0C      	MOVWF       FARG_strcat_to+1, 1
0xC33C	0x0E20      	MOVLW       _auxEnvioGPS
0xC33E	0x6F0D      	MOVWF       FARG_strcat_from, 1
0xC340	0x0E01      	MOVLW       hi_addr(_auxEnvioGPS)
0xC342	0x6F0E      	MOVWF       FARG_strcat_from+1, 1
0xC344	0xF04DEC29  	CALL        _strcat, 0
;MyProject.c,549 :: 		}
L_serialTxWioLTE599:
;MyProject.c,551 :: 		strcat(envioSerialGPS, ",");
0xC348	0x0EF3      	MOVLW       _envioSerialGPS
0xC34A	0x6F0B      	MOVWF       FARG_strcat_to, 1
0xC34C	0x0E00      	MOVLW       hi_addr(_envioSerialGPS)
0xC34E	0x6F0C      	MOVWF       FARG_strcat_to+1, 1
0xC350	0x0E51      	MOVLW       ?lstr126_MyProject
0xC352	0x6F0D      	MOVWF       FARG_strcat_from, 1
0xC354	0x0E01      	MOVLW       hi_addr(?lstr126_MyProject)
0xC356	0x6F0E      	MOVWF       FARG_strcat_from+1, 1
0xC358	0xF04DEC29  	CALL        _strcat, 0
;MyProject.c,553 :: 		memset(auxEnvioGPS, 0, sizeof(auxEnvioGPS));
0xC35C	0x0E20      	MOVLW       _auxEnvioGPS
0xC35E	0x6F0B      	MOVWF       FARG_memset_p1, 1
0xC360	0x0E01      	MOVLW       hi_addr(_auxEnvioGPS)
0xC362	0x6F0C      	MOVWF       FARG_memset_p1+1, 1
0xC364	0x6B0D      	CLRF        FARG_memset_character, 1
0xC366	0x0E05      	MOVLW       5
0xC368	0x6F0E      	MOVWF       FARG_memset_n, 1
0xC36A	0x0E00      	MOVLW       0
0xC36C	0x6F0F      	MOVWF       FARG_memset_n+1, 1
0xC36E	0xF050EC4B  	CALL        _memset, 0
;MyProject.c,554 :: 		auxCuentaBloqueo = eepromLeeNumero(0x000B, 1);
0xC372	0x0E0B      	MOVLW       11
0xC374	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0xC376	0x0E00      	MOVLW       0
0xC378	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0xC37A	0x0E01      	MOVLW       1
0xC37C	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0xC37E	0xF002EC92  	CALL        _eepromLeeNumero, 0
0xC382	0xF155C000  	MOVFF       R0, _auxCuentaBloqueo
;MyProject.c,555 :: 		if(cuentaBloqueo > auxCuentaBloqueo){
0xC386	0x0E80      	MOVLW       128
0xC388	0x1800      	XORWF       R0, 0 
0xC38A	0x6E04      	MOVWF       R4 
0xC38C	0x0E80      	MOVLW       128
0xC38E	0x0101      	MOVLB       1
0xC390	0x1958      	XORWF       _cuentaBloqueo, 0, 1
0xC392	0x5C04      	SUBWF       R4, 0 
0xC394	0xE20E      	BC          L_serialTxWioLTE603
;MyProject.c,556 :: 		wordtostrWithZeros(cuentaBloqueo, envioGPS);
0xC396	0xF20BC158  	MOVFF       _cuentaBloqueo, FARG_WordToStrWithZeros_input
0xC39A	0x0E00      	MOVLW       0
0xC39C	0xBF58      	BTFSC       _cuentaBloqueo, 7, 1
0xC39E	0x0EFF      	MOVLW       255
0xC3A0	0x0102      	MOVLB       2
0xC3A2	0x6F0C      	MOVWF       FARG_WordToStrWithZeros_input+1, 1
0xC3A4	0x0EE7      	MOVLW       _envioGPS
0xC3A6	0x6F0D      	MOVWF       FARG_WordToStrWithZeros_output, 1
0xC3A8	0x0E00      	MOVLW       hi_addr(_envioGPS)
0xC3AA	0x6F0E      	MOVWF       FARG_WordToStrWithZeros_output+1, 1
0xC3AC	0xF04EECAC  	CALL        _WordToStrWithZeros, 0
;MyProject.c,557 :: 		}
0xC3B0	0xD00E      	BRA         L_serialTxWioLTE604
L_serialTxWioLTE603:
;MyProject.c,559 :: 		wordtostrWithZeros(auxCuentaBloqueo, envioGPS);
0xC3B2	0xF20BC155  	MOVFF       _auxCuentaBloqueo, FARG_WordToStrWithZeros_input
0xC3B6	0x0E00      	MOVLW       0
0xC3B8	0x0101      	MOVLB       1
0xC3BA	0xBF55      	BTFSC       _auxCuentaBloqueo, 7, 1
0xC3BC	0x0EFF      	MOVLW       255
0xC3BE	0x0102      	MOVLB       2
0xC3C0	0x6F0C      	MOVWF       FARG_WordToStrWithZeros_input+1, 1
0xC3C2	0x0EE7      	MOVLW       _envioGPS
0xC3C4	0x6F0D      	MOVWF       FARG_WordToStrWithZeros_output, 1
0xC3C6	0x0E00      	MOVLW       hi_addr(_envioGPS)
0xC3C8	0x6F0E      	MOVWF       FARG_WordToStrWithZeros_output+1, 1
0xC3CA	0xF04EECAC  	CALL        _WordToStrWithZeros, 0
;MyProject.c,560 :: 		}
L_serialTxWioLTE604:
;MyProject.c,561 :: 		wordtostrWithZeros(auxCuentaBloqueo, envioGPS);
0xC3CE	0xF20BC155  	MOVFF       _auxCuentaBloqueo, FARG_WordToStrWithZeros_input
0xC3D2	0x0E00      	MOVLW       0
0xC3D4	0x0101      	MOVLB       1
0xC3D6	0xBF55      	BTFSC       _auxCuentaBloqueo, 7, 1
0xC3D8	0x0EFF      	MOVLW       255
0xC3DA	0x0102      	MOVLB       2
0xC3DC	0x6F0C      	MOVWF       FARG_WordToStrWithZeros_input+1, 1
0xC3DE	0x0EE7      	MOVLW       _envioGPS
0xC3E0	0x6F0D      	MOVWF       FARG_WordToStrWithZeros_output, 1
0xC3E2	0x0E00      	MOVLW       hi_addr(_envioGPS)
0xC3E4	0x6F0E      	MOVWF       FARG_WordToStrWithZeros_output+1, 1
0xC3E6	0xF04EECAC  	CALL        _WordToStrWithZeros, 0
;MyProject.c,562 :: 		for(l=0 ; l<3 ; l++){
0xC3EA	0x0100      	MOVLB       0
0xC3EC	0x6BF2      	CLRF        _l, 1
L_serialTxWioLTE605:
0xC3EE	0x0E80      	MOVLW       128
0xC3F0	0x19F2      	XORWF       _l, 0, 1
0xC3F2	0x6E00      	MOVWF       R0 
0xC3F4	0x0E80      	MOVLW       128
0xC3F6	0x0A03      	XORLW       3
0xC3F8	0x5C00      	SUBWF       R0, 0 
0xC3FA	0xE21D      	BC          L_serialTxWioLTE606
;MyProject.c,563 :: 		auxEnvioGPS[l] = envioGPS[l+2];
0xC3FC	0x0E20      	MOVLW       _auxEnvioGPS
0xC3FE	0x6EE1      	MOVWF       FSR1L 
0xC400	0x0E01      	MOVLW       hi_addr(_auxEnvioGPS)
0xC402	0x6EE2      	MOVWF       FSR1H 
0xC404	0x51F2      	MOVF        _l, 0, 1
0xC406	0x26E1      	ADDWF       FSR1L, 1 
0xC408	0x0E00      	MOVLW       0
0xC40A	0xBFF2      	BTFSC       _l, 7, 1
0xC40C	0x0EFF      	MOVLW       255
0xC40E	0x22E2      	ADDWFC      FSR1H, 1 
0xC410	0x0E02      	MOVLW       2
0xC412	0x25F2      	ADDWF       _l, 0, 1
0xC414	0x6E00      	MOVWF       R0 
0xC416	0x0E00      	MOVLW       0
0xC418	0xBFF2      	BTFSC       _l, 7, 1
0xC41A	0x0EFF      	MOVLW       255
0xC41C	0x6E01      	MOVWF       R1 
0xC41E	0x0E00      	MOVLW       0
0xC420	0x2201      	ADDWFC      R1, 1 
0xC422	0x0EE7      	MOVLW       _envioGPS
0xC424	0x2400      	ADDWF       R0, 0 
0xC426	0x6EE9      	MOVWF       FSR0L 
0xC428	0x0E00      	MOVLW       hi_addr(_envioGPS)
0xC42A	0x2001      	ADDWFC      R1, 0 
0xC42C	0x6EEA      	MOVWF       FSR0H 
0xC42E	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
;MyProject.c,562 :: 		for(l=0 ; l<3 ; l++){
0xC432	0x2BF2      	INCF        _l, 1, 1
;MyProject.c,564 :: 		}
0xC434	0xD7DC      	BRA         L_serialTxWioLTE605
L_serialTxWioLTE606:
;MyProject.c,565 :: 		strcat(envioSerialGPS, auxEnvioGPS);
0xC436	0x0EF3      	MOVLW       _envioSerialGPS
0xC438	0x0102      	MOVLB       2
0xC43A	0x6F0B      	MOVWF       FARG_strcat_to, 1
0xC43C	0x0E00      	MOVLW       hi_addr(_envioSerialGPS)
0xC43E	0x6F0C      	MOVWF       FARG_strcat_to+1, 1
0xC440	0x0E20      	MOVLW       _auxEnvioGPS
0xC442	0x6F0D      	MOVWF       FARG_strcat_from, 1
0xC444	0x0E01      	MOVLW       hi_addr(_auxEnvioGPS)
0xC446	0x6F0E      	MOVWF       FARG_strcat_from+1, 1
0xC448	0xF04DEC29  	CALL        _strcat, 0
;MyProject.c,567 :: 		strcat(envioSerialGPS, ",");
0xC44C	0x0EF3      	MOVLW       _envioSerialGPS
0xC44E	0x6F0B      	MOVWF       FARG_strcat_to, 1
0xC450	0x0E00      	MOVLW       hi_addr(_envioSerialGPS)
0xC452	0x6F0C      	MOVWF       FARG_strcat_to+1, 1
0xC454	0x0E56      	MOVLW       ?lstr127_MyProject
0xC456	0x6F0D      	MOVWF       FARG_strcat_from, 1
0xC458	0x0E01      	MOVLW       hi_addr(?lstr127_MyProject)
0xC45A	0x6F0E      	MOVWF       FARG_strcat_from+1, 1
0xC45C	0xF04DEC29  	CALL        _strcat, 0
;MyProject.c,569 :: 		memset(auxEnvioGPS, 0, sizeof(auxEnvioGPS));
0xC460	0x0E20      	MOVLW       _auxEnvioGPS
0xC462	0x6F0B      	MOVWF       FARG_memset_p1, 1
0xC464	0x0E01      	MOVLW       hi_addr(_auxEnvioGPS)
0xC466	0x6F0C      	MOVWF       FARG_memset_p1+1, 1
0xC468	0x6B0D      	CLRF        FARG_memset_character, 1
0xC46A	0x0E05      	MOVLW       5
0xC46C	0x6F0E      	MOVWF       FARG_memset_n, 1
0xC46E	0x0E00      	MOVLW       0
0xC470	0x6F0F      	MOVWF       FARG_memset_n+1, 1
0xC472	0xF050EC4B  	CALL        _memset, 0
;MyProject.c,570 :: 		bloqEsclavo = eepromLeeNumero(0x000C, 1);
0xC476	0x0E0C      	MOVLW       12
0xC478	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0xC47A	0x0E00      	MOVLW       0
0xC47C	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0xC47E	0x0E01      	MOVLW       1
0xC480	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0xC482	0xF002EC92  	CALL        _eepromLeeNumero, 0
0xC486	0xF148C000  	MOVFF       R0, _bloqEsclavo
;MyProject.c,571 :: 		if(bufferRecepcionEsclavo[2] > bloqEsclavo){
0xC48A	0x0E80      	MOVLW       128
0xC48C	0xBE00      	BTFSC       R0, 7 
0xC48E	0x0E7F      	MOVLW       127
0xC490	0x6E04      	MOVWF       R4 
0xC492	0x0E80      	MOVLW       128
0xC494	0x5C04      	SUBWF       R4, 0 
0xC496	0xE103      	BNZ         L__serialTxWioLTE2433
0xC498	0x0101      	MOVLB       1
0xC49A	0x5140      	MOVF        _bufferRecepcionEsclavo+2, 0, 1
0xC49C	0x5C00      	SUBWF       R0, 0 
L__serialTxWioLTE2433:
0xC49E	0xE20C      	BC          L_serialTxWioLTE608
;MyProject.c,572 :: 		wordtostrWithZeros(bufferRecepcionEsclavo[2], envioGPS);
0xC4A0	0xF20BC140  	MOVFF       _bufferRecepcionEsclavo+2, FARG_WordToStrWithZeros_input
0xC4A4	0x0E00      	MOVLW       0
0xC4A6	0x0102      	MOVLB       2
0xC4A8	0x6F0C      	MOVWF       FARG_WordToStrWithZeros_input+1, 1
0xC4AA	0x0EE7      	MOVLW       _envioGPS
0xC4AC	0x6F0D      	MOVWF       FARG_WordToStrWithZeros_output, 1
0xC4AE	0x0E00      	MOVLW       hi_addr(_envioGPS)
0xC4B0	0x6F0E      	MOVWF       FARG_WordToStrWithZeros_output+1, 1
0xC4B2	0xF04EECAC  	CALL        _WordToStrWithZeros, 0
;MyProject.c,573 :: 		}
0xC4B6	0xD00E      	BRA         L_serialTxWioLTE609
L_serialTxWioLTE608:
;MyProject.c,575 :: 		wordtostrWithZeros(bloqEsclavo, envioGPS);
0xC4B8	0xF20BC148  	MOVFF       _bloqEsclavo, FARG_WordToStrWithZeros_input
0xC4BC	0x0E00      	MOVLW       0
0xC4BE	0x0101      	MOVLB       1
0xC4C0	0xBF48      	BTFSC       _bloqEsclavo, 7, 1
0xC4C2	0x0EFF      	MOVLW       255
0xC4C4	0x0102      	MOVLB       2
0xC4C6	0x6F0C      	MOVWF       FARG_WordToStrWithZeros_input+1, 1
0xC4C8	0x0EE7      	MOVLW       _envioGPS
0xC4CA	0x6F0D      	MOVWF       FARG_WordToStrWithZeros_output, 1
0xC4CC	0x0E00      	MOVLW       hi_addr(_envioGPS)
0xC4CE	0x6F0E      	MOVWF       FARG_WordToStrWithZeros_output+1, 1
0xC4D0	0xF04EECAC  	CALL        _WordToStrWithZeros, 0
;MyProject.c,576 :: 		}
L_serialTxWioLTE609:
;MyProject.c,577 :: 		for(l=0 ; l<3 ; l++){
0xC4D4	0x0100      	MOVLB       0
0xC4D6	0x6BF2      	CLRF        _l, 1
L_serialTxWioLTE610:
0xC4D8	0x0E80      	MOVLW       128
0xC4DA	0x19F2      	XORWF       _l, 0, 1
0xC4DC	0x6E00      	MOVWF       R0 
0xC4DE	0x0E80      	MOVLW       128
0xC4E0	0x0A03      	XORLW       3
0xC4E2	0x5C00      	SUBWF       R0, 0 
0xC4E4	0xE21D      	BC          L_serialTxWioLTE611
;MyProject.c,578 :: 		auxEnvioGPS[l] = envioGPS[l+2];
0xC4E6	0x0E20      	MOVLW       _auxEnvioGPS
0xC4E8	0x6EE1      	MOVWF       FSR1L 
0xC4EA	0x0E01      	MOVLW       hi_addr(_auxEnvioGPS)
0xC4EC	0x6EE2      	MOVWF       FSR1H 
0xC4EE	0x51F2      	MOVF        _l, 0, 1
0xC4F0	0x26E1      	ADDWF       FSR1L, 1 
0xC4F2	0x0E00      	MOVLW       0
0xC4F4	0xBFF2      	BTFSC       _l, 7, 1
0xC4F6	0x0EFF      	MOVLW       255
0xC4F8	0x22E2      	ADDWFC      FSR1H, 1 
0xC4FA	0x0E02      	MOVLW       2
0xC4FC	0x25F2      	ADDWF       _l, 0, 1
0xC4FE	0x6E00      	MOVWF       R0 
0xC500	0x0E00      	MOVLW       0
0xC502	0xBFF2      	BTFSC       _l, 7, 1
0xC504	0x0EFF      	MOVLW       255
0xC506	0x6E01      	MOVWF       R1 
0xC508	0x0E00      	MOVLW       0
0xC50A	0x2201      	ADDWFC      R1, 1 
0xC50C	0x0EE7      	MOVLW       _envioGPS
0xC50E	0x2400      	ADDWF       R0, 0 
0xC510	0x6EE9      	MOVWF       FSR0L 
0xC512	0x0E00      	MOVLW       hi_addr(_envioGPS)
0xC514	0x2001      	ADDWFC      R1, 0 
0xC516	0x6EEA      	MOVWF       FSR0H 
0xC518	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
;MyProject.c,577 :: 		for(l=0 ; l<3 ; l++){
0xC51C	0x2BF2      	INCF        _l, 1, 1
;MyProject.c,579 :: 		}
0xC51E	0xD7DC      	BRA         L_serialTxWioLTE610
L_serialTxWioLTE611:
;MyProject.c,580 :: 		strcat(envioSerialGPS, auxEnvioGPS);
0xC520	0x0EF3      	MOVLW       _envioSerialGPS
0xC522	0x0102      	MOVLB       2
0xC524	0x6F0B      	MOVWF       FARG_strcat_to, 1
0xC526	0x0E00      	MOVLW       hi_addr(_envioSerialGPS)
0xC528	0x6F0C      	MOVWF       FARG_strcat_to+1, 1
0xC52A	0x0E20      	MOVLW       _auxEnvioGPS
0xC52C	0x6F0D      	MOVWF       FARG_strcat_from, 1
0xC52E	0x0E01      	MOVLW       hi_addr(_auxEnvioGPS)
0xC530	0x6F0E      	MOVWF       FARG_strcat_from+1, 1
0xC532	0xF04DEC29  	CALL        _strcat, 0
;MyProject.c,581 :: 		memset(auxEnvioGPS, 0, sizeof(auxEnvioGPS));
0xC536	0x0E20      	MOVLW       _auxEnvioGPS
0xC538	0x6F0B      	MOVWF       FARG_memset_p1, 1
0xC53A	0x0E01      	MOVLW       hi_addr(_auxEnvioGPS)
0xC53C	0x6F0C      	MOVWF       FARG_memset_p1+1, 1
0xC53E	0x6B0D      	CLRF        FARG_memset_character, 1
0xC540	0x0E05      	MOVLW       5
0xC542	0x6F0E      	MOVWF       FARG_memset_n, 1
0xC544	0x0E00      	MOVLW       0
0xC546	0x6F0F      	MOVWF       FARG_memset_n+1, 1
0xC548	0xF050EC4B  	CALL        _memset, 0
;MyProject.c,584 :: 		strcat(envioSerialGPS, ",");
0xC54C	0x0EF3      	MOVLW       _envioSerialGPS
0xC54E	0x6F0B      	MOVWF       FARG_strcat_to, 1
0xC550	0x0E00      	MOVLW       hi_addr(_envioSerialGPS)
0xC552	0x6F0C      	MOVWF       FARG_strcat_to+1, 1
0xC554	0x0E49      	MOVLW       ?lstr128_MyProject
0xC556	0x6F0D      	MOVWF       FARG_strcat_from, 1
0xC558	0x0E01      	MOVLW       hi_addr(?lstr128_MyProject)
0xC55A	0x6F0E      	MOVWF       FARG_strcat_from+1, 1
0xC55C	0xF04DEC29  	CALL        _strcat, 0
;MyProject.c,586 :: 		strcat(envioSerialGPS, "0,\r\n");
0xC560	0x0EF3      	MOVLW       _envioSerialGPS
0xC562	0x6F0B      	MOVWF       FARG_strcat_to, 1
0xC564	0x0E00      	MOVLW       hi_addr(_envioSerialGPS)
0xC566	0x6F0C      	MOVWF       FARG_strcat_to+1, 1
0xC568	0x0E4C      	MOVLW       ?lstr129_MyProject
0xC56A	0x6F0D      	MOVWF       FARG_strcat_from, 1
0xC56C	0x0E01      	MOVLW       hi_addr(?lstr129_MyProject)
0xC56E	0x6F0E      	MOVWF       FARG_strcat_from+1, 1
0xC570	0xF04DEC29  	CALL        _strcat, 0
;MyProject.c,587 :: 		for(l=0; l<strlen(envioSerialGPS); l++){
0xC574	0x0100      	MOVLB       0
0xC576	0x6BF2      	CLRF        _l, 1
L_serialTxWioLTE613:
0xC578	0x0EF3      	MOVLW       _envioSerialGPS
0xC57A	0x0102      	MOVLB       2
0xC57C	0x6F0B      	MOVWF       FARG_strlen_s, 1
0xC57E	0x0E00      	MOVLW       hi_addr(_envioSerialGPS)
0xC580	0x6F0C      	MOVWF       FARG_strlen_s+1, 1
0xC582	0xF04DECAA  	CALL        _strlen, 0
0xC586	0x0E80      	MOVLW       128
0xC588	0x0100      	MOVLB       0
0xC58A	0xBFF2      	BTFSC       _l, 7, 1
0xC58C	0x0E7F      	MOVLW       127
0xC58E	0x6E02      	MOVWF       R2 
0xC590	0x0E80      	MOVLW       128
0xC592	0x1801      	XORWF       R1, 0 
0xC594	0x5C02      	SUBWF       R2, 0 
0xC596	0xE102      	BNZ         L__serialTxWioLTE2434
0xC598	0x5000      	MOVF        R0, 0 
0xC59A	0x5DF2      	SUBWF       _l, 0, 1
L__serialTxWioLTE2434:
0xC59C	0xE211      	BC          L_serialTxWioLTE614
;MyProject.c,588 :: 		Soft_UART_Write(envioSerialGPS[l]);
0xC59E	0x0EF3      	MOVLW       _envioSerialGPS
0xC5A0	0x6EE9      	MOVWF       FSR0L 
0xC5A2	0x0E00      	MOVLW       hi_addr(_envioSerialGPS)
0xC5A4	0x6EEA      	MOVWF       FSR0H 
0xC5A6	0x51F2      	MOVF        _l, 0, 1
0xC5A8	0x26E9      	ADDWF       FSR0L, 1 
0xC5AA	0x0E00      	MOVLW       0
0xC5AC	0xBFF2      	BTFSC       _l, 7, 1
0xC5AE	0x0EFF      	MOVLW       255
0xC5B0	0x22EA      	ADDWFC      FSR0H, 1 
0xC5B2	0xF200CFEE  	MOVFF       POSTINC0, FARG_Soft_UART_Write_udata
0xC5B6	0xF04EECF6  	CALL        _Soft_UART_Write, 0
;MyProject.c,587 :: 		for(l=0; l<strlen(envioSerialGPS); l++){
0xC5BA	0x0100      	MOVLB       0
0xC5BC	0x2BF2      	INCF        _l, 1, 1
;MyProject.c,589 :: 		}
0xC5BE	0xD7DC      	BRA         L_serialTxWioLTE613
L_serialTxWioLTE614:
;MyProject.c,590 :: 		lcd_cmd(_LCD_CLEAR);
0xC5C0	0x0E01      	MOVLW       1
0xC5C2	0x0102      	MOVLB       2
0xC5C4	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0xC5C6	0xF008EC7A  	CALL        _lcd_cmd, 0
;MyProject.c,591 :: 		lcd_out(1,1,envioSerialGPS);
0xC5CA	0x0E01      	MOVLW       1
0xC5CC	0x6F36      	MOVWF       FARG_lcd_out_fila, 1
0xC5CE	0x0E01      	MOVLW       1
0xC5D0	0x6F37      	MOVWF       FARG_lcd_out_col, 1
0xC5D2	0x0EF3      	MOVLW       _envioSerialGPS
0xC5D4	0x6F38      	MOVWF       FARG_lcd_out_texto, 1
0xC5D6	0x0E00      	MOVLW       hi_addr(_envioSerialGPS)
0xC5D8	0x6F39      	MOVWF       FARG_lcd_out_texto+1, 1
0xC5DA	0xF002EC75  	CALL        _lcd_out, 0
;MyProject.c,593 :: 		lcd_cmd(_LCD_CLEAR);
0xC5DE	0x0E01      	MOVLW       1
0xC5E0	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0xC5E2	0xF008EC7A  	CALL        _lcd_cmd, 0
;MyProject.c,594 :: 		memset(envioSerialGPS, 0, sizeof(envioSerialGPS));
0xC5E6	0x0EF3      	MOVLW       _envioSerialGPS
0xC5E8	0x6F0B      	MOVWF       FARG_memset_p1, 1
0xC5EA	0x0E00      	MOVLW       hi_addr(_envioSerialGPS)
0xC5EC	0x6F0C      	MOVWF       FARG_memset_p1+1, 1
0xC5EE	0x6B0D      	CLRF        FARG_memset_character, 1
0xC5F0	0x0E2D      	MOVLW       45
0xC5F2	0x6F0E      	MOVWF       FARG_memset_n, 1
0xC5F4	0x0E00      	MOVLW       0
0xC5F6	0x6F0F      	MOVWF       FARG_memset_n+1, 1
0xC5F8	0xF050EC4B  	CALL        _memset, 0
;MyProject.c,595 :: 		desbordoGPS = 0;
0xC5FC	0x0100      	MOVLB       0
0xC5FE	0x6BE1      	CLRF        _desbordoGPS, 1
0xC600	0x6BE2      	CLRF        _desbordoGPS+1, 1
;MyProject.c,596 :: 		}
L_serialTxWioLTE579:
;MyProject.c,597 :: 		}
L_end_serialTxWioLTE:
0xC602	0x0012      	RETURN      0
; end of _serialTxWioLTE
_PWM1_Set_Duty:
;__Lib_PWM_c2d4.c,41 :: 		
;__Lib_PWM_c2d4.c,45 :: 		
0xC604	0x50CB      	MOVF        PR2, 0 
0xC606	0x0F01      	ADDLW       1
0xC608	0x6E00      	MOVWF       R0 
0xC60A	0x6A01      	CLRF        R1 
0xC60C	0x0E00      	MOVLW       0
0xC60E	0x2201      	ADDWFC      R1, 1 
0xC610	0xF004C1F7  	MOVFF       FARG_PWM1_Set_Duty_new_duty, R4
0xC614	0x0E00      	MOVLW       0
0xC616	0x6E05      	MOVWF       R5 
0xC618	0xF04DEC82  	CALL        _Mul_16x16_U, 0
0xC61C	0x0E06      	MOVLW       6
0xC61E	0x6E02      	MOVWF       R2 
0xC620	0xF004C000  	MOVFF       R0, R4
0xC624	0xF005C001  	MOVFF       R1, R5
0xC628	0x5002      	MOVF        R2, 0 
L__PWM1_Set_Duty10:
0xC62A	0xE005      	BZ          L__PWM1_Set_Duty11
0xC62C	0x3205      	RRCF        R5, 1 
0xC62E	0x3204      	RRCF        R4, 1 
0xC630	0x9E05      	BCF         R5, 7 
0xC632	0x0FFF      	ADDLW       255
0xC634	0xD7FA      	BRA         L__PWM1_Set_Duty10
L__PWM1_Set_Duty11:
;__Lib_PWM_c2d4.c,46 :: 		
0xC636	0x0E04      	MOVLW       4
0xC638	0x6E01      	MOVWF       R1 
0xC63A	0xF000C004  	MOVFF       R4, R0
0xC63E	0x5001      	MOVF        R1, 0 
L__PWM1_Set_Duty12:
0xC640	0xE004      	BZ          L__PWM1_Set_Duty13
0xC642	0x3600      	RLCF        R0, 1 
0xC644	0x9000      	BCF         R0, 0 
0xC646	0x0FFF      	ADDLW       255
0xC648	0xD7FB      	BRA         L__PWM1_Set_Duty12
L__PWM1_Set_Duty13:
0xC64A	0x0E30      	MOVLW       48
0xC64C	0x1400      	ANDWF       R0, 0 
0xC64E	0x6E03      	MOVWF       R3 
;__Lib_PWM_c2d4.c,47 :: 		
0xC650	0xF000C004  	MOVFF       R4, R0
0xC654	0xF001C005  	MOVFF       R5, R1
0xC658	0x3201      	RRCF        R1, 1 
0xC65A	0x3200      	RRCF        R0, 1 
0xC65C	0x9E01      	BCF         R1, 7 
0xC65E	0x3201      	RRCF        R1, 1 
0xC660	0x3200      	RRCF        R0, 1 
0xC662	0x9E01      	BCF         R1, 7 
0xC664	0xFFBEC000  	MOVFF       R0, CCPR1L
;__Lib_PWM_c2d4.c,48 :: 		
0xC668	0x0E0F      	MOVLW       15
0xC66A	0x16BD      	ANDWF       CCP1CON, 1 
;__Lib_PWM_c2d4.c,49 :: 		
0xC66C	0x5003      	MOVF        R3, 0 
0xC66E	0x12BD      	IORWF       CCP1CON, 1 
;__Lib_PWM_c2d4.c,50 :: 		
L_end_PWM1_Set_Duty:
0xC670	0x0012      	RETURN      0
; end of _PWM1_Set_Duty
_indicadorSensores:
;MyProject.c,846 :: 		void indicadorSensores(){
;MyProject.c,847 :: 		estado1 = SENSOR1;
0xC672	0x0E00      	MOVLW       0
0xC674	0xB881      	BTFSC       PORTB, 4 
0xC676	0x0E01      	MOVLW       1
0xC678	0x0101      	MOVLB       1
0xC67A	0x6F4B      	MOVWF       _estado1, 1
;MyProject.c,848 :: 		estado2 = SENSOR2;
0xC67C	0x0E00      	MOVLW       0
0xC67E	0xB883      	BTFSC       PORTD, 4 
0xC680	0x0E01      	MOVLW       1
0xC682	0x6F96      	MOVWF       _estado2, 1
;MyProject.c,849 :: 		estado3 = SENSOR3;
0xC684	0x0E00      	MOVLW       0
0xC686	0xB481      	BTFSC       PORTB, 2 
0xC688	0x0E01      	MOVLW       1
0xC68A	0x6F95      	MOVWF       _estado3, 1
;MyProject.c,850 :: 		estado4 = SENSOR4;
0xC68C	0x0E00      	MOVLW       0
0xC68E	0xB681      	BTFSC       PORTB, 3 
0xC690	0x0E01      	MOVLW       1
0xC692	0x6F97      	MOVWF       _estado4, 1
;MyProject.c,851 :: 		estado5 = SENSOR5;
0xC694	0x0E00      	MOVLW       0
0xC696	0xB081      	BTFSC       PORTB, 0 
0xC698	0x0E01      	MOVLW       1
0xC69A	0x6F99      	MOVWF       _estado5, 1
;MyProject.c,852 :: 		estado6 = SENSOR6;
0xC69C	0x0E00      	MOVLW       0
0xC69E	0xB281      	BTFSC       PORTB, 1 
0xC6A0	0x0E01      	MOVLW       1
0xC6A2	0x6F98      	MOVWF       _estado6, 1
;MyProject.c,854 :: 		bytetostr(estado1, aux1);
0xC6A4	0xF236C14B  	MOVFF       _estado1, FARG_ByteToStr_input
0xC6A8	0x0E65      	MOVLW       _Aux1
0xC6AA	0x0102      	MOVLB       2
0xC6AC	0x6F37      	MOVWF       FARG_ByteToStr_output, 1
0xC6AE	0x0E01      	MOVLW       hi_addr(_Aux1)
0xC6B0	0x6F38      	MOVWF       FARG_ByteToStr_output+1, 1
0xC6B2	0xF004EC53  	CALL        _ByteToStr, 0
;MyProject.c,855 :: 		bytetostr(estado2, aux2);
0xC6B6	0xF236C196  	MOVFF       _estado2, FARG_ByteToStr_input
0xC6BA	0x0E59      	MOVLW       _Aux2
0xC6BC	0x6F37      	MOVWF       FARG_ByteToStr_output, 1
0xC6BE	0x0E01      	MOVLW       hi_addr(_Aux2)
0xC6C0	0x6F38      	MOVWF       FARG_ByteToStr_output+1, 1
0xC6C2	0xF004EC53  	CALL        _ByteToStr, 0
;MyProject.c,856 :: 		bytetostr(estado3, aux3);
0xC6C6	0xF236C195  	MOVFF       _estado3, FARG_ByteToStr_input
0xC6CA	0x0E71      	MOVLW       _Aux3
0xC6CC	0x6F37      	MOVWF       FARG_ByteToStr_output, 1
0xC6CE	0x0E01      	MOVLW       hi_addr(_Aux3)
0xC6D0	0x6F38      	MOVWF       FARG_ByteToStr_output+1, 1
0xC6D2	0xF004EC53  	CALL        _ByteToStr, 0
;MyProject.c,857 :: 		bytetostr(estado4, aux4);
0xC6D6	0xF236C197  	MOVFF       _estado4, FARG_ByteToStr_input
0xC6DA	0x0E89      	MOVLW       _Aux4
0xC6DC	0x6F37      	MOVWF       FARG_ByteToStr_output, 1
0xC6DE	0x0E01      	MOVLW       hi_addr(_Aux4)
0xC6E0	0x6F38      	MOVWF       FARG_ByteToStr_output+1, 1
0xC6E2	0xF004EC53  	CALL        _ByteToStr, 0
;MyProject.c,858 :: 		bytetostr(estado5, aux5);
0xC6E6	0xF236C199  	MOVFF       _estado5, FARG_ByteToStr_input
0xC6EA	0x0E7D      	MOVLW       _Aux5
0xC6EC	0x6F37      	MOVWF       FARG_ByteToStr_output, 1
0xC6EE	0x0E01      	MOVLW       hi_addr(_Aux5)
0xC6F0	0x6F38      	MOVWF       FARG_ByteToStr_output+1, 1
0xC6F2	0xF004EC53  	CALL        _ByteToStr, 0
;MyProject.c,859 :: 		bytetostr(estado6, aux6);
0xC6F6	0xF236C198  	MOVFF       _estado6, FARG_ByteToStr_input
0xC6FA	0x0ED2      	MOVLW       _Aux6
0xC6FC	0x6F37      	MOVWF       FARG_ByteToStr_output, 1
0xC6FE	0x0E00      	MOVLW       hi_addr(_Aux6)
0xC700	0x6F38      	MOVWF       FARG_ByteToStr_output+1, 1
0xC702	0xF004EC53  	CALL        _ByteToStr, 0
;MyProject.c,861 :: 		lcd_out(1,5,aux1);
0xC706	0x0E01      	MOVLW       1
0xC708	0x6F36      	MOVWF       FARG_lcd_out_fila, 1
0xC70A	0x0E05      	MOVLW       5
0xC70C	0x6F37      	MOVWF       FARG_lcd_out_col, 1
0xC70E	0x0E65      	MOVLW       _Aux1
0xC710	0x6F38      	MOVWF       FARG_lcd_out_texto, 1
0xC712	0x0E01      	MOVLW       hi_addr(_Aux1)
0xC714	0x6F39      	MOVWF       FARG_lcd_out_texto+1, 1
0xC716	0xF002EC75  	CALL        _lcd_out, 0
;MyProject.c,862 :: 		lcd_outConst(1,5,"1:");
0xC71A	0x0E01      	MOVLW       1
0xC71C	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0xC71E	0x0E05      	MOVLW       5
0xC720	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0xC722	0x0E41      	MOVLW       ?lstr_135_MyProject
0xC724	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0xC726	0x0EDB      	MOVLW       hi_addr(?lstr_135_MyProject)
0xC728	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0xC72A	0x0E00      	MOVLW       higher_addr(?lstr_135_MyProject)
0xC72C	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0xC72E	0xF001EC16  	CALL        _lcd_outConst, 0
;MyProject.c,863 :: 		lcd_out(1,1,aux2);
0xC732	0x0E01      	MOVLW       1
0xC734	0x6F36      	MOVWF       FARG_lcd_out_fila, 1
0xC736	0x0E01      	MOVLW       1
0xC738	0x6F37      	MOVWF       FARG_lcd_out_col, 1
0xC73A	0x0E59      	MOVLW       _Aux2
0xC73C	0x6F38      	MOVWF       FARG_lcd_out_texto, 1
0xC73E	0x0E01      	MOVLW       hi_addr(_Aux2)
0xC740	0x6F39      	MOVWF       FARG_lcd_out_texto+1, 1
0xC742	0xF002EC75  	CALL        _lcd_out, 0
;MyProject.c,864 :: 		lcd_outConst(1,1,"2:");
0xC746	0x0E01      	MOVLW       1
0xC748	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0xC74A	0x0E01      	MOVLW       1
0xC74C	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0xC74E	0x0E44      	MOVLW       ?lstr_136_MyProject
0xC750	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0xC752	0x0EDB      	MOVLW       hi_addr(?lstr_136_MyProject)
0xC754	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0xC756	0x0E00      	MOVLW       higher_addr(?lstr_136_MyProject)
0xC758	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0xC75A	0xF001EC16  	CALL        _lcd_outConst, 0
;MyProject.c,865 :: 		lcd_out(2,5,aux3);
0xC75E	0x0E02      	MOVLW       2
0xC760	0x6F36      	MOVWF       FARG_lcd_out_fila, 1
0xC762	0x0E05      	MOVLW       5
0xC764	0x6F37      	MOVWF       FARG_lcd_out_col, 1
0xC766	0x0E71      	MOVLW       _Aux3
0xC768	0x6F38      	MOVWF       FARG_lcd_out_texto, 1
0xC76A	0x0E01      	MOVLW       hi_addr(_Aux3)
0xC76C	0x6F39      	MOVWF       FARG_lcd_out_texto+1, 1
0xC76E	0xF002EC75  	CALL        _lcd_out, 0
;MyProject.c,866 :: 		lcd_outConst(2,5,"3:");
0xC772	0x0E02      	MOVLW       2
0xC774	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0xC776	0x0E05      	MOVLW       5
0xC778	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0xC77A	0x0E47      	MOVLW       ?lstr_137_MyProject
0xC77C	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0xC77E	0x0EDB      	MOVLW       hi_addr(?lstr_137_MyProject)
0xC780	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0xC782	0x0E00      	MOVLW       higher_addr(?lstr_137_MyProject)
0xC784	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0xC786	0xF001EC16  	CALL        _lcd_outConst, 0
;MyProject.c,867 :: 		lcd_out(2,1,aux4);
0xC78A	0x0E02      	MOVLW       2
0xC78C	0x6F36      	MOVWF       FARG_lcd_out_fila, 1
0xC78E	0x0E01      	MOVLW       1
0xC790	0x6F37      	MOVWF       FARG_lcd_out_col, 1
0xC792	0x0E89      	MOVLW       _Aux4
0xC794	0x6F38      	MOVWF       FARG_lcd_out_texto, 1
0xC796	0x0E01      	MOVLW       hi_addr(_Aux4)
0xC798	0x6F39      	MOVWF       FARG_lcd_out_texto+1, 1
0xC79A	0xF002EC75  	CALL        _lcd_out, 0
;MyProject.c,868 :: 		lcd_outConst(2,1,"4:");
0xC79E	0x0E02      	MOVLW       2
0xC7A0	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0xC7A2	0x0E01      	MOVLW       1
0xC7A4	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0xC7A6	0x0E38      	MOVLW       ?lstr_138_MyProject
0xC7A8	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0xC7AA	0x0EDB      	MOVLW       hi_addr(?lstr_138_MyProject)
0xC7AC	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0xC7AE	0x0E00      	MOVLW       higher_addr(?lstr_138_MyProject)
0xC7B0	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0xC7B2	0xF001EC16  	CALL        _lcd_outConst, 0
;MyProject.c,869 :: 		lcd_out(4,5,aux5);
0xC7B6	0x0E04      	MOVLW       4
0xC7B8	0x6F36      	MOVWF       FARG_lcd_out_fila, 1
0xC7BA	0x0E05      	MOVLW       5
0xC7BC	0x6F37      	MOVWF       FARG_lcd_out_col, 1
0xC7BE	0x0E7D      	MOVLW       _Aux5
0xC7C0	0x6F38      	MOVWF       FARG_lcd_out_texto, 1
0xC7C2	0x0E01      	MOVLW       hi_addr(_Aux5)
0xC7C4	0x6F39      	MOVWF       FARG_lcd_out_texto+1, 1
0xC7C6	0xF002EC75  	CALL        _lcd_out, 0
;MyProject.c,870 :: 		lcd_outConst(4,5,"5:");
0xC7CA	0x0E04      	MOVLW       4
0xC7CC	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0xC7CE	0x0E05      	MOVLW       5
0xC7D0	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0xC7D2	0x0E3B      	MOVLW       ?lstr_139_MyProject
0xC7D4	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0xC7D6	0x0EDB      	MOVLW       hi_addr(?lstr_139_MyProject)
0xC7D8	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0xC7DA	0x0E00      	MOVLW       higher_addr(?lstr_139_MyProject)
0xC7DC	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0xC7DE	0xF001EC16  	CALL        _lcd_outConst, 0
;MyProject.c,871 :: 		lcd_out(4,1,aux6);
0xC7E2	0x0E04      	MOVLW       4
0xC7E4	0x6F36      	MOVWF       FARG_lcd_out_fila, 1
0xC7E6	0x0E01      	MOVLW       1
0xC7E8	0x6F37      	MOVWF       FARG_lcd_out_col, 1
0xC7EA	0x0ED2      	MOVLW       _Aux6
0xC7EC	0x6F38      	MOVWF       FARG_lcd_out_texto, 1
0xC7EE	0x0E00      	MOVLW       hi_addr(_Aux6)
0xC7F0	0x6F39      	MOVWF       FARG_lcd_out_texto+1, 1
0xC7F2	0xF002EC75  	CALL        _lcd_out, 0
;MyProject.c,872 :: 		lcd_outConst(4,1,"6:");
0xC7F6	0x0E04      	MOVLW       4
0xC7F8	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0xC7FA	0x0E01      	MOVLW       1
0xC7FC	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0xC7FE	0x0E3E      	MOVLW       ?lstr_140_MyProject
0xC800	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0xC802	0x0EDB      	MOVLW       hi_addr(?lstr_140_MyProject)
0xC804	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0xC806	0x0E00      	MOVLW       higher_addr(?lstr_140_MyProject)
0xC808	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0xC80A	0xF001EC16  	CALL        _lcd_outConst, 0
;MyProject.c,873 :: 		}
L_end_indicadorSensores:
0xC80E	0x0012      	RETURN      0
; end of _indicadorSensores
_lcd_init:
;lcd_4x20.h,59 :: 		void lcd_init(){
;lcd_4x20.h,63 :: 		LCD_D4_Direction = 0;
0xC810	0x9892      	BCF         TRISA, 4 
;lcd_4x20.h,64 :: 		LCD_D5_Direction = 0;
0xC812	0x9492      	BCF         TRISA, 2 
;lcd_4x20.h,65 :: 		LCD_D6_Direction = 0;
0xC814	0x9292      	BCF         TRISA, 1 
;lcd_4x20.h,66 :: 		LCD_D7_Direction = 0;
0xC816	0x9092      	BCF         TRISA, 0 
;lcd_4x20.h,67 :: 		LCD_RS_Direction = 0;
0xC818	0x9496      	BCF         TRISE, 2 
;lcd_4x20.h,68 :: 		LCD_EN_Direction = 0;
0xC81A	0x9692      	BCF         TRISA, 3 
;lcd_4x20.h,71 :: 		LCD_RS = 0;
0xC81C	0x9484      	BCF         PORTE, 2 
;lcd_4x20.h,72 :: 		LCD_EN = 0;
0xC81E	0x9680      	BCF         PORTA, 3 
;lcd_4x20.h,74 :: 		delay_ms(15);
0xC820	0x0E62      	MOVLW       98
0xC822	0x6E0C      	MOVWF       R12, 0
0xC824	0x0E65      	MOVLW       101
0xC826	0x6E0D      	MOVWF       R13, 0
L_lcd_init4:
0xC828	0x2E0D      	DECFSZ      R13, 1, 0
0xC82A	0xD7FE      	BRA         L_lcd_init4
0xC82C	0x2E0C      	DECFSZ      R12, 1, 0
0xC82E	0xD7FC      	BRA         L_lcd_init4
0xC830	0x0000      	NOP
0xC832	0x0000      	NOP
;lcd_4x20.h,76 :: 		for(i = 0; i < 3; i++){
0xC834	0x0101      	MOVLB       1
0xC836	0x6BF7      	CLRF        lcd_init_i_L0, 1
L_lcd_init5:
0xC838	0x0E03      	MOVLW       3
0xC83A	0x5DF7      	SUBWF       lcd_init_i_L0, 0, 1
0xC83C	0xE211      	BC          L_lcd_init6
;lcd_4x20.h,77 :: 		lcd_send_nibble(0x03);
0xC83E	0x0E03      	MOVLW       3
0xC840	0x0102      	MOVLB       2
0xC842	0x6F54      	MOVWF       FARG_lcd_send_nibble_nibble, 1
0xC844	0xF000EC12  	CALL        _lcd_send_nibble, 0
;lcd_4x20.h,78 :: 		delay_ms(5);
0xC848	0x0E21      	MOVLW       33
0xC84A	0x6E0C      	MOVWF       R12, 0
0xC84C	0x0E76      	MOVLW       118
0xC84E	0x6E0D      	MOVWF       R13, 0
L_lcd_init8:
0xC850	0x2E0D      	DECFSZ      R13, 1, 0
0xC852	0xD7FE      	BRA         L_lcd_init8
0xC854	0x2E0C      	DECFSZ      R12, 1, 0
0xC856	0xD7FC      	BRA         L_lcd_init8
0xC858	0x0000      	NOP
;lcd_4x20.h,76 :: 		for(i = 0; i < 3; i++){
0xC85A	0x0101      	MOVLB       1
0xC85C	0x2BF7      	INCF        lcd_init_i_L0, 1, 1
;lcd_4x20.h,79 :: 		}
0xC85E	0xD7EC      	BRA         L_lcd_init5
L_lcd_init6:
;lcd_4x20.h,81 :: 		lcd_send_nibble(0x02);
0xC860	0x0E02      	MOVLW       2
0xC862	0x0102      	MOVLB       2
0xC864	0x6F54      	MOVWF       FARG_lcd_send_nibble_nibble, 1
0xC866	0xF000EC12  	CALL        _lcd_send_nibble, 0
;lcd_4x20.h,83 :: 		lcd_send_byte(0, 0x28);  //Set mode: 4-bit, 2+ lines, 5x8 dots
0xC86A	0x6B52      	CLRF        FARG_lcd_send_byte_address, 1
0xC86C	0x0E28      	MOVLW       40
0xC86E	0x6F53      	MOVWF       FARG_lcd_send_byte_enviar, 1
0xC870	0xF000EC30  	CALL        _lcd_send_byte, 0
;lcd_4x20.h,84 :: 		delay_ms(5);
0xC874	0x0E21      	MOVLW       33
0xC876	0x6E0C      	MOVWF       R12, 0
0xC878	0x0E76      	MOVLW       118
0xC87A	0x6E0D      	MOVWF       R13, 0
L_lcd_init9:
0xC87C	0x2E0D      	DECFSZ      R13, 1, 0
0xC87E	0xD7FE      	BRA         L_lcd_init9
0xC880	0x2E0C      	DECFSZ      R12, 1, 0
0xC882	0xD7FC      	BRA         L_lcd_init9
0xC884	0x0000      	NOP
;lcd_4x20.h,85 :: 		lcd_send_byte(0, 0x0C);  //Display on
0xC886	0x6B52      	CLRF        FARG_lcd_send_byte_address, 1
0xC888	0x0E0C      	MOVLW       12
0xC88A	0x6F53      	MOVWF       FARG_lcd_send_byte_enviar, 1
0xC88C	0xF000EC30  	CALL        _lcd_send_byte, 0
;lcd_4x20.h,86 :: 		delay_ms(5);
0xC890	0x0E21      	MOVLW       33
0xC892	0x6E0C      	MOVWF       R12, 0
0xC894	0x0E76      	MOVLW       118
0xC896	0x6E0D      	MOVWF       R13, 0
L_lcd_init10:
0xC898	0x2E0D      	DECFSZ      R13, 1, 0
0xC89A	0xD7FE      	BRA         L_lcd_init10
0xC89C	0x2E0C      	DECFSZ      R12, 1, 0
0xC89E	0xD7FC      	BRA         L_lcd_init10
0xC8A0	0x0000      	NOP
;lcd_4x20.h,87 :: 		lcd_send_byte(0, 0x01);  //Clear display
0xC8A2	0x6B52      	CLRF        FARG_lcd_send_byte_address, 1
0xC8A4	0x0E01      	MOVLW       1
0xC8A6	0x6F53      	MOVWF       FARG_lcd_send_byte_enviar, 1
0xC8A8	0xF000EC30  	CALL        _lcd_send_byte, 0
;lcd_4x20.h,88 :: 		delay_ms(5);
0xC8AC	0x0E21      	MOVLW       33
0xC8AE	0x6E0C      	MOVWF       R12, 0
0xC8B0	0x0E76      	MOVLW       118
0xC8B2	0x6E0D      	MOVWF       R13, 0
L_lcd_init11:
0xC8B4	0x2E0D      	DECFSZ      R13, 1, 0
0xC8B6	0xD7FE      	BRA         L_lcd_init11
0xC8B8	0x2E0C      	DECFSZ      R12, 1, 0
0xC8BA	0xD7FC      	BRA         L_lcd_init11
0xC8BC	0x0000      	NOP
;lcd_4x20.h,89 :: 		lcd_send_byte(0, 0x06);  //Increment cursor
0xC8BE	0x6B52      	CLRF        FARG_lcd_send_byte_address, 1
0xC8C0	0x0E06      	MOVLW       6
0xC8C2	0x6F53      	MOVWF       FARG_lcd_send_byte_enviar, 1
0xC8C4	0xF000EC30  	CALL        _lcd_send_byte, 0
;lcd_4x20.h,90 :: 		delay_ms(5);
0xC8C8	0x0E21      	MOVLW       33
0xC8CA	0x6E0C      	MOVWF       R12, 0
0xC8CC	0x0E76      	MOVLW       118
0xC8CE	0x6E0D      	MOVWF       R13, 0
L_lcd_init12:
0xC8D0	0x2E0D      	DECFSZ      R13, 1, 0
0xC8D2	0xD7FE      	BRA         L_lcd_init12
0xC8D4	0x2E0C      	DECFSZ      R12, 1, 0
0xC8D6	0xD7FC      	BRA         L_lcd_init12
0xC8D8	0x0000      	NOP
;lcd_4x20.h,91 :: 		}
L_end_lcd_init:
0xC8DA	0x0012      	RETURN      0
; end of _lcd_init
_Soft_UART_Init:
;__Lib_SoftUART.c,152 :: 		
;__Lib_SoftUART.c,156 :: 		
0xC8DC	0xF1D7C1F7  	MOVFF       FARG_Soft_UART_Init_port, __Lib_SoftUART__port_addr
0xC8E0	0xF1D8C1F8  	MOVFF       FARG_Soft_UART_Init_port+1, __Lib_SoftUART__port_addr+1
;__Lib_SoftUART.c,157 :: 		
0xC8E4	0xF000C1F9  	MOVFF       FARG_Soft_UART_Init_rx_pin, R0
0xC8E8	0x0E01      	MOVLW       1
0xC8EA	0x6E02      	MOVWF       R2 
0xC8EC	0x5000      	MOVF        R0, 0 
L__Soft_UART_Init32:
0xC8EE	0xE004      	BZ          L__Soft_UART_Init33
0xC8F0	0x3602      	RLCF        R2, 1 
0xC8F2	0x9002      	BCF         R2, 0 
0xC8F4	0x0FFF      	ADDLW       255
0xC8F6	0xD7FB      	BRA         L__Soft_UART_Init32
L__Soft_UART_Init33:
0xC8F8	0xF1D6C002  	MOVFF       R2, __Lib_SoftUART__rx_mask1
;__Lib_SoftUART.c,158 :: 		
0xC8FC	0x1C02      	COMF        R2, 0 
0xC8FE	0x0101      	MOVLB       1
0xC900	0x6FD9      	MOVWF       __Lib_SoftUART__rx_mask0, 1
;__Lib_SoftUART.c,159 :: 		
0xC902	0xF001C1FA  	MOVFF       FARG_Soft_UART_Init_tx_pin, R1
0xC906	0x0E01      	MOVLW       1
0xC908	0x6E00      	MOVWF       R0 
0xC90A	0x5001      	MOVF        R1, 0 
L__Soft_UART_Init34:
0xC90C	0xE004      	BZ          L__Soft_UART_Init35
0xC90E	0x3600      	RLCF        R0, 1 
0xC910	0x9000      	BCF         R0, 0 
0xC912	0x0FFF      	ADDLW       255
0xC914	0xD7FB      	BRA         L__Soft_UART_Init34
L__Soft_UART_Init35:
0xC916	0x0101      	MOVLB       1
0xC918	0xF1DBC000  	MOVFF       R0, __Lib_SoftUART__tx_mask1
;__Lib_SoftUART.c,160 :: 		
0xC91C	0x1E00      	COMF        R0, 1 
0xC91E	0xF1DAC000  	MOVFF       R0, __Lib_SoftUART__tx_mask0
;__Lib_SoftUART.c,163 :: 		
0xC922	0x0E12      	MOVLW       18
0xC924	0x25F7      	ADDWF       FARG_Soft_UART_Init_port, 0, 1
0xC926	0x6EE9      	MOVWF       FSR0L 
0xC928	0x0E00      	MOVLW       0
0xC92A	0x21F8      	ADDWFC      FARG_Soft_UART_Init_port+1, 0, 1
0xC92C	0x6EEA      	MOVWF       FSR0H 
;__Lib_SoftUART.c,164 :: 		
0xC92E	0x5002      	MOVF        R2, 0 
0xC930	0x12EF      	IORWF       INDF0, 1 
;__Lib_SoftUART.c,167 :: 		
0xC932	0x5000      	MOVF        R0, 0 
0xC934	0x16EF      	ANDWF       INDF0, 1 
;__Lib_SoftUART.c,169 :: 		
0xC936	0x6BD5      	CLRF        __Lib_SoftUART_InvertMaskRd, 1
;__Lib_SoftUART.c,170 :: 		
0xC938	0x53FF      	MOVF        FARG_Soft_UART_Init_inverted, 1, 1
0xC93A	0xA4D8      	BTFSS       STATUS, 2 
;__Lib_SoftUART.c,171 :: 		
0xC93C	0x1FD5      	COMF        __Lib_SoftUART_InvertMaskRd, 1, 1
L_Soft_UART_Init21:
;__Lib_SoftUART.c,174 :: 		
0xC93E	0x0E12      	MOVLW       18
0xC940	0x5EE9      	SUBWF       FSR0L, 1 
;__Lib_SoftUART.c,175 :: 		
0xC942	0x51D5      	MOVF        __Lib_SoftUART_InvertMaskRd, 0, 1
0xC944	0x0A00      	XORLW       0
0xC946	0xE003      	BZ          L_Soft_UART_Init22
;__Lib_SoftUART.c,177 :: 		
0xC948	0x51DA      	MOVF        __Lib_SoftUART__tx_mask0, 0, 1
0xC94A	0x16EF      	ANDWF       INDF0, 1 
0xC94C	0xD002      	BRA         L_Soft_UART_Init23
L_Soft_UART_Init22:
;__Lib_SoftUART.c,180 :: 		
0xC94E	0x51DB      	MOVF        __Lib_SoftUART__tx_mask1, 0, 1
0xC950	0x12EF      	IORWF       INDF0, 1 
L_Soft_UART_Init23:
;__Lib_SoftUART.c,182 :: 		
0xC952	0xF04DEC1E  	CALL        _Get_Fosc_kHz, 0
0xC956	0x0EE8      	MOVLW       232
0xC958	0x6E04      	MOVWF       R4 
0xC95A	0x0E03      	MOVLW       3
0xC95C	0x6E05      	MOVWF       R5 
0xC95E	0x0E00      	MOVLW       0
0xC960	0x6E06      	MOVWF       R6 
0xC962	0x6E07      	MOVWF       R7 
0xC964	0xF04DEC59  	CALL        _Mul_32x32_U, 0
0xC968	0xF201C000  	MOVFF       R0, Soft_UART_Init_q1_L0
0xC96C	0xF202C001  	MOVFF       R1, Soft_UART_Init_q1_L0+1
0xC970	0xF203C002  	MOVFF       R2, Soft_UART_Init_q1_L0+2
0xC974	0xF204C003  	MOVFF       R3, Soft_UART_Init_q1_L0+3
;__Lib_SoftUART.c,183 :: 		
0xC978	0xF000C1FB  	MOVFF       FARG_Soft_UART_Init_baud_rate, R0
0xC97C	0xF001C1FC  	MOVFF       FARG_Soft_UART_Init_baud_rate+1, R1
0xC980	0xF002C1FD  	MOVFF       FARG_Soft_UART_Init_baud_rate+2, R2
0xC984	0xF003C1FE  	MOVFF       FARG_Soft_UART_Init_baud_rate+3, R3
0xC988	0x3600      	RLCF        R0, 1 
0xC98A	0x9000      	BCF         R0, 0 
0xC98C	0x3601      	RLCF        R1, 1 
0xC98E	0x3602      	RLCF        R2, 1 
0xC990	0x3603      	RLCF        R3, 1 
0xC992	0x3600      	RLCF        R0, 1 
0xC994	0x9000      	BCF         R0, 0 
0xC996	0x3601      	RLCF        R1, 1 
0xC998	0x3602      	RLCF        R2, 1 
0xC99A	0x3603      	RLCF        R3, 1 
0xC99C	0x0E0A      	MOVLW       10
0xC99E	0x6E04      	MOVWF       R4 
0xC9A0	0x0E00      	MOVLW       0
0xC9A2	0x6E05      	MOVWF       R5 
0xC9A4	0x6E06      	MOVWF       R6 
0xC9A6	0x6E07      	MOVWF       R7 
0xC9A8	0xF04DEC59  	CALL        _Mul_32x32_U, 0
0xC9AC	0xF205C000  	MOVFF       R0, Soft_UART_Init_q2_L0
0xC9B0	0xF206C001  	MOVFF       R1, Soft_UART_Init_q2_L0+1
0xC9B4	0xF207C002  	MOVFF       R2, Soft_UART_Init_q2_L0+2
0xC9B8	0xF208C003  	MOVFF       R3, Soft_UART_Init_q2_L0+3
;__Lib_SoftUART.c,186 :: 		
0xC9BC	0xF004C000  	MOVFF       R0, R4
0xC9C0	0xF005C001  	MOVFF       R1, R5
0xC9C4	0xF006C002  	MOVFF       R2, R6
0xC9C8	0xF007C003  	MOVFF       R3, R7
0xC9CC	0xF000C201  	MOVFF       Soft_UART_Init_q1_L0, R0
0xC9D0	0xF001C202  	MOVFF       Soft_UART_Init_q1_L0+1, R1
0xC9D4	0xF002C203  	MOVFF       Soft_UART_Init_q1_L0+2, R2
0xC9D8	0xF003C204  	MOVFF       Soft_UART_Init_q1_L0+3, R3
0xC9DC	0xF04DECFD  	CALL        _Div_32x32_S, 0
0xC9E0	0xF209C000  	MOVFF       R0, Soft_UART_Init_temp_word_L0
0xC9E4	0xF20AC001  	MOVFF       R1, Soft_UART_Init_temp_word_L0+1
;__Lib_SoftUART.c,187 :: 		
0xC9E8	0xF004C001  	MOVFF       R1, R4
0xC9EC	0x6A05      	CLRF        R5 
0xC9EE	0x5004      	MOVF        R4, 0 
0xC9F0	0x1005      	IORWF       R5, 0 
0xC9F2	0xE003      	BZ          L_Soft_UART_Init24
;__Lib_SoftUART.c,188 :: 		
0xC9F4	0x0E02      	MOVLW       2
0xC9F6	0x6E00      	MOVWF       R0 
0xC9F8	0xD052      	BRA         L_end_Soft_UART_Init
L_Soft_UART_Init24:
;__Lib_SoftUART.c,190 :: 		
0xC9FA	0xF1CBC209  	MOVFF       Soft_UART_Init_temp_word_L0, __Lib_SoftUART_FullBit
;__Lib_SoftUART.c,191 :: 		
0xC9FE	0xF004C205  	MOVFF       Soft_UART_Init_q2_L0, R4
0xCA02	0xF005C206  	MOVFF       Soft_UART_Init_q2_L0+1, R5
0xCA06	0xF006C207  	MOVFF       Soft_UART_Init_q2_L0+2, R6
0xCA0A	0xF007C208  	MOVFF       Soft_UART_Init_q2_L0+3, R7
0xCA0E	0xF000C201  	MOVFF       Soft_UART_Init_q1_L0, R0
0xCA12	0xF001C202  	MOVFF       Soft_UART_Init_q1_L0+1, R1
0xCA16	0xF002C203  	MOVFF       Soft_UART_Init_q1_L0+2, R2
0xCA1A	0xF003C204  	MOVFF       Soft_UART_Init_q1_L0+3, R3
0xCA1E	0xF04DECFD  	CALL        _Div_32x32_S, 0
0xCA22	0xF000C008  	MOVFF       R8, R0
0xCA26	0xF001C009  	MOVFF       R9, R1
0xCA2A	0xF002C00A  	MOVFF       R10, R2
0xCA2E	0xF003C00B  	MOVFF       R11, R3
0xCA32	0xF201C000  	MOVFF       R0, Soft_UART_Init_q1_L0
0xCA36	0xF202C001  	MOVFF       R1, Soft_UART_Init_q1_L0+1
0xCA3A	0xF203C002  	MOVFF       R2, Soft_UART_Init_q1_L0+2
0xCA3E	0xF204C003  	MOVFF       R3, Soft_UART_Init_q1_L0+3
;__Lib_SoftUART.c,193 :: 		
0xCA42	0xF005C205  	MOVFF       Soft_UART_Init_q2_L0, R5
0xCA46	0xF006C206  	MOVFF       Soft_UART_Init_q2_L0+1, R6
0xCA4A	0xF007C207  	MOVFF       Soft_UART_Init_q2_L0+2, R7
0xCA4E	0xF008C208  	MOVFF       Soft_UART_Init_q2_L0+3, R8
0xCA52	0x3208      	RRCF        R8, 1 
0xCA54	0x3207      	RRCF        R7, 1 
0xCA56	0x3206      	RRCF        R6, 1 
0xCA58	0x3205      	RRCF        R5, 1 
0xCA5A	0x9E08      	BCF         R8, 7 
0xCA5C	0xBC08      	BTFSC       R8, 6 
0xCA5E	0x8E08      	BSF         R8, 7 
0xCA60	0x0E80      	MOVLW       128
0xCA62	0x1808      	XORWF       R8, 0 
0xCA64	0x6E04      	MOVWF       R4 
0xCA66	0x0E80      	MOVLW       128
0xCA68	0x1803      	XORWF       R3, 0 
0xCA6A	0x5C04      	SUBWF       R4, 0 
0xCA6C	0xE108      	BNZ         L__Soft_UART_Init36
0xCA6E	0x5002      	MOVF        R2, 0 
0xCA70	0x5C07      	SUBWF       R7, 0 
0xCA72	0xE105      	BNZ         L__Soft_UART_Init36
0xCA74	0x5001      	MOVF        R1, 0 
0xCA76	0x5C06      	SUBWF       R6, 0 
0xCA78	0xE102      	BNZ         L__Soft_UART_Init36
0xCA7A	0x5000      	MOVF        R0, 0 
0xCA7C	0x5C05      	SUBWF       R5, 0 
L__Soft_UART_Init36:
0xCA7E	0xE202      	BC          L_Soft_UART_Init25
;__Lib_SoftUART.c,194 :: 		
0xCA80	0x0101      	MOVLB       1
0xCA82	0x2BCB      	INCF        __Lib_SoftUART_FullBit, 1, 1
L_Soft_UART_Init25:
;__Lib_SoftUART.c,196 :: 		
0xCA84	0xF001C1CB  	MOVFF       __Lib_SoftUART_FullBit, R1
0xCA88	0x3201      	RRCF        R1, 1 
0xCA8A	0x9E01      	BCF         R1, 7 
0xCA8C	0xF1CAC001  	MOVFF       R1, __Lib_SoftUART_HalfBit
;__Lib_SoftUART.c,198 :: 		
0xCA90	0x0E07      	MOVLW       7
0xCA92	0x5C01      	SUBWF       R1, 0 
0xCA94	0xE203      	BC          L_Soft_UART_Init26
;__Lib_SoftUART.c,199 :: 		
0xCA96	0x0E01      	MOVLW       1
0xCA98	0x6E00      	MOVWF       R0 
0xCA9A	0xD001      	BRA         L_end_Soft_UART_Init
L_Soft_UART_Init26:
;__Lib_SoftUART.c,201 :: 		
0xCA9C	0x6A00      	CLRF        R0 
;__Lib_SoftUART.c,202 :: 		
L_end_Soft_UART_Init:
0xCA9E	0x0012      	RETURN      0
; end of _Soft_UART_Init
_TX_SLV:
;MyProject.c,445 :: 		void TX_SLV(){
;MyProject.c,446 :: 		if(EnvioCuenta){
0xCAA0	0x525C      	MOVF        _EnvioCuenta, 1 
0xCAA2	0xB4D8      	BTFSC       STATUS, 2 
0xCAA4	0xD089      	BRA         L_TX_SLV572
;MyProject.c,447 :: 		short i=0;
0xCAA6	0x0101      	MOVLB       1
0xCAA8	0x6BF7      	CLRF        TX_SLV_i_L1, 1
;MyProject.c,448 :: 		bufferEnvioEsclavo[0] = eepromLeeNumero(0x0009, 1);
0xCAAA	0x0E09      	MOVLW       9
0xCAAC	0x0102      	MOVLB       2
0xCAAE	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0xCAB0	0x0E00      	MOVLW       0
0xCAB2	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0xCAB4	0x0E01      	MOVLW       1
0xCAB6	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0xCAB8	0xF002EC92  	CALL        _eepromLeeNumero, 0
0xCABC	0xF05EC000  	MOVFF       R0, _bufferEnvioEsclavo
;MyProject.c,449 :: 		bufferEnvioEsclavo[1] = eepromLeeNumero(0x000A, 1);
0xCAC0	0x0E0A      	MOVLW       10
0xCAC2	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0xCAC4	0x0E00      	MOVLW       0
0xCAC6	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0xCAC8	0x0E01      	MOVLW       1
0xCACA	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0xCACC	0xF002EC92  	CALL        _eepromLeeNumero, 0
0xCAD0	0xF05FC000  	MOVFF       R0, _bufferEnvioEsclavo+1
;MyProject.c,450 :: 		bufferEnvioEsclavo[2] = eepromLeeNumero(0x000B, 1);
0xCAD4	0x0E0B      	MOVLW       11
0xCAD6	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0xCAD8	0x0E00      	MOVLW       0
0xCADA	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0xCADC	0x0E01      	MOVLW       1
0xCADE	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0xCAE0	0xF002EC92  	CALL        _eepromLeeNumero, 0
0xCAE4	0xF060C000  	MOVFF       R0, _bufferEnvioEsclavo+2
;MyProject.c,451 :: 		bufferEnvioEsclavo[3] = desbordoGPS_SLV;
0xCAE8	0xF061C06B  	MOVFF       _desbordoGPS_SLV, _bufferEnvioEsclavo+3
;MyProject.c,452 :: 		bufferEnvioEsclavo[4] = bufferEnvioEsclavo[0] + bufferEnvioEsclavo[1] + bufferEnvioEsclavo[2];
0xCAEC	0x505F      	MOVF        _bufferEnvioEsclavo+1, 0 
0xCAEE	0x245E      	ADDWF       _bufferEnvioEsclavo, 0 
0xCAF0	0x6E00      	MOVWF       R0 
0xCAF2	0x0100      	MOVLB       0
0xCAF4	0x5160      	MOVF        _bufferEnvioEsclavo+2, 0, 1
0xCAF6	0x2400      	ADDWF       R0, 0 
0xCAF8	0x6F62      	MOVWF       _bufferEnvioEsclavo+4, 1
;MyProject.c,453 :: 		bufferEnvioEsclavo[5] = eepromLeeNumero(0x0000, 1);
0xCAFA	0x0102      	MOVLB       2
0xCAFC	0x6B36      	CLRF        FARG_eepromLeeNumero_registro, 1
0xCAFE	0x6B37      	CLRF        FARG_eepromLeeNumero_registro+1, 1
0xCB00	0x0E01      	MOVLW       1
0xCB02	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0xCB04	0xF002EC92  	CALL        _eepromLeeNumero, 0
0xCB08	0xF063C000  	MOVFF       R0, _bufferEnvioEsclavo+5
;MyProject.c,454 :: 		bufferEnvioEsclavo[6] = eepromLeeNumero(0x0001, 1);
0xCB0C	0x0E01      	MOVLW       1
0xCB0E	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0xCB10	0x0E00      	MOVLW       0
0xCB12	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0xCB14	0x0E01      	MOVLW       1
0xCB16	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0xCB18	0xF002EC92  	CALL        _eepromLeeNumero, 0
0xCB1C	0xF064C000  	MOVFF       R0, _bufferEnvioEsclavo+6
;MyProject.c,455 :: 		bufferEnvioEsclavo[7] = eepromLeeNumero(0x0003, 1);
0xCB20	0x0E03      	MOVLW       3
0xCB22	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0xCB24	0x0E00      	MOVLW       0
0xCB26	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0xCB28	0x0E01      	MOVLW       1
0xCB2A	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0xCB2C	0xF002EC92  	CALL        _eepromLeeNumero, 0
0xCB30	0xF065C000  	MOVFF       R0, _bufferEnvioEsclavo+7
;MyProject.c,456 :: 		bufferEnvioEsclavo[8] = eepromLeeNumero(0x0004, 1);
0xCB34	0x0E04      	MOVLW       4
0xCB36	0x6F36      	MOVWF       FARG_eepromLeeNumero_registro, 1
0xCB38	0x0E00      	MOVLW       0
0xCB3A	0x6F37      	MOVWF       FARG_eepromLeeNumero_registro+1, 1
0xCB3C	0x0E01      	MOVLW       1
0xCB3E	0x6F38      	MOVWF       FARG_eepromLeeNumero_BYTES, 1
0xCB40	0xF002EC92  	CALL        _eepromLeeNumero, 0
0xCB44	0xF066C000  	MOVFF       R0, _bufferEnvioEsclavo+8
;MyProject.c,457 :: 		desbordoGPS_SLV = 0;
0xCB48	0x0100      	MOVLB       0
0xCB4A	0x6B6B      	CLRF        _desbordoGPS_SLV, 1
0xCB4C	0x6B6C      	CLRF        _desbordoGPS_SLV+1, 1
;MyProject.c,458 :: 		for( i=0 ; i<9; i++){
0xCB4E	0x0101      	MOVLB       1
0xCB50	0x6BF7      	CLRF        TX_SLV_i_L1, 1
L_TX_SLV573:
0xCB52	0x0E80      	MOVLW       128
0xCB54	0x19F7      	XORWF       TX_SLV_i_L1, 0, 1
0xCB56	0x6E00      	MOVWF       R0 
0xCB58	0x0E80      	MOVLW       128
0xCB5A	0x0A09      	XORLW       9
0xCB5C	0x5C00      	SUBWF       R0, 0 
0xCB5E	0xE21F      	BC          L_TX_SLV574
;MyProject.c,459 :: 		if(UART1_Tx_Idle() == true){
0xCB60	0xF04FEC3B  	CALL        _UART1_Tx_Idle, 0
0xCB64	0x5000      	MOVF        R0, 0 
0xCB66	0x0A01      	XORLW       1
0xCB68	0xE117      	BNZ         L_TX_SLV576
;MyProject.c,460 :: 		UART1_Write(bufferEnvioEsclavo[i]);
0xCB6A	0x0E5E      	MOVLW       _bufferEnvioEsclavo
0xCB6C	0x6EE9      	MOVWF       FSR0L 
0xCB6E	0x0E00      	MOVLW       hi_addr(_bufferEnvioEsclavo)
0xCB70	0x6EEA      	MOVWF       FSR0H 
0xCB72	0x51F7      	MOVF        TX_SLV_i_L1, 0, 1
0xCB74	0x26E9      	ADDWF       FSR0L, 1 
0xCB76	0x0E00      	MOVLW       0
0xCB78	0xBFF7      	BTFSC       TX_SLV_i_L1, 7, 1
0xCB7A	0x0EFF      	MOVLW       255
0xCB7C	0x22EA      	ADDWFC      FSR0H, 1 
0xCB7E	0xF214CFEE  	MOVFF       POSTINC0, FARG_UART1_Write_data_
0xCB82	0xF033EC44  	CALL        _UART1_Write, 0
;MyProject.c,461 :: 		delay_ms(5);
0xCB86	0x0E21      	MOVLW       33
0xCB88	0x6E0C      	MOVWF       R12, 0
0xCB8A	0x0E76      	MOVLW       118
0xCB8C	0x6E0D      	MOVWF       R13, 0
L_TX_SLV577:
0xCB8E	0x2E0D      	DECFSZ      R13, 1, 0
0xCB90	0xD7FE      	BRA         L_TX_SLV577
0xCB92	0x2E0C      	DECFSZ      R12, 1, 0
0xCB94	0xD7FC      	BRA         L_TX_SLV577
0xCB96	0x0000      	NOP
;MyProject.c,462 :: 		}
L_TX_SLV576:
;MyProject.c,458 :: 		for( i=0 ; i<9; i++){
0xCB98	0x0101      	MOVLB       1
0xCB9A	0x2BF7      	INCF        TX_SLV_i_L1, 1, 1
;MyProject.c,463 :: 		}
0xCB9C	0xD7DA      	BRA         L_TX_SLV573
L_TX_SLV574:
;MyProject.c,464 :: 		if(UART1_Tx_Idle() == true){
0xCB9E	0xF04FEC3B  	CALL        _UART1_Tx_Idle, 0
0xCBA2	0x5000      	MOVF        R0, 0 
0xCBA4	0x0A01      	XORLW       1
0xCBA6	0xE107      	BNZ         L_TX_SLV578
;MyProject.c,465 :: 		UART1_Write_Text("C.");
0xCBA8	0x0E68      	MOVLW       ?lstr121_MyProject
0xCBAA	0x0102      	MOVLB       2
0xCBAC	0x6F0B      	MOVWF       FARG_UART1_Write_Text_uart_text, 1
0xCBAE	0x0E00      	MOVLW       hi_addr(?lstr121_MyProject)
0xCBB0	0x6F0C      	MOVWF       FARG_UART1_Write_Text_uart_text+1, 1
0xCBB2	0xF050ECBF  	CALL        _UART1_Write_Text, 0
;MyProject.c,466 :: 		}
L_TX_SLV578:
;MyProject.c,467 :: 		EnvioCuenta = false;
0xCBB6	0x6A5C      	CLRF        _EnvioCuenta 
;MyProject.c,468 :: 		}
L_TX_SLV572:
;MyProject.c,469 :: 		}
L_end_TX_SLV:
0xCBB8	0x0012      	RETURN      0
; end of _TX_SLV
_resetCuentas:
;MyProject.c,810 :: 		void resetCuentas(){
;MyProject.c,812 :: 		short l = 0;
0xCBBA	0x0101      	MOVLB       1
0xCBBC	0x6BF7      	CLRF        resetCuentas_l_L0, 1
;MyProject.c,814 :: 		if(RESET_BOTON | resetWioLTE){
0xCBBE	0x6A00      	CLRF        R0 
0xCBC0	0xB283      	BTFSC       PORTD, 1 
0xCBC2	0x2A00      	INCF        R0, 1 
0xCBC4	0x5030      	MOVF        _resetWioLTE, 0 
0xCBC6	0x1200      	IORWF       R0, 1 
0xCBC8	0xB4D8      	BTFSC       STATUS, 2 
0xCBCA	0xD08B      	BRA         L_resetCuentas657
;MyProject.c,815 :: 		if(MSTR){
0xCBCC	0xA483      	BTFSS       PORTD, 2 
0xCBCE	0xD065      	BRA         L_resetCuentas658
;MyProject.c,816 :: 		if(UART1_Tx_Idle() == true){
0xCBD0	0xF04FEC3B  	CALL        _UART1_Tx_Idle, 0
0xCBD4	0x5000      	MOVF        R0, 0 
0xCBD6	0x0A01      	XORLW       1
0xCBD8	0xE107      	BNZ         L_resetCuentas659
;MyProject.c,817 :: 		UART1_Write_Text(solicitudReset);
0xCBDA	0x0E2D      	MOVLW       _solicitudReset
0xCBDC	0x0102      	MOVLB       2
0xCBDE	0x6F0B      	MOVWF       FARG_UART1_Write_Text_uart_text, 1
0xCBE0	0x0E00      	MOVLW       hi_addr(_solicitudReset)
0xCBE2	0x6F0C      	MOVWF       FARG_UART1_Write_Text_uart_text+1, 1
0xCBE4	0xF050ECBF  	CALL        _UART1_Write_Text, 0
;MyProject.c,818 :: 		}
L_resetCuentas659:
0xCBE8	0x0102      	MOVLB       2
;MyProject.c,819 :: 		eepromEscribeNumero(0x0000, 0x0000, 2);
0xCBEA	0x6B1D      	CLRF        FARG_eepromEscribeNumero_Registro, 1
0xCBEC	0x6B1E      	CLRF        FARG_eepromEscribeNumero_Registro+1, 1
0xCBEE	0x6B1F      	CLRF        FARG_eepromEscribeNumero_Dato, 1
0xCBF0	0x6B20      	CLRF        FARG_eepromEscribeNumero_Dato+1, 1
0xCBF2	0x6B21      	CLRF        FARG_eepromEscribeNumero_Dato+2, 1
0xCBF4	0x6B22      	CLRF        FARG_eepromEscribeNumero_Dato+3, 1
0xCBF6	0x0E02      	MOVLW       2
0xCBF8	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0xCBFA	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;MyProject.c,820 :: 		eepromEscribeNumero(0x0003, 0x0000, 2);
0xCBFE	0x0E03      	MOVLW       3
0xCC00	0x0102      	MOVLB       2
0xCC02	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0xCC04	0x0E00      	MOVLW       0
0xCC06	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0xCC08	0x6B1F      	CLRF        FARG_eepromEscribeNumero_Dato, 1
0xCC0A	0x6B20      	CLRF        FARG_eepromEscribeNumero_Dato+1, 1
0xCC0C	0x6B21      	CLRF        FARG_eepromEscribeNumero_Dato+2, 1
0xCC0E	0x6B22      	CLRF        FARG_eepromEscribeNumero_Dato+3, 1
0xCC10	0x0E02      	MOVLW       2
0xCC12	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0xCC14	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;MyProject.c,821 :: 		eepromEscribeNumero(0x0005, 0x0000, 2);
0xCC18	0x0E05      	MOVLW       5
0xCC1A	0x0102      	MOVLB       2
0xCC1C	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0xCC1E	0x0E00      	MOVLW       0
0xCC20	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0xCC22	0x6B1F      	CLRF        FARG_eepromEscribeNumero_Dato, 1
0xCC24	0x6B20      	CLRF        FARG_eepromEscribeNumero_Dato+1, 1
0xCC26	0x6B21      	CLRF        FARG_eepromEscribeNumero_Dato+2, 1
0xCC28	0x6B22      	CLRF        FARG_eepromEscribeNumero_Dato+3, 1
0xCC2A	0x0E02      	MOVLW       2
0xCC2C	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0xCC2E	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;MyProject.c,822 :: 		eepromEscribeNumero(0x0007, 0x0000, 2);
0xCC32	0x0E07      	MOVLW       7
0xCC34	0x0102      	MOVLB       2
0xCC36	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0xCC38	0x0E00      	MOVLW       0
0xCC3A	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0xCC3C	0x6B1F      	CLRF        FARG_eepromEscribeNumero_Dato, 1
0xCC3E	0x6B20      	CLRF        FARG_eepromEscribeNumero_Dato+1, 1
0xCC40	0x6B21      	CLRF        FARG_eepromEscribeNumero_Dato+2, 1
0xCC42	0x6B22      	CLRF        FARG_eepromEscribeNumero_Dato+3, 1
0xCC44	0x0E02      	MOVLW       2
0xCC46	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0xCC48	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;MyProject.c,823 :: 		eepromEscribeNumero(0x0009, 0x0000, 2);
0xCC4C	0x0E09      	MOVLW       9
0xCC4E	0x0102      	MOVLB       2
0xCC50	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0xCC52	0x0E00      	MOVLW       0
0xCC54	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0xCC56	0x6B1F      	CLRF        FARG_eepromEscribeNumero_Dato, 1
0xCC58	0x6B20      	CLRF        FARG_eepromEscribeNumero_Dato+1, 1
0xCC5A	0x6B21      	CLRF        FARG_eepromEscribeNumero_Dato+2, 1
0xCC5C	0x6B22      	CLRF        FARG_eepromEscribeNumero_Dato+3, 1
0xCC5E	0x0E02      	MOVLW       2
0xCC60	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0xCC62	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;MyProject.c,824 :: 		eepromEscribeNumero(0x000B, 0x00, 1);
0xCC66	0x0E0B      	MOVLW       11
0xCC68	0x0102      	MOVLB       2
0xCC6A	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0xCC6C	0x0E00      	MOVLW       0
0xCC6E	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0xCC70	0x6B1F      	CLRF        FARG_eepromEscribeNumero_Dato, 1
0xCC72	0x6B20      	CLRF        FARG_eepromEscribeNumero_Dato+1, 1
0xCC74	0x6B21      	CLRF        FARG_eepromEscribeNumero_Dato+2, 1
0xCC76	0x6B22      	CLRF        FARG_eepromEscribeNumero_Dato+3, 1
0xCC78	0x0E01      	MOVLW       1
0xCC7A	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0xCC7C	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;MyProject.c,825 :: 		eepromEscribeNumero(0x000C, 0x00, 1);
0xCC80	0x0E0C      	MOVLW       12
0xCC82	0x0102      	MOVLB       2
0xCC84	0x6F1D      	MOVWF       FARG_eepromEscribeNumero_Registro, 1
0xCC86	0x0E00      	MOVLW       0
0xCC88	0x6F1E      	MOVWF       FARG_eepromEscribeNumero_Registro+1, 1
0xCC8A	0x6B1F      	CLRF        FARG_eepromEscribeNumero_Dato, 1
0xCC8C	0x6B20      	CLRF        FARG_eepromEscribeNumero_Dato+1, 1
0xCC8E	0x6B21      	CLRF        FARG_eepromEscribeNumero_Dato+2, 1
0xCC90	0x6B22      	CLRF        FARG_eepromEscribeNumero_Dato+3, 1
0xCC92	0x0E01      	MOVLW       1
0xCC94	0x6F23      	MOVWF       FARG_eepromEscribeNumero_BYTES, 1
0xCC96	0xF00AEC1A  	CALL        _eepromEscribeNumero, 0
;MyProject.c,826 :: 		}
L_resetCuentas658:
;MyProject.c,827 :: 		for(l = 0; l < 8; l++){
0xCC9A	0x0101      	MOVLB       1
0xCC9C	0x6BF7      	CLRF        resetCuentas_l_L0, 1
L_resetCuentas660:
0xCC9E	0x0E80      	MOVLW       128
0xCCA0	0x19F7      	XORWF       resetCuentas_l_L0, 0, 1
0xCCA2	0x6E00      	MOVWF       R0 
0xCCA4	0x0E80      	MOVLW       128
0xCCA6	0x0A08      	XORLW       8
0xCCA8	0x5C00      	SUBWF       R0, 0 
0xCCAA	0xE211      	BC          L_resetCuentas661
;MyProject.c,828 :: 		Soft_UART_Write(respuestaReset[l]);
0xCCAC	0x0E31      	MOVLW       _respuestaReset
0xCCAE	0x6EE9      	MOVWF       FSR0L 
0xCCB0	0x0E00      	MOVLW       hi_addr(_respuestaReset)
0xCCB2	0x6EEA      	MOVWF       FSR0H 
0xCCB4	0x51F7      	MOVF        resetCuentas_l_L0, 0, 1
0xCCB6	0x26E9      	ADDWF       FSR0L, 1 
0xCCB8	0x0E00      	MOVLW       0
0xCCBA	0xBFF7      	BTFSC       resetCuentas_l_L0, 7, 1
0xCCBC	0x0EFF      	MOVLW       255
0xCCBE	0x22EA      	ADDWFC      FSR0H, 1 
0xCCC0	0xF200CFEE  	MOVFF       POSTINC0, FARG_Soft_UART_Write_udata
0xCCC4	0xF04EECF6  	CALL        _Soft_UART_Write, 0
;MyProject.c,827 :: 		for(l = 0; l < 8; l++){
0xCCC8	0x0101      	MOVLB       1
0xCCCA	0x2BF7      	INCF        resetCuentas_l_L0, 1, 1
;MyProject.c,829 :: 		}
0xCCCC	0xD7E8      	BRA         L_resetCuentas660
L_resetCuentas661:
;MyProject.c,830 :: 		soft_UART_Write(0x0D);
0xCCCE	0x0E0D      	MOVLW       13
0xCCD0	0x0102      	MOVLB       2
0xCCD2	0x6F00      	MOVWF       FARG_Soft_UART_Write_udata, 1
0xCCD4	0xF04EECF6  	CALL        _Soft_UART_Write, 0
;MyProject.c,831 :: 		soft_UART_Write(0x0A);
0xCCD8	0x0E0A      	MOVLW       10
0xCCDA	0x6F00      	MOVWF       FARG_Soft_UART_Write_udata, 1
0xCCDC	0xF04EECF6  	CALL        _Soft_UART_Write, 0
;MyProject.c,832 :: 		resetWioLTE = false;
0xCCE0	0x6A30      	CLRF        _resetWioLTE 
;MyProject.c,833 :: 		}
L_resetCuentas657:
;MyProject.c,834 :: 		}
L_end_resetCuentas:
0xCCE2	0x0012      	RETURN      0
; end of _resetCuentas
_PWM1_Init:
;__Lib_PWM_c2d4.c,34 :: 		
;__Lib_PWM_c2d4.c,35 :: 		
;__Lib_PWM_c2d4.c,36 :: 		
0xCCE4	0x6ABE      	CLRF        CCPR1L 
;__Lib_PWM_c2d4.c,37 :: 		
0xCCE6	0x98BD      	BCF         CCP1CON, 4 
;__Lib_PWM_c2d4.c,38 :: 		
0xCCE8	0x9ABD      	BCF         CCP1CON, 5 
;__Lib_PWM_c2d4.c,39 :: 		
L_end_PWM1_Init:
0xCCEA	0x0012      	RETURN      0
; end of _PWM1_Init
_desbordoTemporizadorCero:
;MyProject.c,776 :: 		void desbordoTemporizadorCero(){
;MyProject.c,778 :: 		if(INTCON.TMR0IF && INTCON.TMR0IE){
0xCCEC	0xA4F2      	BTFSS       INTCON, 2 
0xCCEE	0xD02E      	BRA         L_desbordoTemporizadorCero655
0xCCF0	0xAAF2      	BTFSS       INTCON, 5 
0xCCF2	0xD02C      	BRA         L_desbordoTemporizadorCero655
L__desbordoTemporizadorCero664:
;MyProject.c,780 :: 		cuentaUSART = cuentaUSART++;
0xCCF4	0x0100      	MOVLB       0
0xCCF6	0x2BDE      	INCF        _cuentaUSART, 1, 1
;MyProject.c,781 :: 		desbordoGPS = desbordoGPS++;
0xCCF8	0x4BE1      	INFSNZ      _desbordoGPS, 1, 1
0xCCFA	0x2BE2      	INCF        _desbordoGPS+1, 1, 1
;MyProject.c,782 :: 		conexionPoste = conexionPoste++;
0xCCFC	0x2B7F      	INCF        _conexionPoste, 1, 1
;MyProject.c,783 :: 		if(comienzaContarAtasco){
0xCCFE	0x53DF      	MOVF        _comienzaContarAtasco, 1, 1
0xCD00	0xA4D8      	BTFSS       STATUS, 2 
;MyProject.c,784 :: 		cuentaAtasco++;
0xCD02	0x2B81      	INCF        _cuentaAtasco, 1, 1
;MyProject.c,785 :: 		}
L_desbordoTemporizadorCero656:
;MyProject.c,793 :: 		bloqueos(SENSOR1, SENSOR2, SENSOR3, SENSOR4, SENSOR5, SENSOR6, &cuentaBloqueo);
0xCD04	0x0E00      	MOVLW       0
0xCD06	0xB881      	BTFSC       PORTB, 4 
0xCD08	0x0E01      	MOVLW       1
0xCD0A	0x0102      	MOVLB       2
0xCD0C	0x6F55      	MOVWF       FARG_bloqueos_SENSOR1, 1
0xCD0E	0x0E00      	MOVLW       0
0xCD10	0xB883      	BTFSC       PORTD, 4 
0xCD12	0x0E01      	MOVLW       1
0xCD14	0x6F56      	MOVWF       FARG_bloqueos_SENSOR2, 1
0xCD16	0x0E00      	MOVLW       0
0xCD18	0xB481      	BTFSC       PORTB, 2 
0xCD1A	0x0E01      	MOVLW       1
0xCD1C	0x6F57      	MOVWF       FARG_bloqueos_SENSOR3, 1
0xCD1E	0x0E00      	MOVLW       0
0xCD20	0xB681      	BTFSC       PORTB, 3 
0xCD22	0x0E01      	MOVLW       1
0xCD24	0x6F58      	MOVWF       FARG_bloqueos_SENSOR4, 1
0xCD26	0x0E00      	MOVLW       0
0xCD28	0xB081      	BTFSC       PORTB, 0 
0xCD2A	0x0E01      	MOVLW       1
0xCD2C	0x6F59      	MOVWF       FARG_bloqueos_SENSOR5, 1
0xCD2E	0x0E00      	MOVLW       0
0xCD30	0xB281      	BTFSC       PORTB, 1 
0xCD32	0x0E01      	MOVLW       1
0xCD34	0x6F5A      	MOVWF       FARG_bloqueos_SENSOR6, 1
0xCD36	0x0E58      	MOVLW       _cuentaBloqueo
0xCD38	0x6F5B      	MOVWF       FARG_bloqueos_cuentaBloqueo, 1
0xCD3A	0x0E01      	MOVLW       hi_addr(_cuentaBloqueo)
0xCD3C	0x6F5C      	MOVWF       FARG_bloqueos_cuentaBloqueo+1, 1
0xCD3E	0xF057ECD1  	CALL        _bloqueos, 0
;MyProject.c,795 :: 		INTCON.TMR0IF = 0;
0xCD42	0x94F2      	BCF         INTCON, 2 
;MyProject.c,798 :: 		TMR0L = 0x69;                             //1 segundo para el desbordo del contador
0xCD44	0x0E69      	MOVLW       105
0xCD46	0x6ED6      	MOVWF       TMR0L 
;MyProject.c,799 :: 		TMR0H = 0x67;
0xCD48	0x0E67      	MOVLW       103
0xCD4A	0x6ED7      	MOVWF       TMR0H 
;MyProject.c,800 :: 		}
L_desbordoTemporizadorCero655:
;MyProject.c,801 :: 		}
L_end_desbordoTemporizadorCero:
0xCD4C	0x0012      	RETURN      0
; end of _desbordoTemporizadorCero
_Soft_UART_Break:
;__Lib_SoftUART.c,37 :: 		
;__Lib_SoftUART.c,38 :: 		
0xCD4E	0x0101      	MOVLB       1
0xCD50	0x81CC      	BSF         __Lib_SoftUART___StopWaiting, BitPos(__Lib_SoftUART___StopWaiting+0), 1
;__Lib_SoftUART.c,39 :: 		
L_end_Soft_UART_Break:
0xCD52	0x0012      	RETURN      0
; end of _Soft_UART_Break
_RX_PIC_PIC:
;MyProject.c,603 :: 		void RX_PIC_PIC(){
;MyProject.c,604 :: 		if(MSTR){
0xCD54	0xA483      	BTFSS       PORTD, 2 
0xCD56	0xD06A      	BRA         L_RX_PIC_PIC616
;MyProject.c,605 :: 		if(k < 10){
0xCD58	0x0E80      	MOVLW       128
0xCD5A	0x0100      	MOVLB       0
0xCD5C	0x1980      	XORWF       _k, 0, 1
0xCD5E	0x6E00      	MOVWF       R0 
0xCD60	0x0E80      	MOVLW       128
0xCD62	0x0A0A      	XORLW       10
0xCD64	0x5C00      	SUBWF       R0, 0 
0xCD66	0xE262      	BC          L_RX_PIC_PIC617
;MyProject.c,606 :: 		if(k == 9){
0xCD68	0x5180      	MOVF        _k, 0, 1
0xCD6A	0x0A09      	XORLW       9
0xCD6C	0xE11F      	BNZ         L_RX_PIC_PIC618
;MyProject.c,607 :: 		UART1_Read_Text(confirmacionEsclavo, ".", 2);
0xCD6E	0x0E4B      	MOVLW       _confirmacionEsclavo
0xCD70	0x0102      	MOVLB       2
0xCD72	0x6F5F      	MOVWF       FARG_UART1_Read_Text_Output, 1
0xCD74	0x0E00      	MOVLW       hi_addr(_confirmacionEsclavo)
0xCD76	0x6F60      	MOVWF       FARG_UART1_Read_Text_Output+1, 1
0xCD78	0x0E7D      	MOVLW       ?lstr130_MyProject
0xCD7A	0x6F61      	MOVWF       FARG_UART1_Read_Text_Delimiter, 1
0xCD7C	0x0E00      	MOVLW       hi_addr(?lstr130_MyProject)
0xCD7E	0x6F62      	MOVWF       FARG_UART1_Read_Text_Delimiter+1, 1
0xCD80	0x0E02      	MOVLW       2
0xCD82	0x6F63      	MOVWF       FARG_UART1_Read_Text_Attempts, 1
0xCD84	0xF057EC82  	CALL        _UART1_Read_Text, 0
;MyProject.c,608 :: 		if(!strcmp(confirmacionEsclavo, "C")){
0xCD88	0x0E4B      	MOVLW       _confirmacionEsclavo
0xCD8A	0x6F5F      	MOVWF       FARG_strcmp_s1, 1
0xCD8C	0x0E00      	MOVLW       hi_addr(_confirmacionEsclavo)
0xCD8E	0x6F60      	MOVWF       FARG_strcmp_s1+1, 1
0xCD90	0x0E75      	MOVLW       ?lstr131_MyProject
0xCD92	0x6F61      	MOVWF       FARG_strcmp_s2, 1
0xCD94	0x0E00      	MOVLW       hi_addr(?lstr131_MyProject)
0xCD96	0x6F62      	MOVWF       FARG_strcmp_s2+1, 1
0xCD98	0xF057EC5C  	CALL        _strcmp, 0
0xCD9C	0x5000      	MOVF        R0, 0 
0xCD9E	0x1001      	IORWF       R1, 0 
0xCDA0	0xE103      	BNZ         L_RX_PIC_PIC619
;MyProject.c,609 :: 		conexionHabilitada = true;
0xCDA2	0x0E01      	MOVLW       1
0xCDA4	0x6E59      	MOVWF       _conexionHabilitada 
;MyProject.c,610 :: 		}
0xCDA6	0xD001      	BRA         L_RX_PIC_PIC620
L_RX_PIC_PIC619:
;MyProject.c,612 :: 		conexionHabilitada = false;
0xCDA8	0x6A59      	CLRF        _conexionHabilitada 
;MyProject.c,613 :: 		}
L_RX_PIC_PIC620:
;MyProject.c,614 :: 		}
0xCDAA	0xD02E      	BRA         L_RX_PIC_PIC621
L_RX_PIC_PIC618:
;MyProject.c,616 :: 		bufferRecepcionEsclavo[k] = UART1_Read();
0xCDAC	0x0E3E      	MOVLW       _bufferRecepcionEsclavo
0xCDAE	0x0102      	MOVLB       2
0xCDB0	0x6F5D      	MOVWF       FLOC__RX_PIC_PIC, 1
0xCDB2	0x0E01      	MOVLW       hi_addr(_bufferRecepcionEsclavo)
0xCDB4	0x6F5E      	MOVWF       FLOC__RX_PIC_PIC+1, 1
0xCDB6	0x0100      	MOVLB       0
0xCDB8	0x5180      	MOVF        _k, 0, 1
0xCDBA	0x0102      	MOVLB       2
0xCDBC	0x275D      	ADDWF       FLOC__RX_PIC_PIC, 1, 1
0xCDBE	0x0E00      	MOVLW       0
0xCDC0	0x0100      	MOVLB       0
0xCDC2	0xBF80      	BTFSC       _k, 7, 1
0xCDC4	0x0EFF      	MOVLW       255
0xCDC6	0x0102      	MOVLB       2
0xCDC8	0x235E      	ADDWFC      FLOC__RX_PIC_PIC+1, 1, 1
0xCDCA	0xF04DECEF  	CALL        _UART1_Read, 0
0xCDCE	0xFFE1C25D  	MOVFF       FLOC__RX_PIC_PIC, FSR1L
0xCDD2	0xFFE2C25E  	MOVFF       FLOC__RX_PIC_PIC+1, FSR1H
0xCDD6	0xFFE6C000  	MOVFF       R0, POSTINC1
;MyProject.c,617 :: 		checksum[k] = bufferRecepcionEsclavo[k];
0xCDDA	0x0E4E      	MOVLW       _checksum
0xCDDC	0x6EE1      	MOVWF       FSR1L 
0xCDDE	0x0E00      	MOVLW       hi_addr(_checksum)
0xCDE0	0x6EE2      	MOVWF       FSR1H 
0xCDE2	0x0100      	MOVLB       0
0xCDE4	0x5180      	MOVF        _k, 0, 1
0xCDE6	0x26E1      	ADDWF       FSR1L, 1 
0xCDE8	0x0E00      	MOVLW       0
0xCDEA	0xBF80      	BTFSC       _k, 7, 1
0xCDEC	0x0EFF      	MOVLW       255
0xCDEE	0x22E2      	ADDWFC      FSR1H, 1 
0xCDF0	0x0E3E      	MOVLW       _bufferRecepcionEsclavo
0xCDF2	0x6EE9      	MOVWF       FSR0L 
0xCDF4	0x0E01      	MOVLW       hi_addr(_bufferRecepcionEsclavo)
0xCDF6	0x6EEA      	MOVWF       FSR0H 
0xCDF8	0x5180      	MOVF        _k, 0, 1
0xCDFA	0x26E9      	ADDWF       FSR0L, 1 
0xCDFC	0x0E00      	MOVLW       0
0xCDFE	0xBF80      	BTFSC       _k, 7, 1
0xCE00	0x0EFF      	MOVLW       255
0xCE02	0x22EA      	ADDWFC      FSR0H, 1 
0xCE04	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
;MyProject.c,618 :: 		}
L_RX_PIC_PIC621:
0xCE08	0x0100      	MOVLB       0
;MyProject.c,619 :: 		k = k++;
0xCE0A	0x2B80      	INCF        _k, 1, 1
;MyProject.c,620 :: 		if(k > 9){
0xCE0C	0x0E80      	MOVLW       128
0xCE0E	0x0A09      	XORLW       9
0xCE10	0x6E00      	MOVWF       R0 
0xCE12	0x0E80      	MOVLW       128
0xCE14	0x1980      	XORWF       _k, 0, 1
0xCE16	0x5C00      	SUBWF       R0, 0 
0xCE18	0xE209      	BC          L_RX_PIC_PIC622
;MyProject.c,621 :: 		k = 0;
0xCE1A	0x6B80      	CLRF        _k, 1
;MyProject.c,622 :: 		checksum[5] = checksum[0] + checksum[1] + checksum[2];
0xCE1C	0x504F      	MOVF        _checksum+1, 0 
0xCE1E	0x244E      	ADDWF       _checksum, 0 
0xCE20	0x6E00      	MOVWF       R0 
0xCE22	0x5050      	MOVF        _checksum+2, 0 
0xCE24	0x2400      	ADDWF       R0, 0 
0xCE26	0x6E53      	MOVWF       _checksum+5 
;MyProject.c,623 :: 		banderaRx = true;
0xCE28	0x0E01      	MOVLW       1
0xCE2A	0x6E47      	MOVWF       _banderaRx 
;MyProject.c,624 :: 		}
L_RX_PIC_PIC622:
;MyProject.c,625 :: 		}
L_RX_PIC_PIC617:
;MyProject.c,626 :: 		}
L_RX_PIC_PIC616:
;MyProject.c,627 :: 		if(!MSTR){
0xCE2C	0xB483      	BTFSC       PORTD, 2 
0xCE2E	0xD02C      	BRA         L_RX_PIC_PIC623
;MyProject.c,628 :: 		UART1_Read_Text(solicitudMaestro, ".", 2);
0xCE30	0x0E6D      	MOVLW       _solicitudMaestro
0xCE32	0x0102      	MOVLB       2
0xCE34	0x6F5F      	MOVWF       FARG_UART1_Read_Text_Output, 1
0xCE36	0x0E00      	MOVLW       hi_addr(_solicitudMaestro)
0xCE38	0x6F60      	MOVWF       FARG_UART1_Read_Text_Output+1, 1
0xCE3A	0x0E77      	MOVLW       ?lstr132_MyProject
0xCE3C	0x6F61      	MOVWF       FARG_UART1_Read_Text_Delimiter, 1
0xCE3E	0x0E00      	MOVLW       hi_addr(?lstr132_MyProject)
0xCE40	0x6F62      	MOVWF       FARG_UART1_Read_Text_Delimiter+1, 1
0xCE42	0x0E02      	MOVLW       2
0xCE44	0x6F63      	MOVWF       FARG_UART1_Read_Text_Attempts, 1
0xCE46	0xF057EC82  	CALL        _UART1_Read_Text, 0
;MyProject.c,629 :: 		if(!strcmp(solicitudMaestro, "C")){
0xCE4A	0x0E6D      	MOVLW       _solicitudMaestro
0xCE4C	0x6F5F      	MOVWF       FARG_strcmp_s1, 1
0xCE4E	0x0E00      	MOVLW       hi_addr(_solicitudMaestro)
0xCE50	0x6F60      	MOVWF       FARG_strcmp_s1+1, 1
0xCE52	0x0E7B      	MOVLW       ?lstr133_MyProject
0xCE54	0x6F61      	MOVWF       FARG_strcmp_s2, 1
0xCE56	0x0E00      	MOVLW       hi_addr(?lstr133_MyProject)
0xCE58	0x6F62      	MOVWF       FARG_strcmp_s2+1, 1
0xCE5A	0xF057EC5C  	CALL        _strcmp, 0
0xCE5E	0x5000      	MOVF        R0, 0 
0xCE60	0x1001      	IORWF       R1, 0 
0xCE62	0xE102      	BNZ         L_RX_PIC_PIC624
;MyProject.c,630 :: 		EnvioCuenta = true;
0xCE64	0x0E01      	MOVLW       1
0xCE66	0x6E5C      	MOVWF       _EnvioCuenta 
;MyProject.c,631 :: 		}
L_RX_PIC_PIC624:
;MyProject.c,632 :: 		if(!strcmp(solicitudMaestro, "R")){
0xCE68	0x0E6D      	MOVLW       _solicitudMaestro
0xCE6A	0x0102      	MOVLB       2
0xCE6C	0x6F5F      	MOVWF       FARG_strcmp_s1, 1
0xCE6E	0x0E00      	MOVLW       hi_addr(_solicitudMaestro)
0xCE70	0x6F60      	MOVWF       FARG_strcmp_s1+1, 1
0xCE72	0x0E79      	MOVLW       ?lstr134_MyProject
0xCE74	0x6F61      	MOVWF       FARG_strcmp_s2, 1
0xCE76	0x0E00      	MOVLW       hi_addr(?lstr134_MyProject)
0xCE78	0x6F62      	MOVWF       FARG_strcmp_s2+1, 1
0xCE7A	0xF057EC5C  	CALL        _strcmp, 0
0xCE7E	0x5000      	MOVF        R0, 0 
0xCE80	0x1001      	IORWF       R1, 0 
0xCE82	0xE102      	BNZ         L_RX_PIC_PIC625
;MyProject.c,633 :: 		banderaReset =  true;
0xCE84	0x0E01      	MOVLW       1
0xCE86	0x6E5B      	MOVWF       _banderaReset 
;MyProject.c,634 :: 		}
L_RX_PIC_PIC625:
;MyProject.c,635 :: 		}
L_RX_PIC_PIC623:
;MyProject.c,636 :: 		}
L_end_RX_PIC_PIC:
0xCE88	0x0012      	RETURN      0
; end of _RX_PIC_PIC
_lcd_chr:
;lcd_4x20.h,111 :: 		void lcd_chr(char fila, char col, char c){
;lcd_4x20.h,112 :: 		lcd_gotoxy(fila, col);
0xCE8A	0xF250C1F3  	MOVFF       FARG_lcd_chr_fila, FARG_lcd_gotoxy_fila
0xCE8E	0xF251C1F4  	MOVFF       FARG_lcd_chr_col, FARG_lcd_gotoxy_col
0xCE92	0xF000ECEB  	CALL        _lcd_gotoxy, 0
;lcd_4x20.h,113 :: 		lcd_send_byte(1, c);
0xCE96	0x0E01      	MOVLW       1
0xCE98	0x6F52      	MOVWF       FARG_lcd_send_byte_address, 1
0xCE9A	0xF253C1F5  	MOVFF       FARG_lcd_chr_c, FARG_lcd_send_byte_enviar
0xCE9E	0xF000EC30  	CALL        _lcd_send_byte, 0
;lcd_4x20.h,114 :: 		}
L_end_lcd_chr:
0xCEA2	0x0012      	RETURN      0
; end of _lcd_chr
_Soft_UART_Read:
;__Lib_SoftUART.c,41 :: 		
;__Lib_SoftUART.c,44 :: 		
0xCEA4	0xFFE1C1F3  	MOVFF       FARG_Soft_UART_Read_error, FSR1L
0xCEA8	0xFFE2C1F4  	MOVFF       FARG_Soft_UART_Read_error+1, FSR1H
0xCEAC	0x6AE6      	CLRF        POSTINC1 
;__Lib_SoftUART.c,45 :: 		
0xCEAE	0x0E01      	MOVLW       1
0xCEB0	0x0101      	MOVLB       1
0xCEB2	0x6FF6      	MOVWF       Soft_UART_Read_mask_L0, 1
;__Lib_SoftUART.c,46 :: 		
0xCEB4	0x6BF5      	CLRF        Soft_UART_Read_result_L0, 1
;__Lib_SoftUART.c,48 :: 		
0xCEB6	0x91CC      	BCF         __Lib_SoftUART___StopWaiting, BitPos(__Lib_SoftUART___StopWaiting+0), 1
;__Lib_SoftUART.c,50 :: 		
0xCEB8	0xFFE9C1D7  	MOVFF       __Lib_SoftUART__port_addr, FSR0L
0xCEBC	0xFFEAC1D8  	MOVFF       __Lib_SoftUART__port_addr+1, FSR0H
;__Lib_SoftUART.c,53 :: 		
0xCEC0	0x51D5      	MOVF        __Lib_SoftUART_InvertMaskRd, 0, 1
0xCEC2	0x0A00      	XORLW       0
0xCEC4	0xE113      	BNZ         L_Soft_UART_Read0
;__Lib_SoftUART.c,55 :: 		
L_Soft_UART_Read1:
0xCEC6	0x51D6      	MOVF        __Lib_SoftUART__rx_mask1, 0, 1
0xCEC8	0x14EF      	ANDWF       INDF0, 0 
0xCECA	0x6E01      	MOVWF       R1 
0xCECC	0x5001      	MOVF        R1, 0 
0xCECE	0x0A00      	XORLW       0
0xCED0	0xE00C      	BZ          L_Soft_UART_Read2
;__Lib_SoftUART.c,56 :: 		
0xCED2	0xA1CC      	BTFSS       __Lib_SoftUART___StopWaiting, BitPos(__Lib_SoftUART___StopWaiting+0), 1
0xCED4	0xD009      	BRA         L_Soft_UART_Read3
;__Lib_SoftUART.c,57 :: 		
0xCED6	0xFFE1C1F3  	MOVFF       FARG_Soft_UART_Read_error, FSR1L
0xCEDA	0xFFE2C1F4  	MOVFF       FARG_Soft_UART_Read_error+1, FSR1H
0xCEDE	0x0EFF      	MOVLW       255
0xCEE0	0x6EE6      	MOVWF       POSTINC1 
;__Lib_SoftUART.c,58 :: 		
0xCEE2	0xF000C1F5  	MOVFF       Soft_UART_Read_result_L0, R0
0xCEE6	0xD05E      	BRA         L_end_Soft_UART_Read
;__Lib_SoftUART.c,59 :: 		
L_Soft_UART_Read3:
;__Lib_SoftUART.c,60 :: 		
0xCEE8	0xD7EE      	BRA         L_Soft_UART_Read1
L_Soft_UART_Read2:
0xCEEA	0xD012      	BRA         L_Soft_UART_Read4
L_Soft_UART_Read0:
;__Lib_SoftUART.c,63 :: 		
L_Soft_UART_Read5:
0xCEEC	0x51D6      	MOVF        __Lib_SoftUART__rx_mask1, 0, 1
0xCEEE	0x14EF      	ANDWF       INDF0, 0 
0xCEF0	0x6E01      	MOVWF       R1 
0xCEF2	0x5001      	MOVF        R1, 0 
0xCEF4	0x0A00      	XORLW       0
0xCEF6	0xE10C      	BNZ         L_Soft_UART_Read6
;__Lib_SoftUART.c,64 :: 		
0xCEF8	0xA1CC      	BTFSS       __Lib_SoftUART___StopWaiting, BitPos(__Lib_SoftUART___StopWaiting+0), 1
0xCEFA	0xD009      	BRA         L_Soft_UART_Read7
;__Lib_SoftUART.c,65 :: 		
0xCEFC	0xFFE1C1F3  	MOVFF       FARG_Soft_UART_Read_error, FSR1L
0xCF00	0xFFE2C1F4  	MOVFF       FARG_Soft_UART_Read_error+1, FSR1H
0xCF04	0x0EFF      	MOVLW       255
0xCF06	0x6EE6      	MOVWF       POSTINC1 
;__Lib_SoftUART.c,66 :: 		
0xCF08	0xF000C1F5  	MOVFF       Soft_UART_Read_result_L0, R0
0xCF0C	0xD04B      	BRA         L_end_Soft_UART_Read
;__Lib_SoftUART.c,67 :: 		
L_Soft_UART_Read7:
;__Lib_SoftUART.c,68 :: 		
0xCF0E	0xD7EE      	BRA         L_Soft_UART_Read5
L_Soft_UART_Read6:
L_Soft_UART_Read4:
;__Lib_SoftUART.c,70 :: 		
0xCF10	0xF214C1CA  	MOVFF       __Lib_SoftUART_HalfBit, FARG_Delay_Cyc_cycles_div_by_10
0xCF14	0xF039ECCE  	CALL        _Delay_Cyc, 0
;__Lib_SoftUART.c,71 :: 		
0xCF18	0xF214C1CB  	MOVFF       __Lib_SoftUART_FullBit, FARG_Delay_Cyc_cycles_div_by_10
0xCF1C	0xF039ECCE  	CALL        _Delay_Cyc, 0
;__Lib_SoftUART.c,74 :: 		
L_Soft_UART_Read8:
0xCF20	0x0101      	MOVLB       1
0xCF22	0x53F6      	MOVF        Soft_UART_Read_mask_L0, 1, 1
0xCF24	0xE017      	BZ          L_Soft_UART_Read9
;__Lib_SoftUART.c,76 :: 		
0xCF26	0x51D6      	MOVF        __Lib_SoftUART__rx_mask1, 0, 1
0xCF28	0x14EF      	ANDWF       INDF0, 0 
0xCF2A	0x6E01      	MOVWF       R1 
0xCF2C	0x5001      	MOVF        R1, 0 
0xCF2E	0x0A00      	XORLW       0
0xCF30	0xE002      	BZ          L_Soft_UART_Read10
;__Lib_SoftUART.c,77 :: 		
0xCF32	0x51F6      	MOVF        Soft_UART_Read_mask_L0, 0, 1
0xCF34	0x13F5      	IORWF       Soft_UART_Read_result_L0, 1, 1
L_Soft_UART_Read10:
;__Lib_SoftUART.c,78 :: 		
0xCF36	0x37F6      	RLCF        Soft_UART_Read_mask_L0, 1, 1
0xCF38	0x91F6      	BCF         Soft_UART_Read_mask_L0, 0, 1
;__Lib_SoftUART.c,81 :: 		
0xCF3A	0x0E02      	MOVLW       2
0xCF3C	0x5DCB      	SUBWF       __Lib_SoftUART_FullBit, 0, 1
0xCF3E	0x0102      	MOVLB       2
0xCF40	0x6F14      	MOVWF       FARG_Delay_Cyc_cycles_div_by_10, 1
0xCF42	0xF039ECCE  	CALL        _Delay_Cyc, 0
;__Lib_SoftUART.c,82 :: 		
0xCF46	0x0000      	NOP
;__Lib_SoftUART.c,83 :: 		
0xCF48	0x0000      	NOP
;__Lib_SoftUART.c,84 :: 		
0xCF4A	0x0000      	NOP
;__Lib_SoftUART.c,85 :: 		
0xCF4C	0x0000      	NOP
;__Lib_SoftUART.c,86 :: 		
0xCF4E	0x0000      	NOP
;__Lib_SoftUART.c,87 :: 		
0xCF50	0x0000      	NOP
;__Lib_SoftUART.c,88 :: 		
0xCF52	0xD7E6      	BRA         L_Soft_UART_Read8
L_Soft_UART_Read9:
;__Lib_SoftUART.c,91 :: 		
0xCF54	0x0101      	MOVLB       1
0xCF56	0x51D5      	MOVF        __Lib_SoftUART_InvertMaskRd, 0, 1
0xCF58	0x0A00      	XORLW       0
0xCF5A	0xE110      	BNZ         L_Soft_UART_Read11
;__Lib_SoftUART.c,93 :: 		
0xCF5C	0x51D6      	MOVF        __Lib_SoftUART__rx_mask1, 0, 1
0xCF5E	0x14EF      	ANDWF       INDF0, 0 
0xCF60	0x6E01      	MOVWF       R1 
0xCF62	0x5001      	MOVF        R1, 0 
0xCF64	0x0A00      	XORLW       0
0xCF66	0x0E01      	MOVLW       1
0xCF68	0xA4D8      	BTFSS       STATUS, 2 
0xCF6A	0x0E00      	MOVLW       0
0xCF6C	0x6E00      	MOVWF       R0 
0xCF6E	0xFFE1C1F3  	MOVFF       FARG_Soft_UART_Read_error, FSR1L
0xCF72	0xFFE2C1F4  	MOVFF       FARG_Soft_UART_Read_error+1, FSR1H
0xCF76	0xFFE6C000  	MOVFF       R0, POSTINC1
0xCF7A	0xD00F      	BRA         L_Soft_UART_Read12
L_Soft_UART_Read11:
;__Lib_SoftUART.c,96 :: 		
0xCF7C	0x51D6      	MOVF        __Lib_SoftUART__rx_mask1, 0, 1
0xCF7E	0x14EF      	ANDWF       INDF0, 0 
0xCF80	0x6E01      	MOVWF       R1 
0xCF82	0x5001      	MOVF        R1, 0 
0xCF84	0x0A00      	XORLW       0
0xCF86	0x0E00      	MOVLW       0
0xCF88	0xA4D8      	BTFSS       STATUS, 2 
0xCF8A	0x0E01      	MOVLW       1
0xCF8C	0x6E00      	MOVWF       R0 
0xCF8E	0xFFE1C1F3  	MOVFF       FARG_Soft_UART_Read_error, FSR1L
0xCF92	0xFFE2C1F4  	MOVFF       FARG_Soft_UART_Read_error+1, FSR1H
0xCF96	0xFFE6C000  	MOVFF       R0, POSTINC1
L_Soft_UART_Read12:
;__Lib_SoftUART.c,98 :: 		
0xCF9A	0x51D5      	MOVF        __Lib_SoftUART_InvertMaskRd, 0, 1
0xCF9C	0x19F5      	XORWF       Soft_UART_Read_result_L0, 0, 1
0xCF9E	0x6E00      	MOVWF       R0 
0xCFA0	0xF1F5C000  	MOVFF       R0, Soft_UART_Read_result_L0
;__Lib_SoftUART.c,99 :: 		
;__Lib_SoftUART.c,100 :: 		
L_end_Soft_UART_Read:
0xCFA4	0x0012      	RETURN      0
; end of _Soft_UART_Read
_SLV:
;MyProject.c,895 :: 		void SLV(){
;MyProject.c,896 :: 		resetSLV();
0xCFA6	0xF057EC26  	CALL        _resetSLV, 0
;MyProject.c,897 :: 		SENSADO();
0xCFAA	0xF053EC16  	CALL        _SENSADO, 0
;MyProject.c,898 :: 		TX_SLV();
0xCFAE	0xDD78      	RCALL       _TX_SLV
;MyProject.c,899 :: 		indicadorSensores();
0xCFB0	0xF063EC39  	CALL        _indicadorSensores, 0
;MyProject.c,900 :: 		}
L_end_SLV:
0xCFB4	0x0012      	RETURN      0
; end of _SLV
_MASTER:
;MyProject.c,876 :: 		void MASTER(){
;MyProject.c,878 :: 		resetCuentas();
0xCFB6	0xDE01      	RCALL       _resetCuentas
;MyProject.c,881 :: 		SENSADO();
0xCFB8	0xF053EC16  	CALL        _SENSADO, 0
;MyProject.c,884 :: 		TX_MSTR();
0xCFBC	0xF051EC71  	CALL        _TX_MSTR, 0
;MyProject.c,887 :: 		indicadorSensores();
0xCFC0	0xF063EC39  	CALL        _indicadorSensores, 0
;MyProject.c,891 :: 		serialTxWioLTE();
0xCFC4	0xF05FEC82  	CALL        _serialTxWioLTE, 0
;MyProject.c,893 :: 		}
L_end_MASTER:
0xCFC8	0x0012      	RETURN      0
; end of _MASTER
_PicInit:
;MyProject.c,237 :: 		void PicInit(){
;MyProject.c,240 :: 		OSCCON = 0x40;                   //Oscilador externo  20MHz
0xCFCA	0x0E40      	MOVLW       64
0xCFCC	0x6ED3      	MOVWF       OSCCON 
;MyProject.c,242 :: 		ADCON1 = 0x0F;                  //Todos digitales
0xCFCE	0x0E0F      	MOVLW       15
0xCFD0	0x6EC1      	MOVWF       ADCON1 
;MyProject.c,243 :: 		CMCON = 0x07;                   //Apagar los comparadores
0xCFD2	0x0E07      	MOVLW       7
0xCFD4	0x6EB4      	MOVWF       CMCON 
;MyProject.c,246 :: 		lcd_init();
0xCFD6	0xDC1C      	RCALL       _lcd_init
;MyProject.c,247 :: 		lcd_cmd(_LCD_CURSOR_OFF);
0xCFD8	0x0E0C      	MOVLW       12
0xCFDA	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0xCFDC	0xF008EC7A  	CALL        _lcd_cmd, 0
;MyProject.c,248 :: 		lcd_cmd(_LCD_CLEAR);
0xCFE0	0x0E01      	MOVLW       1
0xCFE2	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0xCFE4	0xF008EC7A  	CALL        _lcd_cmd, 0
;MyProject.c,249 :: 		lcd_outConst(1,1,"INICILIZANDO...")  ;
0xCFE8	0x0E01      	MOVLW       1
0xCFEA	0x6F36      	MOVWF       FARG_lcd_outConst_fila, 1
0xCFEC	0x0E01      	MOVLW       1
0xCFEE	0x6F37      	MOVWF       FARG_lcd_outConst_col, 1
0xCFF0	0x0E5E      	MOVLW       ?lstr_120_MyProject
0xCFF2	0x6F38      	MOVWF       FARG_lcd_outConst_texto, 1
0xCFF4	0x0ED8      	MOVLW       hi_addr(?lstr_120_MyProject)
0xCFF6	0x6F39      	MOVWF       FARG_lcd_outConst_texto+1, 1
0xCFF8	0x0E00      	MOVLW       higher_addr(?lstr_120_MyProject)
0xCFFA	0x6F3A      	MOVWF       FARG_lcd_outConst_texto+2, 1
0xCFFC	0xF001EC16  	CALL        _lcd_outConst, 0
;MyProject.c,253 :: 		SENSOR1D = 1;
0xD000	0x8893      	BSF         TRISB, 4 
;MyProject.c,254 :: 		SENSOR2D = 1;
0xD002	0x8895      	BSF         TRISD, 4 
;MyProject.c,255 :: 		SENSOR3D = 1;
0xD004	0x8493      	BSF         TRISB, 2 
;MyProject.c,256 :: 		SENSOR4D = 1;
0xD006	0x8693      	BSF         TRISB, 3 
;MyProject.c,257 :: 		SENSOR5D = 1;
0xD008	0x8093      	BSF         TRISB, 0 
;MyProject.c,258 :: 		SENSOR6D = 1;
0xD00A	0x8293      	BSF         TRISB, 1 
;MyProject.c,259 :: 		RESET_BOTOND = 1;
0xD00C	0x8295      	BSF         TRISD, 1 
;MyProject.c,260 :: 		RX_PICD = 1;
0xD00E	0x8E94      	BSF         TRISC, 7 
;MyProject.c,261 :: 		TRISC.B1 = 1;                        //Serial Rx WioLTE
0xD010	0x8294      	BSF         TRISC, 1 
;MyProject.c,264 :: 		TX_PICD = 0;
0xD012	0x9C94      	BCF         TRISC, 6 
;MyProject.c,265 :: 		POLARIZACIOND = 0;
0xD014	0x9494      	BCF         TRISC, 2 
;MyProject.c,266 :: 		BLOQUEOACTIVOD = 0;
0xD016	0x9694      	BCF         TRISC, 3 
;MyProject.c,267 :: 		SENSORESDEBUGD = 0;
0xD018	0x9894      	BCF         TRISC, 4 
;MyProject.c,270 :: 		SENSORESDEBUG = 0;
0xD01A	0x9882      	BCF         PORTC, 4 
;MyProject.c,271 :: 		BLOQUEOACTIVO = 0;
0xD01C	0x9682      	BCF         PORTC, 3 
;MyProject.c,274 :: 		PWM1_Init(44000);
0xD01E	0x90CA      	BCF         T2CON, 0, 0
0xD020	0x92CA      	BCF         T2CON, 1, 0
0xD022	0x0E70      	MOVLW       112
0xD024	0x6ECB      	MOVWF       PR2, 0
0xD026	0xDE5E      	RCALL       _PWM1_Init
;MyProject.c,275 :: 		PWM1_Start();
0xD028	0xF05FEC7D  	CALL        _PWM1_Start, 0
;MyProject.c,276 :: 		PWM1_Set_Duty(127);
0xD02C	0x0E7F      	MOVLW       127
0xD02E	0x0101      	MOVLB       1
0xD030	0x6FF7      	MOVWF       FARG_PWM1_Set_Duty_new_duty, 1
0xD032	0xF063EC02  	CALL        _PWM1_Set_Duty, 0
;MyProject.c,279 :: 		iniciaEeprom();
0xD036	0xF057EC23  	CALL        _iniciaEeprom, 0
;MyProject.c,282 :: 		T0CON.TMR0ON = 1;                         //encendido timer0
0xD03A	0x8ED5      	BSF         T0CON, 7 
;MyProject.c,283 :: 		T0CON.T08BIT = 0;                         //contador de 16 bits
0xD03C	0x9CD5      	BCF         T0CON, 6 
;MyProject.c,284 :: 		T0CON.T0CS = 0;                           //SELECCIONA RELOJ INTERNO
0xD03E	0x9AD5      	BCF         T0CON, 5 
;MyProject.c,285 :: 		T0CON.PSA = 0;                            //Asigna el PREESCALADOR
0xD040	0x96D5      	BCF         T0CON, 3 
;MyProject.c,286 :: 		T0CON.T0PS0 = 0;                          //valor
0xD042	0x90D5      	BCF         T0CON, 0 
;MyProject.c,287 :: 		T0CON.T0PS1 = 1;                          //preescalador
0xD044	0x82D5      	BSF         T0CON, 1 
;MyProject.c,288 :: 		T0CON.T0PS2 = 1;                          //1:128
0xD046	0x84D5      	BSF         T0CON, 2 
;MyProject.c,292 :: 		TMR0L = 0x69;                             //1 segundo para el desbordo del contador
0xD048	0x0E69      	MOVLW       105
0xD04A	0x6ED6      	MOVWF       TMR0L 
;MyProject.c,293 :: 		TMR0H = 0x67;
0xD04C	0x0E67      	MOVLW       103
0xD04E	0x6ED7      	MOVWF       TMR0H 
;MyProject.c,296 :: 		if(MSTR){
0xD050	0xA483      	BTFSS       PORTD, 2 
0xD052	0xD011      	BRA         L_PicInit557
;MyProject.c,297 :: 		T1CON.RD16 = 0;                           //CONTADOR 16 BITS EN DOS REGISTROS DE 8
0xD054	0x9ECD      	BCF         T1CON, 7 
;MyProject.c,298 :: 		T1CON.TMR1CS = 0;                         //OSCILADOR INTERNO (FOSC/4)
0xD056	0x92CD      	BCF         T1CON, 1 
;MyProject.c,299 :: 		T1CON.T1CKPS0 = 1;
0xD058	0x88CD      	BSF         T1CON, 4 
;MyProject.c,300 :: 		T1CON.T1CKPS1 = 1;                        //PREESCALADOR 1:1
0xD05A	0x8ACD      	BSF         T1CON, 5 
;MyProject.c,302 :: 		TMR1L = 0x8E;
0xD05C	0x0E8E      	MOVLW       142
0xD05E	0x6ECE      	MOVWF       TMR1L 
;MyProject.c,303 :: 		TMR1H = 0xFD;
0xD060	0x0EFD      	MOVLW       253
0xD062	0x6ECF      	MOVWF       TMR1H 
;MyProject.c,304 :: 		T1CON.TMR1ON = 1;
0xD064	0x80CD      	BSF         T1CON, 0 
;MyProject.c,308 :: 		T3CON.RD16 = 0;                           //CONTADOR 16 BITS EN DOS REGISTROS DE 8
0xD066	0x9EB1      	BCF         T3CON, 7 
;MyProject.c,310 :: 		T3CON.TMR3CS = 0;                         //OSCILADOR INTERNO (FOSC/4)
0xD068	0x92B1      	BCF         T3CON, 1 
;MyProject.c,311 :: 		T3CON.T1CKPS0 = 1;
0xD06A	0x88B1      	BSF         T3CON, 4 
;MyProject.c,312 :: 		T3CON.T1CKPS1 = 1;                        //PREESCALADOR 1:8
0xD06C	0x8AB1      	BSF         T3CON, 5 
;MyProject.c,314 :: 		TMR3L = 0x85;
0xD06E	0x0E85      	MOVLW       133
0xD070	0x6EB2      	MOVWF       TMR3L 
;MyProject.c,315 :: 		TMR3H = 0xFD;
0xD072	0x0EFD      	MOVLW       253
0xD074	0x6EB3      	MOVWF       TMR3H 
;MyProject.c,317 :: 		}
L_PicInit557:
;MyProject.c,319 :: 		RCON.IPEN = 1;                            //ACTIVAR NIVELES DE INTERRUPCION
0xD076	0x8ED0      	BSF         RCON, 7 
;MyProject.c,320 :: 		INTCON.PEIE = 1;                          //ACTIVAR INTERRUPCIONES PERIFERICAS
0xD078	0x8CF2      	BSF         INTCON, 6 
;MyProject.c,321 :: 		INTCON.GIE = 1;                           //ACTIVAR INTERRUPCIONES GLOBALES
0xD07A	0x8EF2      	BSF         INTCON, 7 
;MyProject.c,322 :: 		INTCON.TMR0IE = 1;                        //ACTIVA INTERRUPCION POR DESBORDE
0xD07C	0x8AF2      	BSF         INTCON, 5 
;MyProject.c,323 :: 		INTCON2.TMR0IP = 0;                       //INTERRUPCION BAJA PRIORIDAD
0xD07E	0x94F1      	BCF         INTCON2, 2 
;MyProject.c,324 :: 		INTCON3.TMR1IE = 1;                       //HABILITA INTERRUPCION POR DESBORDE DEL TEMPORIZADOR 1
0xD080	0x80F0      	BSF         INTCON3, 0 
;MyProject.c,325 :: 		IPR1.TMR1IP = 1;                          //INTERRUPCION DE ALTA PRIORIDAD
0xD082	0x809F      	BSF         IPR1, 0 
;MyProject.c,326 :: 		PIE2.TMR3IE = 1;
0xD084	0x82A0      	BSF         PIE2, 1 
;MyProject.c,327 :: 		IPR2.TMR3IP = 1;
0xD086	0x82A2      	BSF         IPR2, 1 
;MyProject.c,331 :: 		PIE1.RCIE = 1;                            //HABILITA INTECCUPCION POR RECEPCION DE USART
0xD088	0x8A9D      	BSF         PIE1, 5 
;MyProject.c,332 :: 		IPR1.RCIP = 1;                            //INTERRUCION DE ALTA PRIORIDAD
0xD08A	0x8A9F      	BSF         IPR1, 5 
;MyProject.c,335 :: 		UART1_Init(BAUDIOS);                      //INICIA COMUNICAICON RS232 A 9600 BAUDIOS
0xD08C	0x86B8      	BSF         BAUDCON, 3, 0
0xD08E	0x0E02      	MOVLW       2
0xD090	0x6EB0      	MOVWF       SPBRGH 
0xD092	0x0E08      	MOVLW       8
0xD094	0x6EAF      	MOVWF       SPBRG 
0xD096	0x84AC      	BSF         TXSTA, 2, 0
0xD098	0xF05FEC51  	CALL        _UART1_Init, 0
;MyProject.c,336 :: 		delay_ms(100);
0xD09C	0x0E03      	MOVLW       3
0xD09E	0x6E0B      	MOVWF       R11, 0
0xD0A0	0x0E8A      	MOVLW       138
0xD0A2	0x6E0C      	MOVWF       R12, 0
0xD0A4	0x0E55      	MOVLW       85
0xD0A6	0x6E0D      	MOVWF       R13, 0
L_PicInit558:
0xD0A8	0x2E0D      	DECFSZ      R13, 1, 0
0xD0AA	0xD7FE      	BRA         L_PicInit558
0xD0AC	0x2E0C      	DECFSZ      R12, 1, 0
0xD0AE	0xD7FC      	BRA         L_PicInit558
0xD0B0	0x2E0B      	DECFSZ      R11, 1, 0
0xD0B2	0xD7FA      	BRA         L_PicInit558
0xD0B4	0x0000      	NOP
0xD0B6	0x0000      	NOP
;MyProject.c,338 :: 		Soft_UART_Init(&PORTC, 1, 0, 9600, 0);
0xD0B8	0x0E82      	MOVLW       PORTC
0xD0BA	0x6FF7      	MOVWF       FARG_Soft_UART_Init_port, 1
0xD0BC	0x0E0F      	MOVLW       hi_addr(PORTC)
0xD0BE	0x6FF8      	MOVWF       FARG_Soft_UART_Init_port+1, 1
0xD0C0	0x0E01      	MOVLW       1
0xD0C2	0x6FF9      	MOVWF       FARG_Soft_UART_Init_rx_pin, 1
0xD0C4	0x6BFA      	CLRF        FARG_Soft_UART_Init_tx_pin, 1
0xD0C6	0x0E80      	MOVLW       128
0xD0C8	0x6FFB      	MOVWF       FARG_Soft_UART_Init_baud_rate, 1
0xD0CA	0x0E25      	MOVLW       37
0xD0CC	0x6FFC      	MOVWF       FARG_Soft_UART_Init_baud_rate+1, 1
0xD0CE	0x0E00      	MOVLW       0
0xD0D0	0x6FFD      	MOVWF       FARG_Soft_UART_Init_baud_rate+2, 1
0xD0D2	0x6FFE      	MOVWF       FARG_Soft_UART_Init_baud_rate+3, 1
0xD0D4	0x6BFF      	CLRF        FARG_Soft_UART_Init_inverted, 1
0xD0D6	0xDC02      	RCALL       _Soft_UART_Init
;MyProject.c,341 :: 		Bandera.SensorU = false, Bandera.SensorD = false, Bandera.SensorT = false, Bandera.SensorC = false, Bandera.SensorO = false, Bandera.SensorS = false;
0xD0D8	0x0101      	MOVLB       1
0xD0DA	0x6BED      	CLRF        _Bandera+9, 1
0xD0DC	0x6BEE      	CLRF        _Bandera+10, 1
0xD0DE	0x6BEF      	CLRF        _Bandera+11, 1
0xD0E0	0x6BF0      	CLRF        _Bandera+12, 1
0xD0E2	0x6BF1      	CLRF        _Bandera+13, 1
0xD0E4	0x6BF2      	CLRF        _Bandera+14, 1
;MyProject.c,342 :: 		Bandera.Par1 = false, Bandera.Par2 = false, Bandera.Par3 = false, Bandera.Par4 = false, Bandera.Par5 = false, Bandera.Par6 = false, Bandera.Par7 = false, Bandera.Par8 = false, Bandera.Par9 = false;
0xD0E6	0x6BE4      	CLRF        _Bandera, 1
0xD0E8	0x6BE5      	CLRF        _Bandera+1, 1
0xD0EA	0x6BE6      	CLRF        _Bandera+2, 1
0xD0EC	0x6BE7      	CLRF        _Bandera+3, 1
0xD0EE	0x6BE8      	CLRF        _Bandera+4, 1
0xD0F0	0x6BE9      	CLRF        _Bandera+5, 1
0xD0F2	0x6BEA      	CLRF        _Bandera+6, 1
0xD0F4	0x6BEB      	CLRF        _Bandera+7, 1
0xD0F6	0x6BEC      	CLRF        _Bandera+8, 1
;MyProject.c,343 :: 		Desborde.SensorU = 0, Desborde.SensorD = 0, Desborde.SensorT = 0, Desborde.SensorC = 0, Desborde.SensorO = 0, Desborde.SensorS = 0;
0xD0F8	0x6BBE      	CLRF        _Desborde+18, 1
0xD0FA	0x6BBF      	CLRF        _Desborde+19, 1
0xD0FC	0x6BC0      	CLRF        _Desborde+20, 1
0xD0FE	0x6BC1      	CLRF        _Desborde+21, 1
0xD100	0x6BC2      	CLRF        _Desborde+22, 1
0xD102	0x6BC3      	CLRF        _Desborde+23, 1
0xD104	0x6BC4      	CLRF        _Desborde+24, 1
0xD106	0x6BC5      	CLRF        _Desborde+25, 1
0xD108	0x6BC6      	CLRF        _Desborde+26, 1
0xD10A	0x6BC7      	CLRF        _Desborde+27, 1
0xD10C	0x6BC8      	CLRF        _Desborde+28, 1
0xD10E	0x6BC9      	CLRF        _Desborde+29, 1
;MyProject.c,344 :: 		Desborde.Par1 = 0, Desborde.Par2 = 0, Desborde.Par3 = 0, Desborde.Par4 = 0, Desborde.Par5 = 0, Desborde.Par6 = 0, Desborde.Par7 = 0, Desborde.Par8 = 0, Desborde.Par9 = 0;
0xD110	0x6BAC      	CLRF        _Desborde, 1
0xD112	0x6BAD      	CLRF        _Desborde+1, 1
0xD114	0x6BAE      	CLRF        _Desborde+2, 1
0xD116	0x6BAF      	CLRF        _Desborde+3, 1
0xD118	0x6BB0      	CLRF        _Desborde+4, 1
0xD11A	0x6BB1      	CLRF        _Desborde+5, 1
0xD11C	0x6BB2      	CLRF        _Desborde+6, 1
0xD11E	0x6BB3      	CLRF        _Desborde+7, 1
0xD120	0x6BB4      	CLRF        _Desborde+8, 1
0xD122	0x6BB5      	CLRF        _Desborde+9, 1
0xD124	0x6BB6      	CLRF        _Desborde+10, 1
0xD126	0x6BB7      	CLRF        _Desborde+11, 1
0xD128	0x6BB8      	CLRF        _Desborde+12, 1
0xD12A	0x6BB9      	CLRF        _Desborde+13, 1
0xD12C	0x6BBA      	CLRF        _Desborde+14, 1
0xD12E	0x6BBB      	CLRF        _Desborde+15, 1
0xD130	0x6BBC      	CLRF        _Desborde+16, 1
0xD132	0x6BBD      	CLRF        _Desborde+17, 1
;MyProject.c,346 :: 		BLOQUEOACTIVO = 1;
0xD134	0x8682      	BSF         PORTC, 3 
;MyProject.c,347 :: 		delay_ms(200);
0xD136	0x0E06      	MOVLW       6
0xD138	0x6E0B      	MOVWF       R11, 0
0xD13A	0x0E13      	MOVLW       19
0xD13C	0x6E0C      	MOVWF       R12, 0
0xD13E	0x0EAD      	MOVLW       173
0xD140	0x6E0D      	MOVWF       R13, 0
L_PicInit559:
0xD142	0x2E0D      	DECFSZ      R13, 1, 0
0xD144	0xD7FE      	BRA         L_PicInit559
0xD146	0x2E0C      	DECFSZ      R12, 1, 0
0xD148	0xD7FC      	BRA         L_PicInit559
0xD14A	0x2E0B      	DECFSZ      R11, 1, 0
0xD14C	0xD7FA      	BRA         L_PicInit559
0xD14E	0x0000      	NOP
0xD150	0x0000      	NOP
;MyProject.c,348 :: 		BLOQUEOACTIVO = 0;
0xD152	0x9682      	BCF         PORTC, 3 
;MyProject.c,350 :: 		lcd_cmd(_LCD_CLEAR);
0xD154	0x0E01      	MOVLW       1
0xD156	0x0102      	MOVLB       2
0xD158	0x6F1D      	MOVWF       FARG_lcd_cmd_comando, 1
0xD15A	0xF008EC7A  	CALL        _lcd_cmd, 0
;MyProject.c,351 :: 		}
L_end_PicInit:
0xD15E	0x0012      	RETURN      0
; end of _PicInit
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0xD160	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0xD162	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0xD166	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0xD168	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0xD16A	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0xD16C	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0xD16E	0x0012      	RETURN      0
; end of ___CC2DW
_main:
0xD170	0xF06DECA5  	CALL        56138, 0
;MyProject.c,180 :: 		void main() {
;MyProject.c,181 :: 		PicInit();
0xD174	0xDF2A      	RCALL       _PicInit
;MyProject.c,183 :: 		while(1){
L_main546:
0xD176	0x0102      	MOVLB       2
;MyProject.c,185 :: 		bytetostr(posteDesc, Aux6);    //BANDERA DE DESCONEXION DE POSTE TRASERO; 0 = "CONECTADO" - 1 = "DESCONECTADO"
0xD178	0xF236C0E0  	MOVFF       _posteDesc, FARG_ByteToStr_input
0xD17C	0x0ED2      	MOVLW       _Aux6
0xD17E	0x6F37      	MOVWF       FARG_ByteToStr_output, 1
0xD180	0x0E00      	MOVLW       hi_addr(_Aux6)
0xD182	0x6F38      	MOVWF       FARG_ByteToStr_output+1, 1
0xD184	0xF004EC53  	CALL        _ByteToStr, 0
;MyProject.c,186 :: 		lcd_out(4,8,aux6);
0xD188	0x0E04      	MOVLW       4
0xD18A	0x6F36      	MOVWF       FARG_lcd_out_fila, 1
0xD18C	0x0E08      	MOVLW       8
0xD18E	0x6F37      	MOVWF       FARG_lcd_out_col, 1
0xD190	0x0ED2      	MOVLW       _Aux6
0xD192	0x6F38      	MOVWF       FARG_lcd_out_texto, 1
0xD194	0x0E00      	MOVLW       hi_addr(_Aux6)
0xD196	0x6F39      	MOVWF       FARG_lcd_out_texto+1, 1
0xD198	0xF002EC75  	CALL        _lcd_out, 0
;MyProject.c,187 :: 		if(MSTR){
0xD19C	0xA483      	BTFSS       PORTD, 2 
0xD19E	0xD04F      	BRA         L_main548
;MyProject.c,188 :: 		WDTCON.SWDTEN = 1;
0xD1A0	0x80D1      	BSF         WDTCON, 0 
;MyProject.c,189 :: 		T3CON.TMR3ON = 1;
0xD1A2	0x80B1      	BSF         T3CON, 0 
;MyProject.c,190 :: 		wioRX[0] = Soft_UART_Read(&errorSoftUART);
0xD1A4	0x0EAB      	MOVLW       _errorSoftUART
0xD1A6	0x0101      	MOVLB       1
0xD1A8	0x6FF3      	MOVWF       FARG_Soft_UART_Read_error, 1
0xD1AA	0x0E01      	MOVLW       hi_addr(_errorSoftUART)
0xD1AC	0x6FF4      	MOVWF       FARG_Soft_UART_Read_error+1, 1
0xD1AE	0xDE7A      	RCALL       _Soft_UART_Read
0xD1B0	0xF03AC000  	MOVFF       R0, _WioRX
;MyProject.c,191 :: 		if((!errorSoftUART) | errorSoftUART == 255){
0xD1B4	0x53AB      	MOVF        _errorSoftUART, 1, 1
0xD1B6	0x0E01      	MOVLW       1
0xD1B8	0xA4D8      	BTFSS       STATUS, 2 
0xD1BA	0x0E00      	MOVLW       0
0xD1BC	0x6E01      	MOVWF       R1 
0xD1BE	0x51AB      	MOVF        _errorSoftUART, 0, 1
0xD1C0	0x0AFF      	XORLW       255
0xD1C2	0x0E01      	MOVLW       1
0xD1C4	0xA4D8      	BTFSS       STATUS, 2 
0xD1C6	0x0E00      	MOVLW       0
0xD1C8	0x6E00      	MOVWF       R0 
0xD1CA	0x5001      	MOVF        R1, 0 
0xD1CC	0x1200      	IORWF       R0, 1 
0xD1CE	0xE032      	BZ          L_main549
;MyProject.c,192 :: 		if(!errorSoftUART){
0xD1D0	0x53AB      	MOVF        _errorSoftUART, 1, 1
0xD1D2	0xE11E      	BNZ         L_main550
;MyProject.c,193 :: 		if(wioRX[0] == 'r'){
0xD1D4	0x503A      	MOVF        _WioRX, 0 
0xD1D6	0x0A72      	XORLW       114
0xD1D8	0xE10E      	BNZ         L_main551
;MyProject.c,194 :: 		desbordoGPS = periodoEnvioGPS - 1;
0xD1DA	0x0EB3      	MOVLW       179
0xD1DC	0x0100      	MOVLB       0
0xD1DE	0x6FE1      	MOVWF       _desbordoGPS, 1
0xD1E0	0x0E00      	MOVLW       0
0xD1E2	0x6FE2      	MOVWF       _desbordoGPS+1, 1
;MyProject.c,195 :: 		lcd_chr(2,8,wioRX[0]);
0xD1E4	0x0E02      	MOVLW       2
0xD1E6	0x0101      	MOVLB       1
0xD1E8	0x6FF3      	MOVWF       FARG_lcd_chr_fila, 1
0xD1EA	0x0E08      	MOVLW       8
0xD1EC	0x6FF4      	MOVWF       FARG_lcd_chr_col, 1
0xD1EE	0xF1F5C03A  	MOVFF       _WioRX, FARG_lcd_chr_c
0xD1F2	0xDE4B      	RCALL       _lcd_chr
;MyProject.c,196 :: 		}
0xD1F4	0xD00D      	BRA         L_main552
L_main551:
;MyProject.c,197 :: 		else if(wioRX[0] == 'B'){
0xD1F6	0x503A      	MOVF        _WioRX, 0 
0xD1F8	0x0A42      	XORLW       66
0xD1FA	0xE10A      	BNZ         L_main553
;MyProject.c,198 :: 		resetWioLTE = true;
0xD1FC	0x0E01      	MOVLW       1
0xD1FE	0x6E30      	MOVWF       _resetWioLTE 
;MyProject.c,199 :: 		lcd_chr(2,8,wioRX[0]);
0xD200	0x0E02      	MOVLW       2
0xD202	0x0101      	MOVLB       1
0xD204	0x6FF3      	MOVWF       FARG_lcd_chr_fila, 1
0xD206	0x0E08      	MOVLW       8
0xD208	0x6FF4      	MOVWF       FARG_lcd_chr_col, 1
0xD20A	0xF1F5C03A  	MOVFF       _WioRX, FARG_lcd_chr_c
0xD20E	0xDE3D      	RCALL       _lcd_chr
;MyProject.c,200 :: 		}
L_main553:
L_main552:
;MyProject.c,201 :: 		}
L_main550:
0xD210	0x0102      	MOVLB       2
;MyProject.c,203 :: 		T3CON.TMR3ON = 0;
0xD212	0x90B1      	BCF         T3CON, 0 
;MyProject.c,204 :: 		TMR3L = 0x85;
0xD214	0x0E85      	MOVLW       133
0xD216	0x6EB2      	MOVWF       TMR3L 
;MyProject.c,205 :: 		TMR3H = 0xFD;
0xD218	0x0EFD      	MOVLW       253
0xD21A	0x6EB3      	MOVWF       TMR3H 
;MyProject.c,206 :: 		memset(wioRX, 0, sizeof(wioRX));
0xD21C	0x0E3A      	MOVLW       _WioRX
0xD21E	0x6F0B      	MOVWF       FARG_memset_p1, 1
0xD220	0x0E00      	MOVLW       hi_addr(_WioRX)
0xD222	0x6F0C      	MOVWF       FARG_memset_p1+1, 1
0xD224	0x6B0D      	CLRF        FARG_memset_character, 1
0xD226	0x0E02      	MOVLW       2
0xD228	0x6F0E      	MOVWF       FARG_memset_n, 1
0xD22A	0x0E00      	MOVLW       0
0xD22C	0x6F0F      	MOVWF       FARG_memset_n+1, 1
0xD22E	0xF050EC4B  	CALL        _memset, 0
;MyProject.c,207 :: 		cuentaSoftRead = 0;
0xD232	0x6A3C      	CLRF        _cuentaSoftRead 
;MyProject.c,208 :: 		}
L_main549:
;MyProject.c,209 :: 		WDTCON.SWDTEN = 0;
0xD234	0x90D1      	BCF         WDTCON, 0 
;MyProject.c,210 :: 		WDTCON.SWDTEN = 1;
0xD236	0x80D1      	BSF         WDTCON, 0 
;MyProject.c,211 :: 		MASTER();
0xD238	0xDEBE      	RCALL       _MASTER
;MyProject.c,212 :: 		WDTCON.SWDTEN = 0;
0xD23A	0x90D1      	BCF         WDTCON, 0 
;MyProject.c,213 :: 		}
0xD23C	0xD001      	BRA         L_main554
L_main548:
;MyProject.c,217 :: 		SLV();
0xD23E	0xDEB3      	RCALL       _SLV
;MyProject.c,219 :: 		}
L_main554:
;MyProject.c,221 :: 		if(SENSOR1 & SENSOR2 & SENSOR3 & SENSOR4 & SENSOR5 & SENSOR6){
0xD240	0xA881      	BTFSS       PORTB, 4 
0xD242	0xD004      	BRA         L__main2413
0xD244	0xA883      	BTFSS       PORTD, 4 
0xD246	0xD002      	BRA         L__main2413
0xD248	0x80D8      	BSF         STATUS, 0 
0xD24A	0xD001      	BRA         L__main2414
L__main2413:
0xD24C	0x90D8      	BCF         STATUS, 0 
L__main2414:
0xD24E	0xE304      	BNC         L__main2415
0xD250	0xA481      	BTFSS       PORTB, 2 
0xD252	0xD002      	BRA         L__main2415
0xD254	0x8002      	BSF         R2, 0 
0xD256	0xD001      	BRA         L__main2416
L__main2415:
0xD258	0x9002      	BCF         R2, 0 
L__main2416:
0xD25A	0xA002      	BTFSS       R2, 0 
0xD25C	0xD004      	BRA         L__main2417
0xD25E	0xA681      	BTFSS       PORTB, 3 
0xD260	0xD002      	BRA         L__main2417
0xD262	0x80D8      	BSF         STATUS, 0 
0xD264	0xD001      	BRA         L__main2418
L__main2417:
0xD266	0x90D8      	BCF         STATUS, 0 
L__main2418:
0xD268	0xE304      	BNC         L__main2419
0xD26A	0xA081      	BTFSS       PORTB, 0 
0xD26C	0xD002      	BRA         L__main2419
0xD26E	0x8002      	BSF         R2, 0 
0xD270	0xD001      	BRA         L__main2420
L__main2419:
0xD272	0x9002      	BCF         R2, 0 
L__main2420:
0xD274	0xA002      	BTFSS       R2, 0 
0xD276	0xD004      	BRA         L__main2421
0xD278	0xA281      	BTFSS       PORTB, 1 
0xD27A	0xD002      	BRA         L__main2421
0xD27C	0x80D8      	BSF         STATUS, 0 
0xD27E	0xD001      	BRA         L__main2422
L__main2421:
0xD280	0x90D8      	BCF         STATUS, 0 
L__main2422:
0xD282	0xE302      	BNC         L_main555
;MyProject.c,222 :: 		SENSORESDEBUG = 1;
0xD284	0x8882      	BSF         PORTC, 4 
;MyProject.c,223 :: 		}
0xD286	0xD001      	BRA         L_main556
L_main555:
;MyProject.c,225 :: 		SENSORESDEBUG = 0;
0xD288	0x9882      	BCF         PORTC, 4 
;MyProject.c,226 :: 		}
L_main556:
;MyProject.c,227 :: 		}
0xD28A	0xD775      	BRA         L_main546
;MyProject.c,229 :: 		}
L_end_main:
0xD28C	0xD7FF      	BRA         $+0
; end of _main
0xD28E	0xF022C000  	MOVFF       R0, 34
0xD292	0xF021C001  	MOVFF       R1, 33
0xD296	0xF020C002  	MOVFF       R2, 32
0xD29A	0xF01FC003  	MOVFF       R3, 31
0xD29E	0xF01EC004  	MOVFF       R4, 30
0xD2A2	0xF01DC005  	MOVFF       R5, 29
0xD2A6	0xF01CC006  	MOVFF       R6, 28
0xD2AA	0xF01BC007  	MOVFF       R7, 27
0xD2AE	0xF01AC008  	MOVFF       R8, 26
0xD2B2	0xF019C009  	MOVFF       R9, 25
0xD2B6	0xF018C00A  	MOVFF       R10, 24
_interrupcionesBajoNivel:
0xD2BA	0xF025CFE1  	MOVFF       FSR1L, 37
0xD2BE	0xF026CFE2  	MOVFF       FSR1H, 38
0xD2C2	0xF023CFE9  	MOVFF       FSR0L, 35
0xD2C6	0xF024CFEA  	MOVFF       FSR0H, 36
0xD2CA	0x6E15      	MOVWF       ___Low_saveWREG 
0xD2CC	0xF016CFD8  	MOVFF       STATUS, ___Low_saveSTATUS
0xD2D0	0xF017CFE0  	MOVFF       BSR, ___Low_saveBSR
;MyProject.c,170 :: 		void interrupcionesBajoNivel() iv 0x0018 ics ICS_AUTO {
;MyProject.c,171 :: 		desbordoTemporizadorCero();
0xD2D4	0xDD0B      	RCALL       _desbordoTemporizadorCero
;MyProject.c,172 :: 		}
L_end_interrupcionesBajoNivel:
L__interrupcionesBajoNivel2411:
0xD2D6	0x5017      	MOVF        ___Low_saveBSR, 0 
0xD2D8	0x6EE0      	MOVWF       BSR 
0xD2DA	0x5016      	MOVF        ___Low_saveSTATUS, 0 
0xD2DC	0x6ED8      	MOVWF       STATUS 
0xD2DE	0x3A15      	SWAPF       ___Low_saveWREG, 1 
0xD2E0	0x3815      	SWAPF       ___Low_saveWREG, 0 
0xD2E2	0xF000C022  	MOVFF       34, R0
0xD2E6	0xF001C021  	MOVFF       33, R1
0xD2EA	0xF002C020  	MOVFF       32, R2
0xD2EE	0xF003C01F  	MOVFF       31, R3
0xD2F2	0xF004C01E  	MOVFF       30, R4
0xD2F6	0xF005C01D  	MOVFF       29, R5
0xD2FA	0xF006C01C  	MOVFF       28, R6
0xD2FE	0xF007C01B  	MOVFF       27, R7
0xD302	0xF008C01A  	MOVFF       26, R8
0xD306	0xF009C019  	MOVFF       25, R9
0xD30A	0xF00AC018  	MOVFF       24, R10
0xD30E	0xFFE9C023  	MOVFF       35, FSR0L
0xD312	0xFFEAC024  	MOVFF       36, FSR0H
0xD316	0xFFE1C025  	MOVFF       37, FSR1L
0xD31A	0xFFE2C026  	MOVFF       38, FSR1H
0xD31E	0x0010      	RETFIE      0
; end of _interrupcionesBajoNivel
_interrupcionesAltoNivel:
;MyProject.c,155 :: 		void interrupcionesAltoNivel() iv 0x0008 ics ICS_AUTO {
0xD320	0xF028C000  	MOVFF       R0, 40
0xD324	0xF027C001  	MOVFF       R1, 39
;MyProject.c,157 :: 		if(PIR1.RCIF & PIE1.RCIE){
0xD328	0xF02BCFE1  	MOVFF       FSR1L, 43
0xD32C	0xF02CCFE2  	MOVFF       FSR1H, 44
0xD330	0xF029CFE9  	MOVFF       FSR0L, 41
0xD334	0xF02ACFEA  	MOVFF       FSR0H, 42
0xD338	0xAA9E      	BTFSS       PIR1, 5 
0xD33A	0xD004      	BRA         L__interrupcionesAltoNivel2404
0xD33C	0xAA9D      	BTFSS       PIE1, 5 
0xD33E	0xD002      	BRA         L__interrupcionesAltoNivel2404
0xD340	0x80D8      	BSF         STATUS, 0 
0xD342	0xD001      	BRA         L__interrupcionesAltoNivel2405
L__interrupcionesAltoNivel2404:
0xD344	0x90D8      	BCF         STATUS, 0 
L__interrupcionesAltoNivel2405:
0xD346	0xE301      	BNC         L_interrupcionesAltoNivel543
;MyProject.c,158 :: 		RX_PIC_PIC();
0xD348	0xDD05      	RCALL       _RX_PIC_PIC
;MyProject.c,159 :: 		}
L_interrupcionesAltoNivel543:
;MyProject.c,161 :: 		if(PIR2.TMR3IF & PIE2.TMR3IE & MSTR){
0xD34A	0xA2A1      	BTFSS       PIR2, 1 
0xD34C	0xD004      	BRA         L__interrupcionesAltoNivel2406
0xD34E	0xA2A0      	BTFSS       PIE2, 1 
0xD350	0xD002      	BRA         L__interrupcionesAltoNivel2406
0xD352	0x80D8      	BSF         STATUS, 0 
0xD354	0xD001      	BRA         L__interrupcionesAltoNivel2407
L__interrupcionesAltoNivel2406:
0xD356	0x90D8      	BCF         STATUS, 0 
L__interrupcionesAltoNivel2407:
0xD358	0xE304      	BNC         L__interrupcionesAltoNivel2408
0xD35A	0xA483      	BTFSS       PORTD, 2 
0xD35C	0xD002      	BRA         L__interrupcionesAltoNivel2408
0xD35E	0x8001      	BSF         R1, 0 
0xD360	0xD001      	BRA         L__interrupcionesAltoNivel2409
L__interrupcionesAltoNivel2408:
0xD362	0x9001      	BCF         R1, 0 
L__interrupcionesAltoNivel2409:
0xD364	0xA001      	BTFSS       R1, 0 
0xD366	0xD00A      	BRA         L_interrupcionesAltoNivel544
;MyProject.c,162 :: 		cuentaSoftRead++;
0xD368	0x2A3C      	INCF        _cuentaSoftRead, 1 
;MyProject.c,163 :: 		if(cuentaSoftRead >=1){
0xD36A	0x0E80      	MOVLW       128
0xD36C	0x183C      	XORWF       _cuentaSoftRead, 0 
0xD36E	0x6E00      	MOVWF       R0 
0xD370	0x0E80      	MOVLW       128
0xD372	0x0A01      	XORLW       1
0xD374	0x5C00      	SUBWF       R0, 0 
0xD376	0xE302      	BNC         L_interrupcionesAltoNivel545
;MyProject.c,164 :: 		Soft_UART_Break();
0xD378	0xDCEA      	RCALL       _Soft_UART_Break
;MyProject.c,165 :: 		PIR2.TMR3IF = false;
0xD37A	0x92A1      	BCF         PIR2, 1 
;MyProject.c,166 :: 		}
L_interrupcionesAltoNivel545:
;MyProject.c,167 :: 		}
L_interrupcionesAltoNivel544:
;MyProject.c,168 :: 		}
L_end_interrupcionesAltoNivel:
L__interrupcionesAltoNivel2403:
0xD37C	0xF000C028  	MOVFF       40, R0
0xD380	0xF001C027  	MOVFF       39, R1
0xD384	0xFFE9C029  	MOVFF       41, FSR0L
0xD388	0xFFEAC02A  	MOVFF       42, FSR0H
0xD38C	0xFFE1C02B  	MOVFF       43, FSR1L
0xD390	0xFFE2C02C  	MOVFF       44, FSR1H
0xD394	0x0011      	RETFIE      1
; end of _interrupcionesAltoNivel
0xDB4A	0xF02DEE10  	LFSR        1, 45
0xDB4E	0x0E7E      	MOVLW       126
0xDB50	0x6E00      	MOVWF       R0 
0xDB52	0x0E02      	MOVLW       2
0xDB54	0x6E01      	MOVWF       R1 
0xDB56	0x0E96      	MOVLW       150
0xDB58	0x6EF6      	MOVWF       4086 
0xDB5A	0x0ED3      	MOVLW       211
0xDB5C	0x6EF7      	MOVWF       TBLPTRH 
0xDB5E	0x0E00      	MOVLW       0
0xDB60	0x6EF8      	MOVWF       TBLPTRU 
0xDB62	0xF068ECB0  	CALL        53600, 0
0xDB66	0x0012      	RETURN      0
;MyProject.c,0 :: ?ICS_solicitudReset
0xD396	0x2E52 ;?ICS_solicitudReset+0
0xD398	0x00 ;?ICS_solicitudReset+2
; end of ?ICS_solicitudReset
;MyProject.c,0 :: ?ICS_resetWioLTE
0xD399	0x00 ;?ICS_resetWioLTE+0
; end of ?ICS_resetWioLTE
;MyProject.c,0 :: ?ICS_respuestaReset
0xD39A	0x4552 ;?ICS_respuestaReset+0
0xD39C	0x4553 ;?ICS_respuestaReset+2
0xD39E	0x5F54 ;?ICS_respuestaReset+4
0xD3A0	0x4B4F ;?ICS_respuestaReset+6
0xD3A2	0x00 ;?ICS_respuestaReset+8
; end of ?ICS_respuestaReset
;MyProject.c,0 :: ?ICS_WioRX
0xD3A3	0x0000 ;?ICS_WioRX+0
; end of ?ICS_WioRX
;MyProject.c,0 :: ?ICS_cuentaSoftRead
0xD3A5	0x00 ;?ICS_cuentaSoftRead+0
; end of ?ICS_cuentaSoftRead
;MyProject.c,0 :: ?ICS_recSlvSuben
0xD3A6	0x0000 ;?ICS_recSlvSuben+0
; end of ?ICS_recSlvSuben
;MyProject.c,0 :: ?ICS_guardadoSlvSuben
0xD3A8	0x0000 ;?ICS_guardadoSlvSuben+0
; end of ?ICS_guardadoSlvSuben
;MyProject.c,0 :: ?ICS_guardadoSlvBajan
0xD3AA	0x0000 ;?ICS_guardadoSlvBajan+0
; end of ?ICS_guardadoSlvBajan
;MyProject.c,0 :: ?ICS_totalVerdadero
0xD3AC	0x0000 ;?ICS_totalVerdadero+0
; end of ?ICS_totalVerdadero
;MyProject.c,0 :: ?ICS_recSlvBajan
0xD3AE	0x0000 ;?ICS_recSlvBajan+0
; end of ?ICS_recSlvBajan
;MyProject.c,0 :: ?ICS_banderaRx
0xD3B0	0x00 ;?ICS_banderaRx+0
; end of ?ICS_banderaRx
;MyProject.c,0 :: ?ICS_solicitudCuenta
0xD3B1	0x2E43 ;?ICS_solicitudCuenta+0
0xD3B3	0x00 ;?ICS_solicitudCuenta+2
; end of ?ICS_solicitudCuenta
;MyProject.c,0 :: ?ICS_confirmacionEsclavo
0xD3B4	0x0000 ;?ICS_confirmacionEsclavo+0
0xD3B6	0x00 ;?ICS_confirmacionEsclavo+2
; end of ?ICS_confirmacionEsclavo
;MyProject.c,0 :: ?ICS_checksum
0xD3B7	0x0000 ;?ICS_checksum+0
0xD3B9	0x0000 ;?ICS_checksum+2
0xD3BB	0x0000 ;?ICS_checksum+4
0xD3BD	0x0000 ;?ICS_checksum+6
0xD3BF	0x0000 ;?ICS_checksum+8
; end of ?ICS_checksum
;MyProject.c,0 :: ?ICS_afterReset
0xD3C1	0x00 ;?ICS_afterReset+0
; end of ?ICS_afterReset
;MyProject.c,0 :: ?ICS_conexionHabilitada
0xD3C2	0x00 ;?ICS_conexionHabilitada+0
; end of ?ICS_conexionHabilitada
;MyProject.c,0 :: ?ICS_RW
0xD3C3	0x00 ;?ICS_RW+0
; end of ?ICS_RW
;MyProject.c,0 :: ?ICS_banderaReset
0xD3C4	0x00 ;?ICS_banderaReset+0
; end of ?ICS_banderaReset
;MyProject.c,0 :: ?ICS_EnvioCuenta
0xD3C5	0x00 ;?ICS_EnvioCuenta+0
; end of ?ICS_EnvioCuenta
;MyProject.c,0 :: ?ICS_recBloq
0xD3C6	0x00 ;?ICS_recBloq+0
; end of ?ICS_recBloq
;MyProject.c,0 :: ?ICS_bufferEnvioEsclavo
0xD3C7	0x0000 ;?ICS_bufferEnvioEsclavo+0
0xD3C9	0x0000 ;?ICS_bufferEnvioEsclavo+2
0xD3CB	0x0000 ;?ICS_bufferEnvioEsclavo+4
0xD3CD	0x0000 ;?ICS_bufferEnvioEsclavo+6
0xD3CF	0x0000 ;?ICS_bufferEnvioEsclavo+8
; end of ?ICS_bufferEnvioEsclavo
;MyProject.c,0 :: ?ICS?lstr121_MyProject
0xD3D1	0x2E43 ;?ICS?lstr121_MyProject+0
0xD3D3	0x00 ;?ICS?lstr121_MyProject+2
; end of ?ICS?lstr121_MyProject
;MyProject.c,0 :: ?ICS_desbordoGPS_SLV
0xD3D4	0x0000 ;?ICS_desbordoGPS_SLV+0
; end of ?ICS_desbordoGPS_SLV
;MyProject.c,0 :: ?ICS_solicitudMaestro
0xD3D6	0x0000 ;?ICS_solicitudMaestro+0
0xD3D8	0x0000 ;?ICS_solicitudMaestro+2
0xD3DA	0x0000 ;?ICS_solicitudMaestro+4
0xD3DC	0x0000 ;?ICS_solicitudMaestro+6
; end of ?ICS_solicitudMaestro
;MyProject.c,0 :: ?ICS?lstr131_MyProject
0xD3DE	0x0043 ;?ICS?lstr131_MyProject+0
; end of ?ICS?lstr131_MyProject
;MyProject.c,0 :: ?ICS?lstr132_MyProject
0xD3E0	0x002E ;?ICS?lstr132_MyProject+0
; end of ?ICS?lstr132_MyProject
;MyProject.c,0 :: ?ICS?lstr134_MyProject
0xD3E2	0x0052 ;?ICS?lstr134_MyProject+0
; end of ?ICS?lstr134_MyProject
;MyProject.c,0 :: ?ICS?lstr133_MyProject
0xD3E4	0x0043 ;?ICS?lstr133_MyProject+0
; end of ?ICS?lstr133_MyProject
;MyProject.c,0 :: ?ICS?lstr130_MyProject
0xD3E6	0x002E ;?ICS?lstr130_MyProject+0
; end of ?ICS?lstr130_MyProject
;MyProject.c,0 :: ?ICS_conexionPoste
0xD3E8	0x00 ;?ICS_conexionPoste+0
; end of ?ICS_conexionPoste
;MyProject.c,0 :: ?ICS_k
0xD3E9	0x00 ;?ICS_k+0
; end of ?ICS_k
;MyProject.c,0 :: ?ICS_cuentaAtasco
0xD3EA	0x00 ;?ICS_cuentaAtasco+0
; end of ?ICS_cuentaAtasco
;MyProject.c,0 :: ?ICS_auxT
0xD3EB	0x0000 ;?ICS_auxT+0
0xD3ED	0x0000 ;?ICS_auxT+2
0xD3EF	0x0000 ;?ICS_auxT+4
0xD3F1	0x0000 ;?ICS_auxT+6
0xD3F3	0x0000 ;?ICS_auxT+8
0xD3F5	0x0000 ;?ICS_auxT+10
; end of ?ICS_auxT
;MyProject.c,0 :: ?ICS?lstr1_MyProject
0xD3F7	0x534D ;?ICS?lstr1_MyProject+0
0xD3F9	0x0054 ;?ICS?lstr1_MyProject+2
; end of ?ICS?lstr1_MyProject
;MyProject.c,0 :: ?ICS_cuenta
0xD3FB	0x00 ;?ICS_cuenta+0
; end of ?ICS_cuenta
;MyProject.c,0 :: ?ICS_lecturaBloqueo
0xD3FC	0x00 ;?ICS_lecturaBloqueo+0
; end of ?ICS_lecturaBloqueo
;MyProject.c,0 :: ?ICS_auxP
0xD3FD	0x0000 ;?ICS_auxP+0
0xD3FF	0x0000 ;?ICS_auxP+2
0xD401	0x0000 ;?ICS_auxP+4
0xD403	0x0000 ;?ICS_auxP+6
0xD405	0x0000 ;?ICS_auxP+8
0xD407	0x0000 ;?ICS_auxP+10
; end of ?ICS_auxP
;MyProject.c,0 :: ?ICS_auxBloq
0xD409	0x0000 ;?ICS_auxBloq+0
0xD40B	0x0000 ;?ICS_auxBloq+2
0xD40D	0x0000 ;?ICS_auxBloq+4
0xD40F	0x0000 ;?ICS_auxBloq+6
0xD411	0x0000 ;?ICS_auxBloq+8
0xD413	0x0000 ;?ICS_auxBloq+10
; end of ?ICS_auxBloq
;MyProject.c,0 :: ?ICS_lecturaTablaPasajerosTotales
0xD415	0x0000 ;?ICS_lecturaTablaPasajerosTotales+0
; end of ?ICS_lecturaTablaPasajerosTotales
;MyProject.c,0 :: ?ICS?lstr2_MyProject
0xD417	0x4C53 ;?ICS?lstr2_MyProject+0
0xD419	0x0056 ;?ICS?lstr2_MyProject+2
; end of ?ICS?lstr2_MyProject
;MyProject.c,0 :: ?ICS_lecturaTablaBajanE
0xD41B	0x0000 ;?ICS_lecturaTablaBajanE+0
; end of ?ICS_lecturaTablaBajanE
;MyProject.c,0 :: ?ICS_auxS
0xD41D	0x0000 ;?ICS_auxS+0
0xD41F	0x0000 ;?ICS_auxS+2
0xD421	0x0000 ;?ICS_auxS+4
0xD423	0x0000 ;?ICS_auxS+6
0xD425	0x0000 ;?ICS_auxS+8
0xD427	0x0000 ;?ICS_auxS+10
; end of ?ICS_auxS
;MyProject.c,0 :: ?ICS_lecturaTablaS
0xD429	0x0000 ;?ICS_lecturaTablaS+0
; end of ?ICS_lecturaTablaS
;MyProject.c,0 :: ?ICS_lecturaTablaSubenE
0xD42B	0x0000 ;?ICS_lecturaTablaSubenE+0
; end of ?ICS_lecturaTablaSubenE
;MyProject.c,0 :: ?ICS_auxB
0xD42D	0x0000 ;?ICS_auxB+0
0xD42F	0x0000 ;?ICS_auxB+2
0xD431	0x0000 ;?ICS_auxB+4
0xD433	0x0000 ;?ICS_auxB+6
0xD435	0x0000 ;?ICS_auxB+8
0xD437	0x0000 ;?ICS_auxB+10
; end of ?ICS_auxB
;MyProject.c,0 :: ?ICS_lecturaTablaB
0xD439	0x0000 ;?ICS_lecturaTablaB+0
; end of ?ICS_lecturaTablaB
;MyProject.c,0 :: ?ICS_Aux6
0xD43B	0x0000 ;?ICS_Aux6+0
0xD43D	0x0000 ;?ICS_Aux6+2
0xD43F	0x0000 ;?ICS_Aux6+4
0xD441	0x0000 ;?ICS_Aux6+6
0xD443	0x0000 ;?ICS_Aux6+8
0xD445	0x0000 ;?ICS_Aux6+10
; end of ?ICS_Aux6
;MyProject.c,0 :: ?ICS_cuentaUSART
0xD447	0x00 ;?ICS_cuentaUSART+0
; end of ?ICS_cuentaUSART
;MyProject.c,0 :: ?ICS_comienzaContarAtasco
0xD448	0x00 ;?ICS_comienzaContarAtasco+0
; end of ?ICS_comienzaContarAtasco
;MyProject.c,0 :: ?ICS_posteDesc
0xD449	0x00 ;?ICS_posteDesc+0
; end of ?ICS_posteDesc
;MyProject.c,0 :: ?ICS_desbordoGPS
0xD44A	0x0000 ;?ICS_desbordoGPS+0
; end of ?ICS_desbordoGPS
;MyProject.c,0 :: ?ICS_permanencia
0xD44C	0x00 ;?ICS_permanencia+0
; end of ?ICS_permanencia
;MyProject.c,0 :: ?ICS_debugEstado
0xD44D	0x00 ;?ICS_debugEstado+0
; end of ?ICS_debugEstado
;MyProject.c,0 :: ?ICS_empiezaSalida
0xD44E	0x00 ;?ICS_empiezaSalida+0
; end of ?ICS_empiezaSalida
;MyProject.c,0 :: ?ICS_empiezaEntrada
0xD44F	0x00 ;?ICS_empiezaEntrada+0
; end of ?ICS_empiezaEntrada
;MyProject.c,0 :: ?ICS_envioGPS
0xD450	0x0000 ;?ICS_envioGPS+0
0xD452	0x0000 ;?ICS_envioGPS+2
0xD454	0x0000 ;?ICS_envioGPS+4
0xD456	0x00 ;?ICS_envioGPS+6
; end of ?ICS_envioGPS
;MyProject.c,0 :: ?ICS_lecturaTablaPVerdaderos
0xD457	0x0000 ;?ICS_lecturaTablaPVerdaderos+0
; end of ?ICS_lecturaTablaPVerdaderos
;MyProject.c,0 :: ?ICS?lstr122_MyProject
0xD459	0x002C ;?ICS?lstr122_MyProject+0
; end of ?ICS?lstr122_MyProject
;MyProject.c,0 :: ?ICS_l
0xD45B	0x00 ;?ICS_l+0
; end of ?ICS_l
;MyProject.c,0 :: ?ICS_envioSerialGPS
0xD45C	0x0000 ;?ICS_envioSerialGPS+0
0xD45E	0x0000 ;?ICS_envioSerialGPS+2
0xD460	0x0000 ;?ICS_envioSerialGPS+4
0xD462	0x0000 ;?ICS_envioSerialGPS+6
0xD464	0x0000 ;?ICS_envioSerialGPS+8
0xD466	0x0000 ;?ICS_envioSerialGPS+10
0xD468	0x0000 ;?ICS_envioSerialGPS+12
0xD46A	0x0000 ;?ICS_envioSerialGPS+14
0xD46C	0x0000 ;?ICS_envioSerialGPS+16
0xD46E	0x0000 ;?ICS_envioSerialGPS+18
0xD470	0x0000 ;?ICS_envioSerialGPS+20
0xD472	0x0000 ;?ICS_envioSerialGPS+22
0xD474	0x0000 ;?ICS_envioSerialGPS+24
0xD476	0x0000 ;?ICS_envioSerialGPS+26
0xD478	0x0000 ;?ICS_envioSerialGPS+28
0xD47A	0x0000 ;?ICS_envioSerialGPS+30
0xD47C	0x0000 ;?ICS_envioSerialGPS+32
0xD47E	0x0000 ;?ICS_envioSerialGPS+34
0xD480	0x0000 ;?ICS_envioSerialGPS+36
0xD482	0x0000 ;?ICS_envioSerialGPS+38
0xD484	0x0000 ;?ICS_envioSerialGPS+40
0xD486	0x0000 ;?ICS_envioSerialGPS+42
0xD488	0x00 ;?ICS_envioSerialGPS+44
; end of ?ICS_envioSerialGPS
;MyProject.c,0 :: ?ICS_auxEnvioGPS
0xD489	0x0000 ;?ICS_auxEnvioGPS+0
0xD48B	0x0000 ;?ICS_auxEnvioGPS+2
0xD48D	0x00 ;?ICS_auxEnvioGPS+4
; end of ?ICS_auxEnvioGPS
;MyProject.c,0 :: ?ICS_commAT
0xD48E	0x4341 ;?ICS_commAT+0
0xD490	0x2B43 ;?ICS_commAT+2
0xD492	0x3130 ;?ICS_commAT+4
0xD494	0x003A ;?ICS_commAT+6
; end of ?ICS_commAT
;MyProject.c,0 :: ?ICS_pVerdaderosEEntero
0xD496	0x0000 ;?ICS_pVerdaderosEEntero+0
; end of ?ICS_pVerdaderosEEntero
;MyProject.c,0 :: ?ICS_pVerdaderosMEntero
0xD498	0x0000 ;?ICS_pVerdaderosMEntero+0
; end of ?ICS_pVerdaderosMEntero
;MyProject.c,0 :: ?ICS_totalCalculado
0xD49A	0x0000 ;?ICS_totalCalculado+0
; end of ?ICS_totalCalculado
;MyProject.c,0 :: ?ICS_pasajerosTotalesL
0xD49C	0x0000 ;?ICS_pasajerosTotalesL+0
; end of ?ICS_pasajerosTotalesL
;MyProject.c,0 :: ?ICS_pBajan
0xD49E	0x0000 ;?ICS_pBajan+0
; end of ?ICS_pBajan
;MyProject.c,0 :: ?ICS_pSuben
0xD4A0	0x0000 ;?ICS_pSuben+0
; end of ?ICS_pSuben
;MyProject.c,0 :: ?ICS_pasajerosVerdaderos
0xD4A2	0x0000 ;?ICS_pasajerosVerdaderos+0
0xD4A4	0x0000 ;?ICS_pasajerosVerdaderos+2
; end of ?ICS_pasajerosVerdaderos
;MyProject.c,0 :: ?ICS_debugEstadoB
0xD4A6	0x00 ;?ICS_debugEstadoB+0
; end of ?ICS_debugEstadoB
;MyProject.c,0 :: ?ICS_bufferRecepcionEsclavo
0xD4A7	0x0000 ;?ICS_bufferRecepcionEsclavo+0
0xD4A9	0x0000 ;?ICS_bufferRecepcionEsclavo+2
0xD4AB	0x0000 ;?ICS_bufferRecepcionEsclavo+4
0xD4AD	0x0000 ;?ICS_bufferRecepcionEsclavo+6
0xD4AF	0x0000 ;?ICS_bufferRecepcionEsclavo+8
; end of ?ICS_bufferRecepcionEsclavo
;MyProject.c,0 :: ?ICS_bloqEsclavo
0xD4B1	0x00 ;?ICS_bloqEsclavo+0
; end of ?ICS_bloqEsclavo
;MyProject.c,0 :: ?ICS?lstr128_MyProject
0xD4B2	0x002C ;?ICS?lstr128_MyProject+0
; end of ?ICS?lstr128_MyProject
;MyProject.c,0 :: ?ICS_estado1
0xD4B4	0x01 ;?ICS_estado1+0
; end of ?ICS_estado1
;MyProject.c,0 :: ?ICS?lstr129_MyProject
0xD4B5	0x2C30 ;?ICS?lstr129_MyProject+0
0xD4B7	0x0A0D ;?ICS?lstr129_MyProject+2
0xD4B9	0x00 ;?ICS?lstr129_MyProject+4
; end of ?ICS?lstr129_MyProject
;MyProject.c,0 :: ?ICS?lstr126_MyProject
0xD4BA	0x002C ;?ICS?lstr126_MyProject+0
; end of ?ICS?lstr126_MyProject
;MyProject.c,0 :: ?ICS_pasajerosBajanE
0xD4BC	0x0000 ;?ICS_pasajerosBajanE+0
; end of ?ICS_pasajerosBajanE
;MyProject.c,0 :: ?ICS_auxCuentaBloqueo
0xD4BE	0x00 ;?ICS_auxCuentaBloqueo+0
; end of ?ICS_auxCuentaBloqueo
;MyProject.c,0 :: ?ICS?lstr127_MyProject
0xD4BF	0x002C ;?ICS?lstr127_MyProject+0
; end of ?ICS?lstr127_MyProject
;MyProject.c,0 :: ?ICS_cuentaBloqueo
0xD4C1	0x00 ;?ICS_cuentaBloqueo+0
; end of ?ICS_cuentaBloqueo
;MyProject.c,0 :: ?ICS_Aux2
0xD4C2	0x0000 ;?ICS_Aux2+0
0xD4C4	0x0000 ;?ICS_Aux2+2
0xD4C6	0x0000 ;?ICS_Aux2+4
0xD4C8	0x0000 ;?ICS_Aux2+6
0xD4CA	0x0000 ;?ICS_Aux2+8
0xD4CC	0x0000 ;?ICS_Aux2+10
; end of ?ICS_Aux2
;MyProject.c,0 :: ?ICS_Aux1
0xD4CE	0x0000 ;?ICS_Aux1+0
0xD4D0	0x0000 ;?ICS_Aux1+2
0xD4D2	0x0000 ;?ICS_Aux1+4
0xD4D4	0x0000 ;?ICS_Aux1+6
0xD4D6	0x0000 ;?ICS_Aux1+8
0xD4D8	0x0000 ;?ICS_Aux1+10
; end of ?ICS_Aux1
;MyProject.c,0 :: ?ICS_Aux3
0xD4DA	0x0000 ;?ICS_Aux3+0
0xD4DC	0x0000 ;?ICS_Aux3+2
0xD4DE	0x0000 ;?ICS_Aux3+4
0xD4E0	0x0000 ;?ICS_Aux3+6
0xD4E2	0x0000 ;?ICS_Aux3+8
0xD4E4	0x0000 ;?ICS_Aux3+10
; end of ?ICS_Aux3
;MyProject.c,0 :: ?ICS_Aux5
0xD4E6	0x0000 ;?ICS_Aux5+0
0xD4E8	0x0000 ;?ICS_Aux5+2
0xD4EA	0x0000 ;?ICS_Aux5+4
0xD4EC	0x0000 ;?ICS_Aux5+6
0xD4EE	0x0000 ;?ICS_Aux5+8
0xD4F0	0x0000 ;?ICS_Aux5+10
; end of ?ICS_Aux5
;MyProject.c,0 :: ?ICS_Aux4
0xD4F2	0x0000 ;?ICS_Aux4+0
0xD4F4	0x0000 ;?ICS_Aux4+2
0xD4F6	0x0000 ;?ICS_Aux4+4
0xD4F8	0x0000 ;?ICS_Aux4+6
0xD4FA	0x0000 ;?ICS_Aux4+8
0xD4FC	0x0000 ;?ICS_Aux4+10
; end of ?ICS_Aux4
;MyProject.c,0 :: ?ICS_estado3
0xD4FE	0x01 ;?ICS_estado3+0
; end of ?ICS_estado3
;MyProject.c,0 :: ?ICS_estado2
0xD4FF	0x01 ;?ICS_estado2+0
; end of ?ICS_estado2
;MyProject.c,0 :: ?ICS_estado4
0xD500	0x01 ;?ICS_estado4+0
; end of ?ICS_estado4
;MyProject.c,0 :: ?ICS_estado6
0xD501	0x01 ;?ICS_estado6+0
; end of ?ICS_estado6
;MyProject.c,0 :: ?ICS_estado5
0xD502	0x01 ;?ICS_estado5+0
; end of ?ICS_estado5
;MyProject.c,0 :: ?ICS?lstr123_MyProject
0xD503	0x002C ;?ICS?lstr123_MyProject+0
; end of ?ICS?lstr123_MyProject
;MyProject.c,0 :: ?ICS_pasajerosSubenM
0xD505	0x0000 ;?ICS_pasajerosSubenM+0
; end of ?ICS_pasajerosSubenM
;MyProject.c,0 :: ?ICS?lstr125_MyProject
0xD507	0x002C ;?ICS?lstr125_MyProject+0
; end of ?ICS?lstr125_MyProject
;MyProject.c,0 :: ?ICS_pasajerosBajanM
0xD509	0x0000 ;?ICS_pasajerosBajanM+0
; end of ?ICS_pasajerosBajanM
;MyProject.c,0 :: ?ICS_pasajerosSubenE
0xD50B	0x0000 ;?ICS_pasajerosSubenE+0
; end of ?ICS_pasajerosSubenE
;MyProject.c,0 :: ?ICS_posteDesconectado
0xD50D	0x4544 ;?ICS_posteDesconectado+0
0xD50F	0x4353 ;?ICS_posteDesconectado+2
0xD511	0x00 ;?ICS_posteDesconectado+4
; end of ?ICS_posteDesconectado
;MyProject.c,0 :: ?ICS?lstr124_MyProject
0xD512	0x002C ;?ICS?lstr124_MyProject+0
; end of ?ICS?lstr124_MyProject
;MyProject.c,0 :: ?ICSeepromLeeNumero_bufferLong_L0
0xD514	0x0000 ;?ICSeepromLeeNumero_bufferLong_L0+0
0xD516	0x0000 ;?ICSeepromLeeNumero_bufferLong_L0+2
0xD518	0x0000 ;?ICSeepromLeeNumero_bufferLong_L0+4
0xD51A	0x0000 ;?ICSeepromLeeNumero_bufferLong_L0+6
0xD51C	0x0000 ;?ICSeepromLeeNumero_bufferLong_L0+8
0xD51E	0x0000 ;?ICSeepromLeeNumero_bufferLong_L0+10
0xD520	0x0000 ;?ICSeepromLeeNumero_bufferLong_L0+12
0xD522	0x0000 ;?ICSeepromLeeNumero_bufferLong_L0+14
; end of ?ICSeepromLeeNumero_bufferLong_L0
;MyProject.c,0 :: ?ICSeepromLeeNumero_lectura_L0
0xD524	0x0000 ;?ICSeepromLeeNumero_lectura_L0+0
0xD526	0x0000 ;?ICSeepromLeeNumero_lectura_L0+2
; end of ?ICSeepromLeeNumero_lectura_L0
;MyProject.c,0 :: ?lstr_34_MyProject
0xD528	0x5254 ;?lstr_34_MyProject+0
0xD52A	0x4E41 ;?lstr_34_MyProject+2
0xD52C	0x4953 ;?lstr_34_MyProject+4
0xD52E	0x4943 ;?lstr_34_MyProject+6
0xD530	0x4E4F ;?lstr_34_MyProject+8
0xD532	0x4520 ;?lstr_34_MyProject+10
0xD534	0x544E ;?lstr_34_MyProject+12
0xD536	0x4152 ;?lstr_34_MyProject+14
0xD538	0x4144 ;?lstr_34_MyProject+16
0xD53A	0x00 ;?lstr_34_MyProject+18
; end of ?lstr_34_MyProject
;MyProject.c,0 :: ?lstr_58_MyProject
0xD53B	0x5254 ;?lstr_58_MyProject+0
0xD53D	0x4E41 ;?lstr_58_MyProject+2
0xD53F	0x4953 ;?lstr_58_MyProject+4
0xD541	0x4943 ;?lstr_58_MyProject+6
0xD543	0x4E4F ;?lstr_58_MyProject+8
0xD545	0x4520 ;?lstr_58_MyProject+10
0xD547	0x544E ;?lstr_58_MyProject+12
0xD549	0x4152 ;?lstr_58_MyProject+14
0xD54B	0x4144 ;?lstr_58_MyProject+16
0xD54D	0x00 ;?lstr_58_MyProject+18
; end of ?lstr_58_MyProject
;MyProject.c,0 :: ?lstr_42_MyProject
0xD54E	0x5254 ;?lstr_42_MyProject+0
0xD550	0x4E41 ;?lstr_42_MyProject+2
0xD552	0x4953 ;?lstr_42_MyProject+4
0xD554	0x4943 ;?lstr_42_MyProject+6
0xD556	0x4E4F ;?lstr_42_MyProject+8
0xD558	0x4520 ;?lstr_42_MyProject+10
0xD55A	0x544E ;?lstr_42_MyProject+12
0xD55C	0x4152 ;?lstr_42_MyProject+14
0xD55E	0x4144 ;?lstr_42_MyProject+16
0xD560	0x00 ;?lstr_42_MyProject+18
; end of ?lstr_42_MyProject
;MyProject.c,0 :: ?lstr_82_MyProject
0xD561	0x5254 ;?lstr_82_MyProject+0
0xD563	0x4E41 ;?lstr_82_MyProject+2
0xD565	0x4953 ;?lstr_82_MyProject+4
0xD567	0x4943 ;?lstr_82_MyProject+6
0xD569	0x4E4F ;?lstr_82_MyProject+8
0xD56B	0x4520 ;?lstr_82_MyProject+10
0xD56D	0x544E ;?lstr_82_MyProject+12
0xD56F	0x4152 ;?lstr_82_MyProject+14
0xD571	0x4144 ;?lstr_82_MyProject+16
0xD573	0x00 ;?lstr_82_MyProject+18
; end of ?lstr_82_MyProject
;MyProject.c,0 :: ?lstr_74_MyProject
0xD574	0x5254 ;?lstr_74_MyProject+0
0xD576	0x4E41 ;?lstr_74_MyProject+2
0xD578	0x4953 ;?lstr_74_MyProject+4
0xD57A	0x4943 ;?lstr_74_MyProject+6
0xD57C	0x4E4F ;?lstr_74_MyProject+8
0xD57E	0x4520 ;?lstr_74_MyProject+10
0xD580	0x544E ;?lstr_74_MyProject+12
0xD582	0x4152 ;?lstr_74_MyProject+14
0xD584	0x4144 ;?lstr_74_MyProject+16
0xD586	0x00 ;?lstr_74_MyProject+18
; end of ?lstr_74_MyProject
;MyProject.c,0 :: ?lstr_10_MyProject
0xD587	0x5254 ;?lstr_10_MyProject+0
0xD589	0x4E41 ;?lstr_10_MyProject+2
0xD58B	0x4953 ;?lstr_10_MyProject+4
0xD58D	0x4943 ;?lstr_10_MyProject+6
0xD58F	0x4E4F ;?lstr_10_MyProject+8
0xD591	0x4520 ;?lstr_10_MyProject+10
0xD593	0x544E ;?lstr_10_MyProject+12
0xD595	0x4152 ;?lstr_10_MyProject+14
0xD597	0x4144 ;?lstr_10_MyProject+16
0xD599	0x00 ;?lstr_10_MyProject+18
; end of ?lstr_10_MyProject
;MyProject.c,0 :: ?lstr_18_MyProject
0xD59A	0x5254 ;?lstr_18_MyProject+0
0xD59C	0x4E41 ;?lstr_18_MyProject+2
0xD59E	0x4953 ;?lstr_18_MyProject+4
0xD5A0	0x4943 ;?lstr_18_MyProject+6
0xD5A2	0x4E4F ;?lstr_18_MyProject+8
0xD5A4	0x4520 ;?lstr_18_MyProject+10
0xD5A6	0x544E ;?lstr_18_MyProject+12
0xD5A8	0x4152 ;?lstr_18_MyProject+14
0xD5AA	0x4144 ;?lstr_18_MyProject+16
0xD5AC	0x00 ;?lstr_18_MyProject+18
; end of ?lstr_18_MyProject
;MyProject.c,0 :: ?lstr_50_MyProject
0xD5AD	0x5254 ;?lstr_50_MyProject+0
0xD5AF	0x4E41 ;?lstr_50_MyProject+2
0xD5B1	0x4953 ;?lstr_50_MyProject+4
0xD5B3	0x4943 ;?lstr_50_MyProject+6
0xD5B5	0x4E4F ;?lstr_50_MyProject+8
0xD5B7	0x4520 ;?lstr_50_MyProject+10
0xD5B9	0x544E ;?lstr_50_MyProject+12
0xD5BB	0x4152 ;?lstr_50_MyProject+14
0xD5BD	0x4144 ;?lstr_50_MyProject+16
0xD5BF	0x00 ;?lstr_50_MyProject+18
; end of ?lstr_50_MyProject
;MyProject.c,0 :: ?lstr_106_MyProject
0xD5C0	0x5254 ;?lstr_106_MyProject+0
0xD5C2	0x4E41 ;?lstr_106_MyProject+2
0xD5C4	0x4953 ;?lstr_106_MyProject+4
0xD5C6	0x4943 ;?lstr_106_MyProject+6
0xD5C8	0x4E4F ;?lstr_106_MyProject+8
0xD5CA	0x4520 ;?lstr_106_MyProject+10
0xD5CC	0x544E ;?lstr_106_MyProject+12
0xD5CE	0x4152 ;?lstr_106_MyProject+14
0xD5D0	0x4144 ;?lstr_106_MyProject+16
0xD5D2	0x00 ;?lstr_106_MyProject+18
; end of ?lstr_106_MyProject
;MyProject.c,0 :: ?lstr_114_MyProject
0xD5D3	0x5254 ;?lstr_114_MyProject+0
0xD5D5	0x4E41 ;?lstr_114_MyProject+2
0xD5D7	0x4953 ;?lstr_114_MyProject+4
0xD5D9	0x4943 ;?lstr_114_MyProject+6
0xD5DB	0x4E4F ;?lstr_114_MyProject+8
0xD5DD	0x4520 ;?lstr_114_MyProject+10
0xD5DF	0x544E ;?lstr_114_MyProject+12
0xD5E1	0x4152 ;?lstr_114_MyProject+14
0xD5E3	0x4144 ;?lstr_114_MyProject+16
0xD5E5	0x00 ;?lstr_114_MyProject+18
; end of ?lstr_114_MyProject
;MyProject.c,0 :: ?lstr_26_MyProject
0xD5E6	0x5254 ;?lstr_26_MyProject+0
0xD5E8	0x4E41 ;?lstr_26_MyProject+2
0xD5EA	0x4953 ;?lstr_26_MyProject+4
0xD5EC	0x4943 ;?lstr_26_MyProject+6
0xD5EE	0x4E4F ;?lstr_26_MyProject+8
0xD5F0	0x4520 ;?lstr_26_MyProject+10
0xD5F2	0x544E ;?lstr_26_MyProject+12
0xD5F4	0x4152 ;?lstr_26_MyProject+14
0xD5F6	0x4144 ;?lstr_26_MyProject+16
0xD5F8	0x00 ;?lstr_26_MyProject+18
; end of ?lstr_26_MyProject
;MyProject.c,0 :: ?lstr_66_MyProject
0xD5F9	0x5254 ;?lstr_66_MyProject+0
0xD5FB	0x4E41 ;?lstr_66_MyProject+2
0xD5FD	0x4953 ;?lstr_66_MyProject+4
0xD5FF	0x4943 ;?lstr_66_MyProject+6
0xD601	0x4E4F ;?lstr_66_MyProject+8
0xD603	0x4520 ;?lstr_66_MyProject+10
0xD605	0x544E ;?lstr_66_MyProject+12
0xD607	0x4152 ;?lstr_66_MyProject+14
0xD609	0x4144 ;?lstr_66_MyProject+16
0xD60B	0x00 ;?lstr_66_MyProject+18
; end of ?lstr_66_MyProject
;MyProject.c,0 :: ?lstr_98_MyProject
0xD60C	0x5254 ;?lstr_98_MyProject+0
0xD60E	0x4E41 ;?lstr_98_MyProject+2
0xD610	0x4953 ;?lstr_98_MyProject+4
0xD612	0x4943 ;?lstr_98_MyProject+6
0xD614	0x4E4F ;?lstr_98_MyProject+8
0xD616	0x4520 ;?lstr_98_MyProject+10
0xD618	0x544E ;?lstr_98_MyProject+12
0xD61A	0x4152 ;?lstr_98_MyProject+14
0xD61C	0x4144 ;?lstr_98_MyProject+16
0xD61E	0x00 ;?lstr_98_MyProject+18
; end of ?lstr_98_MyProject
;MyProject.c,0 :: ?lstr_90_MyProject
0xD61F	0x5254 ;?lstr_90_MyProject+0
0xD621	0x4E41 ;?lstr_90_MyProject+2
0xD623	0x4953 ;?lstr_90_MyProject+4
0xD625	0x4943 ;?lstr_90_MyProject+6
0xD627	0x4E4F ;?lstr_90_MyProject+8
0xD629	0x4520 ;?lstr_90_MyProject+10
0xD62B	0x544E ;?lstr_90_MyProject+12
0xD62D	0x4152 ;?lstr_90_MyProject+14
0xD62F	0x4144 ;?lstr_90_MyProject+16
0xD631	0x00 ;?lstr_90_MyProject+18
; end of ?lstr_90_MyProject
;MyProject.c,0 :: ?lstr_94_MyProject
0xD632	0x5254 ;?lstr_94_MyProject+0
0xD634	0x4E41 ;?lstr_94_MyProject+2
0xD636	0x4953 ;?lstr_94_MyProject+4
0xD638	0x4943 ;?lstr_94_MyProject+6
0xD63A	0x4E4F ;?lstr_94_MyProject+8
0xD63C	0x5320 ;?lstr_94_MyProject+10
0xD63E	0x4C41 ;?lstr_94_MyProject+12
0xD640	0x4449 ;?lstr_94_MyProject+14
0xD642	0x0041 ;?lstr_94_MyProject+16
; end of ?lstr_94_MyProject
;MyProject.c,0 :: ?lstr_115_MyProject
0xD644	0x4942 ;?lstr_115_MyProject+0
0xD646	0x4E45 ;?lstr_115_MyProject+2
0xD648	0x4556 ;?lstr_115_MyProject+4
0xD64A	0x494E ;?lstr_115_MyProject+6
0xD64C	0x4F44 ;?lstr_115_MyProject+8
0xD64E	0x203A ;?lstr_115_MyProject+10
0xD650	0x3624 ;?lstr_115_MyProject+12
0xD652	0x302E ;?lstr_115_MyProject+14
0xD654	0x0030 ;?lstr_115_MyProject+16
; end of ?lstr_115_MyProject
;MyProject.c,0 :: ?lstr_62_MyProject
0xD656	0x5254 ;?lstr_62_MyProject+0
0xD658	0x4E41 ;?lstr_62_MyProject+2
0xD65A	0x4953 ;?lstr_62_MyProject+4
0xD65C	0x4943 ;?lstr_62_MyProject+6
0xD65E	0x4E4F ;?lstr_62_MyProject+8
0xD660	0x5320 ;?lstr_62_MyProject+10
0xD662	0x4C41 ;?lstr_62_MyProject+12
0xD664	0x4449 ;?lstr_62_MyProject+14
0xD666	0x0041 ;?lstr_62_MyProject+16
; end of ?lstr_62_MyProject
;MyProject.c,0 :: ?lstr_14_MyProject
0xD668	0x5254 ;?lstr_14_MyProject+0
0xD66A	0x4E41 ;?lstr_14_MyProject+2
0xD66C	0x4953 ;?lstr_14_MyProject+4
0xD66E	0x4943 ;?lstr_14_MyProject+6
0xD670	0x4E4F ;?lstr_14_MyProject+8
0xD672	0x5320 ;?lstr_14_MyProject+10
0xD674	0x4C41 ;?lstr_14_MyProject+12
0xD676	0x4449 ;?lstr_14_MyProject+14
0xD678	0x0041 ;?lstr_14_MyProject+16
; end of ?lstr_14_MyProject
;MyProject.c,0 :: ?lstr_11_MyProject
0xD67A	0x4942 ;?lstr_11_MyProject+0
0xD67C	0x4E45 ;?lstr_11_MyProject+2
0xD67E	0x4556 ;?lstr_11_MyProject+4
0xD680	0x494E ;?lstr_11_MyProject+6
0xD682	0x4F44 ;?lstr_11_MyProject+8
0xD684	0x203A ;?lstr_11_MyProject+10
0xD686	0x3624 ;?lstr_11_MyProject+12
0xD688	0x302E ;?lstr_11_MyProject+14
0xD68A	0x0030 ;?lstr_11_MyProject+16
; end of ?lstr_11_MyProject
;MyProject.c,0 :: ?lstr_22_MyProject
0xD68C	0x5254 ;?lstr_22_MyProject+0
0xD68E	0x4E41 ;?lstr_22_MyProject+2
0xD690	0x4953 ;?lstr_22_MyProject+4
0xD692	0x4943 ;?lstr_22_MyProject+6
0xD694	0x4E4F ;?lstr_22_MyProject+8
0xD696	0x5320 ;?lstr_22_MyProject+10
0xD698	0x4C41 ;?lstr_22_MyProject+12
0xD69A	0x4449 ;?lstr_22_MyProject+14
0xD69C	0x0041 ;?lstr_22_MyProject+16
; end of ?lstr_22_MyProject
;MyProject.c,0 :: ?lstr_102_MyProject
0xD69E	0x5254 ;?lstr_102_MyProject+0
0xD6A0	0x4E41 ;?lstr_102_MyProject+2
0xD6A2	0x4953 ;?lstr_102_MyProject+4
0xD6A4	0x4943 ;?lstr_102_MyProject+6
0xD6A6	0x4E4F ;?lstr_102_MyProject+8
0xD6A8	0x5320 ;?lstr_102_MyProject+10
0xD6AA	0x4C41 ;?lstr_102_MyProject+12
0xD6AC	0x4449 ;?lstr_102_MyProject+14
0xD6AE	0x0041 ;?lstr_102_MyProject+16
; end of ?lstr_102_MyProject
;MyProject.c,0 :: ?lstr_51_MyProject
0xD6B0	0x4942 ;?lstr_51_MyProject+0
0xD6B2	0x4E45 ;?lstr_51_MyProject+2
0xD6B4	0x4556 ;?lstr_51_MyProject+4
0xD6B6	0x494E ;?lstr_51_MyProject+6
0xD6B8	0x4F44 ;?lstr_51_MyProject+8
0xD6BA	0x203A ;?lstr_51_MyProject+10
0xD6BC	0x3624 ;?lstr_51_MyProject+12
0xD6BE	0x302E ;?lstr_51_MyProject+14
0xD6C0	0x0030 ;?lstr_51_MyProject+16
; end of ?lstr_51_MyProject
;MyProject.c,0 :: ?lstr_107_MyProject
0xD6C2	0x4942 ;?lstr_107_MyProject+0
0xD6C4	0x4E45 ;?lstr_107_MyProject+2
0xD6C6	0x4556 ;?lstr_107_MyProject+4
0xD6C8	0x494E ;?lstr_107_MyProject+6
0xD6CA	0x4F44 ;?lstr_107_MyProject+8
0xD6CC	0x203A ;?lstr_107_MyProject+10
0xD6CE	0x3624 ;?lstr_107_MyProject+12
0xD6D0	0x302E ;?lstr_107_MyProject+14
0xD6D2	0x0030 ;?lstr_107_MyProject+16
; end of ?lstr_107_MyProject
;MyProject.c,0 :: ?lstr_38_MyProject
0xD6D4	0x5254 ;?lstr_38_MyProject+0
0xD6D6	0x4E41 ;?lstr_38_MyProject+2
0xD6D8	0x4953 ;?lstr_38_MyProject+4
0xD6DA	0x4943 ;?lstr_38_MyProject+6
0xD6DC	0x4E4F ;?lstr_38_MyProject+8
0xD6DE	0x5320 ;?lstr_38_MyProject+10
0xD6E0	0x4C41 ;?lstr_38_MyProject+12
0xD6E2	0x4449 ;?lstr_38_MyProject+14
0xD6E4	0x0041 ;?lstr_38_MyProject+16
; end of ?lstr_38_MyProject
;MyProject.c,0 :: ?lstr_99_MyProject
0xD6E6	0x4942 ;?lstr_99_MyProject+0
0xD6E8	0x4E45 ;?lstr_99_MyProject+2
0xD6EA	0x4556 ;?lstr_99_MyProject+4
0xD6EC	0x494E ;?lstr_99_MyProject+6
0xD6EE	0x4F44 ;?lstr_99_MyProject+8
0xD6F0	0x203A ;?lstr_99_MyProject+10
0xD6F2	0x3624 ;?lstr_99_MyProject+12
0xD6F4	0x302E ;?lstr_99_MyProject+14
0xD6F6	0x0030 ;?lstr_99_MyProject+16
; end of ?lstr_99_MyProject
;MyProject.c,0 :: ?lstr_19_MyProject
0xD6F8	0x4942 ;?lstr_19_MyProject+0
0xD6FA	0x4E45 ;?lstr_19_MyProject+2
0xD6FC	0x4556 ;?lstr_19_MyProject+4
0xD6FE	0x494E ;?lstr_19_MyProject+6
0xD700	0x4F44 ;?lstr_19_MyProject+8
0xD702	0x203A ;?lstr_19_MyProject+10
0xD704	0x3624 ;?lstr_19_MyProject+12
0xD706	0x302E ;?lstr_19_MyProject+14
0xD708	0x0030 ;?lstr_19_MyProject+16
; end of ?lstr_19_MyProject
;MyProject.c,0 :: ?lstr_110_MyProject
0xD70A	0x5254 ;?lstr_110_MyProject+0
0xD70C	0x4E41 ;?lstr_110_MyProject+2
0xD70E	0x4953 ;?lstr_110_MyProject+4
0xD710	0x4943 ;?lstr_110_MyProject+6
0xD712	0x4E4F ;?lstr_110_MyProject+8
0xD714	0x5320 ;?lstr_110_MyProject+10
0xD716	0x4C41 ;?lstr_110_MyProject+12
0xD718	0x4449 ;?lstr_110_MyProject+14
0xD71A	0x0041 ;?lstr_110_MyProject+16
; end of ?lstr_110_MyProject
;MyProject.c,0 :: ?lstr_35_MyProject
0xD71C	0x4942 ;?lstr_35_MyProject+0
0xD71E	0x4E45 ;?lstr_35_MyProject+2
0xD720	0x4556 ;?lstr_35_MyProject+4
0xD722	0x494E ;?lstr_35_MyProject+6
0xD724	0x4F44 ;?lstr_35_MyProject+8
0xD726	0x203A ;?lstr_35_MyProject+10
0xD728	0x3624 ;?lstr_35_MyProject+12
0xD72A	0x302E ;?lstr_35_MyProject+14
0xD72C	0x0030 ;?lstr_35_MyProject+16
; end of ?lstr_35_MyProject
;MyProject.c,0 :: ?lstr_27_MyProject
0xD72E	0x4942 ;?lstr_27_MyProject+0
0xD730	0x4E45 ;?lstr_27_MyProject+2
0xD732	0x4556 ;?lstr_27_MyProject+4
0xD734	0x494E ;?lstr_27_MyProject+6
0xD736	0x4F44 ;?lstr_27_MyProject+8
0xD738	0x203A ;?lstr_27_MyProject+10
0xD73A	0x3624 ;?lstr_27_MyProject+12
0xD73C	0x302E ;?lstr_27_MyProject+14
0xD73E	0x0030 ;?lstr_27_MyProject+16
; end of ?lstr_27_MyProject
;MyProject.c,0 :: ?lstr_83_MyProject
0xD740	0x4942 ;?lstr_83_MyProject+0
0xD742	0x4E45 ;?lstr_83_MyProject+2
0xD744	0x4556 ;?lstr_83_MyProject+4
0xD746	0x494E ;?lstr_83_MyProject+6
0xD748	0x4F44 ;?lstr_83_MyProject+8
0xD74A	0x203A ;?lstr_83_MyProject+10
0xD74C	0x3624 ;?lstr_83_MyProject+12
0xD74E	0x302E ;?lstr_83_MyProject+14
0xD750	0x0030 ;?lstr_83_MyProject+16
; end of ?lstr_83_MyProject
;MyProject.c,0 :: ?lstr_75_MyProject
0xD752	0x4942 ;?lstr_75_MyProject+0
0xD754	0x4E45 ;?lstr_75_MyProject+2
0xD756	0x4556 ;?lstr_75_MyProject+4
0xD758	0x494E ;?lstr_75_MyProject+6
0xD75A	0x4F44 ;?lstr_75_MyProject+8
0xD75C	0x203A ;?lstr_75_MyProject+10
0xD75E	0x3624 ;?lstr_75_MyProject+12
0xD760	0x302E ;?lstr_75_MyProject+14
0xD762	0x0030 ;?lstr_75_MyProject+16
; end of ?lstr_75_MyProject
;MyProject.c,0 :: ?lstr_118_MyProject
0xD764	0x5254 ;?lstr_118_MyProject+0
0xD766	0x4E41 ;?lstr_118_MyProject+2
0xD768	0x4953 ;?lstr_118_MyProject+4
0xD76A	0x4943 ;?lstr_118_MyProject+6
0xD76C	0x4E4F ;?lstr_118_MyProject+8
0xD76E	0x5320 ;?lstr_118_MyProject+10
0xD770	0x4C41 ;?lstr_118_MyProject+12
0xD772	0x4449 ;?lstr_118_MyProject+14
0xD774	0x0041 ;?lstr_118_MyProject+16
; end of ?lstr_118_MyProject
;MyProject.c,0 :: ?lstr_91_MyProject
0xD776	0x4942 ;?lstr_91_MyProject+0
0xD778	0x4E45 ;?lstr_91_MyProject+2
0xD77A	0x4556 ;?lstr_91_MyProject+4
0xD77C	0x494E ;?lstr_91_MyProject+6
0xD77E	0x4F44 ;?lstr_91_MyProject+8
0xD780	0x203A ;?lstr_91_MyProject+10
0xD782	0x3624 ;?lstr_91_MyProject+12
0xD784	0x302E ;?lstr_91_MyProject+14
0xD786	0x0030 ;?lstr_91_MyProject+16
; end of ?lstr_91_MyProject
;MyProject.c,0 :: ?lstr_70_MyProject
0xD788	0x5254 ;?lstr_70_MyProject+0
0xD78A	0x4E41 ;?lstr_70_MyProject+2
0xD78C	0x4953 ;?lstr_70_MyProject+4
0xD78E	0x4943 ;?lstr_70_MyProject+6
0xD790	0x4E4F ;?lstr_70_MyProject+8
0xD792	0x5320 ;?lstr_70_MyProject+10
0xD794	0x4C41 ;?lstr_70_MyProject+12
0xD796	0x4449 ;?lstr_70_MyProject+14
0xD798	0x0041 ;?lstr_70_MyProject+16
; end of ?lstr_70_MyProject
;MyProject.c,0 :: ?ICSeepromEscribeNumero_bufferLong_L0
0xD79A	0x0000 ;?ICSeepromEscribeNumero_bufferLong_L0+0
0xD79C	0x0000 ;?ICSeepromEscribeNumero_bufferLong_L0+2
0xD79E	0x0000 ;?ICSeepromEscribeNumero_bufferLong_L0+4
0xD7A0	0x0000 ;?ICSeepromEscribeNumero_bufferLong_L0+6
0xD7A2	0x0000 ;?ICSeepromEscribeNumero_bufferLong_L0+8
0xD7A4	0x0000 ;?ICSeepromEscribeNumero_bufferLong_L0+10
0xD7A6	0x0000 ;?ICSeepromEscribeNumero_bufferLong_L0+12
0xD7A8	0x0000 ;?ICSeepromEscribeNumero_bufferLong_L0+14
; end of ?ICSeepromEscribeNumero_bufferLong_L0
;MyProject.c,0 :: ?ICSeepromEscribeNumero_i_L0
0xD7AA	0x00 ;?ICSeepromEscribeNumero_i_L0+0
; end of ?ICSeepromEscribeNumero_i_L0
;MyProject.c,0 :: ?ICSeepromEscribeNumero_aux_L0
0xD7AB	0x00 ;?ICSeepromEscribeNumero_aux_L0+0
; end of ?ICSeepromEscribeNumero_aux_L0
;MyProject.c,0 :: ?lstr_67_MyProject
0xD7AC	0x4942 ;?lstr_67_MyProject+0
0xD7AE	0x4E45 ;?lstr_67_MyProject+2
0xD7B0	0x4556 ;?lstr_67_MyProject+4
0xD7B2	0x494E ;?lstr_67_MyProject+6
0xD7B4	0x4F44 ;?lstr_67_MyProject+8
0xD7B6	0x203A ;?lstr_67_MyProject+10
0xD7B8	0x3624 ;?lstr_67_MyProject+12
0xD7BA	0x302E ;?lstr_67_MyProject+14
0xD7BC	0x0030 ;?lstr_67_MyProject+16
; end of ?lstr_67_MyProject
;MyProject.c,0 :: ?lstr_30_MyProject
0xD7BE	0x5254 ;?lstr_30_MyProject+0
0xD7C0	0x4E41 ;?lstr_30_MyProject+2
0xD7C2	0x4953 ;?lstr_30_MyProject+4
0xD7C4	0x4943 ;?lstr_30_MyProject+6
0xD7C6	0x4E4F ;?lstr_30_MyProject+8
0xD7C8	0x5320 ;?lstr_30_MyProject+10
0xD7CA	0x4C41 ;?lstr_30_MyProject+12
0xD7CC	0x4449 ;?lstr_30_MyProject+14
0xD7CE	0x0041 ;?lstr_30_MyProject+16
; end of ?lstr_30_MyProject
;MyProject.c,0 :: ?lstr_54_MyProject
0xD7D0	0x5254 ;?lstr_54_MyProject+0
0xD7D2	0x4E41 ;?lstr_54_MyProject+2
0xD7D4	0x4953 ;?lstr_54_MyProject+4
0xD7D6	0x4943 ;?lstr_54_MyProject+6
0xD7D8	0x4E4F ;?lstr_54_MyProject+8
0xD7DA	0x5320 ;?lstr_54_MyProject+10
0xD7DC	0x4C41 ;?lstr_54_MyProject+12
0xD7DE	0x4449 ;?lstr_54_MyProject+14
0xD7E0	0x0041 ;?lstr_54_MyProject+16
; end of ?lstr_54_MyProject
;MyProject.c,0 :: ?lstr_59_MyProject
0xD7E2	0x4942 ;?lstr_59_MyProject+0
0xD7E4	0x4E45 ;?lstr_59_MyProject+2
0xD7E6	0x4556 ;?lstr_59_MyProject+4
0xD7E8	0x494E ;?lstr_59_MyProject+6
0xD7EA	0x4F44 ;?lstr_59_MyProject+8
0xD7EC	0x203A ;?lstr_59_MyProject+10
0xD7EE	0x3624 ;?lstr_59_MyProject+12
0xD7F0	0x302E ;?lstr_59_MyProject+14
0xD7F2	0x0030 ;?lstr_59_MyProject+16
; end of ?lstr_59_MyProject
;MyProject.c,0 :: ?lstr_86_MyProject
0xD7F4	0x5254 ;?lstr_86_MyProject+0
0xD7F6	0x4E41 ;?lstr_86_MyProject+2
0xD7F8	0x4953 ;?lstr_86_MyProject+4
0xD7FA	0x4943 ;?lstr_86_MyProject+6
0xD7FC	0x4E4F ;?lstr_86_MyProject+8
0xD7FE	0x5320 ;?lstr_86_MyProject+10
0xD800	0x4C41 ;?lstr_86_MyProject+12
0xD802	0x4449 ;?lstr_86_MyProject+14
0xD804	0x0041 ;?lstr_86_MyProject+16
; end of ?lstr_86_MyProject
;MyProject.c,0 :: ?lstr_43_MyProject
0xD806	0x4942 ;?lstr_43_MyProject+0
0xD808	0x4E45 ;?lstr_43_MyProject+2
0xD80A	0x4556 ;?lstr_43_MyProject+4
0xD80C	0x494E ;?lstr_43_MyProject+6
0xD80E	0x4F44 ;?lstr_43_MyProject+8
0xD810	0x203A ;?lstr_43_MyProject+10
0xD812	0x3624 ;?lstr_43_MyProject+12
0xD814	0x302E ;?lstr_43_MyProject+14
0xD816	0x0030 ;?lstr_43_MyProject+16
; end of ?lstr_43_MyProject
;MyProject.c,0 :: ?lstr_46_MyProject
0xD818	0x5254 ;?lstr_46_MyProject+0
0xD81A	0x4E41 ;?lstr_46_MyProject+2
0xD81C	0x4953 ;?lstr_46_MyProject+4
0xD81E	0x4943 ;?lstr_46_MyProject+6
0xD820	0x4E4F ;?lstr_46_MyProject+8
0xD822	0x5320 ;?lstr_46_MyProject+10
0xD824	0x4C41 ;?lstr_46_MyProject+12
0xD826	0x4449 ;?lstr_46_MyProject+14
0xD828	0x0041 ;?lstr_46_MyProject+16
; end of ?lstr_46_MyProject
;MyProject.c,0 :: ?lstr_78_MyProject
0xD82A	0x5254 ;?lstr_78_MyProject+0
0xD82C	0x4E41 ;?lstr_78_MyProject+2
0xD82E	0x4953 ;?lstr_78_MyProject+4
0xD830	0x4943 ;?lstr_78_MyProject+6
0xD832	0x4E4F ;?lstr_78_MyProject+8
0xD834	0x5320 ;?lstr_78_MyProject+10
0xD836	0x4C41 ;?lstr_78_MyProject+12
0xD838	0x4449 ;?lstr_78_MyProject+14
0xD83A	0x0041 ;?lstr_78_MyProject+16
; end of ?lstr_78_MyProject
;MyProject.c,0 :: ?lstr_61_MyProject
0xD83C	0x5254 ;?lstr_61_MyProject+0
0xD83E	0x4E41 ;?lstr_61_MyProject+2
0xD840	0x4953 ;?lstr_61_MyProject+4
0xD842	0x4943 ;?lstr_61_MyProject+6
0xD844	0x4E4F ;?lstr_61_MyProject+8
0xD846	0x4420 ;?lstr_61_MyProject+10
0xD848	0x4245 ;?lstr_61_MyProject+12
0xD84A	0x4755 ;?lstr_61_MyProject+14
0xD84C	0x00 ;?lstr_61_MyProject+16
; end of ?lstr_61_MyProject
;MyProject.c,0 :: ?lstr_85_MyProject
0xD84D	0x5254 ;?lstr_85_MyProject+0
0xD84F	0x4E41 ;?lstr_85_MyProject+2
0xD851	0x4953 ;?lstr_85_MyProject+4
0xD853	0x4943 ;?lstr_85_MyProject+6
0xD855	0x4E4F ;?lstr_85_MyProject+8
0xD857	0x4420 ;?lstr_85_MyProject+10
0xD859	0x4245 ;?lstr_85_MyProject+12
0xD85B	0x4755 ;?lstr_85_MyProject+14
0xD85D	0x00 ;?lstr_85_MyProject+16
; end of ?lstr_85_MyProject
;MyProject.c,0 :: ?lstr_120_MyProject
0xD85E	0x4E49 ;?lstr_120_MyProject+0
0xD860	0x4349 ;?lstr_120_MyProject+2
0xD862	0x4C49 ;?lstr_120_MyProject+4
0xD864	0x5A49 ;?lstr_120_MyProject+6
0xD866	0x4E41 ;?lstr_120_MyProject+8
0xD868	0x4F44 ;?lstr_120_MyProject+10
0xD86A	0x2E2E ;?lstr_120_MyProject+12
0xD86C	0x002E ;?lstr_120_MyProject+14
; end of ?lstr_120_MyProject
;MyProject.c,0 :: ?lstr_56_MyProject
0xD86E	0x4E45 ;?lstr_56_MyProject+0
0xD870	0x5254 ;?lstr_56_MyProject+2
0xD872	0x4E41 ;?lstr_56_MyProject+4
0xD874	0x4F44 ;?lstr_56_MyProject+6
0xD876	0x4420 ;?lstr_56_MyProject+8
0xD878	0x4245 ;?lstr_56_MyProject+10
0xD87A	0x4755 ;?lstr_56_MyProject+12
0xD87C	0x00 ;?lstr_56_MyProject+14
; end of ?lstr_56_MyProject
;MyProject.c,0 :: ?lstr_80_MyProject
0xD87D	0x4E45 ;?lstr_80_MyProject+0
0xD87F	0x5254 ;?lstr_80_MyProject+2
0xD881	0x4E41 ;?lstr_80_MyProject+4
0xD883	0x4F44 ;?lstr_80_MyProject+6
0xD885	0x4420 ;?lstr_80_MyProject+8
0xD887	0x4245 ;?lstr_80_MyProject+10
0xD889	0x4755 ;?lstr_80_MyProject+12
0xD88B	0x00 ;?lstr_80_MyProject+14
; end of ?lstr_80_MyProject
;MyProject.c,0 :: ?lstr_13_MyProject
0xD88C	0x5254 ;?lstr_13_MyProject+0
0xD88E	0x4E41 ;?lstr_13_MyProject+2
0xD890	0x4953 ;?lstr_13_MyProject+4
0xD892	0x4943 ;?lstr_13_MyProject+6
0xD894	0x4E4F ;?lstr_13_MyProject+8
0xD896	0x5320 ;?lstr_13_MyProject+10
0xD898	0x00 ;?lstr_13_MyProject+12
; end of ?lstr_13_MyProject
;MyProject.c,0 :: ?lstr_9_MyProject
0xD899	0x5254 ;?lstr_9_MyProject+0
0xD89B	0x4E41 ;?lstr_9_MyProject+2
0xD89D	0x4953 ;?lstr_9_MyProject+4
0xD89F	0x4943 ;?lstr_9_MyProject+6
0xD8A1	0x4E4F ;?lstr_9_MyProject+8
0xD8A3	0x0045 ;?lstr_9_MyProject+10
; end of ?lstr_9_MyProject
;MyProject.c,0 :: ?lstr_49_MyProject
0xD8A5	0x5254 ;?lstr_49_MyProject+0
0xD8A7	0x4E41 ;?lstr_49_MyProject+2
0xD8A9	0x4953 ;?lstr_49_MyProject+4
0xD8AB	0x4943 ;?lstr_49_MyProject+6
0xD8AD	0x4E4F ;?lstr_49_MyProject+8
0xD8AF	0x00 ;?lstr_49_MyProject+10
; end of ?lstr_49_MyProject
;MyProject.c,0 :: ?lstr_41_MyProject
0xD8B0	0x5254 ;?lstr_41_MyProject+0
0xD8B2	0x4E41 ;?lstr_41_MyProject+2
0xD8B4	0x4953 ;?lstr_41_MyProject+4
0xD8B6	0x4943 ;?lstr_41_MyProject+6
0xD8B8	0x4E4F ;?lstr_41_MyProject+8
0xD8BA	0x00 ;?lstr_41_MyProject+10
; end of ?lstr_41_MyProject
;MyProject.c,0 :: ?lstr_93_MyProject
0xD8BB	0x5254 ;?lstr_93_MyProject+0
0xD8BD	0x4E41 ;?lstr_93_MyProject+2
0xD8BF	0x4953 ;?lstr_93_MyProject+4
0xD8C1	0x4943 ;?lstr_93_MyProject+6
0xD8C3	0x4E4F ;?lstr_93_MyProject+8
0xD8C5	0x00 ;?lstr_93_MyProject+10
; end of ?lstr_93_MyProject
;MyProject.c,0 :: ?lstr_29_MyProject
0xD8C6	0x5254 ;?lstr_29_MyProject+0
0xD8C8	0x4E41 ;?lstr_29_MyProject+2
0xD8CA	0x4953 ;?lstr_29_MyProject+4
0xD8CC	0x4943 ;?lstr_29_MyProject+6
0xD8CE	0x4E4F ;?lstr_29_MyProject+8
0xD8D0	0x00 ;?lstr_29_MyProject+10
; end of ?lstr_29_MyProject
;MyProject.c,0 :: ?lstr_25_MyProject
0xD8D1	0x5254 ;?lstr_25_MyProject+0
0xD8D3	0x4E41 ;?lstr_25_MyProject+2
0xD8D5	0x4953 ;?lstr_25_MyProject+4
0xD8D7	0x4943 ;?lstr_25_MyProject+6
0xD8D9	0x4E4F ;?lstr_25_MyProject+8
0xD8DB	0x00 ;?lstr_25_MyProject+10
; end of ?lstr_25_MyProject
;MyProject.c,0 :: ?lstr_45_MyProject
0xD8DC	0x5254 ;?lstr_45_MyProject+0
0xD8DE	0x4E41 ;?lstr_45_MyProject+2
0xD8E0	0x4953 ;?lstr_45_MyProject+4
0xD8E2	0x4943 ;?lstr_45_MyProject+6
0xD8E4	0x4E4F ;?lstr_45_MyProject+8
0xD8E6	0x00 ;?lstr_45_MyProject+10
; end of ?lstr_45_MyProject
;MyProject.c,0 :: ?lstr_21_MyProject
0xD8E7	0x5254 ;?lstr_21_MyProject+0
0xD8E9	0x4E41 ;?lstr_21_MyProject+2
0xD8EB	0x4953 ;?lstr_21_MyProject+4
0xD8ED	0x4943 ;?lstr_21_MyProject+6
0xD8EF	0x4E4F ;?lstr_21_MyProject+8
0xD8F1	0x00 ;?lstr_21_MyProject+10
; end of ?lstr_21_MyProject
;MyProject.c,0 :: ?lstr_17_MyProject
0xD8F2	0x5254 ;?lstr_17_MyProject+0
0xD8F4	0x4E41 ;?lstr_17_MyProject+2
0xD8F6	0x4953 ;?lstr_17_MyProject+4
0xD8F8	0x4943 ;?lstr_17_MyProject+6
0xD8FA	0x4E4F ;?lstr_17_MyProject+8
0xD8FC	0x00 ;?lstr_17_MyProject+10
; end of ?lstr_17_MyProject
;MyProject.c,0 :: ?lstr_97_MyProject
0xD8FD	0x5254 ;?lstr_97_MyProject+0
0xD8FF	0x4E41 ;?lstr_97_MyProject+2
0xD901	0x4953 ;?lstr_97_MyProject+4
0xD903	0x4943 ;?lstr_97_MyProject+6
0xD905	0x4E4F ;?lstr_97_MyProject+8
0xD907	0x00 ;?lstr_97_MyProject+10
; end of ?lstr_97_MyProject
;MyProject.c,0 :: ?lstr_33_MyProject
0xD908	0x5254 ;?lstr_33_MyProject+0
0xD90A	0x4E41 ;?lstr_33_MyProject+2
0xD90C	0x4953 ;?lstr_33_MyProject+4
0xD90E	0x4943 ;?lstr_33_MyProject+6
0xD910	0x4E4F ;?lstr_33_MyProject+8
0xD912	0x00 ;?lstr_33_MyProject+10
; end of ?lstr_33_MyProject
;MyProject.c,0 :: ?lstr_37_MyProject
0xD913	0x5254 ;?lstr_37_MyProject+0
0xD915	0x4E41 ;?lstr_37_MyProject+2
0xD917	0x4953 ;?lstr_37_MyProject+4
0xD919	0x4943 ;?lstr_37_MyProject+6
0xD91B	0x4E4F ;?lstr_37_MyProject+8
0xD91D	0x00 ;?lstr_37_MyProject+10
; end of ?lstr_37_MyProject
;MyProject.c,0 :: ?lstr_101_MyProject
0xD91E	0x5254 ;?lstr_101_MyProject+0
0xD920	0x4E41 ;?lstr_101_MyProject+2
0xD922	0x4953 ;?lstr_101_MyProject+4
0xD924	0x4943 ;?lstr_101_MyProject+6
0xD926	0x4E4F ;?lstr_101_MyProject+8
0xD928	0x00 ;?lstr_101_MyProject+10
; end of ?lstr_101_MyProject
;MyProject.c,0 :: ?lstr_105_MyProject
0xD929	0x5254 ;?lstr_105_MyProject+0
0xD92B	0x4E41 ;?lstr_105_MyProject+2
0xD92D	0x4953 ;?lstr_105_MyProject+4
0xD92F	0x4943 ;?lstr_105_MyProject+6
0xD931	0x4E4F ;?lstr_105_MyProject+8
0xD933	0x00 ;?lstr_105_MyProject+10
; end of ?lstr_105_MyProject
;MyProject.c,0 :: ?lstr_109_MyProject
0xD934	0x5254 ;?lstr_109_MyProject+0
0xD936	0x4E41 ;?lstr_109_MyProject+2
0xD938	0x4953 ;?lstr_109_MyProject+4
0xD93A	0x4943 ;?lstr_109_MyProject+6
0xD93C	0x4E4F ;?lstr_109_MyProject+8
0xD93E	0x00 ;?lstr_109_MyProject+10
; end of ?lstr_109_MyProject
;MyProject.c,0 :: ?lstr_65_MyProject
0xD93F	0x5254 ;?lstr_65_MyProject+0
0xD941	0x4E41 ;?lstr_65_MyProject+2
0xD943	0x4953 ;?lstr_65_MyProject+4
0xD945	0x4943 ;?lstr_65_MyProject+6
0xD947	0x4E4F ;?lstr_65_MyProject+8
0xD949	0x00 ;?lstr_65_MyProject+10
; end of ?lstr_65_MyProject
;MyProject.c,0 :: ?lstr_113_MyProject
0xD94A	0x5254 ;?lstr_113_MyProject+0
0xD94C	0x4E41 ;?lstr_113_MyProject+2
0xD94E	0x4953 ;?lstr_113_MyProject+4
0xD950	0x4943 ;?lstr_113_MyProject+6
0xD952	0x4E4F ;?lstr_113_MyProject+8
0xD954	0x00 ;?lstr_113_MyProject+10
; end of ?lstr_113_MyProject
;MyProject.c,0 :: ?lstr_73_MyProject
0xD955	0x5254 ;?lstr_73_MyProject+0
0xD957	0x4E41 ;?lstr_73_MyProject+2
0xD959	0x4953 ;?lstr_73_MyProject+4
0xD95B	0x4943 ;?lstr_73_MyProject+6
0xD95D	0x4E4F ;?lstr_73_MyProject+8
0xD95F	0x00 ;?lstr_73_MyProject+10
; end of ?lstr_73_MyProject
;MyProject.c,0 :: ?lstr_57_MyProject
0xD960	0x5254 ;?lstr_57_MyProject+0
0xD962	0x4E41 ;?lstr_57_MyProject+2
0xD964	0x4953 ;?lstr_57_MyProject+4
0xD966	0x4943 ;?lstr_57_MyProject+6
0xD968	0x4E4F ;?lstr_57_MyProject+8
0xD96A	0x00 ;?lstr_57_MyProject+10
; end of ?lstr_57_MyProject
;MyProject.c,0 :: ?lstr_77_MyProject
0xD96B	0x5254 ;?lstr_77_MyProject+0
0xD96D	0x4E41 ;?lstr_77_MyProject+2
0xD96F	0x4953 ;?lstr_77_MyProject+4
0xD971	0x4943 ;?lstr_77_MyProject+6
0xD973	0x4E4F ;?lstr_77_MyProject+8
0xD975	0x00 ;?lstr_77_MyProject+10
; end of ?lstr_77_MyProject
;MyProject.c,0 :: ?lstr_81_MyProject
0xD976	0x5254 ;?lstr_81_MyProject+0
0xD978	0x4E41 ;?lstr_81_MyProject+2
0xD97A	0x4953 ;?lstr_81_MyProject+4
0xD97C	0x4943 ;?lstr_81_MyProject+6
0xD97E	0x4E4F ;?lstr_81_MyProject+8
0xD980	0x00 ;?lstr_81_MyProject+10
; end of ?lstr_81_MyProject
;MyProject.c,0 :: ?lstr_53_MyProject
0xD981	0x5254 ;?lstr_53_MyProject+0
0xD983	0x4E41 ;?lstr_53_MyProject+2
0xD985	0x4953 ;?lstr_53_MyProject+4
0xD987	0x4943 ;?lstr_53_MyProject+6
0xD989	0x4E4F ;?lstr_53_MyProject+8
0xD98B	0x00 ;?lstr_53_MyProject+10
; end of ?lstr_53_MyProject
;MyProject.c,0 :: ?lstr_69_MyProject
0xD98C	0x5254 ;?lstr_69_MyProject+0
0xD98E	0x4E41 ;?lstr_69_MyProject+2
0xD990	0x4953 ;?lstr_69_MyProject+4
0xD992	0x4943 ;?lstr_69_MyProject+6
0xD994	0x4E4F ;?lstr_69_MyProject+8
0xD996	0x00 ;?lstr_69_MyProject+10
; end of ?lstr_69_MyProject
;MyProject.c,0 :: ?lstr_89_MyProject
0xD997	0x5254 ;?lstr_89_MyProject+0
0xD999	0x4E41 ;?lstr_89_MyProject+2
0xD99B	0x4953 ;?lstr_89_MyProject+4
0xD99D	0x4943 ;?lstr_89_MyProject+6
0xD99F	0x4E4F ;?lstr_89_MyProject+8
0xD9A1	0x00 ;?lstr_89_MyProject+10
; end of ?lstr_89_MyProject
;MyProject.c,0 :: ?lstr_117_MyProject
0xD9A2	0x5254 ;?lstr_117_MyProject+0
0xD9A4	0x4E41 ;?lstr_117_MyProject+2
0xD9A6	0x4953 ;?lstr_117_MyProject+4
0xD9A8	0x4943 ;?lstr_117_MyProject+6
0xD9AA	0x4E4F ;?lstr_117_MyProject+8
0xD9AC	0x00 ;?lstr_117_MyProject+10
; end of ?lstr_117_MyProject
;MyProject.c,0 :: ?lstr_15_MyProject
0xD9AD	0x5247 ;?lstr_15_MyProject+0
0xD9AF	0x4341 ;?lstr_15_MyProject+2
0xD9B1	0x4149 ;?lstr_15_MyProject+4
0xD9B3	0x2153 ;?lstr_15_MyProject+6
0xD9B5	0x00 ;?lstr_15_MyProject+8
; end of ?lstr_15_MyProject
;MyProject.c,0 :: ?lstr_32_MyProject
0xD9B6	0x4E45 ;?lstr_32_MyProject+0
0xD9B8	0x5254 ;?lstr_32_MyProject+2
0xD9BA	0x4E41 ;?lstr_32_MyProject+4
0xD9BC	0x4F44 ;?lstr_32_MyProject+6
0xD9BE	0x00 ;?lstr_32_MyProject+8
; end of ?lstr_32_MyProject
;MyProject.c,0 :: ?lstr_36_MyProject
0xD9BF	0x4153 ;?lstr_36_MyProject+0
0xD9C1	0x494C ;?lstr_36_MyProject+2
0xD9C3	0x4E45 ;?lstr_36_MyProject+4
0xD9C5	0x4F44 ;?lstr_36_MyProject+6
0xD9C7	0x00 ;?lstr_36_MyProject+8
; end of ?lstr_36_MyProject
;MyProject.c,0 :: ?lstr_12_MyProject
0xD9C8	0x4153 ;?lstr_12_MyProject+0
0xD9CA	0x494C ;?lstr_12_MyProject+2
0xD9CC	0x4E45 ;?lstr_12_MyProject+4
0xD9CE	0x4F44 ;?lstr_12_MyProject+6
0xD9D0	0x00 ;?lstr_12_MyProject+8
; end of ?lstr_12_MyProject
;MyProject.c,0 :: ?lstr_63_MyProject
0xD9D1	0x5247 ;?lstr_63_MyProject+0
0xD9D3	0x4341 ;?lstr_63_MyProject+2
0xD9D5	0x4149 ;?lstr_63_MyProject+4
0xD9D7	0x2153 ;?lstr_63_MyProject+6
0xD9D9	0x00 ;?lstr_63_MyProject+8
; end of ?lstr_63_MyProject
;MyProject.c,0 :: ?lstr_39_MyProject
0xD9DA	0x5247 ;?lstr_39_MyProject+0
0xD9DC	0x4341 ;?lstr_39_MyProject+2
0xD9DE	0x4149 ;?lstr_39_MyProject+4
0xD9E0	0x2153 ;?lstr_39_MyProject+6
0xD9E2	0x00 ;?lstr_39_MyProject+8
; end of ?lstr_39_MyProject
;MyProject.c,0 :: ?lstr_28_MyProject
0xD9E3	0x4153 ;?lstr_28_MyProject+0
0xD9E5	0x494C ;?lstr_28_MyProject+2
0xD9E7	0x4E45 ;?lstr_28_MyProject+4
0xD9E9	0x4F44 ;?lstr_28_MyProject+6
0xD9EB	0x00 ;?lstr_28_MyProject+8
; end of ?lstr_28_MyProject
;MyProject.c,0 :: ?lstr_40_MyProject
0xD9EC	0x4E45 ;?lstr_40_MyProject+0
0xD9EE	0x5254 ;?lstr_40_MyProject+2
0xD9F0	0x4E41 ;?lstr_40_MyProject+4
0xD9F2	0x4F44 ;?lstr_40_MyProject+6
0xD9F4	0x00 ;?lstr_40_MyProject+8
; end of ?lstr_40_MyProject
;MyProject.c,0 :: ?lstr_8_MyProject
0xD9F5	0x4E45 ;?lstr_8_MyProject+0
0xD9F7	0x5254 ;?lstr_8_MyProject+2
0xD9F9	0x4E41 ;?lstr_8_MyProject+4
0xD9FB	0x4F44 ;?lstr_8_MyProject+6
0xD9FD	0x00 ;?lstr_8_MyProject+8
; end of ?lstr_8_MyProject
;MyProject.c,0 :: ?lstr_88_MyProject
0xD9FE	0x4E45 ;?lstr_88_MyProject+0
0xDA00	0x5254 ;?lstr_88_MyProject+2
0xDA02	0x4E41 ;?lstr_88_MyProject+4
0xDA04	0x4F44 ;?lstr_88_MyProject+6
0xDA06	0x00 ;?lstr_88_MyProject+8
; end of ?lstr_88_MyProject
;MyProject.c,0 :: ?lstr_47_MyProject
0xDA07	0x5247 ;?lstr_47_MyProject+0
0xDA09	0x4341 ;?lstr_47_MyProject+2
0xDA0B	0x4149 ;?lstr_47_MyProject+4
0xDA0D	0x2153 ;?lstr_47_MyProject+6
0xDA0F	0x00 ;?lstr_47_MyProject+8
; end of ?lstr_47_MyProject
;MyProject.c,0 :: ?lstr_44_MyProject
0xDA10	0x4153 ;?lstr_44_MyProject+0
0xDA12	0x494C ;?lstr_44_MyProject+2
0xDA14	0x4E45 ;?lstr_44_MyProject+4
0xDA16	0x4F44 ;?lstr_44_MyProject+6
0xDA18	0x00 ;?lstr_44_MyProject+8
; end of ?lstr_44_MyProject
;MyProject.c,0 :: ?lstr_76_MyProject
0xDA19	0x4153 ;?lstr_76_MyProject+0
0xDA1B	0x494C ;?lstr_76_MyProject+2
0xDA1D	0x4E45 ;?lstr_76_MyProject+4
0xDA1F	0x4F44 ;?lstr_76_MyProject+6
0xDA21	0x00 ;?lstr_76_MyProject+8
; end of ?lstr_76_MyProject
;MyProject.c,0 :: ?lstr_79_MyProject
0xDA22	0x5247 ;?lstr_79_MyProject+0
0xDA24	0x4341 ;?lstr_79_MyProject+2
0xDA26	0x4149 ;?lstr_79_MyProject+4
0xDA28	0x2153 ;?lstr_79_MyProject+6
0xDA2A	0x00 ;?lstr_79_MyProject+8
; end of ?lstr_79_MyProject
;MyProject.c,0 :: ?lstr_52_MyProject
0xDA2B	0x4153 ;?lstr_52_MyProject+0
0xDA2D	0x494C ;?lstr_52_MyProject+2
0xDA2F	0x4E45 ;?lstr_52_MyProject+4
0xDA31	0x4F44 ;?lstr_52_MyProject+6
0xDA33	0x00 ;?lstr_52_MyProject+8
; end of ?lstr_52_MyProject
;MyProject.c,0 :: ?lstr_55_MyProject
0xDA34	0x5247 ;?lstr_55_MyProject+0
0xDA36	0x4341 ;?lstr_55_MyProject+2
0xDA38	0x4149 ;?lstr_55_MyProject+4
0xDA3A	0x2153 ;?lstr_55_MyProject+6
0xDA3C	0x00 ;?lstr_55_MyProject+8
; end of ?lstr_55_MyProject
;MyProject.c,0 :: ?lstr_48_MyProject
0xDA3D	0x4E45 ;?lstr_48_MyProject+0
0xDA3F	0x5254 ;?lstr_48_MyProject+2
0xDA41	0x4E41 ;?lstr_48_MyProject+4
0xDA43	0x4F44 ;?lstr_48_MyProject+6
0xDA45	0x00 ;?lstr_48_MyProject+8
; end of ?lstr_48_MyProject
;MyProject.c,0 :: ?lstr_60_MyProject
0xDA46	0x4153 ;?lstr_60_MyProject+0
0xDA48	0x494C ;?lstr_60_MyProject+2
0xDA4A	0x4E45 ;?lstr_60_MyProject+4
0xDA4C	0x4F44 ;?lstr_60_MyProject+6
0xDA4E	0x00 ;?lstr_60_MyProject+8
; end of ?lstr_60_MyProject
;MyProject.c,0 :: ?lstr_92_MyProject
0xDA4F	0x4153 ;?lstr_92_MyProject+0
0xDA51	0x494C ;?lstr_92_MyProject+2
0xDA53	0x4E45 ;?lstr_92_MyProject+4
0xDA55	0x4F44 ;?lstr_92_MyProject+6
0xDA57	0x00 ;?lstr_92_MyProject+8
; end of ?lstr_92_MyProject
;MyProject.c,0 :: ?lstr_64_MyProject
0xDA58	0x4E45 ;?lstr_64_MyProject+0
0xDA5A	0x5254 ;?lstr_64_MyProject+2
0xDA5C	0x4E41 ;?lstr_64_MyProject+4
0xDA5E	0x4F44 ;?lstr_64_MyProject+6
0xDA60	0x00 ;?lstr_64_MyProject+8
; end of ?lstr_64_MyProject
;MyProject.c,0 :: ?lstr_31_MyProject
0xDA61	0x5247 ;?lstr_31_MyProject+0
0xDA63	0x4341 ;?lstr_31_MyProject+2
0xDA65	0x4149 ;?lstr_31_MyProject+4
0xDA67	0x2153 ;?lstr_31_MyProject+6
0xDA69	0x00 ;?lstr_31_MyProject+8
; end of ?lstr_31_MyProject
;MyProject.c,0 :: ?lstr_96_MyProject
0xDA6A	0x4E45 ;?lstr_96_MyProject+0
0xDA6C	0x5254 ;?lstr_96_MyProject+2
0xDA6E	0x4E41 ;?lstr_96_MyProject+4
0xDA70	0x4F44 ;?lstr_96_MyProject+6
0xDA72	0x00 ;?lstr_96_MyProject+8
; end of ?lstr_96_MyProject
;MyProject.c,0 :: ?lstr_108_MyProject
0xDA73	0x4153 ;?lstr_108_MyProject+0
0xDA75	0x494C ;?lstr_108_MyProject+2
0xDA77	0x4E45 ;?lstr_108_MyProject+4
0xDA79	0x4F44 ;?lstr_108_MyProject+6
0xDA7B	0x00 ;?lstr_108_MyProject+8
; end of ?lstr_108_MyProject
;MyProject.c,0 :: ?lstr_87_MyProject
0xDA7C	0x5247 ;?lstr_87_MyProject+0
0xDA7E	0x4341 ;?lstr_87_MyProject+2
0xDA80	0x4149 ;?lstr_87_MyProject+4
0xDA82	0x2153 ;?lstr_87_MyProject+6
0xDA84	0x00 ;?lstr_87_MyProject+8
; end of ?lstr_87_MyProject
;MyProject.c,0 :: ?lstr_72_MyProject
0xDA85	0x4E45 ;?lstr_72_MyProject+0
0xDA87	0x5254 ;?lstr_72_MyProject+2
0xDA89	0x4E41 ;?lstr_72_MyProject+4
0xDA8B	0x4F44 ;?lstr_72_MyProject+6
0xDA8D	0x00 ;?lstr_72_MyProject+8
; end of ?lstr_72_MyProject
;MyProject.c,0 :: ?lstr_100_MyProject
0xDA8E	0x4153 ;?lstr_100_MyProject+0
0xDA90	0x494C ;?lstr_100_MyProject+2
0xDA92	0x4E45 ;?lstr_100_MyProject+4
0xDA94	0x4F44 ;?lstr_100_MyProject+6
0xDA96	0x00 ;?lstr_100_MyProject+8
; end of ?lstr_100_MyProject
;MyProject.c,0 :: ?lstr_103_MyProject
0xDA97	0x5247 ;?lstr_103_MyProject+0
0xDA99	0x4341 ;?lstr_103_MyProject+2
0xDA9B	0x4149 ;?lstr_103_MyProject+4
0xDA9D	0x2153 ;?lstr_103_MyProject+6
0xDA9F	0x00 ;?lstr_103_MyProject+8
; end of ?lstr_103_MyProject
;MyProject.c,0 :: ?lstr_95_MyProject
0xDAA0	0x5247 ;?lstr_95_MyProject+0
0xDAA2	0x4341 ;?lstr_95_MyProject+2
0xDAA4	0x4149 ;?lstr_95_MyProject+4
0xDAA6	0x2153 ;?lstr_95_MyProject+6
0xDAA8	0x00 ;?lstr_95_MyProject+8
; end of ?lstr_95_MyProject
;MyProject.c,0 :: ?lstr_71_MyProject
0xDAA9	0x5247 ;?lstr_71_MyProject+0
0xDAAB	0x4341 ;?lstr_71_MyProject+2
0xDAAD	0x4149 ;?lstr_71_MyProject+4
0xDAAF	0x2153 ;?lstr_71_MyProject+6
0xDAB1	0x00 ;?lstr_71_MyProject+8
; end of ?lstr_71_MyProject
;MyProject.c,0 :: ?lstr_16_MyProject
0xDAB2	0x4E45 ;?lstr_16_MyProject+0
0xDAB4	0x5254 ;?lstr_16_MyProject+2
0xDAB6	0x4E41 ;?lstr_16_MyProject+4
0xDAB8	0x4F44 ;?lstr_16_MyProject+6
0xDABA	0x00 ;?lstr_16_MyProject+8
; end of ?lstr_16_MyProject
;MyProject.c,0 :: ?lstr_111_MyProject
0xDABB	0x5247 ;?lstr_111_MyProject+0
0xDABD	0x4341 ;?lstr_111_MyProject+2
0xDABF	0x4149 ;?lstr_111_MyProject+4
0xDAC1	0x2153 ;?lstr_111_MyProject+6
0xDAC3	0x00 ;?lstr_111_MyProject+8
; end of ?lstr_111_MyProject
;MyProject.c,0 :: ?lstr_20_MyProject
0xDAC4	0x4153 ;?lstr_20_MyProject+0
0xDAC6	0x494C ;?lstr_20_MyProject+2
0xDAC8	0x4E45 ;?lstr_20_MyProject+4
0xDACA	0x4F44 ;?lstr_20_MyProject+6
0xDACC	0x00 ;?lstr_20_MyProject+8
; end of ?lstr_20_MyProject
;MyProject.c,0 :: ?lstr_68_MyProject
0xDACD	0x4153 ;?lstr_68_MyProject+0
0xDACF	0x494C ;?lstr_68_MyProject+2
0xDAD1	0x4E45 ;?lstr_68_MyProject+4
0xDAD3	0x4F44 ;?lstr_68_MyProject+6
0xDAD5	0x00 ;?lstr_68_MyProject+8
; end of ?lstr_68_MyProject
;MyProject.c,0 :: ?lstr_119_MyProject
0xDAD6	0x5247 ;?lstr_119_MyProject+0
0xDAD8	0x4341 ;?lstr_119_MyProject+2
0xDADA	0x4149 ;?lstr_119_MyProject+4
0xDADC	0x2153 ;?lstr_119_MyProject+6
0xDADE	0x00 ;?lstr_119_MyProject+8
; end of ?lstr_119_MyProject
;MyProject.c,0 :: ?lstr_24_MyProject
0xDADF	0x4E45 ;?lstr_24_MyProject+0
0xDAE1	0x5254 ;?lstr_24_MyProject+2
0xDAE3	0x4E41 ;?lstr_24_MyProject+4
0xDAE5	0x4F44 ;?lstr_24_MyProject+6
0xDAE7	0x00 ;?lstr_24_MyProject+8
; end of ?lstr_24_MyProject
;MyProject.c,0 :: ?lstr_84_MyProject
0xDAE8	0x4153 ;?lstr_84_MyProject+0
0xDAEA	0x494C ;?lstr_84_MyProject+2
0xDAEC	0x4E45 ;?lstr_84_MyProject+4
0xDAEE	0x4F44 ;?lstr_84_MyProject+6
0xDAF0	0x00 ;?lstr_84_MyProject+8
; end of ?lstr_84_MyProject
;MyProject.c,0 :: ?lstr_104_MyProject
0xDAF1	0x4E45 ;?lstr_104_MyProject+0
0xDAF3	0x5254 ;?lstr_104_MyProject+2
0xDAF5	0x4E41 ;?lstr_104_MyProject+4
0xDAF7	0x4F44 ;?lstr_104_MyProject+6
0xDAF9	0x00 ;?lstr_104_MyProject+8
; end of ?lstr_104_MyProject
;MyProject.c,0 :: ?lstr_23_MyProject
0xDAFA	0x5247 ;?lstr_23_MyProject+0
0xDAFC	0x4341 ;?lstr_23_MyProject+2
0xDAFE	0x4149 ;?lstr_23_MyProject+4
0xDB00	0x2153 ;?lstr_23_MyProject+6
0xDB02	0x00 ;?lstr_23_MyProject+8
; end of ?lstr_23_MyProject
;MyProject.c,0 :: ?lstr_116_MyProject
0xDB03	0x4153 ;?lstr_116_MyProject+0
0xDB05	0x494C ;?lstr_116_MyProject+2
0xDB07	0x4E45 ;?lstr_116_MyProject+4
0xDB09	0x4F44 ;?lstr_116_MyProject+6
0xDB0B	0x00 ;?lstr_116_MyProject+8
; end of ?lstr_116_MyProject
;MyProject.c,0 :: ?lstr_112_MyProject
0xDB0C	0x4E45 ;?lstr_112_MyProject+0
0xDB0E	0x5254 ;?lstr_112_MyProject+2
0xDB10	0x4E41 ;?lstr_112_MyProject+4
0xDB12	0x4F44 ;?lstr_112_MyProject+6
0xDB14	0x00 ;?lstr_112_MyProject+8
; end of ?lstr_112_MyProject
;MyProject.c,0 :: ?lstr_4_MyProject
0xDB15	0x5553 ;?lstr_4_MyProject+0
0xDB17	0x4542 ;?lstr_4_MyProject+2
0xDB19	0x3A4E ;?lstr_4_MyProject+4
0xDB1B	0x00 ;?lstr_4_MyProject+6
; end of ?lstr_4_MyProject
;MyProject.c,0 :: ?lstr_3_MyProject
0xDB1C	0x4F54 ;?lstr_3_MyProject+0
0xDB1E	0x4154 ;?lstr_3_MyProject+2
0xDB20	0x3A4C ;?lstr_3_MyProject+4
0xDB22	0x00 ;?lstr_3_MyProject+6
; end of ?lstr_3_MyProject
;MyProject.c,0 :: ?lstr_5_MyProject
0xDB23	0x4142 ;?lstr_5_MyProject+0
0xDB25	0x414A ;?lstr_5_MyProject+2
0xDB27	0x3A4E ;?lstr_5_MyProject+4
0xDB29	0x00 ;?lstr_5_MyProject+6
; end of ?lstr_5_MyProject
;MyProject.c,0 :: ?lstr_7_MyProject
0xDB2A	0x4C42 ;?lstr_7_MyProject+0
0xDB2C	0x434F ;?lstr_7_MyProject+2
0xDB2E	0x3A4B ;?lstr_7_MyProject+4
0xDB30	0x00 ;?lstr_7_MyProject+6
; end of ?lstr_7_MyProject
;MyProject.c,0 :: ?lstr_6_MyProject
0xDB31	0x5345 ;?lstr_6_MyProject+0
0xDB33	0x4550 ;?lstr_6_MyProject+2
0xDB35	0x4152 ;?lstr_6_MyProject+4
0xDB37	0x00 ;?lstr_6_MyProject+6
; end of ?lstr_6_MyProject
;MyProject.c,0 :: ?lstr_138_MyProject
0xDB38	0x3A34 ;?lstr_138_MyProject+0
0xDB3A	0x00 ;?lstr_138_MyProject+2
; end of ?lstr_138_MyProject
;MyProject.c,0 :: ?lstr_139_MyProject
0xDB3B	0x3A35 ;?lstr_139_MyProject+0
0xDB3D	0x00 ;?lstr_139_MyProject+2
; end of ?lstr_139_MyProject
;MyProject.c,0 :: ?lstr_140_MyProject
0xDB3E	0x3A36 ;?lstr_140_MyProject+0
0xDB40	0x00 ;?lstr_140_MyProject+2
; end of ?lstr_140_MyProject
;MyProject.c,0 :: ?lstr_135_MyProject
0xDB41	0x3A31 ;?lstr_135_MyProject+0
0xDB43	0x00 ;?lstr_135_MyProject+2
; end of ?lstr_135_MyProject
;MyProject.c,0 :: ?lstr_136_MyProject
0xDB44	0x3A32 ;?lstr_136_MyProject+0
0xDB46	0x00 ;?lstr_136_MyProject+2
; end of ?lstr_136_MyProject
;MyProject.c,0 :: ?lstr_137_MyProject
0xDB47	0x3A33 ;?lstr_137_MyProject+0
0xDB49	0x00 ;?lstr_137_MyProject+2
; end of ?lstr_137_MyProject
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C       [8]    _Swap
0x0024      [60]    _lcd_send_nibble
0x0060      [50]    _lcd_send_byte
0x0092      [78]    _I2C_soft_read
0x00E0      [88]    _I2C_soft_write
0x0138      [30]    _I2C_soft_start
0x0156      [26]    _SETFUN32
0x0170       [8]    _FIXSIGN32
0x0178      [24]    _SETFOV32
0x0190      [26]    _I2C_soft_stop
0x01AA      [30]    _Div_8x8_U
0x01C8      [14]    _RES032
0x01D6      [78]    _lcd_gotoxy
0x0224       [8]    _SETFDZ32
0x022C      [78]    _lcd_outConst
0x027A     [114]    _NRM3232
0x02EC     [482]    _NRM4032
0x04CE      [28]    _SETIOV3224
0x04EA      [58]    _lcd_out
0x0524     [898]    _eepromLeeNumero
0x08A6     [116]    _ByteToStr
0x091A    [1062]    _Add_32x32_FP
0x0D40     [220]    _Double2Word
0x0E1C     [306]    _Double2Longint
0x0F4E     [380]    _Div_32x32_FP
0x10CA      [42]    _Word2Double
0x10F4      [34]    _lcd_cmd
0x1116     [798]    _muestraEstatus
0x1434     [662]    _eepromEscribeNumero
0x16CA     [568]    _salioBP1
0x1902     [124]    _saliendoBP1
0x197E     [564]    _entroBP3
0x1BB2     [128]    _transicionEntBP3
0x1C32     [128]    _transicionEntBP2
0x1CB2     [128]    _transicionSalBP3
0x1D32     [570]    _entroBP1
0x1F6C     [166]    _transicionEBP2
0x2012     [166]    _transicionSBP1
0x20B8     [580]    _salio
0x22FC     [124]    _saliendoBP2
0x2378     [124]    _entrandoBP1
0x23F4     [128]    _esperaBP1
0x2474     [570]    _entroBP2
0x26AE     [166]    _transicionSBP3
0x2754     [124]    _saliendoBP3
0x27D0     [128]    _transicionSalBP2
0x2850     [224]    _transicionSBP2
0x2930     [128]    _transicionSalBP1
0x29B0     [576]    _salioBO
0x2BF0     [204]    _transicionSBS
0x2CBC     [312]    _entrando
0x2DF4     [340]    _espera
0x2F48     [208]    _saliendoBS
0x3018     [150]    _transicionEntBS
0x30AE     [138]    _entrandoBS
0x3138     [200]    _transicionE
0x3200     [576]    _salioBS
0x3440     [214]    _transicionSal
0x3516     [312]    _saliendo
0x364E     [548]    _entro
0x3872     [200]    _transicionS
0x393A     [124]    _entrandoBP2
0x39B6     [128]    _transicionEntBP1
0x3A36     [570]    _entroBP6
0x3C70     [128]    _esperaBP2
0x3CF0     [208]    _transicionEnt
0x3DC0     [166]    _transicionEBP1
0x3E66     [578]    _salioBP7
0x40A8     [176]    _transicionEntBP7
0x4158     [570]    _entroBP7
0x4392     [194]    _saliendoBP7
0x4454     [204]    _transicionEBP7
0x4520     [194]    _entrandoBP4
0x45E2     [578]    _salioBP4
0x4824     [106]    _entrandoBP7
0x488E     [118]    _esperaBP7
0x4904     [118]    _esperaBP9
0x497A     [176]    _transicionSalBP9
0x4A2A     [132]    _transicionSBP9
0x4AAE      [54]    _Div_16x16_U
0x4AE4     [204]    _transicionEBP9
0x4BB0     [194]    _saliendoBP9
0x4C72     [122]    _transicionSalBP7
0x4CEC     [106]    _entrandoBP9
0x4D56     [578]    _salioBP9
0x4F98     [578]    _salioBP3
0x51DA     [176]    _transicionSalBP4
0x528A     [204]    _transicionSBP4
0x5356     [122]    _transicionEntBP4
0x53D0     [118]    _esperaBP4
0x5446     [132]    _transicionSBP7
0x54CA     [128]    _esperaBP3
0x554A     [578]    _salioBP2
0x578C     [166]    _transicionEBP3
0x5832     [124]    _entrandoBP3
0x58AE     [176]    _transicionSalBP6
0x595E     [204]    _transicionSBP6
0x5A2A     [132]    _transicionEBP4
0x5AAE     [578]    _salioBP6
0x5CF0     [106]    _saliendoBP6
0x5D5A     [570]    _entroBP9
0x5F94     [176]    _transicionEntBP9
0x6044     [106]    _saliendoBP4
0x60AE     [570]    _entroBP4
0x62E8     [290]    _transicionEBS
0x640A     [142]    _transicionSalBD
0x6498     [204]    _transicionSBD
0x6564     [150]    _esperaBT
0x65FA     [142]    _transicionEntB
0x6688      [14]    _UART1_Write
0x6696     [576]    _salioBD
0x68D6     [118]    _esperaBP6
0x694C     [150]    _transicionSalBT
0x69E2     [278]    _transicionSBT
0x6AF8     [138]    _saliendoBT
0x6B82     [194]    _entrandoBP6
0x6C44     [250]    _transicionEBP6
0x6D3E     [122]    _transicionEntBP6
0x6DB8     [600]    _SDIV3232L
0x7010     [204]    _transicionEB
0x70DC     [142]    _transicionEntBT
0x716A     [204]    _transicionEBT
0x7236     [208]    _entrandoB
0x7306     [150]    _esperaB
0x739C      [36]    _Delay_Cyc
0x73C0     [278]    _transicionEBD
0x74D6     [150]    _transicionSalB
0x756C     [138]    _entrandoBD
0x75F6      [24]    _COMFREM
0x760E     [544]    _entroBT
0x782E     [150]    _esperaBD
0x78C4     [576]    _salioB
0x7B04     [576]    _salioBT
0x7D44     [278]    _transicionEBC
0x7E5A     [150]    _transicionEntBC
0x7EF0     [142]    _transicionEntBO
0x7F7E     [544]    _entroBO
0x819E     [150]    _esperaBO
0x8234     [576]    _salioBC
0x8474     [204]    _transicionEBO
0x8540     [278]    _transicionSBO
0x8656     [278]    _transicionSB
0x876C     [138]    _saliendoB
0x87F6     [150]    _esperaBS
0x888C     [142]    _transicionSalBS
0x891A     [150]    _transicionSalBO
0x89B0     [208]    _entrandoBO
0x8A80     [208]    _saliendoBD
0x8B50     [544]    _entroB
0x8D70     [204]    _transicionSBC
0x8E3C     [544]    _entroBD
0x905C     [150]    _transicionEntBD
0x90F2     [208]    _entrandoBT
0x91C2     [142]    _transicionSalBC
0x9250     [544]    _entroBS
0x9470     [544]    _entroBC
0x9690     [208]    _saliendoBC
0x9760     [150]    _esperaBC
0x97F6     [138]    _entrandoBC
0x9880     [138]    _saliendoBO
0x990A     [228]    _IntToStrWithZeros
0x99EE      [78]    _strcpy
0x9A3C      [16]    _Get_Fosc_kHz
0x9A4C       [6]    _I2C_soft_init
0x9A52      [96]    _strcat
0x9AB2      [82]    _Mul_32x32_U
0x9B04      [80]    _Mul_16x16_U
0x9B54      [58]    _strlen
0x9B8E      [80]    _sensorBloqueo
0x9BDE      [18]    _UART1_Read
0x9BF0      [10]    _UART1_Data_Ready
0x9BFA     [350]    _Div_32x32_S
0x9D58     [148]    _WordToStrWithZeros
0x9DEC     [138]    _Soft_UART_Write
0x9E76      [10]    _UART1_Tx_Idle
0x9E80      [78]    _sensorBloqueoO
0x9ECE      [74]    _sensorBloqueoPar7
0x9F18      [74]    _sensorBloqueoPar2
0x9F62      [80]    _sensorBloqueoD
0x9FB2      [74]    _sensorBloqueoPar3
0x9FFC      [74]    _sensorBloqueoPar6
0xA046      [80]    _sensorBloqueoC
0xA096      [60]    _memset
0xA0D2      [80]    _sensorBloqueoT
0xA122      [92]    _sensorNoBloqueo
0xA17E      [54]    _UART1_Write_Text
0xA1B4      [80]    _sensorBloqueoS
0xA204      [74]    _sensorBloqueoPar9
0xA24E      [74]    _sensorBloqueoPar1
0xA298      [74]    _sensorBloqueoPar4
0xA2E2     [842]    _TX_MSTR
0xA62C    [2074]    _SENSADO
0xAE46       [6]    _iniciaEeprom
0xAE4C     [108]    _resetSLV
0xAEB8      [76]    _strcmp
0xAF04     [158]    _UART1_Read_Text
0xAFA2    [3840]    _bloqueos
0xBEA2      [88]    _UART1_Init
0xBEFA      [10]    _PWM1_Start
0xBF04    [1792]    _serialTxWioLTE
0xC604     [110]    _PWM1_Set_Duty
0xC672     [414]    _indicadorSensores
0xC810     [204]    _lcd_init
0xC8DC     [452]    _Soft_UART_Init
0xCAA0     [282]    _TX_SLV
0xCBBA     [298]    _resetCuentas
0xCCE4       [8]    _PWM1_Init
0xCCEC      [98]    _desbordoTemporizadorCero
0xCD4E       [6]    _Soft_UART_Break
0xCD54     [310]    _RX_PIC_PIC
0xCE8A      [26]    _lcd_chr
0xCEA4     [258]    _Soft_UART_Read
0xCFA6      [16]    _SLV
0xCFB6      [20]    _MASTER
0xCFCA     [406]    _PicInit
0xD160      [16]    ___CC2DW
0xD170     [286]    _main
0xD28E     [146]    _interrupcionesBajoNivel
0xD320     [118]    _interrupcionesAltoNivel
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0000       [1]    FLASH_Erase_64_SaveINTCON_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATScl_temp_scl_L0
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    R0
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATSda_temp_sda_L0
0x0001       [1]    __Lib_TFT_JPEG_FileReadBytes_Result_L0
0x0001       [1]    __Lib_PS2_Wait_Falling_nsample_L0
0x0001       [1]    I2C1_Rd_tmp_L0
0x0001       [1]    __Lib_TFT_JPEG_FileRead_i_L0
0x0001       [1]    ispunct_rslt_L0
0x0001       [1]    R1
0x0001       [1]    __Lib_TFT_16bit_JPEG_FileRead_i_L0
0x0001       [1]    __Lib_TFT_16bit_JPEG_FileReadBytes_Result_L0
0x0001       [1]    FLASH_Write_64_i_L0
0x0001       [1]    I2C_soft_write_i_L0
0x0001       [2]    FLASH_Read_N_Bytes_i_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    I2C_soft_read_i_L0
0x0001       [1]    FLASH_Erase_Write_64_i_L0
0x0002       [1]    FLASH_Write_64_SaveINTCON_L0
0x0002       [2]    memset_28j60_pp_L0
0x0002       [2]    strlen_cp_L0
0x0002       [2]    memchr_s_L0
0x0002       [2]    strlen_24j600_cp_L0
0x0002       [1]    R2
0x0002       [2]    memcpy_24j600_dd_L0
0x0002       [2]    strlen_28j60_cp_L0
0x0002       [2]    memset_pp_L0
0x0002       [2]    memcpy_28j60_dd_L0
0x0002       [1]    FLASH_Erase_Write_64_j_L0
0x0002       [2]    memset_24j600_pp_L0
0x0002       [2]    memcpy_dd_L0
0x0003       [2]    memmove_tt_L0
0x0003       [1]    FLASH_Erase_Write_64_SaveINTCON_L0
0x0003       [2]    MM_TotalFreeMemSize_Tot_L0
0x0003       [1]    MM_Init_i_L0
0x0003       [1]    R3
0x0003       [1]    __Lib_CAN_C_A_CANIDToRegs_loVal_L0
0x0003       [2]    Ltrim_original_L0
0x0003       [2]    __Lib_MmcFat16_f16_toInt_l_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    strcat_cp_L0
0x0004       [2]    __Lib_MemManager_MM_GetMemAlign_P_L0
0x0004       [2]    memcpy_24j600_ss_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    strncat_cp_L0
0x0004       [2]    memcpy_28j60_ss_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [1]    __Lib_CAN_C_A_CANIDToRegs_hiVal_L0
0x0004       [1]    R4
0x0004       [2]    frexp_pom_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [1]    R5
0x0005       [2]    Ltrim_p_L0
0x0005       [1]    __Lib_CAN_C_A_CANIDToRegs_hrVal_L0
0x0005       [2]    memmove_ff_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [1]    MM_TotalFreeMemSize_i_L0
0x0006       [1]    R6
0x0006       [1]    __Lib_CAN_C_A_CANIDToRegs_hsVal_L0
0x0006       [1]    __Lib_MemManager_MM_GetMemAlign_i_L0
0x0007       [1]    __Lib_TFT_16bit_JPEG_GenerateHuffmanTables_bLength_L0
0x0007       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bLength_L0
0x0007       [1]    R7
0x0008       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bTable_L0
0x0008       [1]    __Lib_TFT_16bit_JPEG_GenerateHuffmanTables_bTable_L0
0x0008       [1]    R8
0x0009       [4]    __Lib_MmcFat16_f16_toLong_l_L0
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [1]    ___Low_saveWREG
0x0016       [1]    ___Low_saveSTATUS
0x0017       [1]    ___Low_saveBSR
0x002D       [3]    _solicitudReset
0x0030       [1]    _resetWioLTE
0x0031       [9]    _respuestaReset
0x003A       [2]    _WioRX
0x003C       [1]    _cuentaSoftRead
0x003D       [2]    _recSlvSuben
0x003F       [2]    _guardadoSlvSuben
0x0041       [2]    _guardadoSlvBajan
0x0043       [2]    _totalVerdadero
0x0045       [2]    _recSlvBajan
0x0047       [1]    _banderaRx
0x0048       [3]    _solicitudCuenta
0x004B       [3]    _confirmacionEsclavo
0x004E      [10]    _checksum
0x0058       [1]    _afterReset
0x0059       [1]    _conexionHabilitada
0x005A       [1]    _RW
0x005B       [1]    _banderaReset
0x005C       [1]    _EnvioCuenta
0x005D       [1]    _recBloq
0x005E      [10]    _bufferEnvioEsclavo
0x0068       [3]    ?lstr121_MyProject
0x006B       [2]    _desbordoGPS_SLV
0x006D       [8]    _solicitudMaestro
0x0075       [2]    ?lstr131_MyProject
0x0077       [2]    ?lstr132_MyProject
0x0079       [2]    ?lstr134_MyProject
0x007B       [2]    ?lstr133_MyProject
0x007D       [2]    ?lstr130_MyProject
0x007F       [1]    _conexionPoste
0x0080       [1]    _k
0x0081       [1]    _cuentaAtasco
0x0082      [12]    _auxT
0x008E       [4]    ?lstr1_MyProject
0x0092       [1]    _cuenta
0x0093       [1]    _lecturaBloqueo
0x0094      [12]    _auxP
0x00A0      [12]    _auxBloq
0x00AC       [2]    _lecturaTablaPasajerosTotales
0x00AE       [4]    ?lstr2_MyProject
0x00B2       [2]    _lecturaTablaBajanE
0x00B4      [12]    _auxS
0x00C0       [2]    _lecturaTablaS
0x00C2       [2]    _lecturaTablaSubenE
0x00C4      [12]    _auxB
0x00D0       [2]    _lecturaTablaB
0x00D2      [12]    _Aux6
0x00DE       [1]    _cuentaUSART
0x00DF       [1]    _comienzaContarAtasco
0x00E0       [1]    _posteDesc
0x00E1       [2]    _desbordoGPS
0x00E3       [1]    _permanencia
0x00E4       [1]    _debugEstado
0x00E5       [1]    _empiezaSalida
0x00E6       [1]    _empiezaEntrada
0x00E7       [7]    _envioGPS
0x00EE       [2]    _lecturaTablaPVerdaderos
0x00F0       [2]    ?lstr122_MyProject
0x00F2       [1]    _l
0x00F3      [45]    _envioSerialGPS
0x0120       [5]    _auxEnvioGPS
0x0125       [8]    _commAT
0x012D       [2]    _pVerdaderosEEntero
0x012F       [2]    _pVerdaderosMEntero
0x0131       [2]    _totalCalculado
0x0133       [2]    _pasajerosTotalesL
0x0135       [2]    _pBajan
0x0137       [2]    _pSuben
0x0139       [4]    _pasajerosVerdaderos
0x013D       [1]    _debugEstadoB
0x013E      [10]    _bufferRecepcionEsclavo
0x0148       [1]    _bloqEsclavo
0x0149       [2]    ?lstr128_MyProject
0x014B       [1]    _estado1
0x014C       [5]    ?lstr129_MyProject
0x0151       [2]    ?lstr126_MyProject
0x0153       [2]    _pasajerosBajanE
0x0155       [1]    _auxCuentaBloqueo
0x0156       [2]    ?lstr127_MyProject
0x0158       [1]    _cuentaBloqueo
0x0159      [12]    _Aux2
0x0165      [12]    _Aux1
0x0171      [12]    _Aux3
0x017D      [12]    _Aux5
0x0189      [12]    _Aux4
0x0195       [1]    _estado3
0x0196       [1]    _estado2
0x0197       [1]    _estado4
0x0198       [1]    _estado6
0x0199       [1]    _estado5
0x019A       [2]    ?lstr123_MyProject
0x019C       [2]    _pasajerosSubenM
0x019E       [2]    ?lstr125_MyProject
0x01A0       [2]    _pasajerosBajanM
0x01A2       [2]    _pasajerosSubenE
0x01A4       [5]    _posteDesconectado
0x01A9       [2]    ?lstr124_MyProject
0x01AB       [1]    _errorSoftUART
0x01AC      [30]    _Desborde
0x01CA       [1]    __Lib_SoftUART_HalfBit
0x01CB       [1]    __Lib_SoftUART_FullBit
0x01CC       [0]    __Lib_SoftUART___StopWaiting
0x01CD       [4]    _UART_Rd_Ptr
0x01D1       [4]    _UART_Wr_Ptr
0x01D5       [1]    __Lib_SoftUART_InvertMaskRd
0x01D6       [1]    __Lib_SoftUART__rx_mask1
0x01D7       [2]    __Lib_SoftUART__port_addr
0x01D9       [1]    __Lib_SoftUART__rx_mask0
0x01DA       [1]    __Lib_SoftUART__tx_mask0
0x01DB       [1]    __Lib_SoftUART__tx_mask1
0x01DC       [4]    _UART_Tx_Idle_Ptr
0x01E0       [4]    _UART_Rdy_Ptr
0x01E4      [15]    _Bandera
0x01F3       [2]    FARG_Soft_UART_Read_error
0x01F3       [1]    FARG_lcd_chr_fila
0x01F4       [1]    FARG_lcd_chr_col
0x01F5       [1]    Soft_UART_Read_result_L0
0x01F5       [1]    FARG_lcd_chr_c
0x01F6       [1]    Soft_UART_Read_mask_L0
0x01F7       [1]    TX_SLV_i_L1
0x01F7       [4]    FLOC__TX_MSTR
0x01F7       [4]    FARG_PWM1_Init_PWM_Freq
0x01F7       [1]    resetCuentas_l_L0
0x01F7       [1]    lcd_init_i_L0
0x01F7       [1]    FARG_PWM1_Set_Duty_new_duty
0x01F7       [2]    FARG_Soft_UART_Init_port
0x01F9       [1]    FARG_Soft_UART_Init_rx_pin
0x01FA       [1]    FARG_Soft_UART_Init_tx_pin
0x01FB       [4]    FARG_Soft_UART_Init_baud_rate
0x01FF       [1]    FARG_Soft_UART_Init_inverted
0x0200       [1]    UART1_Write_Text_data__L0
0x0200       [1]    WordToStrWithZeros_len_L0
0x0200       [1]    FARG_Soft_UART_Write_udata
0x0200       [1]    IntToStrWithZeros_negative_L0
0x0201       [4]    Soft_UART_Init_q1_L0
0x0205       [4]    Soft_UART_Init_q2_L0
0x0209       [2]    Soft_UART_Init_temp_word_L0
0x020B       [1]    Soft_UART_Write_mask_L0
0x020B       [2]    FARG_IntToStrWithZeros_input
0x020B       [2]    FARG_strlen_s
0x020B       [2]    FARG_strcat_to
0x020B       [2]    FARG_memset_p1
0x020B       [2]    FARG_strcpy_to
0x020B       [2]    FARG_UART1_Write_Text_uart_text
0x020B       [2]    FARG_WordToStrWithZeros_input
0x020D       [2]    FARG_strcat_from
0x020D       [2]    FARG_strcpy_from
0x020D       [2]    FARG_IntToStrWithZeros_output
0x020D       [1]    FARG_memset_character
0x020D       [1]    UART1_Write_Text_counter_L0
0x020D       [2]    FARG_WordToStrWithZeros_output
0x020E       [2]    FARG_memset_n
0x020F       [1]    IntToStrWithZeros_len_L0
0x020F       [2]    FLOC__WordToStrWithZeros
0x0210       [2]    IntToStrWithZeros_tmp_L0
0x0212       [2]    FLOC__IntToStrWithZeros
0x0214       [1]    FARG_entrandoBP1_estado
0x0214       [1]    FARG_entroBP2_estado
0x0214       [1]    FARG_salioBP2_estado
0x0214       [1]    FARG_esperaBP1_estado
0x0214       [1]    FARG_transicionSalBP2_estado
0x0214       [1]    FARG_saliendoBP2_estado
0x0214       [1]    FARG_transicionSBP2_estado
0x0214       [1]    FARG_transicionEBP1_estado
0x0214       [1]    FARG_transicionSalBP1_estado
0x0214       [1]    FARG_salioBP1_estado
0x0214       [1]    FARG_transicionSBP1_estado
0x0214       [1]    FARG_UART1_Write_data_
0x0214       [1]    FARG_saliendoBP1_estado
0x0214       [1]    FARG_esperaBP2_estado
0x0214       [1]    FARG_transicionEntBP1_estado
0x0214       [1]    FARG_transicionEntBP2_estado
0x0214       [1]    FARG_transicionEBP2_estado
0x0214       [1]    FARG_entrandoBP2_estado
0x0214       [1]    FARG_entroBP1_estado
0x0214       [1]    FARG_saliendoBP6_estado
0x0214       [1]    FARG_entroBP6_estado
0x0214       [1]    FARG_transicionSBP6_estado
0x0214       [1]    FARG_transicionEBP9_estado
0x0214       [1]    FARG_transicionSalBP6_estado
0x0214       [1]    FARG_transicionEntBP6_estado
0x0214       [1]    FARG_entrandoBP6_estado
0x0214       [1]    FARG_saliendoBP9_estado
0x0214       [1]    FARG_transicionEBP6_estado
0x0214       [1]    FARG_transicionEntBP9_estado
0x0214       [1]    FARG_entroBP9_estado
0x0214       [1]    FARG_salioBP6_estado
0x0214       [1]    FARG_saliendoBP7_estado
0x0214       [1]    FARG_entroBP7_estado
0x0214       [1]    FARG_transicionSBP7_estado
0x0214       [1]    FARG_salioBP7_estado
0x0214       [1]    FARG_transicionSalBP7_estado
0x0214       [1]    FARG_transicionEntBP7_estado
0x0214       [1]    FARG_entrandoBP7_estado
0x0214       [1]    FARG_esperaBP7_estado
0x0214       [1]    FARG_entrandoBP9_estado
0x0214       [1]    FARG_transicionEBP7_estado
0x0214       [1]    FARG_esperaBP9_estado
0x0214       [1]    FARG_transicionSalBP3_estado
0x0214       [1]    FARG_transicionSBP3_estado
0x0214       [1]    FARG_salioBP3_estado
0x0214       [1]    FARG_entrandoBP4_estado
0x0214       [1]    FARG_esperaBP4_estado
0x0214       [1]    FARG_saliendoBP3_estado
0x0214       [1]    FARG_entrandoBP3_estado
0x0214       [1]    FARG_esperaBP3_estado
0x0214       [1]    FARG_transicionEBP3_estado
0x0214       [1]    FARG_entroBP3_estado
0x0214       [1]    FARG_transicionEntBP3_estado
0x0214       [1]    FARG_transicionEBP4_estado
0x0214       [1]    FARG_salioBP9_estado
0x0214       [1]    FARG_salioBP4_estado
0x0214       [1]    FARG_transicionSalBP9_estado
0x0214       [1]    FARG_esperaBP6_estado
0x0214       [1]    FARG_transicionSBP9_estado
0x0214       [1]    FARG_transicionSalBP4_estado
0x0214       [1]    FARG_entroBP4_estado
0x0214       [1]    FARG_transicionEntBP4_estado
0x0214       [1]    FARG_saliendoBP4_estado
0x0214       [1]    FARG_Delay_Cyc_cycles_div_by_10
0x0214       [1]    FARG_transicionSBP4_estado
0x0214       [1]    FARG_entroBT_estado
0x0214       [1]    FARG_transicionEntBT_estado
0x0214       [1]    FARG_saliendoBT_estado
0x0214       [1]    FARG_esperaB_estado
0x0214       [1]    FARG_entrandoBT_estado
0x0214       [1]    FARG_esperaBT_estado
0x0214       [1]    FARG_entrandoB_estado
0x0214       [1]    FARG_transicionEBT_estado
0x0214       [1]    FARG_entrandoBC_estado
0x0214       [1]    FARG_esperaBC_estado
0x0214       [1]    FARG_transicionEntBC_estado
0x0214       [1]    FARG_transicionEBC_estado
0x0214       [1]    FARG_transicionSalBT_estado
0x0214       [1]    FARG_transicionSBT_estado
0x0214       [1]    FARG_salio_estado
0x0214       [1]    FARG_salioBT_estado
0x0214       [1]    FARG_entrandoBD_estado
0x0214       [1]    FARG_esperaBD_estado
0x0214       [1]    FARG_transicionEntBD_estado
0x0214       [1]    FARG_transicionEBD_estado
0x0214       [1]    FARG_transicionSB_estado
0x0214       [1]    FARG_saliendoB_estado
0x0214       [1]    FARG_salioB_estado
0x0214       [1]    FARG_transicionSalB_estado
0x0214       [1]    FARG_transicionSalBD_estado
0x0214       [1]    FARG_transicionSBD_estado
0x0214       [1]    FARG_salioBD_estado
0x0214       [1]    FARG_transicionEB_estado
0x0214       [1]    FARG_entroBD_estado
0x0214       [1]    FARG_entroB_estado
0x0214       [1]    FARG_saliendoBD_estado
0x0214       [1]    FARG_transicionEntB_estado
0x0214       [1]    FARG_entroBC_estado
0x0214       [1]    FARG_transicionEnt_estado
0x0214       [1]    FARG_transicionSalBO_estado
0x0214       [1]    FARG_salioBO_estado
0x0214       [1]    FARG_transicionSBO_estado
0x0214       [1]    FARG_entroBO_estado
0x0214       [1]    FARG_entro_estado
0x0214       [1]    FARG_saliendoBO_estado
0x0214       [1]    FARG_transicionE_estado
0x0214       [1]    FARG_entroBS_estado
0x0214       [1]    FARG_entrando_estado
0x0214       [1]    FARG_saliendoBS_estado
0x0214       [1]    FARG_transicionEntBS_estado
0x0214       [1]    FARG_esperaBS_estado
0x0214       [1]    FARG_entrandoBS_estado
0x0214       [1]    FARG_transicionEBS_estado
0x0214       [1]    FARG_transicionSalBC_estado
0x0214       [1]    FARG_transicionSBC_estado
0x0214       [1]    FARG_saliendo_estado
0x0214       [1]    FARG_salioBC_estado
0x0214       [1]    FARG_transicionS_estado
0x0214       [1]    FARG_transicionSal_estado
0x0214       [1]    FARG_espera_estado
0x0214       [1]    FARG_saliendoBC_estado
0x0214       [1]    FARG_transicionEBO_estado
0x0214       [1]    FARG_transicionEntBO_estado
0x0214       [1]    FARG_transicionSBS_estado
0x0214       [1]    FARG_entrandoBO_estado
0x0214       [1]    FARG_transicionSalBS_estado
0x0214       [1]    FARG_salioBS_estado
0x0214       [1]    FARG_esperaBO_estado
0x0215       [4]    FLOC__entroBP7
0x0215       [4]    FLOC__entroB
0x0215       [8]    FLOC__salio
0x0215       [4]    FLOC__entroBP9
0x0215       [4]    FLOC__entro
0x0215       [8]    FLOC__salioBP7
0x0215       [8]    FLOC__salioBP9
0x0215       [4]    FLOC__entroBP2
0x0215       [8]    FLOC__salioBC
0x0215       [8]    FLOC__salioBP2
0x0215       [4]    FLOC__entroBP3
0x0215       [4]    FLOC__entroBC
0x0215       [8]    FLOC__salioBP1
0x0215       [4]    FLOC__entroBS
0x0215       [8]    FLOC__salioBS
0x0215       [8]    FLOC__salioBO
0x0215       [4]    FLOC__entroBO
0x0215       [4]    FLOC__entroBP1
0x0215       [4]    FLOC__entroBD
0x0215       [8]    FLOC__salioBP4
0x0215       [4]    FLOC__entroBP6
0x0215       [8]    FLOC__salioB
0x0215       [8]    FLOC__salioBP6
0x0215       [8]    FLOC__salioBD
0x0215       [8]    FLOC__salioBP3
0x0215       [8]    FLOC__salioBT
0x0215       [4]    FLOC__entroBP4
0x0215       [4]    FLOC__entroBT
0x021D       [2]    FARG_eepromEscribeNumero_Registro
0x021D       [4]    FLOC__muestraEstatus
0x021D       [1]    FARG_lcd_cmd_comando
0x021F       [4]    FARG_eepromEscribeNumero_Dato
0x0223       [1]    FARG_eepromEscribeNumero_BYTES
0x0224      [16]    eepromEscribeNumero_bufferLong_L0
0x0234       [1]    eepromEscribeNumero_i_L0
0x0235       [1]    eepromEscribeNumero_aux_L0
0x0236       [2]    FARG_eepromLeeNumero_registro
0x0236       [1]    FARG_lcd_outConst_fila
0x0236       [1]    FARG_lcd_out_fila
0x0236       [1]    FARG_ByteToStr_input
0x0237       [1]    FARG_lcd_outConst_col
0x0237       [2]    FARG_ByteToStr_output
0x0237       [1]    FARG_lcd_out_col
0x0238       [2]    FARG_lcd_out_texto
0x0238       [1]    FARG_eepromLeeNumero_BYTES
0x0238       [3]    FARG_lcd_outConst_texto
0x0239       [1]    ByteToStr_DigitPos_L0
0x0239      [16]    eepromLeeNumero_bufferLong_L0
0x023A       [1]    lcd_out_cont_L0
0x023A       [2]    FLOC__ByteToStr
0x023B       [1]    lcd_outConst_cont_L0
0x0249       [4]    eepromLeeNumero_lectura_L0
0x024D       [1]    eepromLeeNumero_i_L0
0x024E       [2]    FLOC__eepromLeeNumero
0x0250       [1]    FARG_I2C_soft_read_ACK
0x0250       [1]    FARG_lcd_gotoxy_fila
0x0250       [1]    FARG_I2C_soft_write_dato
0x0251       [1]    FARG_lcd_gotoxy_col
0x0251       [1]    I2C_soft_read_result_L0
0x0252       [1]    FARG_lcd_send_byte_address
0x0253       [1]    FARG_lcd_send_byte_enviar
0x0254       [1]    FARG_lcd_send_nibble_nibble
0x0254       [1]    FARG_Swap_input
0x0255       [1]    FARG_bloqueos_SENSOR1
0x0256       [1]    FARG_bloqueos_SENSOR2
0x0257       [1]    FARG_bloqueos_SENSOR3
0x0258       [1]    FARG_bloqueos_SENSOR4
0x0259       [1]    FARG_bloqueos_SENSOR5
0x025A       [1]    FARG_bloqueos_SENSOR6
0x025B       [2]    FARG_bloqueos_cuentaBloqueo
0x025D       [2]    FLOC__RX_PIC_PIC
0x025F       [2]    FARG_UART1_Read_Text_Output
0x025F       [2]    FARG_strcmp_s1
0x0261       [2]    FARG_UART1_Read_Text_Delimiter
0x0261       [2]    FARG_strcmp_s2
0x0263       [1]    FARG_UART1_Read_Text_Attempts
0x0264       [1]    UART1_Read_Text_r_data_L0
0x0265       [1]    UART1_Read_Text_out_idx_L0
0x0266       [1]    UART1_Read_Text_delim_idx_L0
0x0F80       [0]    LCD_D6
0x0F80       [0]    LCD_D7
0x0F80       [1]    PORTA
0x0F80       [0]    LCD_D5
0x0F80       [0]    LCD_D4
0x0F80       [0]    LCD_EN
0x0F81       [0]    SENSOR4
0x0F81       [1]    PORTB
0x0F81       [0]    SENSOR6
0x0F81       [0]    SENSOR5
0x0F81       [0]    SENSOR3
0x0F81       [0]    SENSOR1
0x0F82       [0]    SENSORESDEBUG
0x0F82       [1]    PORTC
0x0F82       [0]    BLOQUEOACTIVO
0x0F83       [0]    SENSOR2
0x0F83       [0]    RESET_BOTON
0x0F83       [0]    MSTR
0x0F83       [0]    I2C_SDA
0x0F83       [0]    I2C_SCL
0x0F83       [1]    PORTD
0x0F84       [0]    LCD_RS
0x0F84       [1]    PORTE
0x0F92       [0]    LCD_D7_Direction
0x0F92       [1]    TRISA
0x0F92       [0]    LCD_D6_Direction
0x0F92       [0]    LCD_D4_Direction
0x0F92       [0]    LCD_D5_Direction
0x0F92       [0]    LCD_EN_Direction
0x0F93       [1]    TRISB
0x0F93       [0]    SENSOR5D
0x0F93       [0]    SENSOR4D
0x0F93       [0]    SENSOR6D
0x0F93       [0]    SENSOR1D
0x0F93       [0]    SENSOR3D
0x0F94       [0]    RX_PICD
0x0F94       [0]    POLARIZACIOND
0x0F94       [0]    BLOQUEOACTIVOD
0x0F94       [1]    TRISC
0x0F94       [0]    TX_PICD
0x0F94       [0]    SENSORESDEBUGD
0x0F94       [0]    TRISC7_bit
0x0F94       [0]    TRISC6_bit
0x0F94       [0]    TRISC2_bit
0x0F95       [0]    I2C_SDAD
0x0F95       [0]    SENSOR2D
0x0F95       [0]    I2C_SCLD
0x0F95       [0]    RESET_BOTOND
0x0F95       [1]    TRISD
0x0F96       [0]    LCD_RS_Direction
0x0F96       [1]    TRISE
0x0F9D       [1]    PIE1
0x0F9E       [1]    PIR1
0x0F9F       [1]    IPR1
0x0FA0       [1]    PIE2
0x0FA1       [1]    PIR2
0x0FA2       [1]    IPR2
0x0FAB       [1]    RCSTA
0x0FAC       [1]    TXSTA
0x0FAD       [1]    TXREG
0x0FAE       [1]    RCREG
0x0FAF       [1]    SPBRG
0x0FB0       [1]    SPBRGH
0x0FB1       [1]    T3CON
0x0FB2       [1]    TMR3L
0x0FB3       [1]    TMR3H
0x0FB4       [1]    CMCON
0x0FB8       [1]    BAUDCON
0x0FBD       [1]    CCP1CON
0x0FBE       [1]    CCPR1L
0x0FC1       [1]    ADCON1
0x0FCA       [1]    T2CON
0x0FCB       [1]    PR2
0x0FCD       [1]    T1CON
0x0FCE       [1]    TMR1L
0x0FCF       [1]    TMR1H
0x0FD0       [1]    RCON
0x0FD1       [1]    WDTCON
0x0FD3       [1]    OSCCON
0x0FD5       [1]    T0CON
0x0FD6       [1]    TMR0L
0x0FD7       [1]    TMR0H
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [2]    FSR0
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FEF       [1]    INDF0
0x0FF0       [1]    INTCON3
0x0FF1       [1]    INTCON2
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0xD396       [3]    ?ICS_solicitudReset
0xD399       [1]    ?ICS_resetWioLTE
0xD39A       [9]    ?ICS_respuestaReset
0xD3A3       [2]    ?ICS_WioRX
0xD3A5       [1]    ?ICS_cuentaSoftRead
0xD3A6       [2]    ?ICS_recSlvSuben
0xD3A8       [2]    ?ICS_guardadoSlvSuben
0xD3AA       [2]    ?ICS_guardadoSlvBajan
0xD3AC       [2]    ?ICS_totalVerdadero
0xD3AE       [2]    ?ICS_recSlvBajan
0xD3B0       [1]    ?ICS_banderaRx
0xD3B1       [3]    ?ICS_solicitudCuenta
0xD3B4       [3]    ?ICS_confirmacionEsclavo
0xD3B7      [10]    ?ICS_checksum
0xD3C1       [1]    ?ICS_afterReset
0xD3C2       [1]    ?ICS_conexionHabilitada
0xD3C3       [1]    ?ICS_RW
0xD3C4       [1]    ?ICS_banderaReset
0xD3C5       [1]    ?ICS_EnvioCuenta
0xD3C6       [1]    ?ICS_recBloq
0xD3C7      [10]    ?ICS_bufferEnvioEsclavo
0xD3D1       [3]    ?ICS?lstr121_MyProject
0xD3D4       [2]    ?ICS_desbordoGPS_SLV
0xD3D6       [8]    ?ICS_solicitudMaestro
0xD3DE       [2]    ?ICS?lstr131_MyProject
0xD3E0       [2]    ?ICS?lstr132_MyProject
0xD3E2       [2]    ?ICS?lstr134_MyProject
0xD3E4       [2]    ?ICS?lstr133_MyProject
0xD3E6       [2]    ?ICS?lstr130_MyProject
0xD3E8       [1]    ?ICS_conexionPoste
0xD3E9       [1]    ?ICS_k
0xD3EA       [1]    ?ICS_cuentaAtasco
0xD3EB      [12]    ?ICS_auxT
0xD3F7       [4]    ?ICS?lstr1_MyProject
0xD3FB       [1]    ?ICS_cuenta
0xD3FC       [1]    ?ICS_lecturaBloqueo
0xD3FD      [12]    ?ICS_auxP
0xD409      [12]    ?ICS_auxBloq
0xD415       [2]    ?ICS_lecturaTablaPasajerosTotales
0xD417       [4]    ?ICS?lstr2_MyProject
0xD41B       [2]    ?ICS_lecturaTablaBajanE
0xD41D      [12]    ?ICS_auxS
0xD429       [2]    ?ICS_lecturaTablaS
0xD42B       [2]    ?ICS_lecturaTablaSubenE
0xD42D      [12]    ?ICS_auxB
0xD439       [2]    ?ICS_lecturaTablaB
0xD43B      [12]    ?ICS_Aux6
0xD447       [1]    ?ICS_cuentaUSART
0xD448       [1]    ?ICS_comienzaContarAtasco
0xD449       [1]    ?ICS_posteDesc
0xD44A       [2]    ?ICS_desbordoGPS
0xD44C       [1]    ?ICS_permanencia
0xD44D       [1]    ?ICS_debugEstado
0xD44E       [1]    ?ICS_empiezaSalida
0xD44F       [1]    ?ICS_empiezaEntrada
0xD450       [7]    ?ICS_envioGPS
0xD457       [2]    ?ICS_lecturaTablaPVerdaderos
0xD459       [2]    ?ICS?lstr122_MyProject
0xD45B       [1]    ?ICS_l
0xD45C      [45]    ?ICS_envioSerialGPS
0xD489       [5]    ?ICS_auxEnvioGPS
0xD48E       [8]    ?ICS_commAT
0xD496       [2]    ?ICS_pVerdaderosEEntero
0xD498       [2]    ?ICS_pVerdaderosMEntero
0xD49A       [2]    ?ICS_totalCalculado
0xD49C       [2]    ?ICS_pasajerosTotalesL
0xD49E       [2]    ?ICS_pBajan
0xD4A0       [2]    ?ICS_pSuben
0xD4A2       [4]    ?ICS_pasajerosVerdaderos
0xD4A6       [1]    ?ICS_debugEstadoB
0xD4A7      [10]    ?ICS_bufferRecepcionEsclavo
0xD4B1       [1]    ?ICS_bloqEsclavo
0xD4B2       [2]    ?ICS?lstr128_MyProject
0xD4B4       [1]    ?ICS_estado1
0xD4B5       [5]    ?ICS?lstr129_MyProject
0xD4BA       [2]    ?ICS?lstr126_MyProject
0xD4BC       [2]    ?ICS_pasajerosBajanE
0xD4BE       [1]    ?ICS_auxCuentaBloqueo
0xD4BF       [2]    ?ICS?lstr127_MyProject
0xD4C1       [1]    ?ICS_cuentaBloqueo
0xD4C2      [12]    ?ICS_Aux2
0xD4CE      [12]    ?ICS_Aux1
0xD4DA      [12]    ?ICS_Aux3
0xD4E6      [12]    ?ICS_Aux5
0xD4F2      [12]    ?ICS_Aux4
0xD4FE       [1]    ?ICS_estado3
0xD4FF       [1]    ?ICS_estado2
0xD500       [1]    ?ICS_estado4
0xD501       [1]    ?ICS_estado6
0xD502       [1]    ?ICS_estado5
0xD503       [2]    ?ICS?lstr123_MyProject
0xD505       [2]    ?ICS_pasajerosSubenM
0xD507       [2]    ?ICS?lstr125_MyProject
0xD509       [2]    ?ICS_pasajerosBajanM
0xD50B       [2]    ?ICS_pasajerosSubenE
0xD50D       [5]    ?ICS_posteDesconectado
0xD512       [2]    ?ICS?lstr124_MyProject
0xD514      [16]    ?ICSeepromLeeNumero_bufferLong_L0
0xD524       [4]    ?ICSeepromLeeNumero_lectura_L0
0xD528      [19]    ?lstr_34_MyProject
0xD53B      [19]    ?lstr_58_MyProject
0xD54E      [19]    ?lstr_42_MyProject
0xD561      [19]    ?lstr_82_MyProject
0xD574      [19]    ?lstr_74_MyProject
0xD587      [19]    ?lstr_10_MyProject
0xD59A      [19]    ?lstr_18_MyProject
0xD5AD      [19]    ?lstr_50_MyProject
0xD5C0      [19]    ?lstr_106_MyProject
0xD5D3      [19]    ?lstr_114_MyProject
0xD5E6      [19]    ?lstr_26_MyProject
0xD5F9      [19]    ?lstr_66_MyProject
0xD60C      [19]    ?lstr_98_MyProject
0xD61F      [19]    ?lstr_90_MyProject
0xD632      [18]    ?lstr_94_MyProject
0xD644      [18]    ?lstr_115_MyProject
0xD656      [18]    ?lstr_62_MyProject
0xD668      [18]    ?lstr_14_MyProject
0xD67A      [18]    ?lstr_11_MyProject
0xD68C      [18]    ?lstr_22_MyProject
0xD69E      [18]    ?lstr_102_MyProject
0xD6B0      [18]    ?lstr_51_MyProject
0xD6C2      [18]    ?lstr_107_MyProject
0xD6D4      [18]    ?lstr_38_MyProject
0xD6E6      [18]    ?lstr_99_MyProject
0xD6F8      [18]    ?lstr_19_MyProject
0xD70A      [18]    ?lstr_110_MyProject
0xD71C      [18]    ?lstr_35_MyProject
0xD72E      [18]    ?lstr_27_MyProject
0xD740      [18]    ?lstr_83_MyProject
0xD752      [18]    ?lstr_75_MyProject
0xD764      [18]    ?lstr_118_MyProject
0xD776      [18]    ?lstr_91_MyProject
0xD788      [18]    ?lstr_70_MyProject
0xD79A      [16]    ?ICSeepromEscribeNumero_bufferLong_L0
0xD7AA       [1]    ?ICSeepromEscribeNumero_i_L0
0xD7AB       [1]    ?ICSeepromEscribeNumero_aux_L0
0xD7AC      [18]    ?lstr_67_MyProject
0xD7BE      [18]    ?lstr_30_MyProject
0xD7D0      [18]    ?lstr_54_MyProject
0xD7E2      [18]    ?lstr_59_MyProject
0xD7F4      [18]    ?lstr_86_MyProject
0xD806      [18]    ?lstr_43_MyProject
0xD818      [18]    ?lstr_46_MyProject
0xD82A      [18]    ?lstr_78_MyProject
0xD83C      [17]    ?lstr_61_MyProject
0xD84D      [17]    ?lstr_85_MyProject
0xD85E      [16]    ?lstr_120_MyProject
0xD86E      [15]    ?lstr_56_MyProject
0xD87D      [15]    ?lstr_80_MyProject
0xD88C      [13]    ?lstr_13_MyProject
0xD899      [12]    ?lstr_9_MyProject
0xD8A5      [11]    ?lstr_49_MyProject
0xD8B0      [11]    ?lstr_41_MyProject
0xD8BB      [11]    ?lstr_93_MyProject
0xD8C6      [11]    ?lstr_29_MyProject
0xD8D1      [11]    ?lstr_25_MyProject
0xD8DC      [11]    ?lstr_45_MyProject
0xD8E7      [11]    ?lstr_21_MyProject
0xD8F2      [11]    ?lstr_17_MyProject
0xD8FD      [11]    ?lstr_97_MyProject
0xD908      [11]    ?lstr_33_MyProject
0xD913      [11]    ?lstr_37_MyProject
0xD91E      [11]    ?lstr_101_MyProject
0xD929      [11]    ?lstr_105_MyProject
0xD934      [11]    ?lstr_109_MyProject
0xD93F      [11]    ?lstr_65_MyProject
0xD94A      [11]    ?lstr_113_MyProject
0xD955      [11]    ?lstr_73_MyProject
0xD960      [11]    ?lstr_57_MyProject
0xD96B      [11]    ?lstr_77_MyProject
0xD976      [11]    ?lstr_81_MyProject
0xD981      [11]    ?lstr_53_MyProject
0xD98C      [11]    ?lstr_69_MyProject
0xD997      [11]    ?lstr_89_MyProject
0xD9A2      [11]    ?lstr_117_MyProject
0xD9AD       [9]    ?lstr_15_MyProject
0xD9B6       [9]    ?lstr_32_MyProject
0xD9BF       [9]    ?lstr_36_MyProject
0xD9C8       [9]    ?lstr_12_MyProject
0xD9D1       [9]    ?lstr_63_MyProject
0xD9DA       [9]    ?lstr_39_MyProject
0xD9E3       [9]    ?lstr_28_MyProject
0xD9EC       [9]    ?lstr_40_MyProject
0xD9F5       [9]    ?lstr_8_MyProject
0xD9FE       [9]    ?lstr_88_MyProject
0xDA07       [9]    ?lstr_47_MyProject
0xDA10       [9]    ?lstr_44_MyProject
0xDA19       [9]    ?lstr_76_MyProject
0xDA22       [9]    ?lstr_79_MyProject
0xDA2B       [9]    ?lstr_52_MyProject
0xDA34       [9]    ?lstr_55_MyProject
0xDA3D       [9]    ?lstr_48_MyProject
0xDA46       [9]    ?lstr_60_MyProject
0xDA4F       [9]    ?lstr_92_MyProject
0xDA58       [9]    ?lstr_64_MyProject
0xDA61       [9]    ?lstr_31_MyProject
0xDA6A       [9]    ?lstr_96_MyProject
0xDA73       [9]    ?lstr_108_MyProject
0xDA7C       [9]    ?lstr_87_MyProject
0xDA85       [9]    ?lstr_72_MyProject
0xDA8E       [9]    ?lstr_100_MyProject
0xDA97       [9]    ?lstr_103_MyProject
0xDAA0       [9]    ?lstr_95_MyProject
0xDAA9       [9]    ?lstr_71_MyProject
0xDAB2       [9]    ?lstr_16_MyProject
0xDABB       [9]    ?lstr_111_MyProject
0xDAC4       [9]    ?lstr_20_MyProject
0xDACD       [9]    ?lstr_68_MyProject
0xDAD6       [9]    ?lstr_119_MyProject
0xDADF       [9]    ?lstr_24_MyProject
0xDAE8       [9]    ?lstr_84_MyProject
0xDAF1       [9]    ?lstr_104_MyProject
0xDAFA       [9]    ?lstr_23_MyProject
0xDB03       [9]    ?lstr_116_MyProject
0xDB0C       [9]    ?lstr_112_MyProject
0xDB15       [7]    ?lstr_4_MyProject
0xDB1C       [7]    ?lstr_3_MyProject
0xDB23       [7]    ?lstr_5_MyProject
0xDB2A       [7]    ?lstr_7_MyProject
0xDB31       [7]    ?lstr_6_MyProject
0xDB38       [3]    ?lstr_138_MyProject
0xDB3B       [3]    ?lstr_139_MyProject
0xDB3E       [3]    ?lstr_140_MyProject
0xDB41       [3]    ?lstr_135_MyProject
0xDB44       [3]    ?lstr_136_MyProject
0xDB47       [3]    ?lstr_137_MyProject
//** Label List: ** 
//----------------------------------------------
  L_lcd_send_nibble0
  L_lcd_send_byte1
  L_lcd_send_byte2
  L_lcd_send_byte3
  L_lcd_init4
  L_lcd_init5
  L_lcd_init6
  L_lcd_init7
  L_lcd_init8
  L_lcd_init9
  L_lcd_init10
  L_lcd_init11
  L_lcd_init12
  L_lcd_gotoxy13
  L_lcd_gotoxy14
  L_lcd_gotoxy15
  L_lcd_gotoxy16
  L_lcd_gotoxy17
  L_lcd_gotoxy18
  L_lcd_gotoxy19
  L_lcd_gotoxy20
  L_lcd_out21
  L_lcd_out22
  L_lcd_outConst23
  L_lcd_outConst24
  L_lcd_cmd25
  L_bloqueos26
  L_bloqueos27
  L_bloqueos28
  L_bloqueos29
  L_bloqueos30
  L_bloqueos31
  L_bloqueos32
  L_bloqueos33
  L_bloqueos34
  L_bloqueos35
  L_bloqueos36
  L_bloqueos37
  L_bloqueos38
  L_bloqueos39
  L_bloqueos40
  L_bloqueos41
  L_bloqueos42
  L_bloqueos43
  L_bloqueos44
  L_bloqueos45
  L_bloqueos46
  L_bloqueos47
  L_bloqueos48
  L_bloqueos49
  L_bloqueos50
  L_bloqueos51
  L_bloqueos52
  L_bloqueos53
  L_bloqueos54
  L_bloqueos55
  L_bloqueos56
  L_bloqueos57
  L_bloqueos58
  L_bloqueos59
  L_bloqueos60
  L_bloqueos61
  L_bloqueos62
  L_bloqueos63
  L_bloqueos64
  L_bloqueos65
  L_bloqueos66
  L_bloqueos67
  L_bloqueos68
  L_bloqueos69
  L_bloqueos70
  L_bloqueos71
  L_bloqueos72
  L_bloqueos73
  L_bloqueos74
  L_bloqueos75
  L_bloqueos76
  L_bloqueos77
  L_bloqueos78
  L_bloqueos79
  L_bloqueos80
  L_bloqueos81
  L_bloqueos82
  L_bloqueos83
  L_bloqueos84
  L_bloqueos85
  L_bloqueos86
  L_bloqueos87
  L_bloqueos88
  L_bloqueos89
  L_bloqueos90
  L_bloqueos91
  L_bloqueos92
  L_bloqueos93
  L_bloqueos94
  L_bloqueos95
  L_bloqueos96
  L_bloqueos97
  L_bloqueos98
  L_bloqueos99
  L_I2C_soft_start100
  L_I2C_soft_start101
  L_I2C_soft_stop102
  L_I2C_soft_stop103
  L_I2C_soft_write104
  L_I2C_soft_write105
  L_I2C_soft_write106
  L_I2C_soft_write107
  L_I2C_soft_write108
  L_I2C_soft_write109
  L_I2C_soft_read110
  L_I2C_soft_read111
  L_I2C_soft_read112
  L_I2C_soft_read113
  L_I2C_soft_read114
  L_I2C_soft_read115
  L_I2C_soft_read116
  L_eepromEscribeNumero117
  L_eepromEscribeNumero118
  L_eepromEscribeNumero119
  L_eepromEscribeNumero120
  L_eepromEscribeNumero121
  L_eepromEscribeNumero122
  L_eepromEscribeNumero123
  L_eepromEscribeNumero124
  L_eepromEscribeNumero125
  L_eepromEscribeNumero126
  L_eepromEscribeNumero127
  L_eepromEscribeNumero128
  L_eepromEscribeNumero129
  L_eepromEscribeNumero130
  L_eepromEscribeNumero131
  L_eepromEscribeNumero132
  L_eepromEscribeNumero133
  L_eepromEscribeNumero134
  L_eepromEscribeNumero135
  L_eepromEscribeNumero136
  L_eepromEscribeNumero137
  L_eepromEscribeNumero138
  L_eepromEscribeNumero139
  L_eepromEscribeNumero140
  L_eepromEscribeChar141
  L_eepromEscribeChar142
  L_eepromEscribeChar143
  L_eepromEscribeChar144
  L_eepromEscribeChar145
  L_eepromEscribeChar146
  L_eepromEscribeChar147
  L_eepromEscribeChar148
  L_eepromEscribeChar149
  L_eepromLeeChar150
  L_eepromLeeChar151
  L_eepromLeeChar152
  L_eepromLeeChar153
  L_eepromLeeChar154
  L_eepromLeeNumero155
  L_eepromLeeNumero156
  L_eepromLeeNumero157
  L_eepromLeeNumero158
  L_eepromLeeNumero159
  L_eepromLeeNumero160
  L_eepromLeeNumero161
  L_eepromLeeNumero162
  L_eepromLeeNumero163
  L_eepromLeeNumero164
  L_eepromLeeNumero165
  L_eepromLeeNumero166
  L_eepromLeeNumero167
  L_eepromLeeNumero168
  L_eepromLeeNumero169
  L_eepromLeeNumero170
  L_eepromLeeNumero171
  L_eepromLeeNumero172
  L_muestraEstatus173
  L_muestraEstatus174
  L_muestraEstatus175
  L_sensorNoBloqueo176
  L_sensorNoBloqueo177
  L_sensorNoBloqueo178
  L_sensorNoBloqueo179
  L_sensorBloqueo180
  L_sensorBloqueoD181
  L_sensorBloqueoT182
  L_sensorBloqueoC183
  L_sensorBloqueoO184
  L_sensorBloqueoS185
  L_espera186
  L_espera187
  L_espera188
  L_entrando189
  L_entrando190
  L_entrando191
  L_transicionE192
  L_transicionE193
  L_transicionE194
  L_transicionEnt195
  L_transicionEnt196
  L_transicionEnt197
  L_entro198
  L_entro199
  L_saliendo200
  L_saliendo201
  L_saliendo202
  L_transicionS203
  L_transicionS204
  L_transicionS205
  L_transicionSal206
  L_transicionSal207
  L_transicionSal208
  L_salio209
  L_salio210
  L_esperaB211
  L_esperaB212
  L_esperaB213
  L_entrandoB214
  L_entrandoB215
  L_entrandoB216
  L_transicionEB217
  L_transicionEB218
  L_transicionEB219
  L_transicionEntB220
  L_transicionEntB221
  L_transicionEntB222
  L_entroB223
  L_entroB224
  L_saliendoB225
  L_saliendoB226
  L_saliendoB227
  L_transicionSB228
  L_transicionSB229
  L_transicionSB230
  L_transicionSalB231
  L_transicionSalB232
  L_transicionSalB233
  L_salioB234
  L_salioB235
  L_esperaBD236
  L_esperaBD237
  L_esperaBD238
  L_entrandoBD239
  L_entrandoBD240
  L_entrandoBD241
  L_transicionEBD242
  L_transicionEBD243
  L_transicionEBD244
  L_transicionEntBD245
  L_transicionEntBD246
  L_transicionEntBD247
  L_entroBD248
  L_entroBD249
  L_saliendoBD250
  L_saliendoBD251
  L_saliendoBD252
  L_transicionSBD253
  L_transicionSBD254
  L_transicionSBD255
  L_transicionSalBD256
  L_transicionSalBD257
  L_transicionSalBD258
  L_salioBD259
  L_salioBD260
  L_esperaBT261
  L_esperaBT262
  L_esperaBT263
  L_entrandoBT264
  L_entrandoBT265
  L_entrandoBT266
  L_transicionEBT267
  L_transicionEBT268
  L_transicionEBT269
  L_transicionEntBT270
  L_transicionEntBT271
  L_transicionEntBT272
  L_entroBT273
  L_entroBT274
  L_saliendoBT275
  L_saliendoBT276
  L_saliendoBT277
  L_transicionSBT278
  L_transicionSBT279
  L_transicionSBT280
  L_transicionSalBT281
  L_transicionSalBT282
  L_transicionSalBT283
  L_salioBT284
  L_salioBT285
  L_esperaBC286
  L_esperaBC287
  L_esperaBC288
  L_entrandoBC289
  L_entrandoBC290
  L_entrandoBC291
  L_transicionEBC292
  L_transicionEBC293
  L_transicionEBC294
  L_transicionEntBC295
  L_transicionEntBC296
  L_transicionEntBC297
  L_entroBC298
  L_entroBC299
  L_saliendoBC300
  L_saliendoBC301
  L_saliendoBC302
  L_transicionSBC303
  L_transicionSBC304
  L_transicionSBC305
  L_transicionSalBC306
  L_transicionSalBC307
  L_transicionSalBC308
  L_salioBC309
  L_salioBC310
  L_esperaBO311
  L_esperaBO312
  L_esperaBO313
  L_entrandoBO314
  L_entrandoBO315
  L_entrandoBO316
  L_transicionEBO317
  L_transicionEBO318
  L_transicionEBO319
  L_transicionEntBO320
  L_transicionEntBO321
  L_transicionEntBO322
  L_entroBO323
  L_entroBO324
  L_saliendoBO325
  L_saliendoBO326
  L_saliendoBO327
  L_transicionSBO328
  L_transicionSBO329
  L_transicionSBO330
  L_transicionSalBO331
  L_transicionSalBO332
  L_transicionSalBO333
  L_salioBO334
  L_salioBO335
  L_esperaBS336
  L_esperaBS337
  L_esperaBS338
  L_entrandoBS339
  L_entrandoBS340
  L_entrandoBS341
  L_transicionEBS342
  L_transicionEBS343
  L_transicionEBS344
  L_transicionEntBS345
  L_transicionEntBS346
  L_transicionEntBS347
  L_entroBS348
  L_entroBS349
  L_saliendoBS350
  L_saliendoBS351
  L_saliendoBS352
  L_transicionSBS353
  L_transicionSBS354
  L_transicionSBS355
  L_transicionSalBS356
  L_transicionSalBS357
  L_transicionSalBS358
  L_salioBS359
  L_salioBS360
  L_esperaBP1361
  L_esperaBP1362
  L_esperaBP1363
  L_entrandoBP1364
  L_entrandoBP1365
  L_entrandoBP1366
  L_transicionEBP1367
  L_transicionEBP1368
  L_transicionEBP1369
  L_transicionEntBP1370
  L_transicionEntBP1371
  L_transicionEntBP1372
  L_entroBP1373
  L_entroBP1374
  L_entroBP1375
  L_saliendoBP1376
  L_saliendoBP1377
  L_saliendoBP1378
  L_transicionSBP1379
  L_transicionSBP1380
  L_transicionSBP1381
  L_transicionSalBP1382
  L_transicionSalBP1383
  L_transicionSalBP1384
  L_salioBP1385
  L_salioBP1386
  L_esperaBP2387
  L_esperaBP2388
  L_esperaBP2389
  L_entrandoBP2390
  L_entrandoBP2391
  L_entrandoBP2392
  L_transicionEBP2393
  L_transicionEBP2394
  L_transicionEBP2395
  L_transicionEntBP2396
  L_transicionEntBP2397
  L_transicionEntBP2398
  L_entroBP2399
  L_entroBP2400
  L_entroBP2401
  L_saliendoBP2402
  L_saliendoBP2403
  L_saliendoBP2404
  L_transicionSBP2405
  L_transicionSBP2406
  L_transicionSBP2407
  L_transicionSalBP2408
  L_transicionSalBP2409
  L_transicionSalBP2410
  L_salioBP2411
  L_salioBP2412
  L_esperaBP3413
  L_esperaBP3414
  L_esperaBP3415
  L_entrandoBP3416
  L_entrandoBP3417
  L_entrandoBP3418
  L_transicionEBP3419
  L_transicionEBP3420
  L_transicionEBP3421
  L_transicionEntBP3422
  L_transicionEntBP3423
  L_transicionEntBP3424
  L_entroBP3425
  L_entroBP3426
  L_entroBP3427
  L_saliendoBP3428
  L_saliendoBP3429
  L_saliendoBP3430
  L_transicionSBP3431
  L_transicionSBP3432
  L_transicionSBP3433
  L_transicionSalBP3434
  L_transicionSalBP3435
  L_transicionSalBP3436
  L_salioBP3437
  L_salioBP3438
  L_esperaBP4439
  L_esperaBP4440
  L_esperaBP4441
  L_entrandoBP4442
  L_entrandoBP4443
  L_entrandoBP4444
  L_transicionEBP4445
  L_transicionEBP4446
  L_transicionEBP4447
  L_transicionEntBP4448
  L_transicionEntBP4449
  L_transicionEntBP4450
  L_entroBP4451
  L_entroBP4452
  L_entroBP4453
  L_saliendoBP4454
  L_saliendoBP4455
  L_saliendoBP4456
  L_transicionSBP4457
  L_transicionSBP4458
  L_transicionSBP4459
  L_transicionSalBP4460
  L_transicionSalBP4461
  L_transicionSalBP4462
  L_salioBP4463
  L_salioBP4464
  L_esperaBP6465
  L_esperaBP6466
  L_esperaBP6467
  L_entrandoBP6468
  L_entrandoBP6469
  L_entrandoBP6470
  L_transicionEBP6471
  L_transicionEBP6472
  L_transicionEBP6473
  L_transicionEntBP6474
  L_transicionEntBP6475
  L_transicionEntBP6476
  L_entroBP6477
  L_entroBP6478
  L_entroBP6479
  L_saliendoBP6480
  L_saliendoBP6481
  L_saliendoBP6482
  L_transicionSBP6483
  L_transicionSBP6484
  L_transicionSBP6485
  L_transicionSalBP6486
  L_transicionSalBP6487
  L_transicionSalBP6488
  L_salioBP6489
  L_salioBP6490
  L_esperaBP7491
  L_esperaBP7492
  L_esperaBP7493
  L_entrandoBP7494
  L_entrandoBP7495
  L_entrandoBP7496
  L_transicionEBP7497
  L_transicionEBP7498
  L_transicionEBP7499
  L_transicionEntBP7500
  L_transicionEntBP7501
  L_transicionEntBP7502
  L_entroBP7503
  L_entroBP7504
  L_entroBP7505
  L_saliendoBP7506
  L_saliendoBP7507
  L_saliendoBP7508
  L_transicionSBP7509
  L_transicionSBP7510
  L_transicionSBP7511
  L_transicionSalBP7512
  L_transicionSalBP7513
  L_transicionSalBP7514
  L_salioBP7515
  L_salioBP7516
  L_esperaBP9517
  L_esperaBP9518
  L_esperaBP9519
  L_entrandoBP9520
  L_entrandoBP9521
  L_entrandoBP9522
  L_transicionEBP9523
  L_transicionEBP9524
  L_transicionEBP9525
  L_transicionEntBP9526
  L_transicionEntBP9527
  L_transicionEntBP9528
  L_entroBP9529
  L_entroBP9530
  L_entroBP9531
  L_saliendoBP9532
  L_saliendoBP9533
  L_saliendoBP9534
  L_transicionSBP9535
  L_transicionSBP9536
  L_transicionSBP9537
  L_transicionSalBP9538
  L_transicionSalBP9539
  L_transicionSalBP9540
  L_salioBP9541
  L_salioBP9542
  L_interrupcionesAltoNivel543
  L_interrupcionesAltoNivel544
  L_interrupcionesAltoNivel545
  L_main546
  L_main547
  L_main548
  L_main549
  L_main550
  L_main551
  L_main552
  L_main553
  L_main554
  L_main555
  L_main556
  L_PicInit557
  L_PicInit558
  L_PicInit559
  L_TX_MSTR560
  L_TX_MSTR561
  L_TX_MSTR562
  L_TX_MSTR563
  L_TX_MSTR564
  L_TX_MSTR565
  L_TX_MSTR566
  L_TX_MSTR567
  L_TX_MSTR568
  L_TX_MSTR569
  L_TX_MSTR570
  L_TX_MSTR571
  L_TX_SLV572
  L_TX_SLV573
  L_TX_SLV574
  L_TX_SLV575
  L_TX_SLV576
  L_TX_SLV577
  L_TX_SLV578
  L_serialTxWioLTE579
  L_serialTxWioLTE580
  L_serialTxWioLTE581
  L_serialTxWioLTE582
  L_serialTxWioLTE583
  L_serialTxWioLTE584
  L_serialTxWioLTE585
  L_serialTxWioLTE586
  L_serialTxWioLTE587
  L_serialTxWioLTE588
  L_serialTxWioLTE589
  L_serialTxWioLTE590
  L_serialTxWioLTE591
  L_serialTxWioLTE592
  L_serialTxWioLTE593
  L_serialTxWioLTE594
  L_serialTxWioLTE595
  L_serialTxWioLTE596
  L_serialTxWioLTE597
  L_serialTxWioLTE598
  L_serialTxWioLTE599
  L_serialTxWioLTE600
  L_serialTxWioLTE601
  L_serialTxWioLTE602
  L_serialTxWioLTE603
  L_serialTxWioLTE604
  L_serialTxWioLTE605
  L_serialTxWioLTE606
  L_serialTxWioLTE607
  L_serialTxWioLTE608
  L_serialTxWioLTE609
  L_serialTxWioLTE610
  L_serialTxWioLTE611
  L_serialTxWioLTE612
  L_serialTxWioLTE613
  L_serialTxWioLTE614
  L_serialTxWioLTE615
  L_RX_PIC_PIC616
  L_RX_PIC_PIC617
  L_RX_PIC_PIC618
  L_RX_PIC_PIC619
  L_RX_PIC_PIC620
  L_RX_PIC_PIC621
  L_RX_PIC_PIC622
  L_RX_PIC_PIC623
  L_RX_PIC_PIC624
  L_RX_PIC_PIC625
  L_SENSADO626
  L_SENSADO627
  L_SENSADO628
  L_SENSADO629
  L_SENSADO630
  L_SENSADO631
  L_SENSADO632
  L_SENSADO633
  L_SENSADO634
  L_SENSADO635
  L_SENSADO636
  L_SENSADO637
  L_SENSADO638
  L_SENSADO639
  L_SENSADO640
  L_SENSADO641
  L_SENSADO642
  L_SENSADO643
  L_SENSADO644
  L_SENSADO645
  L_SENSADO646
  L_SENSADO647
  L_SENSADO648
  L_SENSADO649
  L_SENSADO650
  L_SENSADO651
  L_SENSADO652
  L_desbordoTemporizadorCero653
  L_desbordoTemporizadorCero654
  L_desbordoTemporizadorCero655
  L_desbordoTemporizadorCero656
  L_resetCuentas657
  L_resetCuentas658
  L_resetCuentas659
  L_resetCuentas660
  L_resetCuentas661
  L_resetCuentas662
  L_resetSLV663
  L__desbordoTemporizadorCero664
  L_end_lcd_send_nibble
  _lcd_send_nibble
  L__lcd_send_nibble666
  L__lcd_send_nibble667
  L__lcd_send_nibble668
  L__lcd_send_nibble669
  L__lcd_send_nibble670
  L__lcd_send_nibble671
  L__lcd_send_nibble672
  L__lcd_send_nibble673
  L_end_lcd_send_byte
  _lcd_send_byte
  L_end_lcd_init
  _lcd_init
  L_end_lcd_gotoxy
  _lcd_gotoxy
  L_end_lcd_chr
  _lcd_chr
  L_end_lcd_out
  _lcd_out
  L_end_lcd_outConst
  _lcd_outConst
  L_end_lcd_cmd
  _lcd_cmd
  L_end_bloqueos
  _bloqueos
  L__bloqueos682
  L__bloqueos683
  L__bloqueos684
  L__bloqueos685
  L__bloqueos686
  L__bloqueos687
  L__bloqueos688
  L__bloqueos689
  L__bloqueos690
  L__bloqueos691
  L__bloqueos692
  L__bloqueos693
  L__bloqueos694
  L_end_I2C_soft_init
  _I2C_soft_init
  L_end_I2C_soft_start
  _I2C_soft_start
  L_end_I2C_soft_stop
  _I2C_soft_stop
  L_end_I2C_soft_write
  _I2C_soft_write
  L__I2C_soft_write699
  L__I2C_soft_write700
  L__I2C_soft_write701
  L__I2C_soft_write702
  L_end_I2C_soft_read
  _I2C_soft_read
  L__I2C_soft_read704
  L__I2C_soft_read705
  L_end_iniciaEeprom
  _iniciaEeprom
  L_end_eepromEscribeNumero
  _eepromEscribeNumero
  L_end_eepromEscribeChar
  _eepromEscribeChar
  L__eepromEscribeChar709
  L__eepromEscribeChar710
  L__eepromEscribeChar711
  L_end_eepromLeeChar
  _eepromLeeChar
  L__eepromLeeChar713
  L_end_eepromLeeNumero
  _eepromLeeNumero
  L__eepromLeeNumero715
  L__eepromLeeNumero716
  L__eepromLeeNumero717
  L__eepromLeeNumero718
  L_end_muestraEstatus
  _muestraEstatus
  L_end_sensorNoBloqueo
  _sensorNoBloqueo
  L_end_sensorBloqueo
  _sensorBloqueo
  L_end_sensorBloqueoD
  _sensorBloqueoD
  L_end_sensorBloqueoT
  _sensorBloqueoT
  L_end_sensorBloqueoC
  _sensorBloqueoC
  L_end_sensorBloqueoO
  _sensorBloqueoO
  L_end_sensorBloqueoS
  _sensorBloqueoS
  L_end_sensorBloqueoPar1
  _sensorBloqueoPar1
  L_end_sensorBloqueoPar2
  _sensorBloqueoPar2
  L_end_sensorBloqueoPar3
  _sensorBloqueoPar3
  L_end_sensorBloqueoPar4
  _sensorBloqueoPar4
  L_end_sensorBloqueoPar6
  _sensorBloqueoPar6
  L_end_sensorBloqueoPar7
  _sensorBloqueoPar7
  L_end_sensorBloqueoPar9
  _sensorBloqueoPar9
  L_end_espera
  _espera
  L__espera735
  L__espera736
  L__espera737
  L__espera738
  L__espera739
  L__espera740
  L__espera741
  L__espera742
  L__espera743
  L__espera744
  L__espera745
  L__espera746
  L__espera747
  L__espera748
  L__espera749
  L__espera750
  L__espera751
  L__espera752
  L__espera753
  L__espera754
  L__espera755
  L__espera756
  L__espera757
  L__espera758
  L__espera759
  L__espera760
  L__espera761
  L__espera762
  L__espera763
  L__espera764
  L__espera765
  L__espera766
  L__espera767
  L__espera768
  L__espera769
  L__espera770
  L__espera771
  L__espera772
  L__espera773
  L__espera774
  L__espera775
  L__espera776
  L__espera777
  L__espera778
  L_end_entrando
  _entrando
  L__entrando780
  L__entrando781
  L__entrando782
  L__entrando783
  L__entrando784
  L__entrando785
  L__entrando786
  L__entrando787
  L__entrando788
  L__entrando789
  L__entrando790
  L__entrando791
  L__entrando792
  L__entrando793
  L__entrando794
  L__entrando795
  L__entrando796
  L__entrando797
  L__entrando798
  L__entrando799
  L__entrando800
  L__entrando801
  L__entrando802
  L__entrando803
  L__entrando804
  L__entrando805
  L__entrando806
  L__entrando807
  L__entrando808
  L__entrando809
  L__entrando810
  L__entrando811
  L__entrando812
  L__entrando813
  L__entrando814
  L__entrando815
  L__entrando816
  L__entrando817
  L__entrando818
  L__entrando819
  L__entrando820
  L__entrando821
  L_end_transicionE
  _transicionE
  L__transicionE823
  L__transicionE824
  L__transicionE825
  L__transicionE826
  L__transicionE827
  L__transicionE828
  L__transicionE829
  L__transicionE830
  L__transicionE831
  L__transicionE832
  L__transicionE833
  L__transicionE834
  L__transicionE835
  L__transicionE836
  L__transicionE837
  L__transicionE838
  L__transicionE839
  L__transicionE840
  L__transicionE841
  L__transicionE842
  L_end_transicionEnt
  _transicionEnt
  L__transicionEnt844
  L__transicionEnt845
  L__transicionEnt846
  L__transicionEnt847
  L__transicionEnt848
  L__transicionEnt849
  L__transicionEnt850
  L__transicionEnt851
  L__transicionEnt852
  L__transicionEnt853
  L__transicionEnt854
  L__transicionEnt855
  L__transicionEnt856
  L__transicionEnt857
  L__transicionEnt858
  L__transicionEnt859
  L__transicionEnt860
  L__transicionEnt861
  L__transicionEnt862
  L__transicionEnt863
  L__transicionEnt864
  L__transicionEnt865
  L__transicionEnt866
  L__transicionEnt867
  L_end_entro
  _entro
  L_end_saliendo
  _saliendo
  L__saliendo870
  L__saliendo871
  L__saliendo872
  L__saliendo873
  L__saliendo874
  L__saliendo875
  L__saliendo876
  L__saliendo877
  L__saliendo878
  L__saliendo879
  L__saliendo880
  L__saliendo881
  L__saliendo882
  L__saliendo883
  L__saliendo884
  L__saliendo885
  L__saliendo886
  L__saliendo887
  L__saliendo888
  L__saliendo889
  L__saliendo890
  L__saliendo891
  L__saliendo892
  L__saliendo893
  L__saliendo894
  L__saliendo895
  L__saliendo896
  L__saliendo897
  L__saliendo898
  L__saliendo899
  L__saliendo900
  L__saliendo901
  L__saliendo902
  L__saliendo903
  L__saliendo904
  L__saliendo905
  L__saliendo906
  L__saliendo907
  L__saliendo908
  L__saliendo909
  L__saliendo910
  L__saliendo911
  L_end_transicionS
  _transicionS
  L__transicionS913
  L__transicionS914
  L__transicionS915
  L__transicionS916
  L__transicionS917
  L__transicionS918
  L__transicionS919
  L__transicionS920
  L__transicionS921
  L__transicionS922
  L__transicionS923
  L__transicionS924
  L__transicionS925
  L__transicionS926
  L__transicionS927
  L__transicionS928
  L__transicionS929
  L__transicionS930
  L__transicionS931
  L__transicionS932
  L_end_transicionSal
  _transicionSal
  L__transicionSal934
  L__transicionSal935
  L__transicionSal936
  L__transicionSal937
  L__transicionSal938
  L__transicionSal939
  L__transicionSal940
  L__transicionSal941
  L__transicionSal942
  L__transicionSal943
  L__transicionSal944
  L__transicionSal945
  L__transicionSal946
  L__transicionSal947
  L__transicionSal948
  L__transicionSal949
  L__transicionSal950
  L__transicionSal951
  L__transicionSal952
  L__transicionSal953
  L__transicionSal954
  L__transicionSal955
  L__transicionSal956
  L__transicionSal957
  L_end_salio
  _salio
  L_end_esperaB
  _esperaB
  L__esperaB960
  L__esperaB961
  L__esperaB962
  L__esperaB963
  L__esperaB964
  L__esperaB965
  L__esperaB966
  L__esperaB967
  L__esperaB968
  L__esperaB969
  L__esperaB970
  L__esperaB971
  L__esperaB972
  L__esperaB973
  L__esperaB974
  L__esperaB975
  L_end_entrandoB
  _entrandoB
  L__entrandoB977
  L__entrandoB978
  L__entrandoB979
  L__entrandoB980
  L__entrandoB981
  L__entrandoB982
  L__entrandoB983
  L__entrandoB984
  L__entrandoB985
  L__entrandoB986
  L__entrandoB987
  L__entrandoB988
  L__entrandoB989
  L__entrandoB990
  L__entrandoB991
  L__entrandoB992
  L__entrandoB993
  L__entrandoB994
  L__entrandoB995
  L__entrandoB996
  L__entrandoB997
  L__entrandoB998
  L_end_transicionEB
  _transicionEB
  L__transicionEB1000
  L__transicionEB1001
  L__transicionEB1002
  L__transicionEB1003
  L__transicionEB1004
  L__transicionEB1005
  L__transicionEB1006
  L__transicionEB1007
  L__transicionEB1008
  L__transicionEB1009
  L__transicionEB1010
  L__transicionEB1011
  L__transicionEB1012
  L__transicionEB1013
  L__transicionEB1014
  L__transicionEB1015
  L__transicionEB1016
  L__transicionEB1017
  L__transicionEB1018
  L__transicionEB1019
  L_end_transicionEntB
  _transicionEntB
  L__transicionEntB1021
  L__transicionEntB1022
  L__transicionEntB1023
  L__transicionEntB1024
  L__transicionEntB1025
  L__transicionEntB1026
  L__transicionEntB1027
  L__transicionEntB1028
  L__transicionEntB1029
  L__transicionEntB1030
  L_end_entroB
  _entroB
  L_end_saliendoB
  _saliendoB
  L__saliendoB1033
  L__saliendoB1034
  L__saliendoB1035
  L__saliendoB1036
  L__saliendoB1037
  L__saliendoB1038
  L__saliendoB1039
  L__saliendoB1040
  L__saliendoB1041
  L__saliendoB1042
  L_end_transicionSB
  _transicionSB
  L__transicionSB1044
  L__transicionSB1045
  L__transicionSB1046
  L__transicionSB1047
  L__transicionSB1048
  L__transicionSB1049
  L__transicionSB1050
  L__transicionSB1051
  L__transicionSB1052
  L__transicionSB1053
  L__transicionSB1054
  L__transicionSB1055
  L__transicionSB1056
  L__transicionSB1057
  L__transicionSB1058
  L__transicionSB1059
  L__transicionSB1060
  L__transicionSB1061
  L__transicionSB1062
  L__transicionSB1063
  L__transicionSB1064
  L__transicionSB1065
  L__transicionSB1066
  L__transicionSB1067
  L__transicionSB1068
  L__transicionSB1069
  L__transicionSB1070
  L__transicionSB1071
  L__transicionSB1072
  L__transicionSB1073
  L__transicionSB1074
  L__transicionSB1075
  L_end_transicionSalB
  _transicionSalB
  L__transicionSalB1077
  L__transicionSalB1078
  L__transicionSalB1079
  L__transicionSalB1080
  L__transicionSalB1081
  L__transicionSalB1082
  L__transicionSalB1083
  L__transicionSalB1084
  L__transicionSalB1085
  L__transicionSalB1086
  L__transicionSalB1087
  L__transicionSalB1088
  L_end_salioB
  _salioB
  L_end_esperaBD
  _esperaBD
  L__esperaBD1091
  L__esperaBD1092
  L__esperaBD1093
  L__esperaBD1094
  L__esperaBD1095
  L__esperaBD1096
  L__esperaBD1097
  L__esperaBD1098
  L__esperaBD1099
  L__esperaBD1100
  L__esperaBD1101
  L__esperaBD1102
  L__esperaBD1103
  L__esperaBD1104
  L__esperaBD1105
  L__esperaBD1106
  L_end_entrandoBD
  _entrandoBD
  L__entrandoBD1108
  L__entrandoBD1109
  L__entrandoBD1110
  L__entrandoBD1111
  L__entrandoBD1112
  L__entrandoBD1113
  L__entrandoBD1114
  L__entrandoBD1115
  L__entrandoBD1116
  L__entrandoBD1117
  L_end_transicionEBD
  _transicionEBD
  L__transicionEBD1119
  L__transicionEBD1120
  L__transicionEBD1121
  L__transicionEBD1122
  L__transicionEBD1123
  L__transicionEBD1124
  L__transicionEBD1125
  L__transicionEBD1126
  L__transicionEBD1127
  L__transicionEBD1128
  L__transicionEBD1129
  L__transicionEBD1130
  L__transicionEBD1131
  L__transicionEBD1132
  L__transicionEBD1133
  L__transicionEBD1134
  L__transicionEBD1135
  L__transicionEBD1136
  L__transicionEBD1137
  L__transicionEBD1138
  L__transicionEBD1139
  L__transicionEBD1140
  L__transicionEBD1141
  L__transicionEBD1142
  L__transicionEBD1143
  L__transicionEBD1144
  L__transicionEBD1145
  L__transicionEBD1146
  L__transicionEBD1147
  L__transicionEBD1148
  L__transicionEBD1149
  L__transicionEBD1150
  L_end_transicionEntBD
  _transicionEntBD
  L__transicionEntBD1152
  L__transicionEntBD1153
  L__transicionEntBD1154
  L__transicionEntBD1155
  L__transicionEntBD1156
  L__transicionEntBD1157
  L__transicionEntBD1158
  L__transicionEntBD1159
  L__transicionEntBD1160
  L__transicionEntBD1161
  L__transicionEntBD1162
  L__transicionEntBD1163
  L_end_entroBD
  _entroBD
  L_end_saliendoBD
  _saliendoBD
  L__saliendoBD1166
  L__saliendoBD1167
  L__saliendoBD1168
  L__saliendoBD1169
  L__saliendoBD1170
  L__saliendoBD1171
  L__saliendoBD1172
  L__saliendoBD1173
  L__saliendoBD1174
  L__saliendoBD1175
  L__saliendoBD1176
  L__saliendoBD1177
  L__saliendoBD1178
  L__saliendoBD1179
  L__saliendoBD1180
  L__saliendoBD1181
  L__saliendoBD1182
  L__saliendoBD1183
  L__saliendoBD1184
  L__saliendoBD1185
  L__saliendoBD1186
  L__saliendoBD1187
  L_end_transicionSBD
  _transicionSBD
  L__transicionSBD1189
  L__transicionSBD1190
  L__transicionSBD1191
  L__transicionSBD1192
  L__transicionSBD1193
  L__transicionSBD1194
  L__transicionSBD1195
  L__transicionSBD1196
  L__transicionSBD1197
  L__transicionSBD1198
  L__transicionSBD1199
  L__transicionSBD1200
  L__transicionSBD1201
  L__transicionSBD1202
  L__transicionSBD1203
  L__transicionSBD1204
  L__transicionSBD1205
  L__transicionSBD1206
  L__transicionSBD1207
  L__transicionSBD1208
  L_end_transicionSalBD
  _transicionSalBD
  L__transicionSalBD1210
  L__transicionSalBD1211
  L__transicionSalBD1212
  L__transicionSalBD1213
  L__transicionSalBD1214
  L__transicionSalBD1215
  L__transicionSalBD1216
  L__transicionSalBD1217
  L__transicionSalBD1218
  L__transicionSalBD1219
  L_end_salioBD
  _salioBD
  L_end_esperaBT
  _esperaBT
  L__esperaBT1222
  L__esperaBT1223
  L__esperaBT1224
  L__esperaBT1225
  L__esperaBT1226
  L__esperaBT1227
  L__esperaBT1228
  L__esperaBT1229
  L__esperaBT1230
  L__esperaBT1231
  L__esperaBT1232
  L__esperaBT1233
  L__esperaBT1234
  L__esperaBT1235
  L__esperaBT1236
  L__esperaBT1237
  L_end_entrandoBT
  _entrandoBT
  L__entrandoBT1239
  L__entrandoBT1240
  L__entrandoBT1241
  L__entrandoBT1242
  L__entrandoBT1243
  L__entrandoBT1244
  L__entrandoBT1245
  L__entrandoBT1246
  L__entrandoBT1247
  L__entrandoBT1248
  L__entrandoBT1249
  L__entrandoBT1250
  L__entrandoBT1251
  L__entrandoBT1252
  L__entrandoBT1253
  L__entrandoBT1254
  L__entrandoBT1255
  L__entrandoBT1256
  L__entrandoBT1257
  L__entrandoBT1258
  L__entrandoBT1259
  L__entrandoBT1260
  L_end_transicionEBT
  _transicionEBT
  L__transicionEBT1262
  L__transicionEBT1263
  L__transicionEBT1264
  L__transicionEBT1265
  L__transicionEBT1266
  L__transicionEBT1267
  L__transicionEBT1268
  L__transicionEBT1269
  L__transicionEBT1270
  L__transicionEBT1271
  L__transicionEBT1272
  L__transicionEBT1273
  L__transicionEBT1274
  L__transicionEBT1275
  L__transicionEBT1276
  L__transicionEBT1277
  L__transicionEBT1278
  L__transicionEBT1279
  L__transicionEBT1280
  L__transicionEBT1281
  L_end_transicionEntBT
  _transicionEntBT
  L__transicionEntBT1283
  L__transicionEntBT1284
  L__transicionEntBT1285
  L__transicionEntBT1286
  L__transicionEntBT1287
  L__transicionEntBT1288
  L__transicionEntBT1289
  L__transicionEntBT1290
  L__transicionEntBT1291
  L__transicionEntBT1292
  L_end_entroBT
  _entroBT
  L_end_saliendoBT
  _saliendoBT
  L__saliendoBT1295
  L__saliendoBT1296
  L__saliendoBT1297
  L__saliendoBT1298
  L__saliendoBT1299
  L__saliendoBT1300
  L__saliendoBT1301
  L__saliendoBT1302
  L__saliendoBT1303
  L__saliendoBT1304
  L_end_transicionSBT
  _transicionSBT
  L__transicionSBT1306
  L__transicionSBT1307
  L__transicionSBT1308
  L__transicionSBT1309
  L__transicionSBT1310
  L__transicionSBT1311
  L__transicionSBT1312
  L__transicionSBT1313
  L__transicionSBT1314
  L__transicionSBT1315
  L__transicionSBT1316
  L__transicionSBT1317
  L__transicionSBT1318
  L__transicionSBT1319
  L__transicionSBT1320
  L__transicionSBT1321
  L__transicionSBT1322
  L__transicionSBT1323
  L__transicionSBT1324
  L__transicionSBT1325
  L__transicionSBT1326
  L__transicionSBT1327
  L__transicionSBT1328
  L__transicionSBT1329
  L__transicionSBT1330
  L__transicionSBT1331
  L__transicionSBT1332
  L__transicionSBT1333
  L__transicionSBT1334
  L__transicionSBT1335
  L__transicionSBT1336
  L__transicionSBT1337
  L_end_transicionSalBT
  _transicionSalBT
  L__transicionSalBT1339
  L__transicionSalBT1340
  L__transicionSalBT1341
  L__transicionSalBT1342
  L__transicionSalBT1343
  L__transicionSalBT1344
  L__transicionSalBT1345
  L__transicionSalBT1346
  L__transicionSalBT1347
  L__transicionSalBT1348
  L__transicionSalBT1349
  L__transicionSalBT1350
  L_end_salioBT
  _salioBT
  L_end_esperaBC
  _esperaBC
  L__esperaBC1353
  L__esperaBC1354
  L__esperaBC1355
  L__esperaBC1356
  L__esperaBC1357
  L__esperaBC1358
  L__esperaBC1359
  L__esperaBC1360
  L__esperaBC1361
  L__esperaBC1362
  L__esperaBC1363
  L__esperaBC1364
  L__esperaBC1365
  L__esperaBC1366
  L__esperaBC1367
  L__esperaBC1368
  L_end_entrandoBC
  _entrandoBC
  L__entrandoBC1370
  L__entrandoBC1371
  L__entrandoBC1372
  L__entrandoBC1373
  L__entrandoBC1374
  L__entrandoBC1375
  L__entrandoBC1376
  L__entrandoBC1377
  L__entrandoBC1378
  L__entrandoBC1379
  L_end_transicionEBC
  _transicionEBC
  L__transicionEBC1381
  L__transicionEBC1382
  L__transicionEBC1383
  L__transicionEBC1384
  L__transicionEBC1385
  L__transicionEBC1386
  L__transicionEBC1387
  L__transicionEBC1388
  L__transicionEBC1389
  L__transicionEBC1390
  L__transicionEBC1391
  L__transicionEBC1392
  L__transicionEBC1393
  L__transicionEBC1394
  L__transicionEBC1395
  L__transicionEBC1396
  L__transicionEBC1397
  L__transicionEBC1398
  L__transicionEBC1399
  L__transicionEBC1400
  L__transicionEBC1401
  L__transicionEBC1402
  L__transicionEBC1403
  L__transicionEBC1404
  L__transicionEBC1405
  L__transicionEBC1406
  L__transicionEBC1407
  L__transicionEBC1408
  L__transicionEBC1409
  L__transicionEBC1410
  L__transicionEBC1411
  L__transicionEBC1412
  L_end_transicionEntBC
  _transicionEntBC
  L__transicionEntBC1414
  L__transicionEntBC1415
  L__transicionEntBC1416
  L__transicionEntBC1417
  L__transicionEntBC1418
  L__transicionEntBC1419
  L__transicionEntBC1420
  L__transicionEntBC1421
  L__transicionEntBC1422
  L__transicionEntBC1423
  L__transicionEntBC1424
  L__transicionEntBC1425
  L_end_entroBC
  _entroBC
  L_end_saliendoBC
  _saliendoBC
  L__saliendoBC1428
  L__saliendoBC1429
  L__saliendoBC1430
  L__saliendoBC1431
  L__saliendoBC1432
  L__saliendoBC1433
  L__saliendoBC1434
  L__saliendoBC1435
  L__saliendoBC1436
  L__saliendoBC1437
  L__saliendoBC1438
  L__saliendoBC1439
  L__saliendoBC1440
  L__saliendoBC1441
  L__saliendoBC1442
  L__saliendoBC1443
  L__saliendoBC1444
  L__saliendoBC1445
  L__saliendoBC1446
  L__saliendoBC1447
  L__saliendoBC1448
  L__saliendoBC1449
  L_end_transicionSBC
  _transicionSBC
  L__transicionSBC1451
  L__transicionSBC1452
  L__transicionSBC1453
  L__transicionSBC1454
  L__transicionSBC1455
  L__transicionSBC1456
  L__transicionSBC1457
  L__transicionSBC1458
  L__transicionSBC1459
  L__transicionSBC1460
  L__transicionSBC1461
  L__transicionSBC1462
  L__transicionSBC1463
  L__transicionSBC1464
  L__transicionSBC1465
  L__transicionSBC1466
  L__transicionSBC1467
  L__transicionSBC1468
  L__transicionSBC1469
  L__transicionSBC1470
  L_end_transicionSalBC
  _transicionSalBC
  L__transicionSalBC1472
  L__transicionSalBC1473
  L__transicionSalBC1474
  L__transicionSalBC1475
  L__transicionSalBC1476
  L__transicionSalBC1477
  L__transicionSalBC1478
  L__transicionSalBC1479
  L__transicionSalBC1480
  L__transicionSalBC1481
  L_end_salioBC
  _salioBC
  L_end_esperaBO
  _esperaBO
  L__esperaBO1484
  L__esperaBO1485
  L__esperaBO1486
  L__esperaBO1487
  L__esperaBO1488
  L__esperaBO1489
  L__esperaBO1490
  L__esperaBO1491
  L__esperaBO1492
  L__esperaBO1493
  L__esperaBO1494
  L__esperaBO1495
  L__esperaBO1496
  L__esperaBO1497
  L__esperaBO1498
  L__esperaBO1499
  L_end_entrandoBO
  _entrandoBO
  L__entrandoBO1501
  L__entrandoBO1502
  L__entrandoBO1503
  L__entrandoBO1504
  L__entrandoBO1505
  L__entrandoBO1506
  L__entrandoBO1507
  L__entrandoBO1508
  L__entrandoBO1509
  L__entrandoBO1510
  L__entrandoBO1511
  L__entrandoBO1512
  L__entrandoBO1513
  L__entrandoBO1514
  L__entrandoBO1515
  L__entrandoBO1516
  L__entrandoBO1517
  L__entrandoBO1518
  L__entrandoBO1519
  L__entrandoBO1520
  L__entrandoBO1521
  L__entrandoBO1522
  L_end_transicionEBO
  _transicionEBO
  L__transicionEBO1524
  L__transicionEBO1525
  L__transicionEBO1526
  L__transicionEBO1527
  L__transicionEBO1528
  L__transicionEBO1529
  L__transicionEBO1530
  L__transicionEBO1531
  L__transicionEBO1532
  L__transicionEBO1533
  L__transicionEBO1534
  L__transicionEBO1535
  L__transicionEBO1536
  L__transicionEBO1537
  L__transicionEBO1538
  L__transicionEBO1539
  L__transicionEBO1540
  L__transicionEBO1541
  L__transicionEBO1542
  L__transicionEBO1543
  L_end_transicionEntBO
  _transicionEntBO
  L__transicionEntBO1545
  L__transicionEntBO1546
  L__transicionEntBO1547
  L__transicionEntBO1548
  L__transicionEntBO1549
  L__transicionEntBO1550
  L__transicionEntBO1551
  L__transicionEntBO1552
  L__transicionEntBO1553
  L__transicionEntBO1554
  L_end_entroBO
  _entroBO
  L_end_saliendoBO
  _saliendoBO
  L__saliendoBO1557
  L__saliendoBO1558
  L__saliendoBO1559
  L__saliendoBO1560
  L__saliendoBO1561
  L__saliendoBO1562
  L__saliendoBO1563
  L__saliendoBO1564
  L__saliendoBO1565
  L__saliendoBO1566
  L_end_transicionSBO
  _transicionSBO
  L__transicionSBO1568
  L__transicionSBO1569
  L__transicionSBO1570
  L__transicionSBO1571
  L__transicionSBO1572
  L__transicionSBO1573
  L__transicionSBO1574
  L__transicionSBO1575
  L__transicionSBO1576
  L__transicionSBO1577
  L__transicionSBO1578
  L__transicionSBO1579
  L__transicionSBO1580
  L__transicionSBO1581
  L__transicionSBO1582
  L__transicionSBO1583
  L__transicionSBO1584
  L__transicionSBO1585
  L__transicionSBO1586
  L__transicionSBO1587
  L__transicionSBO1588
  L__transicionSBO1589
  L__transicionSBO1590
  L__transicionSBO1591
  L__transicionSBO1592
  L__transicionSBO1593
  L__transicionSBO1594
  L__transicionSBO1595
  L__transicionSBO1596
  L__transicionSBO1597
  L__transicionSBO1598
  L__transicionSBO1599
  L_end_transicionSalBO
  _transicionSalBO
  L__transicionSalBO1601
  L__transicionSalBO1602
  L__transicionSalBO1603
  L__transicionSalBO1604
  L__transicionSalBO1605
  L__transicionSalBO1606
  L__transicionSalBO1607
  L__transicionSalBO1608
  L__transicionSalBO1609
  L__transicionSalBO1610
  L__transicionSalBO1611
  L__transicionSalBO1612
  L_end_salioBO
  _salioBO
  L_end_esperaBS
  _esperaBS
  L__esperaBS1615
  L__esperaBS1616
  L__esperaBS1617
  L__esperaBS1618
  L__esperaBS1619
  L__esperaBS1620
  L__esperaBS1621
  L__esperaBS1622
  L__esperaBS1623
  L__esperaBS1624
  L__esperaBS1625
  L__esperaBS1626
  L__esperaBS1627
  L__esperaBS1628
  L__esperaBS1629
  L__esperaBS1630
  L_end_entrandoBS
  _entrandoBS
  L__entrandoBS1632
  L__entrandoBS1633
  L__entrandoBS1634
  L__entrandoBS1635
  L__entrandoBS1636
  L__entrandoBS1637
  L__entrandoBS1638
  L__entrandoBS1639
  L__entrandoBS1640
  L__entrandoBS1641
  L_end_transicionEBS
  _transicionEBS
  L__transicionEBS1643
  L__transicionEBS1644
  L__transicionEBS1645
  L__transicionEBS1646
  L__transicionEBS1647
  L__transicionEBS1648
  L__transicionEBS1649
  L__transicionEBS1650
  L__transicionEBS1651
  L__transicionEBS1652
  L__transicionEBS1653
  L__transicionEBS1654
  L__transicionEBS1655
  L__transicionEBS1656
  L__transicionEBS1657
  L__transicionEBS1658
  L__transicionEBS1659
  L__transicionEBS1660
  L__transicionEBS1661
  L__transicionEBS1662
  L__transicionEBS1663
  L__transicionEBS1664
  L__transicionEBS1665
  L__transicionEBS1666
  L__transicionEBS1667
  L__transicionEBS1668
  L__transicionEBS1669
  L__transicionEBS1670
  L__transicionEBS1671
  L__transicionEBS1672
  L__transicionEBS1673
  L__transicionEBS1674
  L__transicionEBS1675
  L__transicionEBS1676
  L_end_transicionEntBS
  _transicionEntBS
  L__transicionEntBS1678
  L__transicionEntBS1679
  L__transicionEntBS1680
  L__transicionEntBS1681
  L__transicionEntBS1682
  L__transicionEntBS1683
  L__transicionEntBS1684
  L__transicionEntBS1685
  L__transicionEntBS1686
  L__transicionEntBS1687
  L__transicionEntBS1688
  L__transicionEntBS1689
  L_end_entroBS
  _entroBS
  L_end_saliendoBS
  _saliendoBS
  L__saliendoBS1692
  L__saliendoBS1693
  L__saliendoBS1694
  L__saliendoBS1695
  L__saliendoBS1696
  L__saliendoBS1697
  L__saliendoBS1698
  L__saliendoBS1699
  L__saliendoBS1700
  L__saliendoBS1701
  L__saliendoBS1702
  L__saliendoBS1703
  L__saliendoBS1704
  L__saliendoBS1705
  L__saliendoBS1706
  L__saliendoBS1707
  L__saliendoBS1708
  L__saliendoBS1709
  L__saliendoBS1710
  L__saliendoBS1711
  L__saliendoBS1712
  L__saliendoBS1713
  L_end_transicionSBS
  _transicionSBS
  L__transicionSBS1715
  L__transicionSBS1716
  L__transicionSBS1717
  L__transicionSBS1718
  L__transicionSBS1719
  L__transicionSBS1720
  L__transicionSBS1721
  L__transicionSBS1722
  L__transicionSBS1723
  L__transicionSBS1724
  L__transicionSBS1725
  L__transicionSBS1726
  L__transicionSBS1727
  L__transicionSBS1728
  L__transicionSBS1729
  L__transicionSBS1730
  L__transicionSBS1731
  L__transicionSBS1732
  L__transicionSBS1733
  L__transicionSBS1734
  L_end_transicionSalBS
  _transicionSalBS
  L__transicionSalBS1736
  L__transicionSalBS1737
  L__transicionSalBS1738
  L__transicionSalBS1739
  L__transicionSalBS1740
  L__transicionSalBS1741
  L__transicionSalBS1742
  L__transicionSalBS1743
  L__transicionSalBS1744
  L__transicionSalBS1745
  L_end_salioBS
  _salioBS
  L_end_esperaBP1
  _esperaBP1
  L__esperaBP11748
  L__esperaBP11749
  L__esperaBP11750
  L__esperaBP11751
  L__esperaBP11752
  L__esperaBP11753
  L__esperaBP11754
  L__esperaBP11755
  L__esperaBP11756
  L__esperaBP11757
  L__esperaBP11758
  L__esperaBP11759
  L_end_entrandoBP1
  _entrandoBP1
  L__entrandoBP11761
  L__entrandoBP11762
  L__entrandoBP11763
  L__entrandoBP11764
  L__entrandoBP11765
  L__entrandoBP11766
  L__entrandoBP11767
  L__entrandoBP11768
  L_end_transicionEBP1
  _transicionEBP1
  L__transicionEBP11770
  L__transicionEBP11771
  L__transicionEBP11772
  L__transicionEBP11773
  L__transicionEBP11774
  L__transicionEBP11775
  L__transicionEBP11776
  L__transicionEBP11777
  L__transicionEBP11778
  L__transicionEBP11779
  L__transicionEBP11780
  L__transicionEBP11781
  L__transicionEBP11782
  L__transicionEBP11783
  L_end_transicionEntBP1
  _transicionEntBP1
  L__transicionEntBP11785
  L__transicionEntBP11786
  L__transicionEntBP11787
  L__transicionEntBP11788
  L__transicionEntBP11789
  L__transicionEntBP11790
  L__transicionEntBP11791
  L__transicionEntBP11792
  L_end_entroBP1
  _entroBP1
  L_end_saliendoBP1
  _saliendoBP1
  L__saliendoBP11795
  L__saliendoBP11796
  L__saliendoBP11797
  L__saliendoBP11798
  L__saliendoBP11799
  L__saliendoBP11800
  L__saliendoBP11801
  L__saliendoBP11802
  L_end_transicionSBP1
  _transicionSBP1
  L__transicionSBP11804
  L__transicionSBP11805
  L__transicionSBP11806
  L__transicionSBP11807
  L__transicionSBP11808
  L__transicionSBP11809
  L__transicionSBP11810
  L__transicionSBP11811
  L__transicionSBP11812
  L__transicionSBP11813
  L__transicionSBP11814
  L__transicionSBP11815
  L__transicionSBP11816
  L__transicionSBP11817
  L_end_transicionSalBP1
  _transicionSalBP1
  L__transicionSalBP11819
  L__transicionSalBP11820
  L__transicionSalBP11821
  L__transicionSalBP11822
  L__transicionSalBP11823
  L__transicionSalBP11824
  L__transicionSalBP11825
  L__transicionSalBP11826
  L_end_salioBP1
  _salioBP1
  L_end_esperaBP2
  _esperaBP2
  L__esperaBP21829
  L__esperaBP21830
  L__esperaBP21831
  L__esperaBP21832
  L__esperaBP21833
  L__esperaBP21834
  L__esperaBP21835
  L__esperaBP21836
  L__esperaBP21837
  L__esperaBP21838
  L__esperaBP21839
  L__esperaBP21840
  L_end_entrandoBP2
  _entrandoBP2
  L__entrandoBP21842
  L__entrandoBP21843
  L__entrandoBP21844
  L__entrandoBP21845
  L__entrandoBP21846
  L__entrandoBP21847
  L__entrandoBP21848
  L__entrandoBP21849
  L_end_transicionEBP2
  _transicionEBP2
  L__transicionEBP21851
  L__transicionEBP21852
  L__transicionEBP21853
  L__transicionEBP21854
  L__transicionEBP21855
  L__transicionEBP21856
  L__transicionEBP21857
  L__transicionEBP21858
  L__transicionEBP21859
  L__transicionEBP21860
  L__transicionEBP21861
  L__transicionEBP21862
  L__transicionEBP21863
  L__transicionEBP21864
  L_end_transicionEntBP2
  _transicionEntBP2
  L__transicionEntBP21866
  L__transicionEntBP21867
  L__transicionEntBP21868
  L__transicionEntBP21869
  L__transicionEntBP21870
  L__transicionEntBP21871
  L__transicionEntBP21872
  L__transicionEntBP21873
  L_end_entroBP2
  _entroBP2
  L_end_saliendoBP2
  _saliendoBP2
  L__saliendoBP21876
  L__saliendoBP21877
  L__saliendoBP21878
  L__saliendoBP21879
  L__saliendoBP21880
  L__saliendoBP21881
  L__saliendoBP21882
  L__saliendoBP21883
  L_end_transicionSBP2
  _transicionSBP2
  L__transicionSBP21885
  L__transicionSBP21886
  L__transicionSBP21887
  L__transicionSBP21888
  L__transicionSBP21889
  L__transicionSBP21890
  L__transicionSBP21891
  L__transicionSBP21892
  L__transicionSBP21893
  L__transicionSBP21894
  L__transicionSBP21895
  L__transicionSBP21896
  L__transicionSBP21897
  L__transicionSBP21898
  L__transicionSBP21899
  L__transicionSBP21900
  L__transicionSBP21901
  L__transicionSBP21902
  L__transicionSBP21903
  L__transicionSBP21904
  L__transicionSBP21905
  L__transicionSBP21906
  L__transicionSBP21907
  L__transicionSBP21908
  L_end_transicionSalBP2
  _transicionSalBP2
  L__transicionSalBP21910
  L__transicionSalBP21911
  L__transicionSalBP21912
  L__transicionSalBP21913
  L__transicionSalBP21914
  L__transicionSalBP21915
  L__transicionSalBP21916
  L__transicionSalBP21917
  L_end_salioBP2
  _salioBP2
  L_end_esperaBP3
  _esperaBP3
  L__esperaBP31920
  L__esperaBP31921
  L__esperaBP31922
  L__esperaBP31923
  L__esperaBP31924
  L__esperaBP31925
  L__esperaBP31926
  L__esperaBP31927
  L__esperaBP31928
  L__esperaBP31929
  L__esperaBP31930
  L__esperaBP31931
  L_end_entrandoBP3
  _entrandoBP3
  L__entrandoBP31933
  L__entrandoBP31934
  L__entrandoBP31935
  L__entrandoBP31936
  L__entrandoBP31937
  L__entrandoBP31938
  L__entrandoBP31939
  L__entrandoBP31940
  L_end_transicionEBP3
  _transicionEBP3
  L__transicionEBP31942
  L__transicionEBP31943
  L__transicionEBP31944
  L__transicionEBP31945
  L__transicionEBP31946
  L__transicionEBP31947
  L__transicionEBP31948
  L__transicionEBP31949
  L__transicionEBP31950
  L__transicionEBP31951
  L__transicionEBP31952
  L__transicionEBP31953
  L__transicionEBP31954
  L__transicionEBP31955
  L_end_transicionEntBP3
  _transicionEntBP3
  L__transicionEntBP31957
  L__transicionEntBP31958
  L__transicionEntBP31959
  L__transicionEntBP31960
  L__transicionEntBP31961
  L__transicionEntBP31962
  L__transicionEntBP31963
  L__transicionEntBP31964
  L_end_entroBP3
  _entroBP3
  L_end_saliendoBP3
  _saliendoBP3
  L__saliendoBP31967
  L__saliendoBP31968
  L__saliendoBP31969
  L__saliendoBP31970
  L__saliendoBP31971
  L__saliendoBP31972
  L__saliendoBP31973
  L__saliendoBP31974
  L_end_transicionSBP3
  _transicionSBP3
  L__transicionSBP31976
  L__transicionSBP31977
  L__transicionSBP31978
  L__transicionSBP31979
  L__transicionSBP31980
  L__transicionSBP31981
  L__transicionSBP31982
  L__transicionSBP31983
  L__transicionSBP31984
  L__transicionSBP31985
  L__transicionSBP31986
  L__transicionSBP31987
  L__transicionSBP31988
  L__transicionSBP31989
  L_end_transicionSalBP3
  _transicionSalBP3
  L__transicionSalBP31991
  L__transicionSalBP31992
  L__transicionSalBP31993
  L__transicionSalBP31994
  L__transicionSalBP31995
  L__transicionSalBP31996
  L__transicionSalBP31997
  L__transicionSalBP31998
  L_end_salioBP3
  _salioBP3
  L_end_esperaBP4
  _esperaBP4
  L__esperaBP42001
  L__esperaBP42002
  L__esperaBP42003
  L__esperaBP42004
  L__esperaBP42005
  L__esperaBP42006
  L__esperaBP42007
  L__esperaBP42008
  L__esperaBP42009
  L__esperaBP42010
  L_end_entrandoBP4
  _entrandoBP4
  L__entrandoBP42012
  L__entrandoBP42013
  L__entrandoBP42014
  L__entrandoBP42015
  L__entrandoBP42016
  L__entrandoBP42017
  L__entrandoBP42018
  L__entrandoBP42019
  L__entrandoBP42020
  L__entrandoBP42021
  L__entrandoBP42022
  L__entrandoBP42023
  L__entrandoBP42024
  L__entrandoBP42025
  L__entrandoBP42026
  L__entrandoBP42027
  L__entrandoBP42028
  L__entrandoBP42029
  L__entrandoBP42030
  L__entrandoBP42031
  L_end_transicionEBP4
  _transicionEBP4
  L__transicionEBP42033
  L__transicionEBP42034
  L__transicionEBP42035
  L__transicionEBP42036
  L__transicionEBP42037
  L__transicionEBP42038
  L__transicionEBP42039
  L__transicionEBP42040
  L_end_transicionEntBP4
  _transicionEntBP4
  L__transicionEntBP42042
  L__transicionEntBP42043
  L__transicionEntBP42044
  L__transicionEntBP42045
  L__transicionEntBP42046
  L__transicionEntBP42047
  L_end_entroBP4
  _entroBP4
  L_end_saliendoBP4
  _saliendoBP4
  L__saliendoBP42050
  L__saliendoBP42051
  L__saliendoBP42052
  L__saliendoBP42053
  L_end_transicionSBP4
  _transicionSBP4
  L__transicionSBP42055
  L__transicionSBP42056
  L__transicionSBP42057
  L__transicionSBP42058
  L__transicionSBP42059
  L__transicionSBP42060
  L__transicionSBP42061
  L__transicionSBP42062
  L__transicionSBP42063
  L__transicionSBP42064
  L__transicionSBP42065
  L__transicionSBP42066
  L__transicionSBP42067
  L__transicionSBP42068
  L__transicionSBP42069
  L__transicionSBP42070
  L__transicionSBP42071
  L__transicionSBP42072
  L__transicionSBP42073
  L__transicionSBP42074
  L_end_transicionSalBP4
  _transicionSalBP4
  L__transicionSalBP42076
  L__transicionSalBP42077
  L__transicionSalBP42078
  L__transicionSalBP42079
  L__transicionSalBP42080
  L__transicionSalBP42081
  L__transicionSalBP42082
  L__transicionSalBP42083
  L__transicionSalBP42084
  L__transicionSalBP42085
  L__transicionSalBP42086
  L__transicionSalBP42087
  L__transicionSalBP42088
  L__transicionSalBP42089
  L__transicionSalBP42090
  L__transicionSalBP42091
  L_end_salioBP4
  _salioBP4
  L_end_esperaBP6
  _esperaBP6
  L__esperaBP62094
  L__esperaBP62095
  L__esperaBP62096
  L__esperaBP62097
  L__esperaBP62098
  L__esperaBP62099
  L__esperaBP62100
  L__esperaBP62101
  L__esperaBP62102
  L__esperaBP62103
  L_end_entrandoBP6
  _entrandoBP6
  L__entrandoBP62105
  L__entrandoBP62106
  L__entrandoBP62107
  L__entrandoBP62108
  L__entrandoBP62109
  L__entrandoBP62110
  L__entrandoBP62111
  L__entrandoBP62112
  L__entrandoBP62113
  L__entrandoBP62114
  L__entrandoBP62115
  L__entrandoBP62116
  L__entrandoBP62117
  L__entrandoBP62118
  L__entrandoBP62119
  L__entrandoBP62120
  L__entrandoBP62121
  L__entrandoBP62122
  L__entrandoBP62123
  L__entrandoBP62124
  L_end_transicionEBP6
  _transicionEBP6
  L__transicionEBP62126
  L__transicionEBP62127
  L__transicionEBP62128
  L__transicionEBP62129
  L__transicionEBP62130
  L__transicionEBP62131
  L__transicionEBP62132
  L__transicionEBP62133
  L__transicionEBP62134
  L__transicionEBP62135
  L__transicionEBP62136
  L__transicionEBP62137
  L__transicionEBP62138
  L__transicionEBP62139
  L__transicionEBP62140
  L__transicionEBP62141
  L__transicionEBP62142
  L__transicionEBP62143
  L__transicionEBP62144
  L__transicionEBP62145
  L__transicionEBP62146
  L__transicionEBP62147
  L__transicionEBP62148
  L__transicionEBP62149
  L__transicionEBP62150
  L__transicionEBP62151
  L__transicionEBP62152
  L__transicionEBP62153
  L_end_transicionEntBP6
  _transicionEntBP6
  L__transicionEntBP62155
  L__transicionEntBP62156
  L__transicionEntBP62157
  L__transicionEntBP62158
  L__transicionEntBP62159
  L__transicionEntBP62160
  L_end_entroBP6
  _entroBP6
  L_end_saliendoBP6
  _saliendoBP6
  L__saliendoBP62163
  L__saliendoBP62164
  L__saliendoBP62165
  L__saliendoBP62166
  L_end_transicionSBP6
  _transicionSBP6
  L__transicionSBP62168
  L__transicionSBP62169
  L__transicionSBP62170
  L__transicionSBP62171
  L__transicionSBP62172
  L__transicionSBP62173
  L__transicionSBP62174
  L__transicionSBP62175
  L__transicionSBP62176
  L__transicionSBP62177
  L__transicionSBP62178
  L__transicionSBP62179
  L__transicionSBP62180
  L__transicionSBP62181
  L__transicionSBP62182
  L__transicionSBP62183
  L__transicionSBP62184
  L__transicionSBP62185
  L__transicionSBP62186
  L__transicionSBP62187
  L_end_transicionSalBP6
  _transicionSalBP6
  L__transicionSalBP62189
  L__transicionSalBP62190
  L__transicionSalBP62191
  L__transicionSalBP62192
  L__transicionSalBP62193
  L__transicionSalBP62194
  L__transicionSalBP62195
  L__transicionSalBP62196
  L__transicionSalBP62197
  L__transicionSalBP62198
  L__transicionSalBP62199
  L__transicionSalBP62200
  L__transicionSalBP62201
  L__transicionSalBP62202
  L__transicionSalBP62203
  L__transicionSalBP62204
  L_end_salioBP6
  _salioBP6
  L_end_esperaBP7
  _esperaBP7
  L__esperaBP72207
  L__esperaBP72208
  L__esperaBP72209
  L__esperaBP72210
  L__esperaBP72211
  L__esperaBP72212
  L__esperaBP72213
  L__esperaBP72214
  L__esperaBP72215
  L__esperaBP72216
  L_end_entrandoBP7
  _entrandoBP7
  L__entrandoBP72218
  L__entrandoBP72219
  L__entrandoBP72220
  L__entrandoBP72221
  L_end_transicionEBP7
  _transicionEBP7
  L__transicionEBP72223
  L__transicionEBP72224
  L__transicionEBP72225
  L__transicionEBP72226
  L__transicionEBP72227
  L__transicionEBP72228
  L__transicionEBP72229
  L__transicionEBP72230
  L__transicionEBP72231
  L__transicionEBP72232
  L__transicionEBP72233
  L__transicionEBP72234
  L__transicionEBP72235
  L__transicionEBP72236
  L__transicionEBP72237
  L__transicionEBP72238
  L__transicionEBP72239
  L__transicionEBP72240
  L__transicionEBP72241
  L__transicionEBP72242
  L_end_transicionEntBP7
  _transicionEntBP7
  L__transicionEntBP72244
  L__transicionEntBP72245
  L__transicionEntBP72246
  L__transicionEntBP72247
  L__transicionEntBP72248
  L__transicionEntBP72249
  L__transicionEntBP72250
  L__transicionEntBP72251
  L__transicionEntBP72252
  L__transicionEntBP72253
  L__transicionEntBP72254
  L__transicionEntBP72255
  L__transicionEntBP72256
  L__transicionEntBP72257
  L__transicionEntBP72258
  L__transicionEntBP72259
  L_end_entroBP7
  _entroBP7
  L_end_saliendoBP7
  _saliendoBP7
  L__saliendoBP72262
  L__saliendoBP72263
  L__saliendoBP72264
  L__saliendoBP72265
  L__saliendoBP72266
  L__saliendoBP72267
  L__saliendoBP72268
  L__saliendoBP72269
  L__saliendoBP72270
  L__saliendoBP72271
  L__saliendoBP72272
  L__saliendoBP72273
  L__saliendoBP72274
  L__saliendoBP72275
  L__saliendoBP72276
  L__saliendoBP72277
  L__saliendoBP72278
  L__saliendoBP72279
  L__saliendoBP72280
  L__saliendoBP72281
  L_end_transicionSBP7
  _transicionSBP7
  L__transicionSBP72283
  L__transicionSBP72284
  L__transicionSBP72285
  L__transicionSBP72286
  L__transicionSBP72287
  L__transicionSBP72288
  L__transicionSBP72289
  L__transicionSBP72290
  L_end_transicionSalBP7
  _transicionSalBP7
  L__transicionSalBP72292
  L__transicionSalBP72293
  L__transicionSalBP72294
  L__transicionSalBP72295
  L__transicionSalBP72296
  L__transicionSalBP72297
  L_end_salioBP7
  _salioBP7
  L_end_esperaBP9
  _esperaBP9
  L__esperaBP92300
  L__esperaBP92301
  L__esperaBP92302
  L__esperaBP92303
  L__esperaBP92304
  L__esperaBP92305
  L__esperaBP92306
  L__esperaBP92307
  L__esperaBP92308
  L__esperaBP92309
  L_end_entrandoBP9
  _entrandoBP9
  L__entrandoBP92311
  L__entrandoBP92312
  L__entrandoBP92313
  L__entrandoBP92314
  L_end_transicionEBP9
  _transicionEBP9
  L__transicionEBP92316
  L__transicionEBP92317
  L__transicionEBP92318
  L__transicionEBP92319
  L__transicionEBP92320
  L__transicionEBP92321
  L__transicionEBP92322
  L__transicionEBP92323
  L__transicionEBP92324
  L__transicionEBP92325
  L__transicionEBP92326
  L__transicionEBP92327
  L__transicionEBP92328
  L__transicionEBP92329
  L__transicionEBP92330
  L__transicionEBP92331
  L__transicionEBP92332
  L__transicionEBP92333
  L__transicionEBP92334
  L__transicionEBP92335
  L_end_transicionEntBP9
  _transicionEntBP9
  L__transicionEntBP92337
  L__transicionEntBP92338
  L__transicionEntBP92339
  L__transicionEntBP92340
  L__transicionEntBP92341
  L__transicionEntBP92342
  L__transicionEntBP92343
  L__transicionEntBP92344
  L__transicionEntBP92345
  L__transicionEntBP92346
  L__transicionEntBP92347
  L__transicionEntBP92348
  L__transicionEntBP92349
  L__transicionEntBP92350
  L__transicionEntBP92351
  L__transicionEntBP92352
  L_end_entroBP9
  _entroBP9
  L_end_saliendoBP9
  _saliendoBP9
  L__saliendoBP92355
  L__saliendoBP92356
  L__saliendoBP92357
  L__saliendoBP92358
  L__saliendoBP92359
  L__saliendoBP92360
  L__saliendoBP92361
  L__saliendoBP92362
  L__saliendoBP92363
  L__saliendoBP92364
  L__saliendoBP92365
  L__saliendoBP92366
  L__saliendoBP92367
  L__saliendoBP92368
  L__saliendoBP92369
  L__saliendoBP92370
  L__saliendoBP92371
  L__saliendoBP92372
  L__saliendoBP92373
  L__saliendoBP92374
  L_end_transicionSBP9
  _transicionSBP9
  L__transicionSBP92376
  L__transicionSBP92377
  L__transicionSBP92378
  L__transicionSBP92379
  L__transicionSBP92380
  L__transicionSBP92381
  L__transicionSBP92382
  L__transicionSBP92383
  L_end_transicionSalBP9
  _transicionSalBP9
  L__transicionSalBP92385
  L__transicionSalBP92386
  L__transicionSalBP92387
  L__transicionSalBP92388
  L__transicionSalBP92389
  L__transicionSalBP92390
  L__transicionSalBP92391
  L__transicionSalBP92392
  L__transicionSalBP92393
  L__transicionSalBP92394
  L__transicionSalBP92395
  L__transicionSalBP92396
  L__transicionSalBP92397
  L__transicionSalBP92398
  L__transicionSalBP92399
  L__transicionSalBP92400
  L_end_salioBP9
  _salioBP9
  L_end_interrupcionesAltoNivel
  _interrupcionesAltoNivel
  L__interrupcionesAltoNivel2403
  L__interrupcionesAltoNivel2404
  L__interrupcionesAltoNivel2405
  L__interrupcionesAltoNivel2406
  L__interrupcionesAltoNivel2407
  L__interrupcionesAltoNivel2408
  L__interrupcionesAltoNivel2409
  L_end_interrupcionesBajoNivel
  _interrupcionesBajoNivel
  L__interrupcionesBajoNivel2411
  L_end_main
  _main
  L__main2413
  L__main2414
  L__main2415
  L__main2416
  L__main2417
  L__main2418
  L__main2419
  L__main2420
  L__main2421
  L__main2422
  L_end_PicInit
  _PicInit
  L_end_TX_MSTR
  _TX_MSTR
  L__TX_MSTR2425
  L__TX_MSTR2426
  L__TX_MSTR2427
  L__TX_MSTR2428
  L__TX_MSTR2429
  L_end_TX_SLV
  _TX_SLV
  L_end_serialTxWioLTE
  _serialTxWioLTE
  L__serialTxWioLTE2432
  L__serialTxWioLTE2433
  L__serialTxWioLTE2434
  L_end_RX_PIC_PIC
  _RX_PIC_PIC
  L_end_SENSADO
  _SENSADO
  L_end_desbordoTemporizadorCero
  _desbordoTemporizadorCero
  L_end_resetCuentas
  _resetCuentas
  L_end_resetSLV
  _resetSLV
  L_end_indicadorSensores
  _indicadorSensores
  L_end_MASTER
  _MASTER
  L_end_SLV
  _SLV
  L_ByteToStr0
  L_ByteToStr1
  L_ByteToStr2
  L_ByteToStr3
  L_ByteToStr4
  L_ByteToStr5
  L_WordToStr6
  L_WordToStr7
  L_WordToStr8
  L_WordToStr9
  L_WordToStr10
  L_WordToStr11
  L_WordToStrWithZeros12
  L_WordToStrWithZeros13
  L_WordToStrWithZeros14
  L_WordToStrWithZeros15
  L_WordToStrWithZeros16
  L_ShortToStr17
  L_ShortToStr18
  L_ShortToStr19
  L_ShortToStr20
  L_ShortToStr21
  L_ShortToStr22
  L_IntToStr23
  L_IntToStr24
  L_IntToStr25
  L_IntToStr26
  L_IntToStr27
  L_IntToStr28
  L_IntToStrWithZeros29
  L_IntToStrWithZeros30
  L_IntToStrWithZeros31
  L_IntToStrWithZeros32
  L_IntToStrWithZeros33
  L_IntToStrWithZeros34
  L_IntToStrWithZeros35
  L_IntToStrWithZeros36
  L_IntToStrWithZeros37
  L_LongWordToStr38
  L_LongWordToStr39
  L_LongWordToStr40
  L_LongWordToStr41
  L_LongWordToStr42
  L_LongWordToStr43
  L_LongWordToStrWithZeros44
  L_LongWordToStrWithZeros45
  L_LongWordToStrWithZeros46
  L_LongWordToStrWithZeros47
  L_LongWordToStrWithZeros48
  L_LongToStr49
  L_LongToStr50
  L_LongToStr51
  L_LongToStr52
  L_LongToStr53
  L_LongToStr54
  L_LongIntToStrWithZeros55
  L_LongIntToStrWithZeros56
  L_LongIntToStrWithZeros57
  L_LongIntToStrWithZeros58
  L_LongIntToStrWithZeros59
  L_LongIntToStrWithZeros60
  L_LongIntToStrWithZeros61
  L_LongIntToStrWithZeros62
  L_LongIntToStrWithZeros63
  L_Dec2Bcd64
  L_Dec2Bcd65
  L_Rtrim66
  L_Rtrim67
  L_Rtrim68
  L_Rtrim69
  L_Ltrim70
  L_Ltrim71
  L_Ltrim72
  L_Ltrim73
  L_Ltrim74
  L_Ltrim75
  L_FloatToStr76
  L_FloatToStr77
  L_FloatToStr78
  L_FloatToStr79
  L_FloatToStr80
  L_FloatToStr81
  L_FloatToStr82
  L_FloatToStr83
  L_FloatToStr84
  L_FloatToStr85
  L_FloatToStr86
  L_FloatToStr87
  L_FloatToStr88
  L_FloatToStr89
  L_FloatToStr90
  L_FloatToStr91
  L_FloatToStr92
  L_FloatToStr93
  L_FloatToStr94
  L_FloatToStr95
  L_FloatToStr96
  L_FloatToStr97
  L__Rtrim98
  L__Ltrim99
  L__FloatToStr100
  L_end_ByteToHex
  _ByteToHex
  L_end_ShortToHex
  _ShortToHex
  L_end_WordToHex
  _WordToHex
  L_end_IntToHex
  _IntToHex
  L_end_LongWordToHex
  _LongWordToHex
  L_end_LongIntToHex
  _LongIntToHex
  L_end_ByteToStr
  _ByteToStr
  L_end_WordToStr
  _WordToStr
  L__WordToStr109
  L_end_WordToStrWithZeros
  _WordToStrWithZeros
  L__WordToStrWithZeros111
  L_end_ShortToStr
  _ShortToStr
  L__ShortToStr113
  L_end_IntToStr
  _IntToStr
  L__IntToStr115
  L__IntToStr116
  L_end_IntToStrWithZeros
  _IntToStrWithZeros
  L__IntToStrWithZeros118
  L__IntToStrWithZeros119
  L__IntToStrWithZeros120
  L_end_LongWordToStr
  _LongWordToStr
  L__LongWordToStr122
  L__LongWordToStr123
  L_end_LongWordToStrWithZeros
  _LongWordToStrWithZeros
  L__LongWordToStrWithZeros125
  L_end_LongToStr
  _LongToStr
  L__LongToStr127
  L__LongToStr128
  L_end_LongIntToStrWithZeros
  _LongIntToStrWithZeros
  L__LongIntToStrWithZeros130
  L__LongIntToStrWithZeros131
  L__LongIntToStrWithZeros132
  L_end_Dec2Bcd
  _Dec2Bcd
  L_end_Bcd2Dec
  _Bcd2Dec
  L_end_Bcd2Dec16
  _Bcd2Dec16
  L__Bcd2Dec16136
  L__Bcd2Dec16137
  L_end_Dec2Bcd16
  _Dec2Bcd16
  L__Dec2Bcd16139
  L__Dec2Bcd16140
  L_end_Rtrim
  _Rtrim
  L__Rtrim142
  L_end_Ltrim
  _Ltrim
  L_end_FloatToStr
  _FloatToStr
  L__FloatToStr145
  L__FloatToStr146
  L__FloatToStr147
  L__FloatToStr148
  L__FloatToStr149
  L_memchr0
  L_memchr1
  L_memchr2
  L_memchr3
  L_memcmp4
  L_memcmp5
  L_memcmp6
  L_memcpy7
  L_memcpy8
  L_memmove9
  L_memmove10
  L_memmove11
  L_memmove12
  L_memmove13
  L_memmove14
  L_memmove15
  L_memmove16
  L_memmove17
  L_memmove18
  L_memmove19
  L_memset20
  L_memset21
  L_strcat22
  L_strcat23
  L_strcat24
  L_strcat25
  L_strchr26
  L_strchr27
  L_strchr28
  L_strchr29
  L_strcmp30
  L_strcmp31
  L_strcmp32
  L_strcmp33
  L_strcpy34
  L_strcpy35
  L_strlen36
  L_strlen37
  L_strncat38
  L_strncat39
  L_strncat40
  L_strncat41
  L_strncat42
  L_strncat43
  L_strncat44
  L_strncpy45
  L_strncpy46
  L_strncpy47
  L_strncpy48
  L_strncpy49
  L_strspn50
  L_strspn51
  L_strspn52
  L_strspn53
  L_strcspn54
  L_strcspn55
  L_strcspn56
  L_strcspn57
  L_strncmp58
  L_strncmp59
  L_strncmp60
  L_strncmp61
  L_strncmp62
  L_strpbrk63
  L_strpbrk64
  L_strpbrk65
  L_strrchr66
  L_strrchr67
  L_strrchr68
  L_strrchr69
  L_strstr70
  L_strstr71
  L_strstr72
  L_strstr73
  L_strstr74
  L_strtok75
  L_strtok76
  L_strtok77
  L_strtok78
  L_strtok79
  L__memmove80
  L__strcmp81
  L__strncat82
  L__strspn83
  L__strcspn84
  L__strncmp85
  L__strstr86
  L_end_memchr
  _memchr
  L_end_memcmp
  _memcmp
  L__memcmp89
  L_end_memcpy
  _memcpy
  L_end_memmove
  _memmove
  L__memmove92
  L__memmove93
  L_end_memset
  _memset
  L_end_strcat
  _strcat
  L_end_strchr
  _strchr
  L_end_strcmp
  _strcmp
  L_end_strcpy
  _strcpy
  L_end_strlen
  _strlen
  L_end_strncat
  _strncat
  L__strncat101
  L_end_strncpy
  _strncpy
  L_end_strspn
  _strspn
  L__strspn104
  L_end_strcspn
  _strcspn
  L__strcspn106
  L_end_strncmp
  _strncmp
  L_end_strpbrk
  _strpbrk
  L_end_strrchr
  _strrchr
  L__strrchr110
  L_end_strstr
  _strstr
  L__strstr112
  L__strstr113
  L_end_strtok
  _strtok
  L__strtok115
  L_Delay_10us0
  L_Delay_22us1
  L_Delay_50us2
  L_Delay_80us3
  L_Delay_500us4
  L_Delay_5500us5
  L_Delay_1ms6
  L_Delay_5ms7
  L_Delay_8ms8
  L_Delay_100ms9
  L_Delay_10ms10
  L_Delay_1sec11
  L____Boot_Delay4k12
  L____Boot_Delay8k13
  L____Boot_Delay12k14
  L____Boot_Delay16k15
  L____Boot_Delay24k16
  L____Boot_Delay32k17
  L____Boot_Delay48k18
  L____Boot_Delay64k19
  L____Boot_Delay128k20
  L_Delay_Cyc21
  L_Delay_Cyc22
  L_VDelay_ms23
  L_VDelay_ms24
  L_VDelay_ms25
  L_VDelay_Advanced_ms26
  L_VDelay_Advanced_ms27
  L_VDelay_Advanced_ms28
  L_end_Get_Fosc_kHz
  _Get_Fosc_kHz
  L_end_Delay_1us
  _Delay_1us
  L_end_Delay_10us
  _Delay_10us
  L_end_Delay_22us
  _Delay_22us
  L_end_Delay_50us
  _Delay_50us
  L_end_Delay_80us
  _Delay_80us
  L_end_Delay_500us
  _Delay_500us
  L_end_Delay_5500us
  _Delay_5500us
  L_end_Delay_1ms
  _Delay_1ms
  L_end_Delay_5ms
  _Delay_5ms
  L_end_Delay_8ms
  _Delay_8ms
  L_end_Delay_100ms
  _Delay_100ms
  L_end_Delay_10ms
  _Delay_10ms
  L_end_Delay_1sec
  _Delay_1sec
  L_end____Boot_Delay4k
  ____Boot_Delay4k
  L_end____Boot_Delay8k
  ____Boot_Delay8k
  L_end____Boot_Delay12k
  ____Boot_Delay12k
  L_end____Boot_Delay16k
  ____Boot_Delay16k
  L_end____Boot_Delay24k
  ____Boot_Delay24k
  L_end____Boot_Delay32k
  ____Boot_Delay32k
  L_end____Boot_Delay48k
  ____Boot_Delay48k
  L_end____Boot_Delay64k
  ____Boot_Delay64k
  L_end____Boot_Delay128k
  ____Boot_Delay128k
  L_end_Delay_Cyc
  _Delay_Cyc
  L_end_VDelay_ms
  _VDelay_ms
  L__VDelay_ms54
  L__VDelay_ms55
  L__VDelay_ms56
  L_end_VDelay_Advanced_ms
  _VDelay_Advanced_ms
  L__VDelay_Advanced_ms58
  L__VDelay_Advanced_ms59
  L__VDelay_Advanced_ms60
  L_Div_16x16_S0
  L_Div_16x16_S1
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_Div_32x32_S6
  L_Div_32x32_S7
  L_Div_32x32_S8
  L_Div_32x32_S9
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  L_end_Div_8x8_U
  _Div_8x8_U
  L_end_Div_16x16_U
  _Div_16x16_U
  L_end_Div_16x16_S_L
  _Div_16x16_S_L
  L_end_Div_16x16_S
  _Div_16x16_S
  L_end_Div_8x8_S
  _Div_8x8_S
  L_end_Mul_8x8_S
  _Mul_8x8_S
  L_end_Mul_16x16_U
  _Mul_16x16_U
  L_end_Mul_16x16_S
  _Mul_16x16_S
  L_end_SDIV3232L
  _SDIV3232L
  L_end_COMFREM
  _COMFREM
  L_end_Div_32x32_S
  _Div_32x32_S
  L_end_Div_32x32_U
  _Div_32x32_U
  L_end_Mul_32x32_U
  _Mul_32x32_U
  L_end_Mul_32x32_S
  _Mul_32x32_S
  SETFOV32EEE
  SETFUN32EEE
  NRMRND4032
  NRM40JPSETFOV32
  NRM4032
  NRM4032A
  TNIB4032
  NORM4032
  TNORMUN4032
  NRM40JPSETFUN32
  NRM40JPFIXSIGN32
  NRM4032B
  TNIB4032A
  NORM4032A
  NRM4032C
  TNIB4032B
  NORM4032B
  NRM40JPRES032
  TNIB4032C
  NORM4032C
  NRM40EEE
  NORM3232
  JPNRES032
  JPNSETFUN32
  NORM3232A
  JMPNFIXSIGN32
  NORM32EEE
  SETIOV3224EEE
  FPA32
  USEA32
  USEB32
  BRETURN32
  BLIGNED32
  BNIB32
  BNIB32A
  BNIB32B
  BNIB32C
  ADDEOK
  BLOOP32C
  BLOOP32B
  BLOOP32A
  BLOOP32
  AOK32
  BNE032
  ALIGNED32
  ANIB32
  ANIB32A
  ANIB32B
  ANIB32C
  ALOOP32C
  ALOOP32B
  ALOOP32A
  ALOOP32
  ACOMP32
  ADDJPNRMRND4032
  ADDJPSETFOV32
  ADDJPNRM4032
  ADDEEE
  FPS32
  FPM32
  MULJPRES032
  M32BNE0
  MTUN32
  MULJPSETFOV32
  MOK32
  MULJPSETFUN32
  MROUND32
  MUL32OK
  MULEEE
  L_Div_32x32_FP11
  L_Div_32x32_FP12
  L_Div_32x32_FP13
  L_Div_32x32_FP14
  FPD32
  JPDSETFDZ32
  JPDRES032
  D32BNE0
  TALIGN32
  TS1ALIGN32
  TS2ALIGN32
  DALIGN32OK
  ALTB32
  AGEB32
  JPDSETFOV32
  DARGOK32
  JPDSETFUN32
  DLOOP32
  DS132
  DS232
  DREST32
  DOK32
  DAREST32
  DROUND32
  DIV32OK
  DIV32EEE
  INT3232U
  INT3232UEOK
  SETEXP32U
  SETIOV32U
  TSHIFT3232U
  SHIFT3232UOK
  SHIFT3232U
  INT3232UOK
  JPLSETIOV3224
  IRES032U
  INT3232UEER
  INT3232UEEE
  INT3232
  INT3232EOK
  SETIOV32
  TSHIFT3232
  SHIFT3232OK
  SHIFT3232
  INT3232OK
  JPISETIOV3224
  IRES032
  INT3232EER
  INT3232EEE
  INT3216
  IRES016
  SETIOV16
  TSHIFT3216
  SHIFT3216OK
  SHIFT3216
  INT3216OK
  JPJSETIOV3224
  INT3216EOK
  INT3216EER
  INT3216EEE
  INT3216U
  IRES016U
  SETEXP16U
  SETIOV16U
  TSHIFT3216U
  SHIFT3216UOK
  SHIFT3216U
  INT3216UOK
  JPKSETIOV3224
  INT3216UEOK
  INT3216UEER
  INT3216UEEE
  INT32U08
  IRES008
  SETEXP08
  SETIOV08
  TSHIFT3208
  SHIFT3208OK
  SHIFT3208
  INT3208OK
  D2B_JPKSETIOV3224
  INT3208EOK
  INT3208EER
  INT3208EEE
  FLO08U32
  FLO1632
  FLO1632EEE
  FLO16U32
  FLO3232
  FLO3232EEE
  FLO32U32
  EQU_FALSE
  COMPARE_EQU
  COMPARE_NOTZERO
  COMPARE_XNOTZERO
  COMPARE_YNOTZERO
  COMPARE_LT
  COMPARE_GT
  COMPARE_TESTALL
  COMPARE_C1
  GT_FALSE
  GT_TRUE
  COMPARE_C2
  COMPARE_C3
  L_end_SETFOV32
  _SETFOV32
  L_end_SETFDZ32
  _SETFDZ32
  L_end_FIXSIGN32
  _FIXSIGN32
  L_end_RES032
  _RES032
  L_end_SETFUN32
  _SETFUN32
  L_end_NRM4032
  _NRM4032
  L_end_NRM3232
  _NRM3232
  L_end_SETIOV3224
  _SETIOV3224
  L_end_Add_32x32_FP
  _Add_32x32_FP
  L_end_Sub_32x32_FP
  _Sub_32x32_FP
  L_end_Mul_32x32_FP
  _Mul_32x32_FP
  L_end_Div_32x32_FP
  _Div_32x32_FP
  L_end_Double2Longword
  _Double2Longword
  L_end_Double2Longint
  _Double2Longint
  L_end_Double2Int
  _Double2Int
  L_end_Double2Word
  _Double2Word
  L_end_Double2Byte
  _Double2Byte
  L_end_Byte2Double
  _Byte2Double
  L_end_Int2Double
  _Int2Double
  L_end_Word2Double
  _Word2Double
  L_end_Longint2Double
  _Longint2Double
  L_end_Longword2Double
  _Longword2Double
  L_end_Equals_Double
  _Equals_Double
  L_end_Compare_Double
  _Compare_Double
  L_end_PWM2_Init
  _PWM2_Init
  L_end_PWM2_Set_Duty
  _PWM2_Set_Duty
  L__PWM2_Set_Duty2
  L__PWM2_Set_Duty3
  L__PWM2_Set_Duty4
  L__PWM2_Set_Duty5
  L_end_PWM2_Start
  _PWM2_Start
  L_end_PWM2_Stop
  _PWM2_Stop
  L_end_PWM1_Init
  _PWM1_Init
  L_end_PWM1_Set_Duty
  _PWM1_Set_Duty
  L__PWM1_Set_Duty10
  L__PWM1_Set_Duty11
  L__PWM1_Set_Duty12
  L__PWM1_Set_Duty13
  L_end_PWM1_Start
  _PWM1_Start
  L_end_PWM1_Stop
  _PWM1_Stop
  L_Soft_UART_Read0
  L_Soft_UART_Read1
  L_Soft_UART_Read2
  L_Soft_UART_Read3
  L_Soft_UART_Read4
  L_Soft_UART_Read5
  L_Soft_UART_Read6
  L_Soft_UART_Read7
  L_Soft_UART_Read8
  L_Soft_UART_Read9
  L_Soft_UART_Read10
  L_Soft_UART_Read11
  L_Soft_UART_Read12
  L_Soft_UART_Write13
  L_Soft_UART_Write14
  L_Soft_UART_Write15
  L_Soft_UART_Write16
  L_Soft_UART_Write17
  L_Soft_UART_Write18
  L_Soft_UART_Write19
  L_Soft_UART_Write20
  L_Soft_UART_Init21
  L_Soft_UART_Init22
  L_Soft_UART_Init23
  L_Soft_UART_Init24
  L_Soft_UART_Init25
  L_Soft_UART_Init26
  L_Soft_UART_Init27
  L_end_Soft_UART_Break
  _Soft_UART_Break
  L_end_Soft_UART_Read
  _Soft_UART_Read
  L_end_Soft_UART_Write
  _Soft_UART_Write
  L_end_Soft_UART_Init
  _Soft_UART_Init
  L__Soft_UART_Init32
  L__Soft_UART_Init33
  L__Soft_UART_Init34
  L__Soft_UART_Init35
  L__Soft_UART_Init36
  _CC2D_Loop1
  _CC2DL_Loop1
  L_loopCA2AWs
  L_loopCCA2AWs
  L_loopCS2Ss
  L_CS2Send
  L_loopCCS2Ss
  L_CCS2Send
  L_loopFZinSWs
  L_longjmp7
  L_end___CC2D
  ___CC2D
  L_end___CC2DW
  ___CC2DW
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end_____DoIFC
  _____DoIFC
  L_end_Swap
  _Swap
  L_end_setjmp
  _setjmp
  L_end_longjmp
  _longjmp
  L_UART1_Init0
  L_UART1_Init1
  L_UART1_Read2
  L_UART1_Write3
  L_UART1_Write4
  L_UART1_Write_Text5
  L_UART1_Write_Text6
  L_UART1_Read_Text7
  L_UART1_Read_Text8
  L_UART1_Read_Text9
  L_UART1_Read_Text10
  L_UART1_Read_Text11
  L_UART1_Read_Text12
  L_UART1_Read_Text13
  L_UART1_Read_Text14
  L_UART1_Read_Text15
  L_UART_Write_Text16
  L_UART_Write_Text17
  L_UART_Read_Text18
  L_UART_Read_Text19
  L_UART_Read_Text20
  L_UART_Read_Text21
  L_UART_Read_Text22
  L_UART_Read_Text23
  L_UART_Read_Text24
  L_UART_Read_Text25
  L_UART_Read_Text26
  L_end_UART1_Init
  _UART1_Init
  L_end_UART1_Data_Ready
  _UART1_Data_Ready
  L_end_UART1_Read
  _UART1_Read
  L_end_UART1_Tx_Idle
  _UART1_Tx_Idle
  L_end_UART1_Write
  _UART1_Write
  L_end_UART1_Write_Text
  _UART1_Write_Text
  L_end_UART1_Read_Text
  _UART1_Read_Text
  L_end_UART_Set_Active
  _UART_Set_Active
  L_end_UART_Write
  _UART_Write
  L_end_UART_Write_Text
  _UART_Write_Text
  L_end_UART_Read
  _UART_Read
  L_end_UART_Data_Ready
  _UART_Data_Ready
  L_end_UART_Read_Text
  _UART_Read_Text
  L_end_UART_Tx_Idle
  _UART_Tx_Idle
  L_lcd_send_nibble0
  L_lcd_send_byte1
  L_lcd_send_byte2
  L_lcd_send_byte3
  L_lcd_init4
  L_lcd_init5
  L_lcd_init6
  L_lcd_init7
  L_lcd_init8
  L_lcd_init9
  L_lcd_init10
  L_lcd_init11
  L_lcd_init12
  L_lcd_gotoxy13
  L_lcd_gotoxy14
  L_lcd_gotoxy15
  L_lcd_gotoxy16
  L_lcd_gotoxy17
  L_lcd_gotoxy18
  L_lcd_gotoxy19
  L_lcd_gotoxy20
  L_lcd_out21
  L_lcd_out22
  L_lcd_outConst23
  L_lcd_outConst24
  L_lcd_cmd25
  L_bloqueos26
  L_bloqueos27
  L_bloqueos28
  L_bloqueos29
  L_bloqueos30
  L_bloqueos31
  L_bloqueos32
  L_bloqueos33
  L_bloqueos34
  L_bloqueos35
  L_bloqueos36
  L_bloqueos37
  L_bloqueos38
  L_bloqueos39
  L_bloqueos40
  L_bloqueos41
  L_bloqueos42
  L_bloqueos43
  L_bloqueos44
  L_bloqueos45
  L_bloqueos46
  L_bloqueos47
  L_bloqueos48
  L_bloqueos49
  L_bloqueos50
  L_bloqueos51
  L_bloqueos52
  L_bloqueos53
  L_bloqueos54
  L_bloqueos55
  L_bloqueos56
  L_bloqueos57
  L_bloqueos58
  L_bloqueos59
  L_bloqueos60
  L_bloqueos61
  L_bloqueos62
  L_bloqueos63
  L_bloqueos64
  L_bloqueos65
  L_bloqueos66
  L_bloqueos67
  L_bloqueos68
  L_bloqueos69
  L_bloqueos70
  L_bloqueos71
  L_bloqueos72
  L_bloqueos73
  L_bloqueos74
  L_bloqueos75
  L_bloqueos76
  L_bloqueos77
  L_bloqueos78
  L_bloqueos79
  L_bloqueos80
  L_bloqueos81
  L_bloqueos82
  L_bloqueos83
  L_bloqueos84
  L_bloqueos85
  L_bloqueos86
  L_bloqueos87
  L_bloqueos88
  L_bloqueos89
  L_bloqueos90
  L_bloqueos91
  L_bloqueos92
  L_bloqueos93
  L_bloqueos94
  L_bloqueos95
  L_bloqueos96
  L_bloqueos97
  L_bloqueos98
  L_bloqueos99
  L_I2C_soft_start100
  L_I2C_soft_start101
  L_I2C_soft_stop102
  L_I2C_soft_stop103
  L_I2C_soft_write104
  L_I2C_soft_write105
  L_I2C_soft_write106
  L_I2C_soft_write107
  L_I2C_soft_write108
  L_I2C_soft_write109
  L_I2C_soft_read110
  L_I2C_soft_read111
  L_I2C_soft_read112
  L_I2C_soft_read113
  L_I2C_soft_read114
  L_I2C_soft_read115
  L_I2C_soft_read116
  L_eepromEscribeNumero117
  L_eepromEscribeNumero118
  L_eepromEscribeNumero119
  L_eepromEscribeNumero120
  L_eepromEscribeNumero121
  L_eepromEscribeNumero122
  L_eepromEscribeNumero123
  L_eepromEscribeNumero124
  L_eepromEscribeNumero125
  L_eepromEscribeNumero126
  L_eepromEscribeNumero127
  L_eepromEscribeNumero128
  L_eepromEscribeNumero129
  L_eepromEscribeNumero130
  L_eepromEscribeNumero131
  L_eepromEscribeNumero132
  L_eepromEscribeNumero133
  L_eepromEscribeNumero134
  L_eepromEscribeNumero135
  L_eepromEscribeNumero136
  L_eepromEscribeNumero137
  L_eepromEscribeNumero138
  L_eepromEscribeNumero139
  L_eepromEscribeNumero140
  L_eepromEscribeChar141
  L_eepromEscribeChar142
  L_eepromEscribeChar143
  L_eepromEscribeChar144
  L_eepromEscribeChar145
  L_eepromEscribeChar146
  L_eepromEscribeChar147
  L_eepromEscribeChar148
  L_eepromEscribeChar149
  L_eepromLeeChar150
  L_eepromLeeChar151
  L_eepromLeeChar152
  L_eepromLeeChar153
  L_eepromLeeChar154
  L_eepromLeeNumero155
  L_eepromLeeNumero156
  L_eepromLeeNumero157
  L_eepromLeeNumero158
  L_eepromLeeNumero159
  L_eepromLeeNumero160
  L_eepromLeeNumero161
  L_eepromLeeNumero162
  L_eepromLeeNumero163
  L_eepromLeeNumero164
  L_eepromLeeNumero165
  L_eepromLeeNumero166
  L_eepromLeeNumero167
  L_eepromLeeNumero168
  L_eepromLeeNumero169
  L_eepromLeeNumero170
  L_eepromLeeNumero171
  L_eepromLeeNumero172
  L_muestraEstatus173
  L_muestraEstatus174
  L_muestraEstatus175
  L_sensorNoBloqueo176
  L_sensorNoBloqueo177
  L_sensorNoBloqueo178
  L_sensorNoBloqueo179
  L_sensorBloqueo180
  L_sensorBloqueoD181
  L_sensorBloqueoT182
  L_sensorBloqueoC183
  L_sensorBloqueoO184
  L_sensorBloqueoS185
  L_espera186
  L_espera187
  L_espera188
  L_entrando189
  L_entrando190
  L_entrando191
  L_transicionE192
  L_transicionE193
  L_transicionE194
  L_transicionEnt195
  L_transicionEnt196
  L_transicionEnt197
  L_entro198
  L_entro199
  L_saliendo200
  L_saliendo201
  L_saliendo202
  L_transicionS203
  L_transicionS204
  L_transicionS205
  L_transicionSal206
  L_transicionSal207
  L_transicionSal208
  L_salio209
  L_salio210
  L_esperaB211
  L_esperaB212
  L_esperaB213
  L_entrandoB214
  L_entrandoB215
  L_entrandoB216
  L_transicionEB217
  L_transicionEB218
  L_transicionEB219
  L_transicionEntB220
  L_transicionEntB221
  L_transicionEntB222
  L_entroB223
  L_entroB224
  L_saliendoB225
  L_saliendoB226
  L_saliendoB227
  L_transicionSB228
  L_transicionSB229
  L_transicionSB230
  L_transicionSalB231
  L_transicionSalB232
  L_transicionSalB233
  L_salioB234
  L_salioB235
  L_esperaBD236
  L_esperaBD237
  L_esperaBD238
  L_entrandoBD239
  L_entrandoBD240
  L_entrandoBD241
  L_transicionEBD242
  L_transicionEBD243
  L_transicionEBD244
  L_transicionEntBD245
  L_transicionEntBD246
  L_transicionEntBD247
  L_entroBD248
  L_entroBD249
  L_saliendoBD250
  L_saliendoBD251
  L_saliendoBD252
  L_transicionSBD253
  L_transicionSBD254
  L_transicionSBD255
  L_transicionSalBD256
  L_transicionSalBD257
  L_transicionSalBD258
  L_salioBD259
  L_salioBD260
  L_esperaBT261
  L_esperaBT262
  L_esperaBT263
  L_entrandoBT264
  L_entrandoBT265
  L_entrandoBT266
  L_transicionEBT267
  L_transicionEBT268
  L_transicionEBT269
  L_transicionEntBT270
  L_transicionEntBT271
  L_transicionEntBT272
  L_entroBT273
  L_entroBT274
  L_saliendoBT275
  L_saliendoBT276
  L_saliendoBT277
  L_transicionSBT278
  L_transicionSBT279
  L_transicionSBT280
  L_transicionSalBT281
  L_transicionSalBT282
  L_transicionSalBT283
  L_salioBT284
  L_salioBT285
  L_esperaBC286
  L_esperaBC287
  L_esperaBC288
  L_entrandoBC289
  L_entrandoBC290
  L_entrandoBC291
  L_transicionEBC292
  L_transicionEBC293
  L_transicionEBC294
  L_transicionEntBC295
  L_transicionEntBC296
  L_transicionEntBC297
  L_entroBC298
  L_entroBC299
  L_saliendoBC300
  L_saliendoBC301
  L_saliendoBC302
  L_transicionSBC303
  L_transicionSBC304
  L_transicionSBC305
  L_transicionSalBC306
  L_transicionSalBC307
  L_transicionSalBC308
  L_salioBC309
  L_salioBC310
  L_esperaBO311
  L_esperaBO312
  L_esperaBO313
  L_entrandoBO314
  L_entrandoBO315
  L_entrandoBO316
  L_transicionEBO317
  L_transicionEBO318
  L_transicionEBO319
  L_transicionEntBO320
  L_transicionEntBO321
  L_transicionEntBO322
  L_entroBO323
  L_entroBO324
  L_saliendoBO325
  L_saliendoBO326
  L_saliendoBO327
  L_transicionSBO328
  L_transicionSBO329
  L_transicionSBO330
  L_transicionSalBO331
  L_transicionSalBO332
  L_transicionSalBO333
  L_salioBO334
  L_salioBO335
  L_esperaBS336
  L_esperaBS337
  L_esperaBS338
  L_entrandoBS339
  L_entrandoBS340
  L_entrandoBS341
  L_transicionEBS342
  L_transicionEBS343
  L_transicionEBS344
  L_transicionEntBS345
  L_transicionEntBS346
  L_transicionEntBS347
  L_entroBS348
  L_entroBS349
  L_saliendoBS350
  L_saliendoBS351
  L_saliendoBS352
  L_transicionSBS353
  L_transicionSBS354
  L_transicionSBS355
  L_transicionSalBS356
  L_transicionSalBS357
  L_transicionSalBS358
  L_salioBS359
  L_salioBS360
  L_esperaBP1361
  L_esperaBP1362
  L_esperaBP1363
  L_entrandoBP1364
  L_entrandoBP1365
  L_entrandoBP1366
  L_transicionEBP1367
  L_transicionEBP1368
  L_transicionEBP1369
  L_transicionEntBP1370
  L_transicionEntBP1371
  L_transicionEntBP1372
  L_entroBP1373
  L_entroBP1374
  L_entroBP1375
  L_saliendoBP1376
  L_saliendoBP1377
  L_saliendoBP1378
  L_transicionSBP1379
  L_transicionSBP1380
  L_transicionSBP1381
  L_transicionSalBP1382
  L_transicionSalBP1383
  L_transicionSalBP1384
  L_salioBP1385
  L_salioBP1386
  L_esperaBP2387
  L_esperaBP2388
  L_esperaBP2389
  L_entrandoBP2390
  L_entrandoBP2391
  L_entrandoBP2392
  L_transicionEBP2393
  L_transicionEBP2394
  L_transicionEBP2395
  L_transicionEntBP2396
  L_transicionEntBP2397
  L_transicionEntBP2398
  L_entroBP2399
  L_entroBP2400
  L_entroBP2401
  L_saliendoBP2402
  L_saliendoBP2403
  L_saliendoBP2404
  L_transicionSBP2405
  L_transicionSBP2406
  L_transicionSBP2407
  L_transicionSalBP2408
  L_transicionSalBP2409
  L_transicionSalBP2410
  L_salioBP2411
  L_salioBP2412
  L_esperaBP3413
  L_esperaBP3414
  L_esperaBP3415
  L_entrandoBP3416
  L_entrandoBP3417
  L_entrandoBP3418
  L_transicionEBP3419
  L_transicionEBP3420
  L_transicionEBP3421
  L_transicionEntBP3422
  L_transicionEntBP3423
  L_transicionEntBP3424
  L_entroBP3425
  L_entroBP3426
  L_entroBP3427
  L_saliendoBP3428
  L_saliendoBP3429
  L_saliendoBP3430
  L_transicionSBP3431
  L_transicionSBP3432
  L_transicionSBP3433
  L_transicionSalBP3434
  L_transicionSalBP3435
  L_transicionSalBP3436
  L_salioBP3437
  L_salioBP3438
  L_esperaBP4439
  L_esperaBP4440
  L_esperaBP4441
  L_entrandoBP4442
  L_entrandoBP4443
  L_entrandoBP4444
  L_transicionEBP4445
  L_transicionEBP4446
  L_transicionEBP4447
  L_transicionEntBP4448
  L_transicionEntBP4449
  L_transicionEntBP4450
  L_entroBP4451
  L_entroBP4452
  L_entroBP4453
  L_saliendoBP4454
  L_saliendoBP4455
  L_saliendoBP4456
  L_transicionSBP4457
  L_transicionSBP4458
  L_transicionSBP4459
  L_transicionSalBP4460
  L_transicionSalBP4461
  L_transicionSalBP4462
  L_salioBP4463
  L_salioBP4464
  L_esperaBP6465
  L_esperaBP6466
  L_esperaBP6467
  L_entrandoBP6468
  L_entrandoBP6469
  L_entrandoBP6470
  L_transicionEBP6471
  L_transicionEBP6472
  L_transicionEBP6473
  L_transicionEntBP6474
  L_transicionEntBP6475
  L_transicionEntBP6476
  L_entroBP6477
  L_entroBP6478
  L_entroBP6479
  L_saliendoBP6480
  L_saliendoBP6481
  L_saliendoBP6482
  L_transicionSBP6483
  L_transicionSBP6484
  L_transicionSBP6485
  L_transicionSalBP6486
  L_transicionSalBP6487
  L_transicionSalBP6488
  L_salioBP6489
  L_salioBP6490
  L_esperaBP7491
  L_esperaBP7492
  L_esperaBP7493
  L_entrandoBP7494
  L_entrandoBP7495
  L_entrandoBP7496
  L_transicionEBP7497
  L_transicionEBP7498
  L_transicionEBP7499
  L_transicionEntBP7500
  L_transicionEntBP7501
  L_transicionEntBP7502
  L_entroBP7503
  L_entroBP7504
  L_entroBP7505
  L_saliendoBP7506
  L_saliendoBP7507
  L_saliendoBP7508
  L_transicionSBP7509
  L_transicionSBP7510
  L_transicionSBP7511
  L_transicionSalBP7512
  L_transicionSalBP7513
  L_transicionSalBP7514
  L_salioBP7515
  L_salioBP7516
  L_esperaBP9517
  L_esperaBP9518
  L_esperaBP9519
  L_entrandoBP9520
  L_entrandoBP9521
  L_entrandoBP9522
  L_transicionEBP9523
  L_transicionEBP9524
  L_transicionEBP9525
  L_transicionEntBP9526
  L_transicionEntBP9527
  L_transicionEntBP9528
  L_entroBP9529
  L_entroBP9530
  L_entroBP9531
  L_saliendoBP9532
  L_saliendoBP9533
  L_saliendoBP9534
  L_transicionSBP9535
  L_transicionSBP9536
  L_transicionSBP9537
  L_transicionSalBP9538
  L_transicionSalBP9539
  L_transicionSalBP9540
  L_salioBP9541
  L_salioBP9542
  L_interrupcionesAltoNivel543
  L_interrupcionesAltoNivel544
  L_interrupcionesAltoNivel545
  L_main546
  L_main547
  L_main548
  L_main549
  L_main550
  L_main551
  L_main552
  L_main553
  L_main554
  L_main555
  L_main556
  L_PicInit557
  L_PicInit558
  L_PicInit559
  L_TX_MSTR560
  L_TX_MSTR561
  L_TX_MSTR562
  L_TX_MSTR563
  L_TX_MSTR564
  L_TX_MSTR565
  L_TX_MSTR566
  L_TX_MSTR567
  L_TX_MSTR568
  L_TX_MSTR569
  L_TX_MSTR570
  L_TX_MSTR571
  L_TX_SLV572
  L_TX_SLV573
  L_TX_SLV574
  L_TX_SLV575
  L_TX_SLV576
  L_TX_SLV577
  L_TX_SLV578
  L_serialTxWioLTE579
  L_serialTxWioLTE580
  L_serialTxWioLTE581
  L_serialTxWioLTE582
  L_serialTxWioLTE583
  L_serialTxWioLTE584
  L_serialTxWioLTE585
  L_serialTxWioLTE586
  L_serialTxWioLTE587
  L_serialTxWioLTE588
  L_serialTxWioLTE589
  L_serialTxWioLTE590
  L_serialTxWioLTE591
  L_serialTxWioLTE592
  L_serialTxWioLTE593
  L_serialTxWioLTE594
  L_serialTxWioLTE595
  L_serialTxWioLTE596
  L_serialTxWioLTE597
  L_serialTxWioLTE598
  L_serialTxWioLTE599
  L_serialTxWioLTE600
  L_serialTxWioLTE601
  L_serialTxWioLTE602
  L_serialTxWioLTE603
  L_serialTxWioLTE604
  L_serialTxWioLTE605
  L_serialTxWioLTE606
  L_serialTxWioLTE607
  L_serialTxWioLTE608
  L_serialTxWioLTE609
  L_serialTxWioLTE610
  L_serialTxWioLTE611
  L_serialTxWioLTE612
  L_serialTxWioLTE613
  L_serialTxWioLTE614
  L_serialTxWioLTE615
  L_RX_PIC_PIC616
  L_RX_PIC_PIC617
  L_RX_PIC_PIC618
  L_RX_PIC_PIC619
  L_RX_PIC_PIC620
  L_RX_PIC_PIC621
  L_RX_PIC_PIC622
  L_RX_PIC_PIC623
  L_RX_PIC_PIC624
  L_RX_PIC_PIC625
  L_SENSADO626
  L_SENSADO627
  L_SENSADO628
  L_SENSADO629
  L_SENSADO630
  L_SENSADO631
  L_SENSADO632
  L_SENSADO633
  L_SENSADO634
  L_SENSADO635
  L_SENSADO636
  L_SENSADO637
  L_SENSADO638
  L_SENSADO639
  L_SENSADO640
  L_SENSADO641
  L_SENSADO642
  L_SENSADO643
  L_SENSADO644
  L_SENSADO645
  L_SENSADO646
  L_SENSADO647
  L_SENSADO648
  L_SENSADO649
  L_SENSADO650
  L_SENSADO651
  L_SENSADO652
  L_desbordoTemporizadorCero653
  L_desbordoTemporizadorCero654
  L_desbordoTemporizadorCero655
  L_desbordoTemporizadorCero656
  L_resetCuentas657
  L_resetCuentas658
  L_resetCuentas659
  L_resetCuentas660
  L_resetCuentas661
  L_resetCuentas662
  L_resetSLV663
  L__desbordoTemporizadorCero664
  L_end_lcd_send_nibble
  _lcd_send_nibble
  L__lcd_send_nibble666
  L__lcd_send_nibble667
  L__lcd_send_nibble668
  L__lcd_send_nibble669
  L__lcd_send_nibble670
  L__lcd_send_nibble671
  L__lcd_send_nibble672
  L__lcd_send_nibble673
  L_end_lcd_send_byte
  _lcd_send_byte
  L_end_lcd_init
  _lcd_init
  L_end_lcd_gotoxy
  _lcd_gotoxy
  L_end_lcd_chr
  _lcd_chr
  L_end_lcd_out
  _lcd_out
  L_end_lcd_outConst
  _lcd_outConst
  L_end_lcd_cmd
  _lcd_cmd
  L_end_bloqueos
  _bloqueos
  L__bloqueos682
  L__bloqueos683
  L__bloqueos684
  L__bloqueos685
  L__bloqueos686
  L__bloqueos687
  L__bloqueos688
  L__bloqueos689
  L__bloqueos690
  L__bloqueos691
  L__bloqueos692
  L__bloqueos693
  L__bloqueos694
  L_end_I2C_soft_init
  _I2C_soft_init
  L_end_I2C_soft_start
  _I2C_soft_start
  L_end_I2C_soft_stop
  _I2C_soft_stop
  L_end_I2C_soft_write
  _I2C_soft_write
  L__I2C_soft_write699
  L__I2C_soft_write700
  L__I2C_soft_write701
  L__I2C_soft_write702
  L_end_I2C_soft_read
  _I2C_soft_read
  L__I2C_soft_read704
  L__I2C_soft_read705
  L_end_iniciaEeprom
  _iniciaEeprom
  L_end_eepromEscribeNumero
  _eepromEscribeNumero
  L_end_eepromEscribeChar
  _eepromEscribeChar
  L__eepromEscribeChar709
  L__eepromEscribeChar710
  L__eepromEscribeChar711
  L_end_eepromLeeChar
  _eepromLeeChar
  L__eepromLeeChar713
  L_end_eepromLeeNumero
  _eepromLeeNumero
  L__eepromLeeNumero715
  L__eepromLeeNumero716
  L__eepromLeeNumero717
  L__eepromLeeNumero718
  L_end_muestraEstatus
  _muestraEstatus
  L_end_sensorNoBloqueo
  _sensorNoBloqueo
  L_end_sensorBloqueo
  _sensorBloqueo
  L_end_sensorBloqueoD
  _sensorBloqueoD
  L_end_sensorBloqueoT
  _sensorBloqueoT
  L_end_sensorBloqueoC
  _sensorBloqueoC
  L_end_sensorBloqueoO
  _sensorBloqueoO
  L_end_sensorBloqueoS
  _sensorBloqueoS
  L_end_sensorBloqueoPar1
  _sensorBloqueoPar1
  L_end_sensorBloqueoPar2
  _sensorBloqueoPar2
  L_end_sensorBloqueoPar3
  _sensorBloqueoPar3
  L_end_sensorBloqueoPar4
  _sensorBloqueoPar4
  L_end_sensorBloqueoPar6
  _sensorBloqueoPar6
  L_end_sensorBloqueoPar7
  _sensorBloqueoPar7
  L_end_sensorBloqueoPar9
  _sensorBloqueoPar9
  L_end_espera
  _espera
  L__espera735
  L__espera736
  L__espera737
  L__espera738
  L__espera739
  L__espera740
  L__espera741
  L__espera742
  L__espera743
  L__espera744
  L__espera745
  L__espera746
  L__espera747
  L__espera748
  L__espera749
  L__espera750
  L__espera751
  L__espera752
  L__espera753
  L__espera754
  L__espera755
  L__espera756
  L__espera757
  L__espera758
  L__espera759
  L__espera760
  L__espera761
  L__espera762
  L__espera763
  L__espera764
  L__espera765
  L__espera766
  L__espera767
  L__espera768
  L__espera769
  L__espera770
  L__espera771
  L__espera772
  L__espera773
  L__espera774
  L__espera775
  L__espera776
  L__espera777
  L__espera778
  L_end_entrando
  _entrando
  L__entrando780
  L__entrando781
  L__entrando782
  L__entrando783
  L__entrando784
  L__entrando785
  L__entrando786
  L__entrando787
  L__entrando788
  L__entrando789
  L__entrando790
  L__entrando791
  L__entrando792
  L__entrando793
  L__entrando794
  L__entrando795
  L__entrando796
  L__entrando797
  L__entrando798
  L__entrando799
  L__entrando800
  L__entrando801
  L__entrando802
  L__entrando803
  L__entrando804
  L__entrando805
  L__entrando806
  L__entrando807
  L__entrando808
  L__entrando809
  L__entrando810
  L__entrando811
  L__entrando812
  L__entrando813
  L__entrando814
  L__entrando815
  L__entrando816
  L__entrando817
  L__entrando818
  L__entrando819
  L__entrando820
  L__entrando821
  L_end_transicionE
  _transicionE
  L__transicionE823
  L__transicionE824
  L__transicionE825
  L__transicionE826
  L__transicionE827
  L__transicionE828
  L__transicionE829
  L__transicionE830
  L__transicionE831
  L__transicionE832
  L__transicionE833
  L__transicionE834
  L__transicionE835
  L__transicionE836
  L__transicionE837
  L__transicionE838
  L__transicionE839
  L__transicionE840
  L__transicionE841
  L__transicionE842
  L_end_transicionEnt
  _transicionEnt
  L__transicionEnt844
  L__transicionEnt845
  L__transicionEnt846
  L__transicionEnt847
  L__transicionEnt848
  L__transicionEnt849
  L__transicionEnt850
  L__transicionEnt851
  L__transicionEnt852
  L__transicionEnt853
  L__transicionEnt854
  L__transicionEnt855
  L__transicionEnt856
  L__transicionEnt857
  L__transicionEnt858
  L__transicionEnt859
  L__transicionEnt860
  L__transicionEnt861
  L__transicionEnt862
  L__transicionEnt863
  L__transicionEnt864
  L__transicionEnt865
  L__transicionEnt866
  L__transicionEnt867
  L_end_entro
  _entro
  L_end_saliendo
  _saliendo
  L__saliendo870
  L__saliendo871
  L__saliendo872
  L__saliendo873
  L__saliendo874
  L__saliendo875
  L__saliendo876
  L__saliendo877
  L__saliendo878
  L__saliendo879
  L__saliendo880
  L__saliendo881
  L__saliendo882
  L__saliendo883
  L__saliendo884
  L__saliendo885
  L__saliendo886
  L__saliendo887
  L__saliendo888
  L__saliendo889
  L__saliendo890
  L__saliendo891
  L__saliendo892
  L__saliendo893
  L__saliendo894
  L__saliendo895
  L__saliendo896
  L__saliendo897
  L__saliendo898
  L__saliendo899
  L__saliendo900
  L__saliendo901
  L__saliendo902
  L__saliendo903
  L__saliendo904
  L__saliendo905
  L__saliendo906
  L__saliendo907
  L__saliendo908
  L__saliendo909
  L__saliendo910
  L__saliendo911
  L_end_transicionS
  _transicionS
  L__transicionS913
  L__transicionS914
  L__transicionS915
  L__transicionS916
  L__transicionS917
  L__transicionS918
  L__transicionS919
  L__transicionS920
  L__transicionS921
  L__transicionS922
  L__transicionS923
  L__transicionS924
  L__transicionS925
  L__transicionS926
  L__transicionS927
  L__transicionS928
  L__transicionS929
  L__transicionS930
  L__transicionS931
  L__transicionS932
  L_end_transicionSal
  _transicionSal
  L__transicionSal934
  L__transicionSal935
  L__transicionSal936
  L__transicionSal937
  L__transicionSal938
  L__transicionSal939
  L__transicionSal940
  L__transicionSal941
  L__transicionSal942
  L__transicionSal943
  L__transicionSal944
  L__transicionSal945
  L__transicionSal946
  L__transicionSal947
  L__transicionSal948
  L__transicionSal949
  L__transicionSal950
  L__transicionSal951
  L__transicionSal952
  L__transicionSal953
  L__transicionSal954
  L__transicionSal955
  L__transicionSal956
  L__transicionSal957
  L_end_salio
  _salio
  L_end_esperaB
  _esperaB
  L__esperaB960
  L__esperaB961
  L__esperaB962
  L__esperaB963
  L__esperaB964
  L__esperaB965
  L__esperaB966
  L__esperaB967
  L__esperaB968
  L__esperaB969
  L__esperaB970
  L__esperaB971
  L__esperaB972
  L__esperaB973
  L__esperaB974
  L__esperaB975
  L_end_entrandoB
  _entrandoB
  L__entrandoB977
  L__entrandoB978
  L__entrandoB979
  L__entrandoB980
  L__entrandoB981
  L__entrandoB982
  L__entrandoB983
  L__entrandoB984
  L__entrandoB985
  L__entrandoB986
  L__entrandoB987
  L__entrandoB988
  L__entrandoB989
  L__entrandoB990
  L__entrandoB991
  L__entrandoB992
  L__entrandoB993
  L__entrandoB994
  L__entrandoB995
  L__entrandoB996
  L__entrandoB997
  L__entrandoB998
  L_end_transicionEB
  _transicionEB
  L__transicionEB1000
  L__transicionEB1001
  L__transicionEB1002
  L__transicionEB1003
  L__transicionEB1004
  L__transicionEB1005
  L__transicionEB1006
  L__transicionEB1007
  L__transicionEB1008
  L__transicionEB1009
  L__transicionEB1010
  L__transicionEB1011
  L__transicionEB1012
  L__transicionEB1013
  L__transicionEB1014
  L__transicionEB1015
  L__transicionEB1016
  L__transicionEB1017
  L__transicionEB1018
  L__transicionEB1019
  L_end_transicionEntB
  _transicionEntB
  L__transicionEntB1021
  L__transicionEntB1022
  L__transicionEntB1023
  L__transicionEntB1024
  L__transicionEntB1025
  L__transicionEntB1026
  L__transicionEntB1027
  L__transicionEntB1028
  L__transicionEntB1029
  L__transicionEntB1030
  L_end_entroB
  _entroB
  L_end_saliendoB
  _saliendoB
  L__saliendoB1033
  L__saliendoB1034
  L__saliendoB1035
  L__saliendoB1036
  L__saliendoB1037
  L__saliendoB1038
  L__saliendoB1039
  L__saliendoB1040
  L__saliendoB1041
  L__saliendoB1042
  L_end_transicionSB
  _transicionSB
  L__transicionSB1044
  L__transicionSB1045
  L__transicionSB1046
  L__transicionSB1047
  L__transicionSB1048
  L__transicionSB1049
  L__transicionSB1050
  L__transicionSB1051
  L__transicionSB1052
  L__transicionSB1053
  L__transicionSB1054
  L__transicionSB1055
  L__transicionSB1056
  L__transicionSB1057
  L__transicionSB1058
  L__transicionSB1059
  L__transicionSB1060
  L__transicionSB1061
  L__transicionSB1062
  L__transicionSB1063
  L__transicionSB1064
  L__transicionSB1065
  L__transicionSB1066
  L__transicionSB1067
  L__transicionSB1068
  L__transicionSB1069
  L__transicionSB1070
  L__transicionSB1071
  L__transicionSB1072
  L__transicionSB1073
  L__transicionSB1074
  L__transicionSB1075
  L_end_transicionSalB
  _transicionSalB
  L__transicionSalB1077
  L__transicionSalB1078
  L__transicionSalB1079
  L__transicionSalB1080
  L__transicionSalB1081
  L__transicionSalB1082
  L__transicionSalB1083
  L__transicionSalB1084
  L__transicionSalB1085
  L__transicionSalB1086
  L__transicionSalB1087
  L__transicionSalB1088
  L_end_salioB
  _salioB
  L_end_esperaBD
  _esperaBD
  L__esperaBD1091
  L__esperaBD1092
  L__esperaBD1093
  L__esperaBD1094
  L__esperaBD1095
  L__esperaBD1096
  L__esperaBD1097
  L__esperaBD1098
  L__esperaBD1099
  L__esperaBD1100
  L__esperaBD1101
  L__esperaBD1102
  L__esperaBD1103
  L__esperaBD1104
  L__esperaBD1105
  L__esperaBD1106
  L_end_entrandoBD
  _entrandoBD
  L__entrandoBD1108
  L__entrandoBD1109
  L__entrandoBD1110
  L__entrandoBD1111
  L__entrandoBD1112
  L__entrandoBD1113
  L__entrandoBD1114
  L__entrandoBD1115
  L__entrandoBD1116
  L__entrandoBD1117
  L_end_transicionEBD
  _transicionEBD
  L__transicionEBD1119
  L__transicionEBD1120
  L__transicionEBD1121
  L__transicionEBD1122
  L__transicionEBD1123
  L__transicionEBD1124
  L__transicionEBD1125
  L__transicionEBD1126
  L__transicionEBD1127
  L__transicionEBD1128
  L__transicionEBD1129
  L__transicionEBD1130
  L__transicionEBD1131
  L__transicionEBD1132
  L__transicionEBD1133
  L__transicionEBD1134
  L__transicionEBD1135
  L__transicionEBD1136
  L__transicionEBD1137
  L__transicionEBD1138
  L__transicionEBD1139
  L__transicionEBD1140
  L__transicionEBD1141
  L__transicionEBD1142
  L__transicionEBD1143
  L__transicionEBD1144
  L__transicionEBD1145
  L__transicionEBD1146
  L__transicionEBD1147
  L__transicionEBD1148
  L__transicionEBD1149
  L__transicionEBD1150
  L_end_transicionEntBD
  _transicionEntBD
  L__transicionEntBD1152
  L__transicionEntBD1153
  L__transicionEntBD1154
  L__transicionEntBD1155
  L__transicionEntBD1156
  L__transicionEntBD1157
  L__transicionEntBD1158
  L__transicionEntBD1159
  L__transicionEntBD1160
  L__transicionEntBD1161
  L__transicionEntBD1162
  L__transicionEntBD1163
  L_end_entroBD
  _entroBD
  L_end_saliendoBD
  _saliendoBD
  L__saliendoBD1166
  L__saliendoBD1167
  L__saliendoBD1168
  L__saliendoBD1169
  L__saliendoBD1170
  L__saliendoBD1171
  L__saliendoBD1172
  L__saliendoBD1173
  L__saliendoBD1174
  L__saliendoBD1175
  L__saliendoBD1176
  L__saliendoBD1177
  L__saliendoBD1178
  L__saliendoBD1179
  L__saliendoBD1180
  L__saliendoBD1181
  L__saliendoBD1182
  L__saliendoBD1183
  L__saliendoBD1184
  L__saliendoBD1185
  L__saliendoBD1186
  L__saliendoBD1187
  L_end_transicionSBD
  _transicionSBD
  L__transicionSBD1189
  L__transicionSBD1190
  L__transicionSBD1191
  L__transicionSBD1192
  L__transicionSBD1193
  L__transicionSBD1194
  L__transicionSBD1195
  L__transicionSBD1196
  L__transicionSBD1197
  L__transicionSBD1198
  L__transicionSBD1199
  L__transicionSBD1200
  L__transicionSBD1201
  L__transicionSBD1202
  L__transicionSBD1203
  L__transicionSBD1204
  L__transicionSBD1205
  L__transicionSBD1206
  L__transicionSBD1207
  L__transicionSBD1208
  L_end_transicionSalBD
  _transicionSalBD
  L__transicionSalBD1210
  L__transicionSalBD1211
  L__transicionSalBD1212
  L__transicionSalBD1213
  L__transicionSalBD1214
  L__transicionSalBD1215
  L__transicionSalBD1216
  L__transicionSalBD1217
  L__transicionSalBD1218
  L__transicionSalBD1219
  L_end_salioBD
  _salioBD
  L_end_esperaBT
  _esperaBT
  L__esperaBT1222
  L__esperaBT1223
  L__esperaBT1224
  L__esperaBT1225
  L__esperaBT1226
  L__esperaBT1227
  L__esperaBT1228
  L__esperaBT1229
  L__esperaBT1230
  L__esperaBT1231
  L__esperaBT1232
  L__esperaBT1233
  L__esperaBT1234
  L__esperaBT1235
  L__esperaBT1236
  L__esperaBT1237
  L_end_entrandoBT
  _entrandoBT
  L__entrandoBT1239
  L__entrandoBT1240
  L__entrandoBT1241
  L__entrandoBT1242
  L__entrandoBT1243
  L__entrandoBT1244
  L__entrandoBT1245
  L__entrandoBT1246
  L__entrandoBT1247
  L__entrandoBT1248
  L__entrandoBT1249
  L__entrandoBT1250
  L__entrandoBT1251
  L__entrandoBT1252
  L__entrandoBT1253
  L__entrandoBT1254
  L__entrandoBT1255
  L__entrandoBT1256
  L__entrandoBT1257
  L__entrandoBT1258
  L__entrandoBT1259
  L__entrandoBT1260
  L_end_transicionEBT
  _transicionEBT
  L__transicionEBT1262
  L__transicionEBT1263
  L__transicionEBT1264
  L__transicionEBT1265
  L__transicionEBT1266
  L__transicionEBT1267
  L__transicionEBT1268
  L__transicionEBT1269
  L__transicionEBT1270
  L__transicionEBT1271
  L__transicionEBT1272
  L__transicionEBT1273
  L__transicionEBT1274
  L__transicionEBT1275
  L__transicionEBT1276
  L__transicionEBT1277
  L__transicionEBT1278
  L__transicionEBT1279
  L__transicionEBT1280
  L__transicionEBT1281
  L_end_transicionEntBT
  _transicionEntBT
  L__transicionEntBT1283
  L__transicionEntBT1284
  L__transicionEntBT1285
  L__transicionEntBT1286
  L__transicionEntBT1287
  L__transicionEntBT1288
  L__transicionEntBT1289
  L__transicionEntBT1290
  L__transicionEntBT1291
  L__transicionEntBT1292
  L_end_entroBT
  _entroBT
  L_end_saliendoBT
  _saliendoBT
  L__saliendoBT1295
  L__saliendoBT1296
  L__saliendoBT1297
  L__saliendoBT1298
  L__saliendoBT1299
  L__saliendoBT1300
  L__saliendoBT1301
  L__saliendoBT1302
  L__saliendoBT1303
  L__saliendoBT1304
  L_end_transicionSBT
  _transicionSBT
  L__transicionSBT1306
  L__transicionSBT1307
  L__transicionSBT1308
  L__transicionSBT1309
  L__transicionSBT1310
  L__transicionSBT1311
  L__transicionSBT1312
  L__transicionSBT1313
  L__transicionSBT1314
  L__transicionSBT1315
  L__transicionSBT1316
  L__transicionSBT1317
  L__transicionSBT1318
  L__transicionSBT1319
  L__transicionSBT1320
  L__transicionSBT1321
  L__transicionSBT1322
  L__transicionSBT1323
  L__transicionSBT1324
  L__transicionSBT1325
  L__transicionSBT1326
  L__transicionSBT1327
  L__transicionSBT1328
  L__transicionSBT1329
  L__transicionSBT1330
  L__transicionSBT1331
  L__transicionSBT1332
  L__transicionSBT1333
  L__transicionSBT1334
  L__transicionSBT1335
  L__transicionSBT1336
  L__transicionSBT1337
  L_end_transicionSalBT
  _transicionSalBT
  L__transicionSalBT1339
  L__transicionSalBT1340
  L__transicionSalBT1341
  L__transicionSalBT1342
  L__transicionSalBT1343
  L__transicionSalBT1344
  L__transicionSalBT1345
  L__transicionSalBT1346
  L__transicionSalBT1347
  L__transicionSalBT1348
  L__transicionSalBT1349
  L__transicionSalBT1350
  L_end_salioBT
  _salioBT
  L_end_esperaBC
  _esperaBC
  L__esperaBC1353
  L__esperaBC1354
  L__esperaBC1355
  L__esperaBC1356
  L__esperaBC1357
  L__esperaBC1358
  L__esperaBC1359
  L__esperaBC1360
  L__esperaBC1361
  L__esperaBC1362
  L__esperaBC1363
  L__esperaBC1364
  L__esperaBC1365
  L__esperaBC1366
  L__esperaBC1367
  L__esperaBC1368
  L_end_entrandoBC
  _entrandoBC
  L__entrandoBC1370
  L__entrandoBC1371
  L__entrandoBC1372
  L__entrandoBC1373
  L__entrandoBC1374
  L__entrandoBC1375
  L__entrandoBC1376
  L__entrandoBC1377
  L__entrandoBC1378
  L__entrandoBC1379
  L_end_transicionEBC
  _transicionEBC
  L__transicionEBC1381
  L__transicionEBC1382
  L__transicionEBC1383
  L__transicionEBC1384
  L__transicionEBC1385
  L__transicionEBC1386
  L__transicionEBC1387
  L__transicionEBC1388
  L__transicionEBC1389
  L__transicionEBC1390
  L__transicionEBC1391
  L__transicionEBC1392
  L__transicionEBC1393
  L__transicionEBC1394
  L__transicionEBC1395
  L__transicionEBC1396
  L__transicionEBC1397
  L__transicionEBC1398
  L__transicionEBC1399
  L__transicionEBC1400
  L__transicionEBC1401
  L__transicionEBC1402
  L__transicionEBC1403
  L__transicionEBC1404
  L__transicionEBC1405
  L__transicionEBC1406
  L__transicionEBC1407
  L__transicionEBC1408
  L__transicionEBC1409
  L__transicionEBC1410
  L__transicionEBC1411
  L__transicionEBC1412
  L_end_transicionEntBC
  _transicionEntBC
  L__transicionEntBC1414
  L__transicionEntBC1415
  L__transicionEntBC1416
  L__transicionEntBC1417
  L__transicionEntBC1418
  L__transicionEntBC1419
  L__transicionEntBC1420
  L__transicionEntBC1421
  L__transicionEntBC1422
  L__transicionEntBC1423
  L__transicionEntBC1424
  L__transicionEntBC1425
  L_end_entroBC
  _entroBC
  L_end_saliendoBC
  _saliendoBC
  L__saliendoBC1428
  L__saliendoBC1429
  L__saliendoBC1430
  L__saliendoBC1431
  L__saliendoBC1432
  L__saliendoBC1433
  L__saliendoBC1434
  L__saliendoBC1435
  L__saliendoBC1436
  L__saliendoBC1437
  L__saliendoBC1438
  L__saliendoBC1439
  L__saliendoBC1440
  L__saliendoBC1441
  L__saliendoBC1442
  L__saliendoBC1443
  L__saliendoBC1444
  L__saliendoBC1445
  L__saliendoBC1446
  L__saliendoBC1447
  L__saliendoBC1448
  L__saliendoBC1449
  L_end_transicionSBC
  _transicionSBC
  L__transicionSBC1451
  L__transicionSBC1452
  L__transicionSBC1453
  L__transicionSBC1454
  L__transicionSBC1455
  L__transicionSBC1456
  L__transicionSBC1457
  L__transicionSBC1458
  L__transicionSBC1459
  L__transicionSBC1460
  L__transicionSBC1461
  L__transicionSBC1462
  L__transicionSBC1463
  L__transicionSBC1464
  L__transicionSBC1465
  L__transicionSBC1466
  L__transicionSBC1467
  L__transicionSBC1468
  L__transicionSBC1469
  L__transicionSBC1470
  L_end_transicionSalBC
  _transicionSalBC
  L__transicionSalBC1472
  L__transicionSalBC1473
  L__transicionSalBC1474
  L__transicionSalBC1475
  L__transicionSalBC1476
  L__transicionSalBC1477
  L__transicionSalBC1478
  L__transicionSalBC1479
  L__transicionSalBC1480
  L__transicionSalBC1481
  L_end_salioBC
  _salioBC
  L_end_esperaBO
  _esperaBO
  L__esperaBO1484
  L__esperaBO1485
  L__esperaBO1486
  L__esperaBO1487
  L__esperaBO1488
  L__esperaBO1489
  L__esperaBO1490
  L__esperaBO1491
  L__esperaBO1492
  L__esperaBO1493
  L__esperaBO1494
  L__esperaBO1495
  L__esperaBO1496
  L__esperaBO1497
  L__esperaBO1498
  L__esperaBO1499
  L_end_entrandoBO
  _entrandoBO
  L__entrandoBO1501
  L__entrandoBO1502
  L__entrandoBO1503
  L__entrandoBO1504
  L__entrandoBO1505
  L__entrandoBO1506
  L__entrandoBO1507
  L__entrandoBO1508
  L__entrandoBO1509
  L__entrandoBO1510
  L__entrandoBO1511
  L__entrandoBO1512
  L__entrandoBO1513
  L__entrandoBO1514
  L__entrandoBO1515
  L__entrandoBO1516
  L__entrandoBO1517
  L__entrandoBO1518
  L__entrandoBO1519
  L__entrandoBO1520
  L__entrandoBO1521
  L__entrandoBO1522
  L_end_transicionEBO
  _transicionEBO
  L__transicionEBO1524
  L__transicionEBO1525
  L__transicionEBO1526
  L__transicionEBO1527
  L__transicionEBO1528
  L__transicionEBO1529
  L__transicionEBO1530
  L__transicionEBO1531
  L__transicionEBO1532
  L__transicionEBO1533
  L__transicionEBO1534
  L__transicionEBO1535
  L__transicionEBO1536
  L__transicionEBO1537
  L__transicionEBO1538
  L__transicionEBO1539
  L__transicionEBO1540
  L__transicionEBO1541
  L__transicionEBO1542
  L__transicionEBO1543
  L_end_transicionEntBO
  _transicionEntBO
  L__transicionEntBO1545
  L__transicionEntBO1546
  L__transicionEntBO1547
  L__transicionEntBO1548
  L__transicionEntBO1549
  L__transicionEntBO1550
  L__transicionEntBO1551
  L__transicionEntBO1552
  L__transicionEntBO1553
  L__transicionEntBO1554
  L_end_entroBO
  _entroBO
  L_end_saliendoBO
  _saliendoBO
  L__saliendoBO1557
  L__saliendoBO1558
  L__saliendoBO1559
  L__saliendoBO1560
  L__saliendoBO1561
  L__saliendoBO1562
  L__saliendoBO1563
  L__saliendoBO1564
  L__saliendoBO1565
  L__saliendoBO1566
  L_end_transicionSBO
  _transicionSBO
  L__transicionSBO1568
  L__transicionSBO1569
  L__transicionSBO1570
  L__transicionSBO1571
  L__transicionSBO1572
  L__transicionSBO1573
  L__transicionSBO1574
  L__transicionSBO1575
  L__transicionSBO1576
  L__transicionSBO1577
  L__transicionSBO1578
  L__transicionSBO1579
  L__transicionSBO1580
  L__transicionSBO1581
  L__transicionSBO1582
  L__transicionSBO1583
  L__transicionSBO1584
  L__transicionSBO1585
  L__transicionSBO1586
  L__transicionSBO1587
  L__transicionSBO1588
  L__transicionSBO1589
  L__transicionSBO1590
  L__transicionSBO1591
  L__transicionSBO1592
  L__transicionSBO1593
  L__transicionSBO1594
  L__transicionSBO1595
  L__transicionSBO1596
  L__transicionSBO1597
  L__transicionSBO1598
  L__transicionSBO1599
  L_end_transicionSalBO
  _transicionSalBO
  L__transicionSalBO1601
  L__transicionSalBO1602
  L__transicionSalBO1603
  L__transicionSalBO1604
  L__transicionSalBO1605
  L__transicionSalBO1606
  L__transicionSalBO1607
  L__transicionSalBO1608
  L__transicionSalBO1609
  L__transicionSalBO1610
  L__transicionSalBO1611
  L__transicionSalBO1612
  L_end_salioBO
  _salioBO
  L_end_esperaBS
  _esperaBS
  L__esperaBS1615
  L__esperaBS1616
  L__esperaBS1617
  L__esperaBS1618
  L__esperaBS1619
  L__esperaBS1620
  L__esperaBS1621
  L__esperaBS1622
  L__esperaBS1623
  L__esperaBS1624
  L__esperaBS1625
  L__esperaBS1626
  L__esperaBS1627
  L__esperaBS1628
  L__esperaBS1629
  L__esperaBS1630
  L_end_entrandoBS
  _entrandoBS
  L__entrandoBS1632
  L__entrandoBS1633
  L__entrandoBS1634
  L__entrandoBS1635
  L__entrandoBS1636
  L__entrandoBS1637
  L__entrandoBS1638
  L__entrandoBS1639
  L__entrandoBS1640
  L__entrandoBS1641
  L_end_transicionEBS
  _transicionEBS
  L__transicionEBS1643
  L__transicionEBS1644
  L__transicionEBS1645
  L__transicionEBS1646
  L__transicionEBS1647
  L__transicionEBS1648
  L__transicionEBS1649
  L__transicionEBS1650
  L__transicionEBS1651
  L__transicionEBS1652
  L__transicionEBS1653
  L__transicionEBS1654
  L__transicionEBS1655
  L__transicionEBS1656
  L__transicionEBS1657
  L__transicionEBS1658
  L__transicionEBS1659
  L__transicionEBS1660
  L__transicionEBS1661
  L__transicionEBS1662
  L__transicionEBS1663
  L__transicionEBS1664
  L__transicionEBS1665
  L__transicionEBS1666
  L__transicionEBS1667
  L__transicionEBS1668
  L__transicionEBS1669
  L__transicionEBS1670
  L__transicionEBS1671
  L__transicionEBS1672
  L__transicionEBS1673
  L__transicionEBS1674
  L__transicionEBS1675
  L__transicionEBS1676
  L_end_transicionEntBS
  _transicionEntBS
  L__transicionEntBS1678
  L__transicionEntBS1679
  L__transicionEntBS1680
  L__transicionEntBS1681
  L__transicionEntBS1682
  L__transicionEntBS1683
  L__transicionEntBS1684
  L__transicionEntBS1685
  L__transicionEntBS1686
  L__transicionEntBS1687
  L__transicionEntBS1688
  L__transicionEntBS1689
  L_end_entroBS
  _entroBS
  L_end_saliendoBS
  _saliendoBS
  L__saliendoBS1692
  L__saliendoBS1693
  L__saliendoBS1694
  L__saliendoBS1695
  L__saliendoBS1696
  L__saliendoBS1697
  L__saliendoBS1698
  L__saliendoBS1699
  L__saliendoBS1700
  L__saliendoBS1701
  L__saliendoBS1702
  L__saliendoBS1703
  L__saliendoBS1704
  L__saliendoBS1705
  L__saliendoBS1706
  L__saliendoBS1707
  L__saliendoBS1708
  L__saliendoBS1709
  L__saliendoBS1710
  L__saliendoBS1711
  L__saliendoBS1712
  L__saliendoBS1713
  L_end_transicionSBS
  _transicionSBS
  L__transicionSBS1715
  L__transicionSBS1716
  L__transicionSBS1717
  L__transicionSBS1718
  L__transicionSBS1719
  L__transicionSBS1720
  L__transicionSBS1721
  L__transicionSBS1722
  L__transicionSBS1723
  L__transicionSBS1724
  L__transicionSBS1725
  L__transicionSBS1726
  L__transicionSBS1727
  L__transicionSBS1728
  L__transicionSBS1729
  L__transicionSBS1730
  L__transicionSBS1731
  L__transicionSBS1732
  L__transicionSBS1733
  L__transicionSBS1734
  L_end_transicionSalBS
  _transicionSalBS
  L__transicionSalBS1736
  L__transicionSalBS1737
  L__transicionSalBS1738
  L__transicionSalBS1739
  L__transicionSalBS1740
  L__transicionSalBS1741
  L__transicionSalBS1742
  L__transicionSalBS1743
  L__transicionSalBS1744
  L__transicionSalBS1745
  L_end_salioBS
  _salioBS
  L_end_esperaBP1
  _esperaBP1
  L__esperaBP11748
  L__esperaBP11749
  L__esperaBP11750
  L__esperaBP11751
  L__esperaBP11752
  L__esperaBP11753
  L__esperaBP11754
  L__esperaBP11755
  L__esperaBP11756
  L__esperaBP11757
  L__esperaBP11758
  L__esperaBP11759
  L_end_entrandoBP1
  _entrandoBP1
  L__entrandoBP11761
  L__entrandoBP11762
  L__entrandoBP11763
  L__entrandoBP11764
  L__entrandoBP11765
  L__entrandoBP11766
  L__entrandoBP11767
  L__entrandoBP11768
  L_end_transicionEBP1
  _transicionEBP1
  L__transicionEBP11770
  L__transicionEBP11771
  L__transicionEBP11772
  L__transicionEBP11773
  L__transicionEBP11774
  L__transicionEBP11775
  L__transicionEBP11776
  L__transicionEBP11777
  L__transicionEBP11778
  L__transicionEBP11779
  L__transicionEBP11780
  L__transicionEBP11781
  L__transicionEBP11782
  L__transicionEBP11783
  L_end_transicionEntBP1
  _transicionEntBP1
  L__transicionEntBP11785
  L__transicionEntBP11786
  L__transicionEntBP11787
  L__transicionEntBP11788
  L__transicionEntBP11789
  L__transicionEntBP11790
  L__transicionEntBP11791
  L__transicionEntBP11792
  L_end_entroBP1
  _entroBP1
  L_end_saliendoBP1
  _saliendoBP1
  L__saliendoBP11795
  L__saliendoBP11796
  L__saliendoBP11797
  L__saliendoBP11798
  L__saliendoBP11799
  L__saliendoBP11800
  L__saliendoBP11801
  L__saliendoBP11802
  L_end_transicionSBP1
  _transicionSBP1
  L__transicionSBP11804
  L__transicionSBP11805
  L__transicionSBP11806
  L__transicionSBP11807
  L__transicionSBP11808
  L__transicionSBP11809
  L__transicionSBP11810
  L__transicionSBP11811
  L__transicionSBP11812
  L__transicionSBP11813
  L__transicionSBP11814
  L__transicionSBP11815
  L__transicionSBP11816
  L__transicionSBP11817
  L_end_transicionSalBP1
  _transicionSalBP1
  L__transicionSalBP11819
  L__transicionSalBP11820
  L__transicionSalBP11821
  L__transicionSalBP11822
  L__transicionSalBP11823
  L__transicionSalBP11824
  L__transicionSalBP11825
  L__transicionSalBP11826
  L_end_salioBP1
  _salioBP1
  L_end_esperaBP2
  _esperaBP2
  L__esperaBP21829
  L__esperaBP21830
  L__esperaBP21831
  L__esperaBP21832
  L__esperaBP21833
  L__esperaBP21834
  L__esperaBP21835
  L__esperaBP21836
  L__esperaBP21837
  L__esperaBP21838
  L__esperaBP21839
  L__esperaBP21840
  L_end_entrandoBP2
  _entrandoBP2
  L__entrandoBP21842
  L__entrandoBP21843
  L__entrandoBP21844
  L__entrandoBP21845
  L__entrandoBP21846
  L__entrandoBP21847
  L__entrandoBP21848
  L__entrandoBP21849
  L_end_transicionEBP2
  _transicionEBP2
  L__transicionEBP21851
  L__transicionEBP21852
  L__transicionEBP21853
  L__transicionEBP21854
  L__transicionEBP21855
  L__transicionEBP21856
  L__transicionEBP21857
  L__transicionEBP21858
  L__transicionEBP21859
  L__transicionEBP21860
  L__transicionEBP21861
  L__transicionEBP21862
  L__transicionEBP21863
  L__transicionEBP21864
  L_end_transicionEntBP2
  _transicionEntBP2
  L__transicionEntBP21866
  L__transicionEntBP21867
  L__transicionEntBP21868
  L__transicionEntBP21869
  L__transicionEntBP21870
  L__transicionEntBP21871
  L__transicionEntBP21872
  L__transicionEntBP21873
  L_end_entroBP2
  _entroBP2
  L_end_saliendoBP2
  _saliendoBP2
  L__saliendoBP21876
  L__saliendoBP21877
  L__saliendoBP21878
  L__saliendoBP21879
  L__saliendoBP21880
  L__saliendoBP21881
  L__saliendoBP21882
  L__saliendoBP21883
  L_end_transicionSBP2
  _transicionSBP2
  L__transicionSBP21885
  L__transicionSBP21886
  L__transicionSBP21887
  L__transicionSBP21888
  L__transicionSBP21889
  L__transicionSBP21890
  L__transicionSBP21891
  L__transicionSBP21892
  L__transicionSBP21893
  L__transicionSBP21894
  L__transicionSBP21895
  L__transicionSBP21896
  L__transicionSBP21897
  L__transicionSBP21898
  L__transicionSBP21899
  L__transicionSBP21900
  L__transicionSBP21901
  L__transicionSBP21902
  L__transicionSBP21903
  L__transicionSBP21904
  L__transicionSBP21905
  L__transicionSBP21906
  L__transicionSBP21907
  L__transicionSBP21908
  L_end_transicionSalBP2
  _transicionSalBP2
  L__transicionSalBP21910
  L__transicionSalBP21911
  L__transicionSalBP21912
  L__transicionSalBP21913
  L__transicionSalBP21914
  L__transicionSalBP21915
  L__transicionSalBP21916
  L__transicionSalBP21917
  L_end_salioBP2
  _salioBP2
  L_end_esperaBP3
  _esperaBP3
  L__esperaBP31920
  L__esperaBP31921
  L__esperaBP31922
  L__esperaBP31923
  L__esperaBP31924
  L__esperaBP31925
  L__esperaBP31926
  L__esperaBP31927
  L__esperaBP31928
  L__esperaBP31929
  L__esperaBP31930
  L__esperaBP31931
  L_end_entrandoBP3
  _entrandoBP3
  L__entrandoBP31933
  L__entrandoBP31934
  L__entrandoBP31935
  L__entrandoBP31936
  L__entrandoBP31937
  L__entrandoBP31938
  L__entrandoBP31939
  L__entrandoBP31940
  L_end_transicionEBP3
  _transicionEBP3
  L__transicionEBP31942
  L__transicionEBP31943
  L__transicionEBP31944
  L__transicionEBP31945
  L__transicionEBP31946
  L__transicionEBP31947
  L__transicionEBP31948
  L__transicionEBP31949
  L__transicionEBP31950
  L__transicionEBP31951
  L__transicionEBP31952
  L__transicionEBP31953
  L__transicionEBP31954
  L__transicionEBP31955
  L_end_transicionEntBP3
  _transicionEntBP3
  L__transicionEntBP31957
  L__transicionEntBP31958
  L__transicionEntBP31959
  L__transicionEntBP31960
  L__transicionEntBP31961
  L__transicionEntBP31962
  L__transicionEntBP31963
  L__transicionEntBP31964
  L_end_entroBP3
  _entroBP3
  L_end_saliendoBP3
  _saliendoBP3
  L__saliendoBP31967
  L__saliendoBP31968
  L__saliendoBP31969
  L__saliendoBP31970
  L__saliendoBP31971
  L__saliendoBP31972
  L__saliendoBP31973
  L__saliendoBP31974
  L_end_transicionSBP3
  _transicionSBP3
  L__transicionSBP31976
  L__transicionSBP31977
  L__transicionSBP31978
  L__transicionSBP31979
  L__transicionSBP31980
  L__transicionSBP31981
  L__transicionSBP31982
  L__transicionSBP31983
  L__transicionSBP31984
  L__transicionSBP31985
  L__transicionSBP31986
  L__transicionSBP31987
  L__transicionSBP31988
  L__transicionSBP31989
  L_end_transicionSalBP3
  _transicionSalBP3
  L__transicionSalBP31991
  L__transicionSalBP31992
  L__transicionSalBP31993
  L__transicionSalBP31994
  L__transicionSalBP31995
  L__transicionSalBP31996
  L__transicionSalBP31997
  L__transicionSalBP31998
  L_end_salioBP3
  _salioBP3
  L_end_esperaBP4
  _esperaBP4
  L__esperaBP42001
  L__esperaBP42002
  L__esperaBP42003
  L__esperaBP42004
  L__esperaBP42005
  L__esperaBP42006
  L__esperaBP42007
  L__esperaBP42008
  L__esperaBP42009
  L__esperaBP42010
  L_end_entrandoBP4
  _entrandoBP4
  L__entrandoBP42012
  L__entrandoBP42013
  L__entrandoBP42014
  L__entrandoBP42015
  L__entrandoBP42016
  L__entrandoBP42017
  L__entrandoBP42018
  L__entrandoBP42019
  L__entrandoBP42020
  L__entrandoBP42021
  L__entrandoBP42022
  L__entrandoBP42023
  L__entrandoBP42024
  L__entrandoBP42025
  L__entrandoBP42026
  L__entrandoBP42027
  L__entrandoBP42028
  L__entrandoBP42029
  L__entrandoBP42030
  L__entrandoBP42031
  L_end_transicionEBP4
  _transicionEBP4
  L__transicionEBP42033
  L__transicionEBP42034
  L__transicionEBP42035
  L__transicionEBP42036
  L__transicionEBP42037
  L__transicionEBP42038
  L__transicionEBP42039
  L__transicionEBP42040
  L_end_transicionEntBP4
  _transicionEntBP4
  L__transicionEntBP42042
  L__transicionEntBP42043
  L__transicionEntBP42044
  L__transicionEntBP42045
  L__transicionEntBP42046
  L__transicionEntBP42047
  L_end_entroBP4
  _entroBP4
  L_end_saliendoBP4
  _saliendoBP4
  L__saliendoBP42050
  L__saliendoBP42051
  L__saliendoBP42052
  L__saliendoBP42053
  L_end_transicionSBP4
  _transicionSBP4
  L__transicionSBP42055
  L__transicionSBP42056
  L__transicionSBP42057
  L__transicionSBP42058
  L__transicionSBP42059
  L__transicionSBP42060
  L__transicionSBP42061
  L__transicionSBP42062
  L__transicionSBP42063
  L__transicionSBP42064
  L__transicionSBP42065
  L__transicionSBP42066
  L__transicionSBP42067
  L__transicionSBP42068
  L__transicionSBP42069
  L__transicionSBP42070
  L__transicionSBP42071
  L__transicionSBP42072
  L__transicionSBP42073
  L__transicionSBP42074
  L_end_transicionSalBP4
  _transicionSalBP4
  L__transicionSalBP42076
  L__transicionSalBP42077
  L__transicionSalBP42078
  L__transicionSalBP42079
  L__transicionSalBP42080
  L__transicionSalBP42081
  L__transicionSalBP42082
  L__transicionSalBP42083
  L__transicionSalBP42084
  L__transicionSalBP42085
  L__transicionSalBP42086
  L__transicionSalBP42087
  L__transicionSalBP42088
  L__transicionSalBP42089
  L__transicionSalBP42090
  L__transicionSalBP42091
  L_end_salioBP4
  _salioBP4
  L_end_esperaBP6
  _esperaBP6
  L__esperaBP62094
  L__esperaBP62095
  L__esperaBP62096
  L__esperaBP62097
  L__esperaBP62098
  L__esperaBP62099
  L__esperaBP62100
  L__esperaBP62101
  L__esperaBP62102
  L__esperaBP62103
  L_end_entrandoBP6
  _entrandoBP6
  L__entrandoBP62105
  L__entrandoBP62106
  L__entrandoBP62107
  L__entrandoBP62108
  L__entrandoBP62109
  L__entrandoBP62110
  L__entrandoBP62111
  L__entrandoBP62112
  L__entrandoBP62113
  L__entrandoBP62114
  L__entrandoBP62115
  L__entrandoBP62116
  L__entrandoBP62117
  L__entrandoBP62118
  L__entrandoBP62119
  L__entrandoBP62120
  L__entrandoBP62121
  L__entrandoBP62122
  L__entrandoBP62123
  L__entrandoBP62124
  L_end_transicionEBP6
  _transicionEBP6
  L__transicionEBP62126
  L__transicionEBP62127
  L__transicionEBP62128
  L__transicionEBP62129
  L__transicionEBP62130
  L__transicionEBP62131
  L__transicionEBP62132
  L__transicionEBP62133
  L__transicionEBP62134
  L__transicionEBP62135
  L__transicionEBP62136
  L__transicionEBP62137
  L__transicionEBP62138
  L__transicionEBP62139
  L__transicionEBP62140
  L__transicionEBP62141
  L__transicionEBP62142
  L__transicionEBP62143
  L__transicionEBP62144
  L__transicionEBP62145
  L__transicionEBP62146
  L__transicionEBP62147
  L__transicionEBP62148
  L__transicionEBP62149
  L__transicionEBP62150
  L__transicionEBP62151
  L__transicionEBP62152
  L__transicionEBP62153
  L_end_transicionEntBP6
  _transicionEntBP6
  L__transicionEntBP62155
  L__transicionEntBP62156
  L__transicionEntBP62157
  L__transicionEntBP62158
  L__transicionEntBP62159
  L__transicionEntBP62160
  L_end_entroBP6
  _entroBP6
  L_end_saliendoBP6
  _saliendoBP6
  L__saliendoBP62163
  L__saliendoBP62164
  L__saliendoBP62165
  L__saliendoBP62166
  L_end_transicionSBP6
  _transicionSBP6
  L__transicionSBP62168
  L__transicionSBP62169
  L__transicionSBP62170
  L__transicionSBP62171
  L__transicionSBP62172
  L__transicionSBP62173
  L__transicionSBP62174
  L__transicionSBP62175
  L__transicionSBP62176
  L__transicionSBP62177
  L__transicionSBP62178
  L__transicionSBP62179
  L__transicionSBP62180
  L__transicionSBP62181
  L__transicionSBP62182
  L__transicionSBP62183
  L__transicionSBP62184
  L__transicionSBP62185
  L__transicionSBP62186
  L__transicionSBP62187
  L_end_transicionSalBP6
  _transicionSalBP6
  L__transicionSalBP62189
  L__transicionSalBP62190
  L__transicionSalBP62191
  L__transicionSalBP62192
  L__transicionSalBP62193
  L__transicionSalBP62194
  L__transicionSalBP62195
  L__transicionSalBP62196
  L__transicionSalBP62197
  L__transicionSalBP62198
  L__transicionSalBP62199
  L__transicionSalBP62200
  L__transicionSalBP62201
  L__transicionSalBP62202
  L__transicionSalBP62203
  L__transicionSalBP62204
  L_end_salioBP6
  _salioBP6
  L_end_esperaBP7
  _esperaBP7
  L__esperaBP72207
  L__esperaBP72208
  L__esperaBP72209
  L__esperaBP72210
  L__esperaBP72211
  L__esperaBP72212
  L__esperaBP72213
  L__esperaBP72214
  L__esperaBP72215
  L__esperaBP72216
  L_end_entrandoBP7
  _entrandoBP7
  L__entrandoBP72218
  L__entrandoBP72219
  L__entrandoBP72220
  L__entrandoBP72221
  L_end_transicionEBP7
  _transicionEBP7
  L__transicionEBP72223
  L__transicionEBP72224
  L__transicionEBP72225
  L__transicionEBP72226
  L__transicionEBP72227
  L__transicionEBP72228
  L__transicionEBP72229
  L__transicionEBP72230
  L__transicionEBP72231
  L__transicionEBP72232
  L__transicionEBP72233
  L__transicionEBP72234
  L__transicionEBP72235
  L__transicionEBP72236
  L__transicionEBP72237
  L__transicionEBP72238
  L__transicionEBP72239
  L__transicionEBP72240
  L__transicionEBP72241
  L__transicionEBP72242
  L_end_transicionEntBP7
  _transicionEntBP7
  L__transicionEntBP72244
  L__transicionEntBP72245
  L__transicionEntBP72246
  L__transicionEntBP72247
  L__transicionEntBP72248
  L__transicionEntBP72249
  L__transicionEntBP72250
  L__transicionEntBP72251
  L__transicionEntBP72252
  L__transicionEntBP72253
  L__transicionEntBP72254
  L__transicionEntBP72255
  L__transicionEntBP72256
  L__transicionEntBP72257
  L__transicionEntBP72258
  L__transicionEntBP72259
  L_end_entroBP7
  _entroBP7
  L_end_saliendoBP7
  _saliendoBP7
  L__saliendoBP72262
  L__saliendoBP72263
  L__saliendoBP72264
  L__saliendoBP72265
  L__saliendoBP72266
  L__saliendoBP72267
  L__saliendoBP72268
  L__saliendoBP72269
  L__saliendoBP72270
  L__saliendoBP72271
  L__saliendoBP72272
  L__saliendoBP72273
  L__saliendoBP72274
  L__saliendoBP72275
  L__saliendoBP72276
  L__saliendoBP72277
  L__saliendoBP72278
  L__saliendoBP72279
  L__saliendoBP72280
  L__saliendoBP72281
  L_end_transicionSBP7
  _transicionSBP7
  L__transicionSBP72283
  L__transicionSBP72284
  L__transicionSBP72285
  L__transicionSBP72286
  L__transicionSBP72287
  L__transicionSBP72288
  L__transicionSBP72289
  L__transicionSBP72290
  L_end_transicionSalBP7
  _transicionSalBP7
  L__transicionSalBP72292
  L__transicionSalBP72293
  L__transicionSalBP72294
  L__transicionSalBP72295
  L__transicionSalBP72296
  L__transicionSalBP72297
  L_end_salioBP7
  _salioBP7
  L_end_esperaBP9
  _esperaBP9
  L__esperaBP92300
  L__esperaBP92301
  L__esperaBP92302
  L__esperaBP92303
  L__esperaBP92304
  L__esperaBP92305
  L__esperaBP92306
  L__esperaBP92307
  L__esperaBP92308
  L__esperaBP92309
  L_end_entrandoBP9
  _entrandoBP9
  L__entrandoBP92311
  L__entrandoBP92312
  L__entrandoBP92313
  L__entrandoBP92314
  L_end_transicionEBP9
  _transicionEBP9
  L__transicionEBP92316
  L__transicionEBP92317
  L__transicionEBP92318
  L__transicionEBP92319
  L__transicionEBP92320
  L__transicionEBP92321
  L__transicionEBP92322
  L__transicionEBP92323
  L__transicionEBP92324
  L__transicionEBP92325
  L__transicionEBP92326
  L__transicionEBP92327
  L__transicionEBP92328
  L__transicionEBP92329
  L__transicionEBP92330
  L__transicionEBP92331
  L__transicionEBP92332
  L__transicionEBP92333
  L__transicionEBP92334
  L__transicionEBP92335
  L_end_transicionEntBP9
  _transicionEntBP9
  L__transicionEntBP92337
  L__transicionEntBP92338
  L__transicionEntBP92339
  L__transicionEntBP92340
  L__transicionEntBP92341
  L__transicionEntBP92342
  L__transicionEntBP92343
  L__transicionEntBP92344
  L__transicionEntBP92345
  L__transicionEntBP92346
  L__transicionEntBP92347
  L__transicionEntBP92348
  L__transicionEntBP92349
  L__transicionEntBP92350
  L__transicionEntBP92351
  L__transicionEntBP92352
  L_end_entroBP9
  _entroBP9
  L_end_saliendoBP9
  _saliendoBP9
  L__saliendoBP92355
  L__saliendoBP92356
  L__saliendoBP92357
  L__saliendoBP92358
  L__saliendoBP92359
  L__saliendoBP92360
  L__saliendoBP92361
  L__saliendoBP92362
  L__saliendoBP92363
  L__saliendoBP92364
  L__saliendoBP92365
  L__saliendoBP92366
  L__saliendoBP92367
  L__saliendoBP92368
  L__saliendoBP92369
  L__saliendoBP92370
  L__saliendoBP92371
  L__saliendoBP92372
  L__saliendoBP92373
  L__saliendoBP92374
  L_end_transicionSBP9
  _transicionSBP9
  L__transicionSBP92376
  L__transicionSBP92377
  L__transicionSBP92378
  L__transicionSBP92379
  L__transicionSBP92380
  L__transicionSBP92381
  L__transicionSBP92382
  L__transicionSBP92383
  L_end_transicionSalBP9
  _transicionSalBP9
  L__transicionSalBP92385
  L__transicionSalBP92386
  L__transicionSalBP92387
  L__transicionSalBP92388
  L__transicionSalBP92389
  L__transicionSalBP92390
  L__transicionSalBP92391
  L__transicionSalBP92392
  L__transicionSalBP92393
  L__transicionSalBP92394
  L__transicionSalBP92395
  L__transicionSalBP92396
  L__transicionSalBP92397
  L__transicionSalBP92398
  L__transicionSalBP92399
  L__transicionSalBP92400
  L_end_salioBP9
  _salioBP9
  L_end_interrupcionesAltoNivel
  _interrupcionesAltoNivel
  L__interrupcionesAltoNivel2403
  L__interrupcionesAltoNivel2404
  L__interrupcionesAltoNivel2405
  L__interrupcionesAltoNivel2406
  L__interrupcionesAltoNivel2407
  L__interrupcionesAltoNivel2408
  L__interrupcionesAltoNivel2409
  L_end_interrupcionesBajoNivel
  _interrupcionesBajoNivel
  L__interrupcionesBajoNivel2411
  L_end_main
  _main
  L__main2413
  L__main2414
  L__main2415
  L__main2416
  L__main2417
  L__main2418
  L__main2419
  L__main2420
  L__main2421
  L__main2422
  L_end_PicInit
  _PicInit
  L_end_TX_MSTR
  _TX_MSTR
  L__TX_MSTR2425
  L__TX_MSTR2426
  L__TX_MSTR2427
  L__TX_MSTR2428
  L__TX_MSTR2429
  L_end_TX_SLV
  _TX_SLV
  L_end_serialTxWioLTE
  _serialTxWioLTE
  L__serialTxWioLTE2432
  L__serialTxWioLTE2433
  L__serialTxWioLTE2434
  L_end_RX_PIC_PIC
  _RX_PIC_PIC
  L_end_SENSADO
  _SENSADO
  L_end_desbordoTemporizadorCero
  _desbordoTemporizadorCero
  L_end_resetCuentas
  _resetCuentas
  L_end_resetSLV
  _resetSLV
  L_end_indicadorSensores
  _indicadorSensores
  L_end_MASTER
  _MASTER
  L_end_SLV
  _SLV
  L_lcd_send_nibble0
  L_lcd_send_byte1
  L_lcd_send_byte2
  L_lcd_send_byte3
  L_lcd_init4
  L_lcd_init5
  L_lcd_init6
  L_lcd_init7
  L_lcd_init8
  L_lcd_init9
  L_lcd_init10
  L_lcd_init11
  L_lcd_init12
  L_lcd_gotoxy13
  L_lcd_gotoxy14
  L_lcd_gotoxy15
  L_lcd_gotoxy16
  L_lcd_gotoxy17
  L_lcd_gotoxy18
  L_lcd_gotoxy19
  L_lcd_gotoxy20
  L_lcd_out21
  L_lcd_out22
  L_lcd_outConst23
  L_lcd_outConst24
  L_lcd_cmd25
  L_bloqueos26
  L_bloqueos27
  L_bloqueos28
  L_bloqueos29
  L_bloqueos30
  L_bloqueos31
  L_bloqueos32
  L_bloqueos33
  L_bloqueos34
  L_bloqueos35
  L_bloqueos36
  L_bloqueos37
  L_bloqueos38
  L_bloqueos39
  L_bloqueos40
  L_bloqueos41
  L_bloqueos42
  L_bloqueos43
  L_bloqueos44
  L_bloqueos45
  L_bloqueos46
  L_bloqueos47
  L_bloqueos48
  L_bloqueos49
  L_bloqueos50
  L_bloqueos51
  L_bloqueos52
  L_bloqueos53
  L_bloqueos54
  L_bloqueos55
  L_bloqueos56
  L_bloqueos57
  L_bloqueos58
  L_bloqueos59
  L_bloqueos60
  L_bloqueos61
  L_bloqueos62
  L_bloqueos63
  L_bloqueos64
  L_bloqueos65
  L_bloqueos66
  L_bloqueos67
  L_bloqueos68
  L_bloqueos69
  L_bloqueos70
  L_bloqueos71
  L_bloqueos72
  L_bloqueos73
  L_bloqueos74
  L_bloqueos75
  L_bloqueos76
  L_bloqueos77
  L_bloqueos78
  L_bloqueos79
  L_bloqueos80
  L_bloqueos81
  L_bloqueos82
  L_bloqueos83
  L_bloqueos84
  L_bloqueos85
  L_bloqueos86
  L_bloqueos87
  L_bloqueos88
  L_bloqueos89
  L_bloqueos90
  L_bloqueos91
  L_bloqueos92
  L_bloqueos93
  L_bloqueos94
  L_bloqueos95
  L_bloqueos96
  L_bloqueos97
  L_bloqueos98
  L_bloqueos99
  L_I2C_soft_start100
  L_I2C_soft_start101
  L_I2C_soft_stop102
  L_I2C_soft_stop103
  L_I2C_soft_write104
  L_I2C_soft_write105
  L_I2C_soft_write106
  L_I2C_soft_write107
  L_I2C_soft_write108
  L_I2C_soft_write109
  L_I2C_soft_read110
  L_I2C_soft_read111
  L_I2C_soft_read112
  L_I2C_soft_read113
  L_I2C_soft_read114
  L_I2C_soft_read115
  L_I2C_soft_read116
  L_eepromEscribeNumero117
  L_eepromEscribeNumero118
  L_eepromEscribeNumero119
  L_eepromEscribeNumero120
  L_eepromEscribeNumero121
  L_eepromEscribeNumero122
  L_eepromEscribeNumero123
  L_eepromEscribeNumero124
  L_eepromEscribeNumero125
  L_eepromEscribeNumero126
  L_eepromEscribeNumero127
  L_eepromEscribeNumero128
  L_eepromEscribeNumero129
  L_eepromEscribeNumero130
  L_eepromEscribeNumero131
  L_eepromEscribeNumero132
  L_eepromEscribeNumero133
  L_eepromEscribeNumero134
  L_eepromEscribeNumero135
  L_eepromEscribeNumero136
  L_eepromEscribeNumero137
  L_eepromEscribeNumero138
  L_eepromEscribeNumero139
  L_eepromEscribeNumero140
  L_eepromEscribeChar141
  L_eepromEscribeChar142
  L_eepromEscribeChar143
  L_eepromEscribeChar144
  L_eepromEscribeChar145
  L_eepromEscribeChar146
  L_eepromEscribeChar147
  L_eepromEscribeChar148
  L_eepromEscribeChar149
  L_eepromLeeChar150
  L_eepromLeeChar151
  L_eepromLeeChar152
  L_eepromLeeChar153
  L_eepromLeeChar154
  L_eepromLeeNumero155
  L_eepromLeeNumero156
  L_eepromLeeNumero157
  L_eepromLeeNumero158
  L_eepromLeeNumero159
  L_eepromLeeNumero160
  L_eepromLeeNumero161
  L_eepromLeeNumero162
  L_eepromLeeNumero163
  L_eepromLeeNumero164
  L_eepromLeeNumero165
  L_eepromLeeNumero166
  L_eepromLeeNumero167
  L_eepromLeeNumero168
  L_eepromLeeNumero169
  L_eepromLeeNumero170
  L_eepromLeeNumero171
  L_eepromLeeNumero172
  L_muestraEstatus173
  L_muestraEstatus174
  L_muestraEstatus175
  L_sensorNoBloqueo176
  L_sensorNoBloqueo177
  L_sensorNoBloqueo178
  L_sensorNoBloqueo179
  L_sensorBloqueo180
  L_sensorBloqueoD181
  L_sensorBloqueoT182
  L_sensorBloqueoC183
  L_sensorBloqueoO184
  L_sensorBloqueoS185
  L_espera186
  L_espera187
  L_espera188
  L_entrando189
  L_entrando190
  L_entrando191
  L_transicionE192
  L_transicionE193
  L_transicionE194
  L_transicionEnt195
  L_transicionEnt196
  L_transicionEnt197
  L_entro198
  L_entro199
  L_saliendo200
  L_saliendo201
  L_saliendo202
  L_transicionS203
  L_transicionS204
  L_transicionS205
  L_transicionSal206
  L_transicionSal207
  L_transicionSal208
  L_salio209
  L_salio210
  L_esperaB211
  L_esperaB212
  L_esperaB213
  L_entrandoB214
  L_entrandoB215
  L_entrandoB216
  L_transicionEB217
  L_transicionEB218
  L_transicionEB219
  L_transicionEntB220
  L_transicionEntB221
  L_transicionEntB222
  L_entroB223
  L_entroB224
  L_saliendoB225
  L_saliendoB226
  L_saliendoB227
  L_transicionSB228
  L_transicionSB229
  L_transicionSB230
  L_transicionSalB231
  L_transicionSalB232
  L_transicionSalB233
  L_salioB234
  L_salioB235
  L_esperaBD236
  L_esperaBD237
  L_esperaBD238
  L_entrandoBD239
  L_entrandoBD240
  L_entrandoBD241
  L_transicionEBD242
  L_transicionEBD243
  L_transicionEBD244
  L_transicionEntBD245
  L_transicionEntBD246
  L_transicionEntBD247
  L_entroBD248
  L_entroBD249
  L_saliendoBD250
  L_saliendoBD251
  L_saliendoBD252
  L_transicionSBD253
  L_transicionSBD254
  L_transicionSBD255
  L_transicionSalBD256
  L_transicionSalBD257
  L_transicionSalBD258
  L_salioBD259
  L_salioBD260
  L_esperaBT261
  L_esperaBT262
  L_esperaBT263
  L_entrandoBT264
  L_entrandoBT265
  L_entrandoBT266
  L_transicionEBT267
  L_transicionEBT268
  L_transicionEBT269
  L_transicionEntBT270
  L_transicionEntBT271
  L_transicionEntBT272
  L_entroBT273
  L_entroBT274
  L_saliendoBT275
  L_saliendoBT276
  L_saliendoBT277
  L_transicionSBT278
  L_transicionSBT279
  L_transicionSBT280
  L_transicionSalBT281
  L_transicionSalBT282
  L_transicionSalBT283
  L_salioBT284
  L_salioBT285
  L_esperaBC286
  L_esperaBC287
  L_esperaBC288
  L_entrandoBC289
  L_entrandoBC290
  L_entrandoBC291
  L_transicionEBC292
  L_transicionEBC293
  L_transicionEBC294
  L_transicionEntBC295
  L_transicionEntBC296
  L_transicionEntBC297
  L_entroBC298
  L_entroBC299
  L_saliendoBC300
  L_saliendoBC301
  L_saliendoBC302
  L_transicionSBC303
  L_transicionSBC304
  L_transicionSBC305
  L_transicionSalBC306
  L_transicionSalBC307
  L_transicionSalBC308
  L_salioBC309
  L_salioBC310
  L_esperaBO311
  L_esperaBO312
  L_esperaBO313
  L_entrandoBO314
  L_entrandoBO315
  L_entrandoBO316
  L_transicionEBO317
  L_transicionEBO318
  L_transicionEBO319
  L_transicionEntBO320
  L_transicionEntBO321
  L_transicionEntBO322
  L_entroBO323
  L_entroBO324
  L_saliendoBO325
  L_saliendoBO326
  L_saliendoBO327
  L_transicionSBO328
  L_transicionSBO329
  L_transicionSBO330
  L_transicionSalBO331
  L_transicionSalBO332
  L_transicionSalBO333
  L_salioBO334
  L_salioBO335
  L_esperaBS336
  L_esperaBS337
  L_esperaBS338
  L_entrandoBS339
  L_entrandoBS340
  L_entrandoBS341
  L_transicionEBS342
  L_transicionEBS343
  L_transicionEBS344
  L_transicionEntBS345
  L_transicionEntBS346
  L_transicionEntBS347
  L_entroBS348
  L_entroBS349
  L_saliendoBS350
  L_saliendoBS351
  L_saliendoBS352
  L_transicionSBS353
  L_transicionSBS354
  L_transicionSBS355
  L_transicionSalBS356
  L_transicionSalBS357
  L_transicionSalBS358
  L_salioBS359
  L_salioBS360
  L_esperaBP1361
  L_esperaBP1362
  L_esperaBP1363
  L_entrandoBP1364
  L_entrandoBP1365
  L_entrandoBP1366
  L_transicionEBP1367
  L_transicionEBP1368
  L_transicionEBP1369
  L_transicionEntBP1370
  L_transicionEntBP1371
  L_transicionEntBP1372
  L_entroBP1373
  L_entroBP1374
  L_entroBP1375
  L_saliendoBP1376
  L_saliendoBP1377
  L_saliendoBP1378
  L_transicionSBP1379
  L_transicionSBP1380
  L_transicionSBP1381
  L_transicionSalBP1382
  L_transicionSalBP1383
  L_transicionSalBP1384
  L_salioBP1385
  L_salioBP1386
  L_esperaBP2387
  L_esperaBP2388
  L_esperaBP2389
  L_entrandoBP2390
  L_entrandoBP2391
  L_entrandoBP2392
  L_transicionEBP2393
  L_transicionEBP2394
  L_transicionEBP2395
  L_transicionEntBP2396
  L_transicionEntBP2397
  L_transicionEntBP2398
  L_entroBP2399
  L_entroBP2400
  L_entroBP2401
  L_saliendoBP2402
  L_saliendoBP2403
  L_saliendoBP2404
  L_transicionSBP2405
  L_transicionSBP2406
  L_transicionSBP2407
  L_transicionSalBP2408
  L_transicionSalBP2409
  L_transicionSalBP2410
  L_salioBP2411
  L_salioBP2412
  L_esperaBP3413
  L_esperaBP3414
  L_esperaBP3415
  L_entrandoBP3416
  L_entrandoBP3417
  L_entrandoBP3418
  L_transicionEBP3419
  L_transicionEBP3420
  L_transicionEBP3421
  L_transicionEntBP3422
  L_transicionEntBP3423
  L_transicionEntBP3424
  L_entroBP3425
  L_entroBP3426
  L_entroBP3427
  L_saliendoBP3428
  L_saliendoBP3429
  L_saliendoBP3430
  L_transicionSBP3431
  L_transicionSBP3432
  L_transicionSBP3433
  L_transicionSalBP3434
  L_transicionSalBP3435
  L_transicionSalBP3436
  L_salioBP3437
  L_salioBP3438
  L_esperaBP4439
  L_esperaBP4440
  L_esperaBP4441
  L_entrandoBP4442
  L_entrandoBP4443
  L_entrandoBP4444
  L_transicionEBP4445
  L_transicionEBP4446
  L_transicionEBP4447
  L_transicionEntBP4448
  L_transicionEntBP4449
  L_transicionEntBP4450
  L_entroBP4451
  L_entroBP4452
  L_entroBP4453
  L_saliendoBP4454
  L_saliendoBP4455
  L_saliendoBP4456
  L_transicionSBP4457
  L_transicionSBP4458
  L_transicionSBP4459
  L_transicionSalBP4460
  L_transicionSalBP4461
  L_transicionSalBP4462
  L_salioBP4463
  L_salioBP4464
  L_esperaBP6465
  L_esperaBP6466
  L_esperaBP6467
  L_entrandoBP6468
  L_entrandoBP6469
  L_entrandoBP6470
  L_transicionEBP6471
  L_transicionEBP6472
  L_transicionEBP6473
  L_transicionEntBP6474
  L_transicionEntBP6475
  L_transicionEntBP6476
  L_entroBP6477
  L_entroBP6478
  L_entroBP6479
  L_saliendoBP6480
  L_saliendoBP6481
  L_saliendoBP6482
  L_transicionSBP6483
  L_transicionSBP6484
  L_transicionSBP6485
  L_transicionSalBP6486
  L_transicionSalBP6487
  L_transicionSalBP6488
  L_salioBP6489
  L_salioBP6490
  L_esperaBP7491
  L_esperaBP7492
  L_esperaBP7493
  L_entrandoBP7494
  L_entrandoBP7495
  L_entrandoBP7496
  L_transicionEBP7497
  L_transicionEBP7498
  L_transicionEBP7499
  L_transicionEntBP7500
  L_transicionEntBP7501
  L_transicionEntBP7502
  L_entroBP7503
  L_entroBP7504
  L_entroBP7505
  L_saliendoBP7506
  L_saliendoBP7507
  L_saliendoBP7508
  L_transicionSBP7509
  L_transicionSBP7510
  L_transicionSBP7511
  L_transicionSalBP7512
  L_transicionSalBP7513
  L_transicionSalBP7514
  L_salioBP7515
  L_salioBP7516
  L_esperaBP9517
  L_esperaBP9518
  L_esperaBP9519
  L_entrandoBP9520
  L_entrandoBP9521
  L_entrandoBP9522
  L_transicionEBP9523
  L_transicionEBP9524
  L_transicionEBP9525
  L_transicionEntBP9526
  L_transicionEntBP9527
  L_transicionEntBP9528
  L_entroBP9529
  L_entroBP9530
  L_entroBP9531
  L_saliendoBP9532
  L_saliendoBP9533
  L_saliendoBP9534
  L_transicionSBP9535
  L_transicionSBP9536
  L_transicionSBP9537
  L_transicionSalBP9538
  L_transicionSalBP9539
  L_transicionSalBP9540
  L_salioBP9541
  L_salioBP9542
  L_interrupcionesAltoNivel543
  L_interrupcionesAltoNivel544
  L_interrupcionesAltoNivel545
  L_main546
  L_main547
  L_main548
  L_main549
  L_main550
  L_main551
  L_main552
  L_main553
  L_main554
  L_main555
  L_main556
  L_PicInit557
  L_PicInit558
  L_PicInit559
  L_TX_MSTR560
  L_TX_MSTR561
  L_TX_MSTR562
  L_TX_MSTR563
  L_TX_MSTR564
  L_TX_MSTR565
  L_TX_MSTR566
  L_TX_MSTR567
  L_TX_MSTR568
  L_TX_MSTR569
  L_TX_MSTR570
  L_TX_MSTR571
  L_TX_SLV572
  L_TX_SLV573
  L_TX_SLV574
  L_TX_SLV575
  L_TX_SLV576
  L_TX_SLV577
  L_TX_SLV578
  L_serialTxWioLTE579
  L_serialTxWioLTE580
  L_serialTxWioLTE581
  L_serialTxWioLTE582
  L_serialTxWioLTE583
  L_serialTxWioLTE584
  L_serialTxWioLTE585
  L_serialTxWioLTE586
  L_serialTxWioLTE587
  L_serialTxWioLTE588
  L_serialTxWioLTE589
  L_serialTxWioLTE590
  L_serialTxWioLTE591
  L_serialTxWioLTE592
  L_serialTxWioLTE593
  L_serialTxWioLTE594
  L_serialTxWioLTE595
  L_serialTxWioLTE596
  L_serialTxWioLTE597
  L_serialTxWioLTE598
  L_serialTxWioLTE599
  L_serialTxWioLTE600
  L_serialTxWioLTE601
  L_serialTxWioLTE602
  L_serialTxWioLTE603
  L_serialTxWioLTE604
  L_serialTxWioLTE605
  L_serialTxWioLTE606
  L_serialTxWioLTE607
  L_serialTxWioLTE608
  L_serialTxWioLTE609
  L_serialTxWioLTE610
  L_serialTxWioLTE611
  L_serialTxWioLTE612
  L_serialTxWioLTE613
  L_serialTxWioLTE614
  L_serialTxWioLTE615
  L_RX_PIC_PIC616
  L_RX_PIC_PIC617
  L_RX_PIC_PIC618
  L_RX_PIC_PIC619
  L_RX_PIC_PIC620
  L_RX_PIC_PIC621
  L_RX_PIC_PIC622
  L_RX_PIC_PIC623
  L_RX_PIC_PIC624
  L_RX_PIC_PIC625
  L_SENSADO626
  L_SENSADO627
  L_SENSADO628
  L_SENSADO629
  L_SENSADO630
  L_SENSADO631
  L_SENSADO632
  L_SENSADO633
  L_SENSADO634
  L_SENSADO635
  L_SENSADO636
  L_SENSADO637
  L_SENSADO638
  L_SENSADO639
  L_SENSADO640
  L_SENSADO641
  L_SENSADO642
  L_SENSADO643
  L_SENSADO644
  L_SENSADO645
  L_SENSADO646
  L_SENSADO647
  L_SENSADO648
  L_SENSADO649
  L_SENSADO650
  L_SENSADO651
  L_SENSADO652
  L_desbordoTemporizadorCero653
  L_desbordoTemporizadorCero654
  L_desbordoTemporizadorCero655
  L_desbordoTemporizadorCero656
  L_resetCuentas657
  L_resetCuentas658
  L_resetCuentas659
  L_resetCuentas660
  L_resetCuentas661
  L_resetCuentas662
  L_resetSLV663
  L__desbordoTemporizadorCero664
  L_end_lcd_send_nibble
  _lcd_send_nibble
  L__lcd_send_nibble666
  L__lcd_send_nibble667
  L__lcd_send_nibble668
  L__lcd_send_nibble669
  L__lcd_send_nibble670
  L__lcd_send_nibble671
  L__lcd_send_nibble672
  L__lcd_send_nibble673
  L_end_lcd_send_byte
  _lcd_send_byte
  L_end_lcd_init
  _lcd_init
  L_end_lcd_gotoxy
  _lcd_gotoxy
  L_end_lcd_chr
  _lcd_chr
  L_end_lcd_out
  _lcd_out
  L_end_lcd_outConst
  _lcd_outConst
  L_end_lcd_cmd
  _lcd_cmd
  L_end_bloqueos
  _bloqueos
  L__bloqueos682
  L__bloqueos683
  L__bloqueos684
  L__bloqueos685
  L__bloqueos686
  L__bloqueos687
  L__bloqueos688
  L__bloqueos689
  L__bloqueos690
  L__bloqueos691
  L__bloqueos692
  L__bloqueos693
  L__bloqueos694
  L_end_I2C_soft_init
  _I2C_soft_init
  L_end_I2C_soft_start
  _I2C_soft_start
  L_end_I2C_soft_stop
  _I2C_soft_stop
  L_end_I2C_soft_write
  _I2C_soft_write
  L__I2C_soft_write699
  L__I2C_soft_write700
  L__I2C_soft_write701
  L__I2C_soft_write702
  L_end_I2C_soft_read
  _I2C_soft_read
  L__I2C_soft_read704
  L__I2C_soft_read705
  L_end_iniciaEeprom
  _iniciaEeprom
  L_end_eepromEscribeNumero
  _eepromEscribeNumero
  L_end_eepromEscribeChar
  _eepromEscribeChar
  L__eepromEscribeChar709
  L__eepromEscribeChar710
  L__eepromEscribeChar711
  L_end_eepromLeeChar
  _eepromLeeChar
  L__eepromLeeChar713
  L_end_eepromLeeNumero
  _eepromLeeNumero
  L__eepromLeeNumero715
  L__eepromLeeNumero716
  L__eepromLeeNumero717
  L__eepromLeeNumero718
  L_end_muestraEstatus
  _muestraEstatus
  L_end_sensorNoBloqueo
  _sensorNoBloqueo
  L_end_sensorBloqueo
  _sensorBloqueo
  L_end_sensorBloqueoD
  _sensorBloqueoD
  L_end_sensorBloqueoT
  _sensorBloqueoT
  L_end_sensorBloqueoC
  _sensorBloqueoC
  L_end_sensorBloqueoO
  _sensorBloqueoO
  L_end_sensorBloqueoS
  _sensorBloqueoS
  L_end_sensorBloqueoPar1
  _sensorBloqueoPar1
  L_end_sensorBloqueoPar2
  _sensorBloqueoPar2
  L_end_sensorBloqueoPar3
  _sensorBloqueoPar3
  L_end_sensorBloqueoPar4
  _sensorBloqueoPar4
  L_end_sensorBloqueoPar6
  _sensorBloqueoPar6
  L_end_sensorBloqueoPar7
  _sensorBloqueoPar7
  L_end_sensorBloqueoPar9
  _sensorBloqueoPar9
  L_end_espera
  _espera
  L__espera735
  L__espera736
  L__espera737
  L__espera738
  L__espera739
  L__espera740
  L__espera741
  L__espera742
  L__espera743
  L__espera744
  L__espera745
  L__espera746
  L__espera747
  L__espera748
  L__espera749
  L__espera750
  L__espera751
  L__espera752
  L__espera753
  L__espera754
  L__espera755
  L__espera756
  L__espera757
  L__espera758
  L__espera759
  L__espera760
  L__espera761
  L__espera762
  L__espera763
  L__espera764
  L__espera765
  L__espera766
  L__espera767
  L__espera768
  L__espera769
  L__espera770
  L__espera771
  L__espera772
  L__espera773
  L__espera774
  L__espera775
  L__espera776
  L__espera777
  L__espera778
  L_end_entrando
  _entrando
  L__entrando780
  L__entrando781
  L__entrando782
  L__entrando783
  L__entrando784
  L__entrando785
  L__entrando786
  L__entrando787
  L__entrando788
  L__entrando789
  L__entrando790
  L__entrando791
  L__entrando792
  L__entrando793
  L__entrando794
  L__entrando795
  L__entrando796
  L__entrando797
  L__entrando798
  L__entrando799
  L__entrando800
  L__entrando801
  L__entrando802
  L__entrando803
  L__entrando804
  L__entrando805
  L__entrando806
  L__entrando807
  L__entrando808
  L__entrando809
  L__entrando810
  L__entrando811
  L__entrando812
  L__entrando813
  L__entrando814
  L__entrando815
  L__entrando816
  L__entrando817
  L__entrando818
  L__entrando819
  L__entrando820
  L__entrando821
  L_end_transicionE
  _transicionE
  L__transicionE823
  L__transicionE824
  L__transicionE825
  L__transicionE826
  L__transicionE827
  L__transicionE828
  L__transicionE829
  L__transicionE830
  L__transicionE831
  L__transicionE832
  L__transicionE833
  L__transicionE834
  L__transicionE835
  L__transicionE836
  L__transicionE837
  L__transicionE838
  L__transicionE839
  L__transicionE840
  L__transicionE841
  L__transicionE842
  L_end_transicionEnt
  _transicionEnt
  L__transicionEnt844
  L__transicionEnt845
  L__transicionEnt846
  L__transicionEnt847
  L__transicionEnt848
  L__transicionEnt849
  L__transicionEnt850
  L__transicionEnt851
  L__transicionEnt852
  L__transicionEnt853
  L__transicionEnt854
  L__transicionEnt855
  L__transicionEnt856
  L__transicionEnt857
  L__transicionEnt858
  L__transicionEnt859
  L__transicionEnt860
  L__transicionEnt861
  L__transicionEnt862
  L__transicionEnt863
  L__transicionEnt864
  L__transicionEnt865
  L__transicionEnt866
  L__transicionEnt867
  L_end_entro
  _entro
  L_end_saliendo
  _saliendo
  L__saliendo870
  L__saliendo871
  L__saliendo872
  L__saliendo873
  L__saliendo874
  L__saliendo875
  L__saliendo876
  L__saliendo877
  L__saliendo878
  L__saliendo879
  L__saliendo880
  L__saliendo881
  L__saliendo882
  L__saliendo883
  L__saliendo884
  L__saliendo885
  L__saliendo886
  L__saliendo887
  L__saliendo888
  L__saliendo889
  L__saliendo890
  L__saliendo891
  L__saliendo892
  L__saliendo893
  L__saliendo894
  L__saliendo895
  L__saliendo896
  L__saliendo897
  L__saliendo898
  L__saliendo899
  L__saliendo900
  L__saliendo901
  L__saliendo902
  L__saliendo903
  L__saliendo904
  L__saliendo905
  L__saliendo906
  L__saliendo907
  L__saliendo908
  L__saliendo909
  L__saliendo910
  L__saliendo911
  L_end_transicionS
  _transicionS
  L__transicionS913
  L__transicionS914
  L__transicionS915
  L__transicionS916
  L__transicionS917
  L__transicionS918
  L__transicionS919
  L__transicionS920
  L__transicionS921
  L__transicionS922
  L__transicionS923
  L__transicionS924
  L__transicionS925
  L__transicionS926
  L__transicionS927
  L__transicionS928
  L__transicionS929
  L__transicionS930
  L__transicionS931
  L__transicionS932
  L_end_transicionSal
  _transicionSal
  L__transicionSal934
  L__transicionSal935
  L__transicionSal936
  L__transicionSal937
  L__transicionSal938
  L__transicionSal939
  L__transicionSal940
  L__transicionSal941
  L__transicionSal942
  L__transicionSal943
  L__transicionSal944
  L__transicionSal945
  L__transicionSal946
  L__transicionSal947
  L__transicionSal948
  L__transicionSal949
  L__transicionSal950
  L__transicionSal951
  L__transicionSal952
  L__transicionSal953
  L__transicionSal954
  L__transicionSal955
  L__transicionSal956
  L__transicionSal957
  L_end_salio
  _salio
  L_end_esperaB
  _esperaB
  L__esperaB960
  L__esperaB961
  L__esperaB962
  L__esperaB963
  L__esperaB964
  L__esperaB965
  L__esperaB966
  L__esperaB967
  L__esperaB968
  L__esperaB969
  L__esperaB970
  L__esperaB971
  L__esperaB972
  L__esperaB973
  L__esperaB974
  L__esperaB975
  L_end_entrandoB
  _entrandoB
  L__entrandoB977
  L__entrandoB978
  L__entrandoB979
  L__entrandoB980
  L__entrandoB981
  L__entrandoB982
  L__entrandoB983
  L__entrandoB984
  L__entrandoB985
  L__entrandoB986
  L__entrandoB987
  L__entrandoB988
  L__entrandoB989
  L__entrandoB990
  L__entrandoB991
  L__entrandoB992
  L__entrandoB993
  L__entrandoB994
  L__entrandoB995
  L__entrandoB996
  L__entrandoB997
  L__entrandoB998
  L_end_transicionEB
  _transicionEB
  L__transicionEB1000
  L__transicionEB1001
  L__transicionEB1002
  L__transicionEB1003
  L__transicionEB1004
  L__transicionEB1005
  L__transicionEB1006
  L__transicionEB1007
  L__transicionEB1008
  L__transicionEB1009
  L__transicionEB1010
  L__transicionEB1011
  L__transicionEB1012
  L__transicionEB1013
  L__transicionEB1014
  L__transicionEB1015
  L__transicionEB1016
  L__transicionEB1017
  L__transicionEB1018
  L__transicionEB1019
  L_end_transicionEntB
  _transicionEntB
  L__transicionEntB1021
  L__transicionEntB1022
  L__transicionEntB1023
  L__transicionEntB1024
  L__transicionEntB1025
  L__transicionEntB1026
  L__transicionEntB1027
  L__transicionEntB1028
  L__transicionEntB1029
  L__transicionEntB1030
  L_end_entroB
  _entroB
  L_end_saliendoB
  _saliendoB
  L__saliendoB1033
  L__saliendoB1034
  L__saliendoB1035
  L__saliendoB1036
  L__saliendoB1037
  L__saliendoB1038
  L__saliendoB1039
  L__saliendoB1040
  L__saliendoB1041
  L__saliendoB1042
  L_end_transicionSB
  _transicionSB
  L__transicionSB1044
  L__transicionSB1045
  L__transicionSB1046
  L__transicionSB1047
  L__transicionSB1048
  L__transicionSB1049
  L__transicionSB1050
  L__transicionSB1051
  L__transicionSB1052
  L__transicionSB1053
  L__transicionSB1054
  L__transicionSB1055
  L__transicionSB1056
  L__transicionSB1057
  L__transicionSB1058
  L__transicionSB1059
  L__transicionSB1060
  L__transicionSB1061
  L__transicionSB1062
  L__transicionSB1063
  L__transicionSB1064
  L__transicionSB1065
  L__transicionSB1066
  L__transicionSB1067
  L__transicionSB1068
  L__transicionSB1069
  L__transicionSB1070
  L__transicionSB1071
  L__transicionSB1072
  L__transicionSB1073
  L__transicionSB1074
  L__transicionSB1075
  L_end_transicionSalB
  _transicionSalB
  L__transicionSalB1077
  L__transicionSalB1078
  L__transicionSalB1079
  L__transicionSalB1080
  L__transicionSalB1081
  L__transicionSalB1082
  L__transicionSalB1083
  L__transicionSalB1084
  L__transicionSalB1085
  L__transicionSalB1086
  L__transicionSalB1087
  L__transicionSalB1088
  L_end_salioB
  _salioB
  L_end_esperaBD
  _esperaBD
  L__esperaBD1091
  L__esperaBD1092
  L__esperaBD1093
  L__esperaBD1094
  L__esperaBD1095
  L__esperaBD1096
  L__esperaBD1097
  L__esperaBD1098
  L__esperaBD1099
  L__esperaBD1100
  L__esperaBD1101
  L__esperaBD1102
  L__esperaBD1103
  L__esperaBD1104
  L__esperaBD1105
  L__esperaBD1106
  L_end_entrandoBD
  _entrandoBD
  L__entrandoBD1108
  L__entrandoBD1109
  L__entrandoBD1110
  L__entrandoBD1111
  L__entrandoBD1112
  L__entrandoBD1113
  L__entrandoBD1114
  L__entrandoBD1115
  L__entrandoBD1116
  L__entrandoBD1117
  L_end_transicionEBD
  _transicionEBD
  L__transicionEBD1119
  L__transicionEBD1120
  L__transicionEBD1121
  L__transicionEBD1122
  L__transicionEBD1123
  L__transicionEBD1124
  L__transicionEBD1125
  L__transicionEBD1126
  L__transicionEBD1127
  L__transicionEBD1128
  L__transicionEBD1129
  L__transicionEBD1130
  L__transicionEBD1131
  L__transicionEBD1132
  L__transicionEBD1133
  L__transicionEBD1134
  L__transicionEBD1135
  L__transicionEBD1136
  L__transicionEBD1137
  L__transicionEBD1138
  L__transicionEBD1139
  L__transicionEBD1140
  L__transicionEBD1141
  L__transicionEBD1142
  L__transicionEBD1143
  L__transicionEBD1144
  L__transicionEBD1145
  L__transicionEBD1146
  L__transicionEBD1147
  L__transicionEBD1148
  L__transicionEBD1149
  L__transicionEBD1150
  L_end_transicionEntBD
  _transicionEntBD
  L__transicionEntBD1152
  L__transicionEntBD1153
  L__transicionEntBD1154
  L__transicionEntBD1155
  L__transicionEntBD1156
  L__transicionEntBD1157
  L__transicionEntBD1158
  L__transicionEntBD1159
  L__transicionEntBD1160
  L__transicionEntBD1161
  L__transicionEntBD1162
  L__transicionEntBD1163
  L_end_entroBD
  _entroBD
  L_end_saliendoBD
  _saliendoBD
  L__saliendoBD1166
  L__saliendoBD1167
  L__saliendoBD1168
  L__saliendoBD1169
  L__saliendoBD1170
  L__saliendoBD1171
  L__saliendoBD1172
  L__saliendoBD1173
  L__saliendoBD1174
  L__saliendoBD1175
  L__saliendoBD1176
  L__saliendoBD1177
  L__saliendoBD1178
  L__saliendoBD1179
  L__saliendoBD1180
  L__saliendoBD1181
  L__saliendoBD1182
  L__saliendoBD1183
  L__saliendoBD1184
  L__saliendoBD1185
  L__saliendoBD1186
  L__saliendoBD1187
  L_end_transicionSBD
  _transicionSBD
  L__transicionSBD1189
  L__transicionSBD1190
  L__transicionSBD1191
  L__transicionSBD1192
  L__transicionSBD1193
  L__transicionSBD1194
  L__transicionSBD1195
  L__transicionSBD1196
  L__transicionSBD1197
  L__transicionSBD1198
  L__transicionSBD1199
  L__transicionSBD1200
  L__transicionSBD1201
  L__transicionSBD1202
  L__transicionSBD1203
  L__transicionSBD1204
  L__transicionSBD1205
  L__transicionSBD1206
  L__transicionSBD1207
  L__transicionSBD1208
  L_end_transicionSalBD
  _transicionSalBD
  L__transicionSalBD1210
  L__transicionSalBD1211
  L__transicionSalBD1212
  L__transicionSalBD1213
  L__transicionSalBD1214
  L__transicionSalBD1215
  L__transicionSalBD1216
  L__transicionSalBD1217
  L__transicionSalBD1218
  L__transicionSalBD1219
  L_end_salioBD
  _salioBD
  L_end_esperaBT
  _esperaBT
  L__esperaBT1222
  L__esperaBT1223
  L__esperaBT1224
  L__esperaBT1225
  L__esperaBT1226
  L__esperaBT1227
  L__esperaBT1228
  L__esperaBT1229
  L__esperaBT1230
  L__esperaBT1231
  L__esperaBT1232
  L__esperaBT1233
  L__esperaBT1234
  L__esperaBT1235
  L__esperaBT1236
  L__esperaBT1237
  L_end_entrandoBT
  _entrandoBT
  L__entrandoBT1239
  L__entrandoBT1240
  L__entrandoBT1241
  L__entrandoBT1242
  L__entrandoBT1243
  L__entrandoBT1244
  L__entrandoBT1245
  L__entrandoBT1246
  L__entrandoBT1247
  L__entrandoBT1248
  L__entrandoBT1249
  L__entrandoBT1250
  L__entrandoBT1251
  L__entrandoBT1252
  L__entrandoBT1253
  L__entrandoBT1254
  L__entrandoBT1255
  L__entrandoBT1256
  L__entrandoBT1257
  L__entrandoBT1258
  L__entrandoBT1259
  L__entrandoBT1260
  L_end_transicionEBT
  _transicionEBT
  L__transicionEBT1262
  L__transicionEBT1263
  L__transicionEBT1264
  L__transicionEBT1265
  L__transicionEBT1266
  L__transicionEBT1267
  L__transicionEBT1268
  L__transicionEBT1269
  L__transicionEBT1270
  L__transicionEBT1271
  L__transicionEBT1272
  L__transicionEBT1273
  L__transicionEBT1274
  L__transicionEBT1275
  L__transicionEBT1276
  L__transicionEBT1277
  L__transicionEBT1278
  L__transicionEBT1279
  L__transicionEBT1280
  L__transicionEBT1281
  L_end_transicionEntBT
  _transicionEntBT
  L__transicionEntBT1283
  L__transicionEntBT1284
  L__transicionEntBT1285
  L__transicionEntBT1286
  L__transicionEntBT1287
  L__transicionEntBT1288
  L__transicionEntBT1289
  L__transicionEntBT1290
  L__transicionEntBT1291
  L__transicionEntBT1292
  L_end_entroBT
  _entroBT
  L_end_saliendoBT
  _saliendoBT
  L__saliendoBT1295
  L__saliendoBT1296
  L__saliendoBT1297
  L__saliendoBT1298
  L__saliendoBT1299
  L__saliendoBT1300
  L__saliendoBT1301
  L__saliendoBT1302
  L__saliendoBT1303
  L__saliendoBT1304
  L_end_transicionSBT
  _transicionSBT
  L__transicionSBT1306
  L__transicionSBT1307
  L__transicionSBT1308
  L__transicionSBT1309
  L__transicionSBT1310
  L__transicionSBT1311
  L__transicionSBT1312
  L__transicionSBT1313
  L__transicionSBT1314
  L__transicionSBT1315
  L__transicionSBT1316
  L__transicionSBT1317
  L__transicionSBT1318
  L__transicionSBT1319
  L__transicionSBT1320
  L__transicionSBT1321
  L__transicionSBT1322
  L__transicionSBT1323
  L__transicionSBT1324
  L__transicionSBT1325
  L__transicionSBT1326
  L__transicionSBT1327
  L__transicionSBT1328
  L__transicionSBT1329
  L__transicionSBT1330
  L__transicionSBT1331
  L__transicionSBT1332
  L__transicionSBT1333
  L__transicionSBT1334
  L__transicionSBT1335
  L__transicionSBT1336
  L__transicionSBT1337
  L_end_transicionSalBT
  _transicionSalBT
  L__transicionSalBT1339
  L__transicionSalBT1340
  L__transicionSalBT1341
  L__transicionSalBT1342
  L__transicionSalBT1343
  L__transicionSalBT1344
  L__transicionSalBT1345
  L__transicionSalBT1346
  L__transicionSalBT1347
  L__transicionSalBT1348
  L__transicionSalBT1349
  L__transicionSalBT1350
  L_end_salioBT
  _salioBT
  L_end_esperaBC
  _esperaBC
  L__esperaBC1353
  L__esperaBC1354
  L__esperaBC1355
  L__esperaBC1356
  L__esperaBC1357
  L__esperaBC1358
  L__esperaBC1359
  L__esperaBC1360
  L__esperaBC1361
  L__esperaBC1362
  L__esperaBC1363
  L__esperaBC1364
  L__esperaBC1365
  L__esperaBC1366
  L__esperaBC1367
  L__esperaBC1368
  L_end_entrandoBC
  _entrandoBC
  L__entrandoBC1370
  L__entrandoBC1371
  L__entrandoBC1372
  L__entrandoBC1373
  L__entrandoBC1374
  L__entrandoBC1375
  L__entrandoBC1376
  L__entrandoBC1377
  L__entrandoBC1378
  L__entrandoBC1379
  L_end_transicionEBC
  _transicionEBC
  L__transicionEBC1381
  L__transicionEBC1382
  L__transicionEBC1383
  L__transicionEBC1384
  L__transicionEBC1385
  L__transicionEBC1386
  L__transicionEBC1387
  L__transicionEBC1388
  L__transicionEBC1389
  L__transicionEBC1390
  L__transicionEBC1391
  L__transicionEBC1392
  L__transicionEBC1393
  L__transicionEBC1394
  L__transicionEBC1395
  L__transicionEBC1396
  L__transicionEBC1397
  L__transicionEBC1398
  L__transicionEBC1399
  L__transicionEBC1400
  L__transicionEBC1401
  L__transicionEBC1402
  L__transicionEBC1403
  L__transicionEBC1404
  L__transicionEBC1405
  L__transicionEBC1406
  L__transicionEBC1407
  L__transicionEBC1408
  L__transicionEBC1409
  L__transicionEBC1410
  L__transicionEBC1411
  L__transicionEBC1412
  L_end_transicionEntBC
  _transicionEntBC
  L__transicionEntBC1414
  L__transicionEntBC1415
  L__transicionEntBC1416
  L__transicionEntBC1417
  L__transicionEntBC1418
  L__transicionEntBC1419
  L__transicionEntBC1420
  L__transicionEntBC1421
  L__transicionEntBC1422
  L__transicionEntBC1423
  L__transicionEntBC1424
  L__transicionEntBC1425
  L_end_entroBC
  _entroBC
  L_end_saliendoBC
  _saliendoBC
  L__saliendoBC1428
  L__saliendoBC1429
  L__saliendoBC1430
  L__saliendoBC1431
  L__saliendoBC1432
  L__saliendoBC1433
  L__saliendoBC1434
  L__saliendoBC1435
  L__saliendoBC1436
  L__saliendoBC1437
  L__saliendoBC1438
  L__saliendoBC1439
  L__saliendoBC1440
  L__saliendoBC1441
  L__saliendoBC1442
  L__saliendoBC1443
  L__saliendoBC1444
  L__saliendoBC1445
  L__saliendoBC1446
  L__saliendoBC1447
  L__saliendoBC1448
  L__saliendoBC1449
  L_end_transicionSBC
  _transicionSBC
  L__transicionSBC1451
  L__transicionSBC1452
  L__transicionSBC1453
  L__transicionSBC1454
  L__transicionSBC1455
  L__transicionSBC1456
  L__transicionSBC1457
  L__transicionSBC1458
  L__transicionSBC1459
  L__transicionSBC1460
  L__transicionSBC1461
  L__transicionSBC1462
  L__transicionSBC1463
  L__transicionSBC1464
  L__transicionSBC1465
  L__transicionSBC1466
  L__transicionSBC1467
  L__transicionSBC1468
  L__transicionSBC1469
  L__transicionSBC1470
  L_end_transicionSalBC
  _transicionSalBC
  L__transicionSalBC1472
  L__transicionSalBC1473
  L__transicionSalBC1474
  L__transicionSalBC1475
  L__transicionSalBC1476
  L__transicionSalBC1477
  L__transicionSalBC1478
  L__transicionSalBC1479
  L__transicionSalBC1480
  L__transicionSalBC1481
  L_end_salioBC
  _salioBC
  L_end_esperaBO
  _esperaBO
  L__esperaBO1484
  L__esperaBO1485
  L__esperaBO1486
  L__esperaBO1487
  L__esperaBO1488
  L__esperaBO1489
  L__esperaBO1490
  L__esperaBO1491
  L__esperaBO1492
  L__esperaBO1493
  L__esperaBO1494
  L__esperaBO1495
  L__esperaBO1496
  L__esperaBO1497
  L__esperaBO1498
  L__esperaBO1499
  L_end_entrandoBO
  _entrandoBO
  L__entrandoBO1501
  L__entrandoBO1502
  L__entrandoBO1503
  L__entrandoBO1504
  L__entrandoBO1505
  L__entrandoBO1506
  L__entrandoBO1507
  L__entrandoBO1508
  L__entrandoBO1509
  L__entrandoBO1510
  L__entrandoBO1511
  L__entrandoBO1512
  L__entrandoBO1513
  L__entrandoBO1514
  L__entrandoBO1515
  L__entrandoBO1516
  L__entrandoBO1517
  L__entrandoBO1518
  L__entrandoBO1519
  L__entrandoBO1520
  L__entrandoBO1521
  L__entrandoBO1522
  L_end_transicionEBO
  _transicionEBO
  L__transicionEBO1524
  L__transicionEBO1525
  L__transicionEBO1526
  L__transicionEBO1527
  L__transicionEBO1528
  L__transicionEBO1529
  L__transicionEBO1530
  L__transicionEBO1531
  L__transicionEBO1532
  L__transicionEBO1533
  L__transicionEBO1534
  L__transicionEBO1535
  L__transicionEBO1536
  L__transicionEBO1537
  L__transicionEBO1538
  L__transicionEBO1539
  L__transicionEBO1540
  L__transicionEBO1541
  L__transicionEBO1542
  L__transicionEBO1543
  L_end_transicionEntBO
  _transicionEntBO
  L__transicionEntBO1545
  L__transicionEntBO1546
  L__transicionEntBO1547
  L__transicionEntBO1548
  L__transicionEntBO1549
  L__transicionEntBO1550
  L__transicionEntBO1551
  L__transicionEntBO1552
  L__transicionEntBO1553
  L__transicionEntBO1554
  L_end_entroBO
  _entroBO
  L_end_saliendoBO
  _saliendoBO
  L__saliendoBO1557
  L__saliendoBO1558
  L__saliendoBO1559
  L__saliendoBO1560
  L__saliendoBO1561
  L__saliendoBO1562
  L__saliendoBO1563
  L__saliendoBO1564
  L__saliendoBO1565
  L__saliendoBO1566
  L_end_transicionSBO
  _transicionSBO
  L__transicionSBO1568
  L__transicionSBO1569
  L__transicionSBO1570
  L__transicionSBO1571
  L__transicionSBO1572
  L__transicionSBO1573
  L__transicionSBO1574
  L__transicionSBO1575
  L__transicionSBO1576
  L__transicionSBO1577
  L__transicionSBO1578
  L__transicionSBO1579
  L__transicionSBO1580
  L__transicionSBO1581
  L__transicionSBO1582
  L__transicionSBO1583
  L__transicionSBO1584
  L__transicionSBO1585
  L__transicionSBO1586
  L__transicionSBO1587
  L__transicionSBO1588
  L__transicionSBO1589
  L__transicionSBO1590
  L__transicionSBO1591
  L__transicionSBO1592
  L__transicionSBO1593
  L__transicionSBO1594
  L__transicionSBO1595
  L__transicionSBO1596
  L__transicionSBO1597
  L__transicionSBO1598
  L__transicionSBO1599
  L_end_transicionSalBO
  _transicionSalBO
  L__transicionSalBO1601
  L__transicionSalBO1602
  L__transicionSalBO1603
  L__transicionSalBO1604
  L__transicionSalBO1605
  L__transicionSalBO1606
  L__transicionSalBO1607
  L__transicionSalBO1608
  L__transicionSalBO1609
  L__transicionSalBO1610
  L__transicionSalBO1611
  L__transicionSalBO1612
  L_end_salioBO
  _salioBO
  L_end_esperaBS
  _esperaBS
  L__esperaBS1615
  L__esperaBS1616
  L__esperaBS1617
  L__esperaBS1618
  L__esperaBS1619
  L__esperaBS1620
  L__esperaBS1621
  L__esperaBS1622
  L__esperaBS1623
  L__esperaBS1624
  L__esperaBS1625
  L__esperaBS1626
  L__esperaBS1627
  L__esperaBS1628
  L__esperaBS1629
  L__esperaBS1630
  L_end_entrandoBS
  _entrandoBS
  L__entrandoBS1632
  L__entrandoBS1633
  L__entrandoBS1634
  L__entrandoBS1635
  L__entrandoBS1636
  L__entrandoBS1637
  L__entrandoBS1638
  L__entrandoBS1639
  L__entrandoBS1640
  L__entrandoBS1641
  L_end_transicionEBS
  _transicionEBS
  L__transicionEBS1643
  L__transicionEBS1644
  L__transicionEBS1645
  L__transicionEBS1646
  L__transicionEBS1647
  L__transicionEBS1648
  L__transicionEBS1649
  L__transicionEBS1650
  L__transicionEBS1651
  L__transicionEBS1652
  L__transicionEBS1653
  L__transicionEBS1654
  L__transicionEBS1655
  L__transicionEBS1656
  L__transicionEBS1657
  L__transicionEBS1658
  L__transicionEBS1659
  L__transicionEBS1660
  L__transicionEBS1661
  L__transicionEBS1662
  L__transicionEBS1663
  L__transicionEBS1664
  L__transicionEBS1665
  L__transicionEBS1666
  L__transicionEBS1667
  L__transicionEBS1668
  L__transicionEBS1669
  L__transicionEBS1670
  L__transicionEBS1671
  L__transicionEBS1672
  L__transicionEBS1673
  L__transicionEBS1674
  L__transicionEBS1675
  L__transicionEBS1676
  L_end_transicionEntBS
  _transicionEntBS
  L__transicionEntBS1678
  L__transicionEntBS1679
  L__transicionEntBS1680
  L__transicionEntBS1681
  L__transicionEntBS1682
  L__transicionEntBS1683
  L__transicionEntBS1684
  L__transicionEntBS1685
  L__transicionEntBS1686
  L__transicionEntBS1687
  L__transicionEntBS1688
  L__transicionEntBS1689
  L_end_entroBS
  _entroBS
  L_end_saliendoBS
  _saliendoBS
  L__saliendoBS1692
  L__saliendoBS1693
  L__saliendoBS1694
  L__saliendoBS1695
  L__saliendoBS1696
  L__saliendoBS1697
  L__saliendoBS1698
  L__saliendoBS1699
  L__saliendoBS1700
  L__saliendoBS1701
  L__saliendoBS1702
  L__saliendoBS1703
  L__saliendoBS1704
  L__saliendoBS1705
  L__saliendoBS1706
  L__saliendoBS1707
  L__saliendoBS1708
  L__saliendoBS1709
  L__saliendoBS1710
  L__saliendoBS1711
  L__saliendoBS1712
  L__saliendoBS1713
  L_end_transicionSBS
  _transicionSBS
  L__transicionSBS1715
  L__transicionSBS1716
  L__transicionSBS1717
  L__transicionSBS1718
  L__transicionSBS1719
  L__transicionSBS1720
  L__transicionSBS1721
  L__transicionSBS1722
  L__transicionSBS1723
  L__transicionSBS1724
  L__transicionSBS1725
  L__transicionSBS1726
  L__transicionSBS1727
  L__transicionSBS1728
  L__transicionSBS1729
  L__transicionSBS1730
  L__transicionSBS1731
  L__transicionSBS1732
  L__transicionSBS1733
  L__transicionSBS1734
  L_end_transicionSalBS
  _transicionSalBS
  L__transicionSalBS1736
  L__transicionSalBS1737
  L__transicionSalBS1738
  L__transicionSalBS1739
  L__transicionSalBS1740
  L__transicionSalBS1741
  L__transicionSalBS1742
  L__transicionSalBS1743
  L__transicionSalBS1744
  L__transicionSalBS1745
  L_end_salioBS
  _salioBS
  L_end_esperaBP1
  _esperaBP1
  L__esperaBP11748
  L__esperaBP11749
  L__esperaBP11750
  L__esperaBP11751
  L__esperaBP11752
  L__esperaBP11753
  L__esperaBP11754
  L__esperaBP11755
  L__esperaBP11756
  L__esperaBP11757
  L__esperaBP11758
  L__esperaBP11759
  L_end_entrandoBP1
  _entrandoBP1
  L__entrandoBP11761
  L__entrandoBP11762
  L__entrandoBP11763
  L__entrandoBP11764
  L__entrandoBP11765
  L__entrandoBP11766
  L__entrandoBP11767
  L__entrandoBP11768
  L_end_transicionEBP1
  _transicionEBP1
  L__transicionEBP11770
  L__transicionEBP11771
  L__transicionEBP11772
  L__transicionEBP11773
  L__transicionEBP11774
  L__transicionEBP11775
  L__transicionEBP11776
  L__transicionEBP11777
  L__transicionEBP11778
  L__transicionEBP11779
  L__transicionEBP11780
  L__transicionEBP11781
  L__transicionEBP11782
  L__transicionEBP11783
  L_end_transicionEntBP1
  _transicionEntBP1
  L__transicionEntBP11785
  L__transicionEntBP11786
  L__transicionEntBP11787
  L__transicionEntBP11788
  L__transicionEntBP11789
  L__transicionEntBP11790
  L__transicionEntBP11791
  L__transicionEntBP11792
  L_end_entroBP1
  _entroBP1
  L_end_saliendoBP1
  _saliendoBP1
  L__saliendoBP11795
  L__saliendoBP11796
  L__saliendoBP11797
  L__saliendoBP11798
  L__saliendoBP11799
  L__saliendoBP11800
  L__saliendoBP11801
  L__saliendoBP11802
  L_end_transicionSBP1
  _transicionSBP1
  L__transicionSBP11804
  L__transicionSBP11805
  L__transicionSBP11806
  L__transicionSBP11807
  L__transicionSBP11808
  L__transicionSBP11809
  L__transicionSBP11810
  L__transicionSBP11811
  L__transicionSBP11812
  L__transicionSBP11813
  L__transicionSBP11814
  L__transicionSBP11815
  L__transicionSBP11816
  L__transicionSBP11817
  L_end_transicionSalBP1
  _transicionSalBP1
  L__transicionSalBP11819
  L__transicionSalBP11820
  L__transicionSalBP11821
  L__transicionSalBP11822
  L__transicionSalBP11823
  L__transicionSalBP11824
  L__transicionSalBP11825
  L__transicionSalBP11826
  L_end_salioBP1
  _salioBP1
  L_end_esperaBP2
  _esperaBP2
  L__esperaBP21829
  L__esperaBP21830
  L__esperaBP21831
  L__esperaBP21832
  L__esperaBP21833
  L__esperaBP21834
  L__esperaBP21835
  L__esperaBP21836
  L__esperaBP21837
  L__esperaBP21838
  L__esperaBP21839
  L__esperaBP21840
  L_end_entrandoBP2
  _entrandoBP2
  L__entrandoBP21842
  L__entrandoBP21843
  L__entrandoBP21844
  L__entrandoBP21845
  L__entrandoBP21846
  L__entrandoBP21847
  L__entrandoBP21848
  L__entrandoBP21849
  L_end_transicionEBP2
  _transicionEBP2
  L__transicionEBP21851
  L__transicionEBP21852
  L__transicionEBP21853
  L__transicionEBP21854
  L__transicionEBP21855
  L__transicionEBP21856
  L__transicionEBP21857
  L__transicionEBP21858
  L__transicionEBP21859
  L__transicionEBP21860
  L__transicionEBP21861
  L__transicionEBP21862
  L__transicionEBP21863
  L__transicionEBP21864
  L_end_transicionEntBP2
  _transicionEntBP2
  L__transicionEntBP21866
  L__transicionEntBP21867
  L__transicionEntBP21868
  L__transicionEntBP21869
  L__transicionEntBP21870
  L__transicionEntBP21871
  L__transicionEntBP21872
  L__transicionEntBP21873
  L_end_entroBP2
  _entroBP2
  L_end_saliendoBP2
  _saliendoBP2
  L__saliendoBP21876
  L__saliendoBP21877
  L__saliendoBP21878
  L__saliendoBP21879
  L__saliendoBP21880
  L__saliendoBP21881
  L__saliendoBP21882
  L__saliendoBP21883
  L_end_transicionSBP2
  _transicionSBP2
  L__transicionSBP21885
  L__transicionSBP21886
  L__transicionSBP21887
  L__transicionSBP21888
  L__transicionSBP21889
  L__transicionSBP21890
  L__transicionSBP21891
  L__transicionSBP21892
  L__transicionSBP21893
  L__transicionSBP21894
  L__transicionSBP21895
  L__transicionSBP21896
  L__transicionSBP21897
  L__transicionSBP21898
  L__transicionSBP21899
  L__transicionSBP21900
  L__transicionSBP21901
  L__transicionSBP21902
  L__transicionSBP21903
  L__transicionSBP21904
  L__transicionSBP21905
  L__transicionSBP21906
  L__transicionSBP21907
  L__transicionSBP21908
  L_end_transicionSalBP2
  _transicionSalBP2
  L__transicionSalBP21910
  L__transicionSalBP21911
  L__transicionSalBP21912
  L__transicionSalBP21913
  L__transicionSalBP21914
  L__transicionSalBP21915
  L__transicionSalBP21916
  L__transicionSalBP21917
  L_end_salioBP2
  _salioBP2
  L_end_esperaBP3
  _esperaBP3
  L__esperaBP31920
  L__esperaBP31921
  L__esperaBP31922
  L__esperaBP31923
  L__esperaBP31924
  L__esperaBP31925
  L__esperaBP31926
  L__esperaBP31927
  L__esperaBP31928
  L__esperaBP31929
  L__esperaBP31930
  L__esperaBP31931
  L_end_entrandoBP3
  _entrandoBP3
  L__entrandoBP31933
  L__entrandoBP31934
  L__entrandoBP31935
  L__entrandoBP31936
  L__entrandoBP31937
  L__entrandoBP31938
  L__entrandoBP31939
  L__entrandoBP31940
  L_end_transicionEBP3
  _transicionEBP3
  L__transicionEBP31942
  L__transicionEBP31943
  L__transicionEBP31944
  L__transicionEBP31945
  L__transicionEBP31946
  L__transicionEBP31947
  L__transicionEBP31948
  L__transicionEBP31949
  L__transicionEBP31950
  L__transicionEBP31951
  L__transicionEBP31952
  L__transicionEBP31953
  L__transicionEBP31954
  L__transicionEBP31955
  L_end_transicionEntBP3
  _transicionEntBP3
  L__transicionEntBP31957
  L__transicionEntBP31958
  L__transicionEntBP31959
  L__transicionEntBP31960
  L__transicionEntBP31961
  L__transicionEntBP31962
  L__transicionEntBP31963
  L__transicionEntBP31964
  L_end_entroBP3
  _entroBP3
  L_end_saliendoBP3
  _saliendoBP3
  L__saliendoBP31967
  L__saliendoBP31968
  L__saliendoBP31969
  L__saliendoBP31970
  L__saliendoBP31971
  L__saliendoBP31972
  L__saliendoBP31973
  L__saliendoBP31974
  L_end_transicionSBP3
  _transicionSBP3
  L__transicionSBP31976
  L__transicionSBP31977
  L__transicionSBP31978
  L__transicionSBP31979
  L__transicionSBP31980
  L__transicionSBP31981
  L__transicionSBP31982
  L__transicionSBP31983
  L__transicionSBP31984
  L__transicionSBP31985
  L__transicionSBP31986
  L__transicionSBP31987
  L__transicionSBP31988
  L__transicionSBP31989
  L_end_transicionSalBP3
  _transicionSalBP3
  L__transicionSalBP31991
  L__transicionSalBP31992
  L__transicionSalBP31993
  L__transicionSalBP31994
  L__transicionSalBP31995
  L__transicionSalBP31996
  L__transicionSalBP31997
  L__transicionSalBP31998
  L_end_salioBP3
  _salioBP3
  L_end_esperaBP4
  _esperaBP4
  L__esperaBP42001
  L__esperaBP42002
  L__esperaBP42003
  L__esperaBP42004
  L__esperaBP42005
  L__esperaBP42006
  L__esperaBP42007
  L__esperaBP42008
  L__esperaBP42009
  L__esperaBP42010
  L_end_entrandoBP4
  _entrandoBP4
  L__entrandoBP42012
  L__entrandoBP42013
  L__entrandoBP42014
  L__entrandoBP42015
  L__entrandoBP42016
  L__entrandoBP42017
  L__entrandoBP42018
  L__entrandoBP42019
  L__entrandoBP42020
  L__entrandoBP42021
  L__entrandoBP42022
  L__entrandoBP42023
  L__entrandoBP42024
  L__entrandoBP42025
  L__entrandoBP42026
  L__entrandoBP42027
  L__entrandoBP42028
  L__entrandoBP42029
  L__entrandoBP42030
  L__entrandoBP42031
  L_end_transicionEBP4
  _transicionEBP4
  L__transicionEBP42033
  L__transicionEBP42034
  L__transicionEBP42035
  L__transicionEBP42036
  L__transicionEBP42037
  L__transicionEBP42038
  L__transicionEBP42039
  L__transicionEBP42040
  L_end_transicionEntBP4
  _transicionEntBP4
  L__transicionEntBP42042
  L__transicionEntBP42043
  L__transicionEntBP42044
  L__transicionEntBP42045
  L__transicionEntBP42046
  L__transicionEntBP42047
  L_end_entroBP4
  _entroBP4
  L_end_saliendoBP4
  _saliendoBP4
  L__saliendoBP42050
  L__saliendoBP42051
  L__saliendoBP42052
  L__saliendoBP42053
  L_end_transicionSBP4
  _transicionSBP4
  L__transicionSBP42055
  L__transicionSBP42056
  L__transicionSBP42057
  L__transicionSBP42058
  L__transicionSBP42059
  L__transicionSBP42060
  L__transicionSBP42061
  L__transicionSBP42062
  L__transicionSBP42063
  L__transicionSBP42064
  L__transicionSBP42065
  L__transicionSBP42066
  L__transicionSBP42067
  L__transicionSBP42068
  L__transicionSBP42069
  L__transicionSBP42070
  L__transicionSBP42071
  L__transicionSBP42072
  L__transicionSBP42073
  L__transicionSBP42074
  L_end_transicionSalBP4
  _transicionSalBP4
  L__transicionSalBP42076
  L__transicionSalBP42077
  L__transicionSalBP42078
  L__transicionSalBP42079
  L__transicionSalBP42080
  L__transicionSalBP42081
  L__transicionSalBP42082
  L__transicionSalBP42083
  L__transicionSalBP42084
  L__transicionSalBP42085
  L__transicionSalBP42086
  L__transicionSalBP42087
  L__transicionSalBP42088
  L__transicionSalBP42089
  L__transicionSalBP42090
  L__transicionSalBP42091
  L_end_salioBP4
  _salioBP4
  L_end_esperaBP6
  _esperaBP6
  L__esperaBP62094
  L__esperaBP62095
  L__esperaBP62096
  L__esperaBP62097
  L__esperaBP62098
  L__esperaBP62099
  L__esperaBP62100
  L__esperaBP62101
  L__esperaBP62102
  L__esperaBP62103
  L_end_entrandoBP6
  _entrandoBP6
  L__entrandoBP62105
  L__entrandoBP62106
  L__entrandoBP62107
  L__entrandoBP62108
  L__entrandoBP62109
  L__entrandoBP62110
  L__entrandoBP62111
  L__entrandoBP62112
  L__entrandoBP62113
  L__entrandoBP62114
  L__entrandoBP62115
  L__entrandoBP62116
  L__entrandoBP62117
  L__entrandoBP62118
  L__entrandoBP62119
  L__entrandoBP62120
  L__entrandoBP62121
  L__entrandoBP62122
  L__entrandoBP62123
  L__entrandoBP62124
  L_end_transicionEBP6
  _transicionEBP6
  L__transicionEBP62126
  L__transicionEBP62127
  L__transicionEBP62128
  L__transicionEBP62129
  L__transicionEBP62130
  L__transicionEBP62131
  L__transicionEBP62132
  L__transicionEBP62133
  L__transicionEBP62134
  L__transicionEBP62135
  L__transicionEBP62136
  L__transicionEBP62137
  L__transicionEBP62138
  L__transicionEBP62139
  L__transicionEBP62140
  L__transicionEBP62141
  L__transicionEBP62142
  L__transicionEBP62143
  L__transicionEBP62144
  L__transicionEBP62145
  L__transicionEBP62146
  L__transicionEBP62147
  L__transicionEBP62148
  L__transicionEBP62149
  L__transicionEBP62150
  L__transicionEBP62151
  L__transicionEBP62152
  L__transicionEBP62153
  L_end_transicionEntBP6
  _transicionEntBP6
  L__transicionEntBP62155
  L__transicionEntBP62156
  L__transicionEntBP62157
  L__transicionEntBP62158
  L__transicionEntBP62159
  L__transicionEntBP62160
  L_end_entroBP6
  _entroBP6
  L_end_saliendoBP6
  _saliendoBP6
  L__saliendoBP62163
  L__saliendoBP62164
  L__saliendoBP62165
  L__saliendoBP62166
  L_end_transicionSBP6
  _transicionSBP6
  L__transicionSBP62168
  L__transicionSBP62169
  L__transicionSBP62170
  L__transicionSBP62171
  L__transicionSBP62172
  L__transicionSBP62173
  L__transicionSBP62174
  L__transicionSBP62175
  L__transicionSBP62176
  L__transicionSBP62177
  L__transicionSBP62178
  L__transicionSBP62179
  L__transicionSBP62180
  L__transicionSBP62181
  L__transicionSBP62182
  L__transicionSBP62183
  L__transicionSBP62184
  L__transicionSBP62185
  L__transicionSBP62186
  L__transicionSBP62187
  L_end_transicionSalBP6
  _transicionSalBP6
  L__transicionSalBP62189
  L__transicionSalBP62190
  L__transicionSalBP62191
  L__transicionSalBP62192
  L__transicionSalBP62193
  L__transicionSalBP62194
  L__transicionSalBP62195
  L__transicionSalBP62196
  L__transicionSalBP62197
  L__transicionSalBP62198
  L__transicionSalBP62199
  L__transicionSalBP62200
  L__transicionSalBP62201
  L__transicionSalBP62202
  L__transicionSalBP62203
  L__transicionSalBP62204
  L_end_salioBP6
  _salioBP6
  L_end_esperaBP7
  _esperaBP7
  L__esperaBP72207
  L__esperaBP72208
  L__esperaBP72209
  L__esperaBP72210
  L__esperaBP72211
  L__esperaBP72212
  L__esperaBP72213
  L__esperaBP72214
  L__esperaBP72215
  L__esperaBP72216
  L_end_entrandoBP7
  _entrandoBP7
  L__entrandoBP72218
  L__entrandoBP72219
  L__entrandoBP72220
  L__entrandoBP72221
  L_end_transicionEBP7
  _transicionEBP7
  L__transicionEBP72223
  L__transicionEBP72224
  L__transicionEBP72225
  L__transicionEBP72226
  L__transicionEBP72227
  L__transicionEBP72228
  L__transicionEBP72229
  L__transicionEBP72230
  L__transicionEBP72231
  L__transicionEBP72232
  L__transicionEBP72233
  L__transicionEBP72234
  L__transicionEBP72235
  L__transicionEBP72236
  L__transicionEBP72237
  L__transicionEBP72238
  L__transicionEBP72239
  L__transicionEBP72240
  L__transicionEBP72241
  L__transicionEBP72242
  L_end_transicionEntBP7
  _transicionEntBP7
  L__transicionEntBP72244
  L__transicionEntBP72245
  L__transicionEntBP72246
  L__transicionEntBP72247
  L__transicionEntBP72248
  L__transicionEntBP72249
  L__transicionEntBP72250
  L__transicionEntBP72251
  L__transicionEntBP72252
  L__transicionEntBP72253
  L__transicionEntBP72254
  L__transicionEntBP72255
  L__transicionEntBP72256
  L__transicionEntBP72257
  L__transicionEntBP72258
  L__transicionEntBP72259
  L_end_entroBP7
  _entroBP7
  L_end_saliendoBP7
  _saliendoBP7
  L__saliendoBP72262
  L__saliendoBP72263
  L__saliendoBP72264
  L__saliendoBP72265
  L__saliendoBP72266
  L__saliendoBP72267
  L__saliendoBP72268
  L__saliendoBP72269
  L__saliendoBP72270
  L__saliendoBP72271
  L__saliendoBP72272
  L__saliendoBP72273
  L__saliendoBP72274
  L__saliendoBP72275
  L__saliendoBP72276
  L__saliendoBP72277
  L__saliendoBP72278
  L__saliendoBP72279
  L__saliendoBP72280
  L__saliendoBP72281
  L_end_transicionSBP7
  _transicionSBP7
  L__transicionSBP72283
  L__transicionSBP72284
  L__transicionSBP72285
  L__transicionSBP72286
  L__transicionSBP72287
  L__transicionSBP72288
  L__transicionSBP72289
  L__transicionSBP72290
  L_end_transicionSalBP7
  _transicionSalBP7
  L__transicionSalBP72292
  L__transicionSalBP72293
  L__transicionSalBP72294
  L__transicionSalBP72295
  L__transicionSalBP72296
  L__transicionSalBP72297
  L_end_salioBP7
  _salioBP7
  L_end_esperaBP9
  _esperaBP9
  L__esperaBP92300
  L__esperaBP92301
  L__esperaBP92302
  L__esperaBP92303
  L__esperaBP92304
  L__esperaBP92305
  L__esperaBP92306
  L__esperaBP92307
  L__esperaBP92308
  L__esperaBP92309
  L_end_entrandoBP9
  _entrandoBP9
  L__entrandoBP92311
  L__entrandoBP92312
  L__entrandoBP92313
  L__entrandoBP92314
  L_end_transicionEBP9
  _transicionEBP9
  L__transicionEBP92316
  L__transicionEBP92317
  L__transicionEBP92318
  L__transicionEBP92319
  L__transicionEBP92320
  L__transicionEBP92321
  L__transicionEBP92322
  L__transicionEBP92323
  L__transicionEBP92324
  L__transicionEBP92325
  L__transicionEBP92326
  L__transicionEBP92327
  L__transicionEBP92328
  L__transicionEBP92329
  L__transicionEBP92330
  L__transicionEBP92331
  L__transicionEBP92332
  L__transicionEBP92333
  L__transicionEBP92334
  L__transicionEBP92335
  L_end_transicionEntBP9
  _transicionEntBP9
  L__transicionEntBP92337
  L__transicionEntBP92338
  L__transicionEntBP92339
  L__transicionEntBP92340
  L__transicionEntBP92341
  L__transicionEntBP92342
  L__transicionEntBP92343
  L__transicionEntBP92344
  L__transicionEntBP92345
  L__transicionEntBP92346
  L__transicionEntBP92347
  L__transicionEntBP92348
  L__transicionEntBP92349
  L__transicionEntBP92350
  L__transicionEntBP92351
  L__transicionEntBP92352
  L_end_entroBP9
  _entroBP9
  L_end_saliendoBP9
  _saliendoBP9
  L__saliendoBP92355
  L__saliendoBP92356
  L__saliendoBP92357
  L__saliendoBP92358
  L__saliendoBP92359
  L__saliendoBP92360
  L__saliendoBP92361
  L__saliendoBP92362
  L__saliendoBP92363
  L__saliendoBP92364
  L__saliendoBP92365
  L__saliendoBP92366
  L__saliendoBP92367
  L__saliendoBP92368
  L__saliendoBP92369
  L__saliendoBP92370
  L__saliendoBP92371
  L__saliendoBP92372
  L__saliendoBP92373
  L__saliendoBP92374
  L_end_transicionSBP9
  _transicionSBP9
  L__transicionSBP92376
  L__transicionSBP92377
  L__transicionSBP92378
  L__transicionSBP92379
  L__transicionSBP92380
  L__transicionSBP92381
  L__transicionSBP92382
  L__transicionSBP92383
  L_end_transicionSalBP9
  _transicionSalBP9
  L__transicionSalBP92385
  L__transicionSalBP92386
  L__transicionSalBP92387
  L__transicionSalBP92388
  L__transicionSalBP92389
  L__transicionSalBP92390
  L__transicionSalBP92391
  L__transicionSalBP92392
  L__transicionSalBP92393
  L__transicionSalBP92394
  L__transicionSalBP92395
  L__transicionSalBP92396
  L__transicionSalBP92397
  L__transicionSalBP92398
  L__transicionSalBP92399
  L__transicionSalBP92400
  L_end_salioBP9
  _salioBP9
  L_end_interrupcionesAltoNivel
  _interrupcionesAltoNivel
  L__interrupcionesAltoNivel2403
  L__interrupcionesAltoNivel2404
  L__interrupcionesAltoNivel2405
  L__interrupcionesAltoNivel2406
  L__interrupcionesAltoNivel2407
  L__interrupcionesAltoNivel2408
  L__interrupcionesAltoNivel2409
  L_end_interrupcionesBajoNivel
  _interrupcionesBajoNivel
  L__interrupcionesBajoNivel2411
  L_end_main
  _main
  L__main2413
  L__main2414
  L__main2415
  L__main2416
  L__main2417
  L__main2418
  L__main2419
  L__main2420
  L__main2421
  L__main2422
  L_end_PicInit
  _PicInit
  L_end_TX_MSTR
  _TX_MSTR
  L__TX_MSTR2425
  L__TX_MSTR2426
  L__TX_MSTR2427
  L__TX_MSTR2428
  L__TX_MSTR2429
  L_end_TX_SLV
  _TX_SLV
  L_end_serialTxWioLTE
  _serialTxWioLTE
  L__serialTxWioLTE2432
  L__serialTxWioLTE2433
  L__serialTxWioLTE2434
  L_end_RX_PIC_PIC
  _RX_PIC_PIC
  L_end_SENSADO
  _SENSADO
  L_end_desbordoTemporizadorCero
  _desbordoTemporizadorCero
  L_end_resetCuentas
  _resetCuentas
  L_end_resetSLV
  _resetSLV
  L_end_indicadorSensores
  _indicadorSensores
  L_end_MASTER
  _MASTER
  L_end_SLV
  _SLV
  L_memchr0
  L_memchr1
  L_memchr2
  L_memchr3
  L_memcmp4
  L_memcmp5
  L_memcmp6
  L_memcpy7
  L_memcpy8
  L_memmove9
  L_memmove10
  L_memmove11
  L_memmove12
  L_memmove13
  L_memmove14
  L_memmove15
  L_memmove16
  L_memmove17
  L_memmove18
  L_memmove19
  L_memset20
  L_memset21
  L_strcat22
  L_strcat23
  L_strcat24
  L_strcat25
  L_strchr26
  L_strchr27
  L_strchr28
  L_strchr29
  L_strcmp30
  L_strcmp31
  L_strcmp32
  L_strcmp33
  L_strcpy34
  L_strcpy35
  L_strlen36
  L_strlen37
  L_strncat38
  L_strncat39
  L_strncat40
  L_strncat41
  L_strncat42
  L_strncat43
  L_strncat44
  L_strncpy45
  L_strncpy46
  L_strncpy47
  L_strncpy48
  L_strncpy49
  L_strspn50
  L_strspn51
  L_strspn52
  L_strspn53
  L_strcspn54
  L_strcspn55
  L_strcspn56
  L_strcspn57
  L_strncmp58
  L_strncmp59
  L_strncmp60
  L_strncmp61
  L_strncmp62
  L_strpbrk63
  L_strpbrk64
  L_strpbrk65
  L_strrchr66
  L_strrchr67
  L_strrchr68
  L_strrchr69
  L_strstr70
  L_strstr71
  L_strstr72
  L_strstr73
  L_strstr74
  L_strtok75
  L_strtok76
  L_strtok77
  L_strtok78
  L_strtok79
  L__memmove80
  L__strcmp81
  L__strncat82
  L__strspn83
  L__strcspn84
  L__strncmp85
  L__strstr86
  L_end_memchr
  _memchr
  L_end_memcmp
  _memcmp
  L__memcmp89
  L_end_memcpy
  _memcpy
  L_end_memmove
  _memmove
  L__memmove92
  L__memmove93
  L_end_memset
  _memset
  L_end_strcat
  _strcat
  L_end_strchr
  _strchr
  L_end_strcmp
  _strcmp
  L_end_strcpy
  _strcpy
  L_end_strlen
  _strlen
  L_end_strncat
  _strncat
  L__strncat101
  L_end_strncpy
  _strncpy
  L_end_strspn
  _strspn
  L__strspn104
  L_end_strcspn
  _strcspn
  L__strcspn106
  L_end_strncmp
  _strncmp
  L_end_strpbrk
  _strpbrk
  L_end_strrchr
  _strrchr
  L__strrchr110
  L_end_strstr
  _strstr
  L__strstr112
  L__strstr113
  L_end_strtok
  _strtok
  L__strtok115
  L_Soft_UART_Read0
  L_Soft_UART_Read1
  L_Soft_UART_Read2
  L_Soft_UART_Read3
  L_Soft_UART_Read4
  L_Soft_UART_Read5
  L_Soft_UART_Read6
  L_Soft_UART_Read7
  L_Soft_UART_Read8
  L_Soft_UART_Read9
  L_Soft_UART_Read10
  L_Soft_UART_Read11
  L_Soft_UART_Read12
  L_Soft_UART_Write13
  L_Soft_UART_Write14
  L_Soft_UART_Write15
  L_Soft_UART_Write16
  L_Soft_UART_Write17
  L_Soft_UART_Write18
  L_Soft_UART_Write19
  L_Soft_UART_Write20
  L_Soft_UART_Init21
  L_Soft_UART_Init22
  L_Soft_UART_Init23
  L_Soft_UART_Init24
  L_Soft_UART_Init25
  L_Soft_UART_Init26
  L_Soft_UART_Init27
  L_end_Soft_UART_Break
  _Soft_UART_Break
  L_end_Soft_UART_Read
  _Soft_UART_Read
  L_end_Soft_UART_Write
  _Soft_UART_Write
  L_end_Soft_UART_Init
  _Soft_UART_Init
  L__Soft_UART_Init32
  L__Soft_UART_Init33
  L__Soft_UART_Init34
  L__Soft_UART_Init35
  L__Soft_UART_Init36
  L_UART1_Init0
  L_UART1_Init1
  L_UART1_Read2
  L_UART1_Write3
  L_UART1_Write4
  L_UART1_Write_Text5
  L_UART1_Write_Text6
  L_UART1_Read_Text7
  L_UART1_Read_Text8
  L_UART1_Read_Text9
  L_UART1_Read_Text10
  L_UART1_Read_Text11
  L_UART1_Read_Text12
  L_UART1_Read_Text13
  L_UART1_Read_Text14
  L_UART1_Read_Text15
  L_UART_Write_Text16
  L_UART_Write_Text17
  L_UART_Read_Text18
  L_UART_Read_Text19
  L_UART_Read_Text20
  L_UART_Read_Text21
  L_UART_Read_Text22
  L_UART_Read_Text23
  L_UART_Read_Text24
  L_UART_Read_Text25
  L_UART_Read_Text26
  L_end_UART1_Init
  _UART1_Init
  L_end_UART1_Data_Ready
  _UART1_Data_Ready
  L_end_UART1_Read
  _UART1_Read
  L_end_UART1_Tx_Idle
  _UART1_Tx_Idle
  L_end_UART1_Write
  _UART1_Write
  L_end_UART1_Write_Text
  _UART1_Write_Text
  L_end_UART1_Read_Text
  _UART1_Read_Text
  L_end_UART_Set_Active
  _UART_Set_Active
  L_end_UART_Write
  _UART_Write
  L_end_UART_Write_Text
  _UART_Write_Text
  L_end_UART_Read
  _UART_Read
  L_end_UART_Data_Ready
  _UART_Data_Ready
  L_end_UART_Read_Text
  _UART_Read_Text
  L_end_UART_Tx_Idle
  _UART_Tx_Idle
